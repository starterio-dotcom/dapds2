{"version":3,"file":"dds.js","sources":["../node_modules/@lit/reactive-element/decorators/custom-element.js","../node_modules/@lit/reactive-element/css-tag.js","../node_modules/@lit/reactive-element/reactive-element.js","../node_modules/@lit/reactive-element/decorators/property.js","../node_modules/@lit/reactive-element/decorators/state.js","../node_modules/@lit/reactive-element/decorators/base.js","../node_modules/@lit/reactive-element/decorators/query.js","../node_modules/@lit/reactive-element/decorators/query-all.js","../node_modules/@lit/reactive-element/decorators/query-assigned-elements.js","../node_modules/clsx/dist/clsx.mjs","../node_modules/lit-html/lit-html.js","../node_modules/lit-element/lit-element.js","../node_modules/lit-html/directives/if-defined.js","../node_modules/lit-html/static.js","../src/internal/dds-hu-element.ts","../node_modules/dayjs/dayjs.min.js","../node_modules/dayjs/locale/hu.js","../node_modules/dayjs/locale/en.js","../node_modules/dayjs/plugin/customParseFormat.js","../node_modules/dayjs/plugin/localeData.js","../node_modules/dayjs/plugin/localizedFormat.js","../node_modules/dayjs/plugin/weekday.js","../node_modules/i18next/dist/esm/i18next.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js","../node_modules/lit-html/directive-helpers.js","../node_modules/lit-html/directive.js","../node_modules/lit-html/async-directive.js","../node_modules/lit-i18n/src/lit-i18n.js","../src/localization/localization.ts","../src/components/accordion/accordion-base-element.ts","../src/components/accordion/accordion.component.ts","../src/components/accordion-group/accordion-group.component.ts","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isSymbol.js","../node_modules/lodash-es/_arrayMap.js","../node_modules/lodash-es/isArray.js","../node_modules/lodash-es/_baseToString.js","../node_modules/lodash-es/toString.js","../node_modules/lodash-es/_arrayReduce.js","../node_modules/lodash-es/_basePropertyOf.js","../node_modules/lodash-es/_deburrLetter.js","../node_modules/lodash-es/deburr.js","../node_modules/lodash-es/_asciiWords.js","../node_modules/lodash-es/_hasUnicodeWord.js","../node_modules/lodash-es/_unicodeWords.js","../node_modules/lodash-es/words.js","../node_modules/lodash-es/_createCompounder.js","../node_modules/lodash-es/kebabCase.js","../src/common/const.ts","../src/internal/adopt-light-styles.ts","../src/components/anchor-heading/anchor-heading.component.ts","../src/components/avatar/avatar.component.ts","../src/components/avatar-group/avatar-group.component.ts","../src/components/badge/badge.component.ts","../src/components/banner/banner.component.ts","../src/components/breadcrumb-item/breadcrumb-item.component.ts","../src/components/breadcrumb/breadcrumb.component.ts","../src/internal/mixin/feedbackMixin.ts","../src/internal/mixin/focusableMixin.ts","../src/internal/mixin/formElementMixin.ts","../src/internal/mixin/labelableMixin.ts","../src/common/utils.ts","../src/internal/mixin/sizedMixin.ts","../src/internal/mixin/genericFormElement.ts","../node_modules/class-variance-authority/dist/index.mjs","../src/components/button/button.variants.ts","../src/components/button/button.component.ts","../src/components/calendar/calendar-cell.component.ts","../src/components/calendar/calendar.component.ts","../src/components/callout/callout.component.ts","../src/components/card/card.component.ts","../src/components/card/card-actions.component.ts","../src/components/card/card-content.component.ts","../src/components/card/card-image.component.ts","../src/components/card/card-subtitle.component.ts","../src/components/card/card-title.component.ts","../src/internal/mixin/choiceElementMixin.ts","../src/internal/mixin/labelPositionedMixin.ts","../src/internal/mixin/labeledChoiceElement.ts","../src/components/checkbox/checkbox.component.ts","../src/components/combobox/comboboxBase.ts","../src/components/combobox/combobox.component.ts","../src/internal/keyboard-navigation.ts","../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../src/components/popup/popup-base-element.ts","../src/components/popup/popup.component.ts","../src/components/command/command.component.ts","../src/components/command/command-group.component.ts","../src/components/command/command-item.component.ts","../src/components/content-switcher/content-switcher.component.ts","../src/components/content-switcher/content-switcher-item.component.ts","../src/components/input/input-base-element.ts","../src/components/copybox-input/copybox-input.component.ts","../src/components/dap-badge/dap-badge.component.ts","../node_modules/@tanstack/table-core/build/lib/index.mjs","../node_modules/@tanstack/lit-table/build/lib/index.mjs","../node_modules/lit-html/directives/repeat.js","../src/components/datatable/datatable.component.ts","../src/components/datepicker/datepicker.component.ts","../src/components/divider/divider.component.ts","../src/components/feedback/feedback.component.ts","../src/common/errors.ts","../src/components/file-input/file-input.component.ts","../src/components/file-input/file-input-list.component.ts","../src/components/file-input/file-input-list-item.component.ts","../src/components/form/form-label/form-label.component.ts","../src/components/form/input-group/input-group.component.ts","../src/components/form/radio-group/radio-group.component.ts","../src/components/icon/icon.component.ts","../src/components/icon-button/icon-button.component.ts","../src/components/input/input.component.ts","../src/components/label/label.component.ts","../src/components/link/link.component.ts","../src/components/list-item/list-item.component.ts","../src/components/modal/modal-base-element.ts","../src/components/modal/modal.component.ts","../src/components/navigation-menu/navigation-menu.component.ts","../src/components/navigation-menu/navigation-menu-item.component.ts","../src/components/notification-badge/notification-badge.component.ts","../src/components/number-input/number-input.component.ts","../src/components/official-website-banner/official-website-banner.component.ts","../src/components/option-item/option-item.component.ts","../src/components/option-list/option-list.component.ts","../src/components/overlay/overlay.component.ts","../src/components/pager/pager.component.ts","../src/components/password-input/password-input.component.ts","../src/components/radio-button/radio-button.component.ts","../src/components/rating/rating.component.ts","../src/components/scroll-area/scroll-area.component.ts","../src/components/search/search.component.ts","../src/components/select/select.component.ts","../src/components/sidenav/sidenav.component.ts","../src/components/sidenav/sidenav-group.component.ts","../src/components/sidenav/sidenav-item.component.ts","../src/components/skeleton/skeleton.component.ts","../src/components/skip-link/skip-link.component.ts","../src/components/snackbar/snackbar.component.ts","../node_modules/lit-html/directives/style-map.js","../src/components/snackbar/snackbar-message.component.ts","../src/components/spinner/spinner.component.ts","../src/components/stack/stack.component.ts","../src/components/switch/switch.component.ts","../src/components/tab/tab.component.ts","../node_modules/lit-html/directives/map.js","../src/components/tab/tab-group.component.ts","../src/components/table/table.component.ts","../src/components/table/table-cell.component.ts","../src/components/table/table-header.component.ts","../src/components/table/table-row.component.ts","../src/components/textarea/textarea.component.ts","../src/components/timeline/timeline.component.ts","../src/components/timeline/timeline-item.component.ts","../src/components/timepicker/time-grid.component.ts","../src/components/timepicker/timepicker.component.ts","../src/components/toc/toc.component.ts","../src/components/toggle-button/toggle-button.component.ts","../src/components/tooltip/tooltip.component.ts","../src/components/tray/tray.component.ts","../src/components/typography/typography.component.ts","../src/components/icons/arrows/arrows-arrow-down-line/arrows-arrow-down-line.component.ts","../src/components/icons/arrows/arrows-arrow-down-s-fill/arrows-arrow-down-s-fill.component.ts","../src/components/icons/arrows/arrows-arrow-down-s-line/arrows-arrow-down-s-line.component.ts","../src/components/icons/arrows/arrows-arrow-left-down-line/arrows-arrow-left-down-line.component.ts","../src/components/icons/arrows/arrows-arrow-left-l-line/arrows-arrow-left-l-line.component.ts","../src/components/icons/arrows/arrows-arrow-left-line/arrows-arrow-left-line.component.ts","../src/components/icons/arrows/arrows-arrow-left-s-fill/arrows-arrow-left-s-fill.component.ts","../src/components/icons/arrows/arrows-arrow-left-s-line/arrows-arrow-left-s-line.component.ts","../src/components/icons/arrows/arrows-arrow-left-up-line/arrows-arrow-left-up-line.component.ts","../src/components/icons/arrows/arrows-arrow-right-down-line/arrows-arrow-right-down-line.component.ts","../src/components/icons/arrows/arrows-arrow-right-l-line/arrows-arrow-right-l-line.component.ts","../src/components/icons/arrows/arrows-arrow-right-line/arrows-arrow-right-line.component.ts","../src/components/icons/arrows/arrows-arrow-right-s-fill/arrows-arrow-right-s-fill.component.ts","../src/components/icons/arrows/arrows-arrow-right-s-line/arrows-arrow-right-s-line.component.ts","../src/components/icons/arrows/arrows-arrow-right-up-line/arrows-arrow-right-up-line.component.ts","../src/components/icons/arrows/arrows-arrow-up-line/arrows-arrow-up-line.component.ts","../src/components/icons/arrows/arrows-arrow-up-s-fill/arrows-arrow-up-s-fill.component.ts","../src/components/icons/arrows/arrows-arrow-up-s-line/arrows-arrow-up-s-line.component.ts","../src/components/icons/arrows/arrows-expand-up-down-fill/arrows-expand-up-down-fill.component.ts","../src/components/icons/buildings/buildings-home-6-line/buildings-home-6-line.component.ts","../src/components/icons/business/business-calendar-line/business-calendar-line.component.ts","../src/components/icons/design/design-edit-line/design-edit-line.component.ts","../src/components/icons/design/design-tools-line/design-tools-line.component.ts","../src/components/icons/device/device-computer-line/device-computer-line.component.ts","../src/components/icons/document/document-clipboard-line/document-clipboard-line.component.ts","../src/components/icons/document/document-file-copy-line/document-file-copy-line.component.ts","../src/components/icons/document/document-file-image-line/document-file-image-line.component.ts","../src/components/icons/document/document-file-music-line/document-file-music-line.component.ts","../src/components/icons/document/document-file-text-line/document-file-text-line.component.ts","../src/components/icons/document/document-file-video-line/document-file-video-line.component.ts","../src/components/icons/document/document-folder-line/document-folder-line.component.ts","../src/components/icons/document/document-folder-open-line/document-folder-open-line.component.ts","../src/components/icons/health/health-heart-fill/health-heart-fill.component.ts","../src/components/icons/health/health-heart-line/health-heart-line.component.ts","../src/components/icons/others/others-cookie-line/others-cookie-line.component.ts","../src/components/icons/system/system-add-line/system-add-line.component.ts","../src/components/icons/system/system-alert-fill/system-alert-fill.component.ts","../src/components/icons/system/system-alert-line/system-alert-line.component.ts","../src/components/icons/system/system-check-line/system-check-line.component.ts","../src/components/icons/system/system-check-line2/system-check-line2.component.ts","../src/components/icons/system/system-checkbox-blank-circle-fill/system-checkbox-blank-circle-fill.component.ts","../src/components/icons/system/system-checkbox-blank-circle-fill-check/system-checkbox-blank-circle-fill-check.component.ts","../src/components/icons/system/system-checkbox-blank-circle-line/system-checkbox-blank-circle-line.component.ts","../src/components/icons/system/system-checkbox-circle-fill/system-checkbox-circle-fill.component.ts","../src/components/icons/system/system-checkbox-circle-line/system-checkbox-circle-line.component.ts","../src/components/icons/system/system-close-circle-fill/system-close-circle-fill.component.ts","../src/components/icons/system/system-close-circle-line/system-close-circle-line.component.ts","../src/components/icons/system/system-close-fill/system-close-fill.component.ts","../src/components/icons/system/system-close-line/system-close-line.component.ts","../src/components/icons/system/system-delete-bin-fill/system-delete-bin-fill.component.ts","../src/components/icons/system/system-delete-bin-line/system-delete-bin-line.component.ts","../src/components/icons/system/system-download-line/system-download-line.component.ts","../src/components/icons/system/system-error-warning-fill/system-error-warning-fill.component.ts","../src/components/icons/system/system-error-warning-line/system-error-warning-line.component.ts","../src/components/icons/system/system-external-link-line/system-external-link-line.component.ts","../src/components/icons/system/system-eye-line/system-eye-line.component.ts","../src/components/icons/system/system-eye-off-line/system-eye-off-line.component.ts","../src/components/icons/system/system-forbid-fill/system-forbid-fill.component.ts","../src/components/icons/system/system-information-2-fill/system-information-2-fill.component.ts","../src/components/icons/system/system-information-fill/system-information-fill.component.ts","../src/components/icons/system/system-information-line/system-information-line.component.ts","../src/components/icons/system/system-lightbulb-fill/system-lightbulb-fill.component.ts","../src/components/icons/system/system-loading-spinner/system-loading-spinner.component.ts","../src/components/icons/system/system-lock-fill/system-lock-fill.component.ts","../src/components/icons/system/system-lock-line/system-lock-line.component.ts","../src/components/icons/system/system-menu-line/system-menu-line.component.ts","../src/components/icons/system/system-menu-line-s/system-menu-line-s.component.ts","../src/components/icons/system/system-more-2-line/system-more-2-line.component.ts","../src/components/icons/system/system-more-line/system-more-line.component.ts","../src/components/icons/system/system-search-line/system-search-line.component.ts","../src/components/icons/system/system-share-line/system-share-line.component.ts","../src/components/icons/system/system-shield-check-fill/system-shield-check-fill.component.ts","../src/components/icons/system/system-shield-check-line/system-shield-check-line.component.ts","../src/components/icons/system/system-star-fill/system-star-fill.component.ts","../src/components/icons/system/system-subtract-line/system-subtract-line.component.ts","../src/components/icons/system/system-subtract-line2/system-subtract-line2.component.ts","../src/components/icons/system/system-time-fill/system-time-fill.component.ts","../src/components/icons/system/system-time-line/system-time-line.component.ts","../src/components/icons/system/system-upload-2-fill/system-upload-2-fill.component.ts","../src/components/icons/system/system-upload-2-line/system-upload-2-line.component.ts","../src/components/icons/system/system-upload-line/system-upload-line.component.ts","../src/components/icons/user/user-account-circle-fill/user-account-circle-fill.component.ts","../src/components/icons/user/user-account-circle-line/user-account-circle-line.component.ts","../src/components/icons/user/user-user-fill/user-user-fill.component.ts","../src/components/icons/user/user-user-line/user-user-line.component.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=t=>(e,o)=>{void 0!==o?o.addInitializer((()=>{customElements.define(t,e)})):customElements.define(t,e)};export{t as customElement};\n//# sourceMappingURL=custom-element.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,css,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:h,getOwnPropertyNames:r,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),b={attribute:!0,type:String,converter:u,reflect:!1,useDefault:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class y extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=b){if(s.state&&(s.attribute=!1),this._$Ei(),this.prototype.hasOwnProperty(t)&&((s=Object.create(s)).wrapped=!0),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),h=this.getPropertyDescriptor(t,i,s);void 0!==h&&e(this.prototype,t,h)}}static getPropertyDescriptor(t,s,i){const{get:e,set:r}=h(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get:e,set(s){const h=e?.call(this);r?.call(this,s),this.requestUpdate(t,h,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??b}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...r(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$ET(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const h=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==h?this.removeAttribute(e):this.setAttribute(e,h),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=h.fromAttribute(s,t.type)??this._$Ej?.get(e)??null,this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){const e=this.constructor,h=this[t];if(i??=e.getPropertyOptions(t),!((i.hasChanged??f)(h,s)||i.useDefault&&i.reflect&&h===this._$Ej?.get(t)&&!this.hasAttribute(e._$Eu(t,i))))return;this.C(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$EP())}C(t,s,{useDefault:i,reflect:e,wrapped:h},r){i&&!(this._$Ej??=new Map).has(t)&&(this._$Ej.set(t,r??s??this[t]),!0!==h||void 0!==r)||(this._$AL.has(t)||(this.hasUpdated||i||(s=void 0),this._$AL.set(t,s)),!0===e&&this._$Em!==t&&(this._$Eq??=new Set).add(t))}async _$EP(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t){const{wrapped:t}=i,e=this[s];!0!==t||this._$AL.has(s)||void 0===e||this.C(s,void 0,i,e)}}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EM()}catch(s){throw t=!1,this._$EM(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EM(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Eq&&=this._$Eq.forEach((t=>this._$ET(t,this[t]))),this._$EM()}updated(t){}firstUpdated(t){}}y.elementStyles=[],y.shadowRootOptions={mode:\"open\"},y[d(\"elementProperties\")]=new Map,y[d(\"finalized\")]=new Map,p?.({ReactiveElement:y}),(a.reactiveElementVersions??=[]).push(\"2.1.0\");export{y as ReactiveElement,s as adoptStyles,u as defaultConverter,t as getCompatibleStyle,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","import{defaultConverter as t,notEqual as e}from\"../reactive-element.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o={attribute:!0,type:String,converter:t,reflect:!1,hasChanged:e},r=(t=o,e,r)=>{const{kind:n,metadata:i}=r;let s=globalThis.litPropertyMetadata.get(i);if(void 0===s&&globalThis.litPropertyMetadata.set(i,s=new Map),\"setter\"===n&&((t=Object.create(t)).wrapped=!0),s.set(r.name,t),\"accessor\"===n){const{name:o}=r;return{set(r){const n=e.get.call(this);e.set.call(this,r),this.requestUpdate(o,n,t)},init(e){return void 0!==e&&this.C(o,void 0,t,e),e}}}if(\"setter\"===n){const{name:o}=r;return function(r){const n=this[o];e.call(this,r),this.requestUpdate(o,n,t)}}throw Error(\"Unsupported decorator location: \"+n)};function n(t){return(e,o)=>\"object\"==typeof o?r(t,e,o):((t,e,o)=>{const r=e.hasOwnProperty(o);return e.constructor.createProperty(o,t),r?Object.getOwnPropertyDescriptor(e,o):void 0})(t,e,o)}export{n as property,r as standardProperty};\n//# sourceMappingURL=property.js.map\n","import{property as t}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function r(r){return t({...r,state:!0,attribute:!1})}export{r as state};\n//# sourceMappingURL=state.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst e=(e,t,c)=>(c.configurable=!0,c.enumerable=!0,Reflect.decorate&&\"object\"!=typeof t&&Object.defineProperty(e,t,c),c);export{e as desc};\n//# sourceMappingURL=base.js.map\n","import{desc as t}from\"./base.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function e(e,r){return(n,s,i)=>{const o=t=>t.renderRoot?.querySelector(e)??null;if(r){const{get:e,set:r}=\"object\"==typeof s?n:i??(()=>{const t=Symbol();return{get(){return this[t]},set(e){this[t]=e}}})();return t(n,s,{get(){let t=e.call(this);return void 0===t&&(t=o(this),(null!==t||this.hasUpdated)&&r.call(this,t)),t}})}return t(n,s,{get(){return o(this)}})}}export{e as query};\n//# sourceMappingURL=query.js.map\n","import{desc as t}from\"./base.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nlet e;function r(r){return(n,o)=>t(n,o,{get(){return(this.renderRoot??(e??=document.createDocumentFragment())).querySelectorAll(r)}})}export{r as queryAll};\n//# sourceMappingURL=query-all.js.map\n","import{desc as t}from\"./base.js\";\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function o(o){return(e,n)=>{const{slot:r,selector:s}=o??{},c=\"slot\"+(r?`[name=${r}]`:\":not([name])\");return t(e,n,{get(){const t=this.renderRoot?.querySelector(c),e=t?.assignedElements(o)??[];return void 0===s?e:e.filter((t=>t.matches(s)))}})}}export{o as queryAssignedElements};\n//# sourceMappingURL=query-assigned-elements.js.map\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${Math.random().toFixed(9).slice(2)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=y(3),T=Symbol.for(\"lit-noChange\"),E=Symbol.for(\"lit-nothing\"),A=new WeakMap,C=r.createTreeWalker(r,129);function P(t,i){if(!a(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":3===i?\"<math>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[P(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":3===i?\"</math>\":\"\")),o]};class N{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=V(t,s);if(this.el=N.createElement(f,n),C.currentNode=this.el.content,2===s||3===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=C.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?H:\"?\"===e[1]?I:\"@\"===e[1]?L:k}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),C.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){if(i===T)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=S(t,h._$AS(t,i.values),h,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);C.currentNode=e;let h=C.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new R(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new z(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=C.nextNode(),o++)}return C.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=E,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),c(t)?t===E||null==t||\"\"===t?(this._$AH!==E&&this._$AR(),this._$AH=E):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):u(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==E&&c(this._$AH)?this._$AA.nextSibling.data=t:this.T(r.createTextNode(t)),this._$AH=t}$(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=N.createElement(P(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new M(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new N(t)),i}k(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new R(this.O(l()),this.O(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class k{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=E,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=E}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=S(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==T,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=S(this,e[s+n],i,n),r===T&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===E?t=E:t!==E&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.j(t)}j(t){t===E?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===E?void 0:t}}class I extends k{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==E)}}class L extends k{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=S(this,t,i,0)??E)===T)return;const s=this._$AH,e=t===E&&s!==E||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==E&&(s===E||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const Z={M:e,P:h,A:o,C:1,L:V,R:M,D:u,V:S,I:R,H:k,N:I,U:L,B:H,F:z},j=t.litHtmlPolyfillSupport;j?.(N,R),(t.litHtmlVersions??=[]).push(\"3.3.0\");const B=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new R(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{Z as _$LH,x as html,w as mathml,T as noChange,E as nothing,B as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as r}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const s=globalThis;class i extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const r=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(r,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return r}}i._$litElement$=!0,i[\"finalized\"]=!0,s.litElementHydrateSupport?.({LitElement:i});const o=s.litElementPolyfillSupport;o?.({LitElement:i});const n={_$AK:(t,e,r)=>{t._$AK(e,r)},_$AL:t=>t._$AL};(s.litElementVersions??=[]).push(\"4.2.0\");export{i as LitElement,n as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","import{nothing as t}from\"../lit-html.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o=o=>o??t;export{o as ifDefined};\n//# sourceMappingURL=if-defined.js.map\n","import{html as t,svg as r,mathml as e}from\"./lit-html.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst a=Symbol.for(\"\"),o=t=>{if(t?.r===a)return t?._$litStatic$},s=t=>({_$litStatic$:t,r:a}),i=(t,...r)=>({_$litStatic$:r.reduce(((r,e,a)=>r+(t=>{if(void 0!==t._$litStatic$)return t._$litStatic$;throw Error(`Value passed to 'literal' function must be a 'literal' result: ${t}. Use 'unsafeStatic' to pass non-literal values, but\\n            take care to ensure page security.`)})(e)+t[a+1]),t[0]),r:a}),l=new Map,n=t=>(r,...e)=>{const a=e.length;let s,i;const n=[],u=[];let c,$=0,f=!1;for(;$<a;){for(c=r[$];$<a&&void 0!==(i=e[$],s=o(i));)c+=s+r[++$],f=!0;$!==a&&u.push(i),n.push(c),$++}if($===a&&n.push(r[a]),f){const t=n.join(\"$$lit$$\");void 0===(r=l.get(t))&&(n.raw=n,l.set(t,r=n)),e=u}return t(r,...e)},u=n(t),c=n(r),$=n(e);export{u as html,i as literal,$ as mathml,c as svg,s as unsafeStatic,n as withStatic};\n//# sourceMappingURL=static.js.map\n","import { LitElement } from 'lit'\n\nimport { EventOptions } from './event'\n\nexport class DdsElement extends LitElement {\n  emit<V = Record<PropertyKey, any>>(\n    name: string,\n    value?: V,\n    options?: EventOptions,\n  ) {\n    const event = new CustomEvent<V>(name, {\n      bubbles: true,\n      cancelable: false,\n      composed: true,\n      detail: value ? ({ ...value } as V) : undefined,\n      ...options,\n    })\n\n    this.dispatchEvent(event)\n\n    return event\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],n):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_hu=n(e.dayjs)}(this,(function(e){\"use strict\";function n(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=n(e),r={name:\"hu\",weekdays:\"vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat\".split(\"_\"),weekdaysShort:\"vas_hét_kedd_sze_csüt_pén_szo\".split(\"_\"),weekdaysMin:\"v_h_k_sze_cs_p_szo\".split(\"_\"),months:\"január_február_március_április_május_június_július_augusztus_szeptember_október_november_december\".split(\"_\"),monthsShort:\"jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec\".split(\"_\"),ordinal:function(e){return e+\".\"},weekStart:1,relativeTime:{future:\"%s múlva\",past:\"%s\",s:function(e,n,t,r){return\"néhány másodperc\"+(r||n?\"\":\"e\")},m:function(e,n,t,r){return\"egy perc\"+(r||n?\"\":\"e\")},mm:function(e,n,t,r){return e+\" perc\"+(r||n?\"\":\"e\")},h:function(e,n,t,r){return\"egy \"+(r||n?\"óra\":\"órája\")},hh:function(e,n,t,r){return e+\" \"+(r||n?\"óra\":\"órája\")},d:function(e,n,t,r){return\"egy \"+(r||n?\"nap\":\"napja\")},dd:function(e,n,t,r){return e+\" \"+(r||n?\"nap\":\"napja\")},M:function(e,n,t,r){return\"egy \"+(r||n?\"hónap\":\"hónapja\")},MM:function(e,n,t,r){return e+\" \"+(r||n?\"hónap\":\"hónapja\")},y:function(e,n,t,r){return\"egy \"+(r||n?\"év\":\"éve\")},yy:function(e,n,t,r){return e+\" \"+(r||n?\"év\":\"éve\")}},formats:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"YYYY.MM.DD.\",LL:\"YYYY. MMMM D.\",LLL:\"YYYY. MMMM D. H:mm\",LLLL:\"YYYY. MMMM D., dddd H:mm\"}};return t.default.locale(r,null,!0),r}));","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_en=n()}(this,(function(){\"use strict\";return{name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(e){var n=[\"th\",\"st\",\"nd\",\"rd\"],t=e%100;return\"[\"+e+(n[(t-20)%10]||n[t]||n[0])+\"]\"}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_customParseFormat=t()}(this,(function(){\"use strict\";var e={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},t=/(\\[[^[]*\\])|([-_:/.,()\\s]+)|(A|a|Q|YYYY|YY?|ww?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\\d/,r=/\\d\\d/,i=/\\d\\d?/,o=/\\d*[^-_:/,()\\s\\d]+/,s={},a=function(e){return(e=+e)+(e>68?1900:2e3)};var f=function(e){return function(t){this[e]=+t}},h=[/[+-]\\d\\d:?(\\d\\d)?|Z/,function(e){(this.zone||(this.zone={})).offset=function(e){if(!e)return 0;if(\"Z\"===e)return 0;var t=e.match(/([+-]|\\d\\d)/g),n=60*t[1]+(+t[2]||0);return 0===n?0:\"+\"===t[0]?-n:n}(e)}],u=function(e){var t=s[e];return t&&(t.indexOf?t:t.s.concat(t.f))},d=function(e,t){var n,r=s.meridiem;if(r){for(var i=1;i<=24;i+=1)if(e.indexOf(r(i,0,t))>-1){n=i>12;break}}else n=e===(t?\"pm\":\"PM\");return n},c={A:[o,function(e){this.afternoon=d(e,!1)}],a:[o,function(e){this.afternoon=d(e,!0)}],Q:[n,function(e){this.month=3*(e-1)+1}],S:[n,function(e){this.milliseconds=100*+e}],SS:[r,function(e){this.milliseconds=10*+e}],SSS:[/\\d{3}/,function(e){this.milliseconds=+e}],s:[i,f(\"seconds\")],ss:[i,f(\"seconds\")],m:[i,f(\"minutes\")],mm:[i,f(\"minutes\")],H:[i,f(\"hours\")],h:[i,f(\"hours\")],HH:[i,f(\"hours\")],hh:[i,f(\"hours\")],D:[i,f(\"day\")],DD:[r,f(\"day\")],Do:[o,function(e){var t=s.ordinal,n=e.match(/\\d+/);if(this.day=n[0],t)for(var r=1;r<=31;r+=1)t(r).replace(/\\[|\\]/g,\"\")===e&&(this.day=r)}],w:[i,f(\"week\")],ww:[r,f(\"week\")],M:[i,f(\"month\")],MM:[r,f(\"month\")],MMM:[o,function(e){var t=u(\"months\"),n=(u(\"monthsShort\")||t.map((function(e){return e.slice(0,3)}))).indexOf(e)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[o,function(e){var t=u(\"months\").indexOf(e)+1;if(t<1)throw new Error;this.month=t%12||t}],Y:[/[+-]?\\d+/,f(\"year\")],YY:[r,function(e){this.year=a(e)}],YYYY:[/\\d{4}/,f(\"year\")],Z:h,ZZ:h};function l(n){var r,i;r=n,i=s&&s.formats;for(var o=(n=r.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var o=r&&r.toUpperCase();return n||i[r]||e[r]||i[o].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,n){return t||n.slice(1)}))}))).match(t),a=o.length,f=0;f<a;f+=1){var h=o[f],u=c[h],d=u&&u[0],l=u&&u[1];o[f]=l?{regex:d,parser:l}:h.replace(/^\\[|\\]$/g,\"\")}return function(e){for(var t={},n=0,r=0;n<a;n+=1){var i=o[n];if(\"string\"==typeof i)r+=i.length;else{var s=i.regex,f=i.parser,h=e.slice(r),u=s.exec(h)[0];f.call(t,u),e=e.replace(u,\"\")}}return function(e){var t=e.afternoon;if(void 0!==t){var n=e.hours;t?n<12&&(e.hours+=12):12===n&&(e.hours=0),delete e.afternoon}}(t),t}}return function(e,t,n){n.p.customParseFormat=!0,e&&e.parseTwoDigitYear&&(a=e.parseTwoDigitYear);var r=t.prototype,i=r.parse;r.parse=function(e){var t=e.date,r=e.utc,o=e.args;this.$u=r;var a=o[1];if(\"string\"==typeof a){var f=!0===o[2],h=!0===o[3],u=f||h,d=o[2];h&&(d=o[2]),s=this.$locale(),!f&&d&&(s=n.Ls[d]),this.$d=function(e,t,n,r){try{if([\"x\",\"X\"].indexOf(t)>-1)return new Date((\"X\"===t?1e3:1)*e);var i=l(t)(e),o=i.year,s=i.month,a=i.day,f=i.hours,h=i.minutes,u=i.seconds,d=i.milliseconds,c=i.zone,m=i.week,M=new Date,Y=a||(o||s?1:M.getDate()),p=o||M.getFullYear(),v=0;o&&!s||(v=s>0?s-1:M.getMonth());var D,w=f||0,g=h||0,y=u||0,L=d||0;return c?new Date(Date.UTC(p,v,Y,w,g,y,L+60*c.offset*1e3)):n?new Date(Date.UTC(p,v,Y,w,g,y,L)):(D=new Date(p,v,Y,w,g,y,L),m&&(D=r(D).week(m).toDate()),D)}catch(e){return new Date(\"\")}}(t,a,r,n),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),u&&t!=this.format(a)&&(this.$d=new Date(\"\")),s={}}else if(a instanceof Array)for(var c=a.length,m=1;m<=c;m+=1){o[1]=a[m-1];var M=n.apply(this,o);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}m===c&&(this.$d=new Date(\"\"))}else i.call(this,e)}}}));","!function(n,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(n=\"undefined\"!=typeof globalThis?globalThis:n||self).dayjs_plugin_localeData=e()}(this,(function(){\"use strict\";return function(n,e,t){var r=e.prototype,o=function(n){return n&&(n.indexOf?n:n.s)},u=function(n,e,t,r,u){var i=n.name?n:n.$locale(),a=o(i[e]),s=o(i[t]),f=a||s.map((function(n){return n.slice(0,r)}));if(!u)return f;var d=i.weekStart;return f.map((function(n,e){return f[(e+(d||0))%7]}))},i=function(){return t.Ls[t.locale()]},a=function(n,e){return n.formats[e]||function(n){return n.replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(n,e,t){return e||t.slice(1)}))}(n.formats[e.toUpperCase()])},s=function(){var n=this;return{months:function(e){return e?e.format(\"MMMM\"):u(n,\"months\")},monthsShort:function(e){return e?e.format(\"MMM\"):u(n,\"monthsShort\",\"months\",3)},firstDayOfWeek:function(){return n.$locale().weekStart||0},weekdays:function(e){return e?e.format(\"dddd\"):u(n,\"weekdays\")},weekdaysMin:function(e){return e?e.format(\"dd\"):u(n,\"weekdaysMin\",\"weekdays\",2)},weekdaysShort:function(e){return e?e.format(\"ddd\"):u(n,\"weekdaysShort\",\"weekdays\",3)},longDateFormat:function(e){return a(n.$locale(),e)},meridiem:this.$locale().meridiem,ordinal:this.$locale().ordinal}};r.localeData=function(){return s.bind(this)()},t.localeData=function(){var n=i();return{firstDayOfWeek:function(){return n.weekStart||0},weekdays:function(){return t.weekdays()},weekdaysShort:function(){return t.weekdaysShort()},weekdaysMin:function(){return t.weekdaysMin()},months:function(){return t.months()},monthsShort:function(){return t.monthsShort()},longDateFormat:function(e){return a(n,e)},meridiem:n.meridiem,ordinal:n.ordinal}},t.months=function(){return u(i(),\"months\")},t.monthsShort=function(){return u(i(),\"monthsShort\",\"months\",3)},t.weekdays=function(n){return u(i(),\"weekdays\",null,null,n)},t.weekdaysShort=function(n){return u(i(),\"weekdaysShort\",\"weekdays\",3,n)},t.weekdaysMin=function(n){return u(i(),\"weekdaysMin\",\"weekdays\",2,n)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_localizedFormat=t()}(this,(function(){\"use strict\";var e={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"};return function(t,o,n){var r=o.prototype,i=r.format;n.en.formats=e,r.format=function(t){void 0===t&&(t=\"YYYY-MM-DDTHH:mm:ssZ\");var o=this.$locale().formats,n=function(t,o){return t.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var i=r&&r.toUpperCase();return n||o[r]||e[r]||o[i].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,o){return t||o.slice(1)}))}))}(t,void 0===o?{}:o);return i.call(this,n)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekday=t()}(this,(function(){\"use strict\";return function(e,t){t.prototype.weekday=function(e){var t=this.$locale().weekStart||0,i=this.$W,n=(i<t?i+7:i)-t;return this.$utils().u(e)?n:this.subtract(n,\"day\").add(e,\"day\")}}}));","const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last && last.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = function (obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code && code.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    if (console && console[type]) console[type].apply(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false,\n      skipCopy: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    if (this.options.compatibilityAPI === 'v1') return {\n      ...{},\n      ...this.getResource(lng, ns)\n    };\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      if (this.processors[processor]) value = this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key === undefined || key === null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return resolved && resolved.res !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = {\n      ...options\n    };\n    if (!options) options = {};\n    if (keys === undefined || keys === null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng && lng.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved && resolved.res;\n    const resUsedKey = resolved && resolved.usedKey || key;\n    const resExactUsedKey = resolved && resolved.exactUsedKey || key;\n    const resType = Object.prototype.toString.apply(res);\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const handleAsObject = !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\n    if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(res))) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, {\n          ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(res);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in res) {\n          if (Object.prototype.hasOwnProperty.call(res, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            copy[m] = this.translate(deepKey, {\n              ...options,\n              ...{\n                joinArrays: false,\n                ns: namespaces\n              }\n            });\n            if (copy[m] === deepKey) copy[m] = res[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const hasDefaultValue = Translator.hasDefaultValue(options);\n      const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n      const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n        ordinal: false\n      }) : '';\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();\n      const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector && this.backendConnector.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        if (this.options.compatibilityAPI !== 'v1') {\n          res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n        } else {\n          res = this.options.parseMissingKeyHandler(res);\n        }\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n    if (this.i18nFormat && this.i18nFormat.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({\n        ...options,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && !isString(options.replace) ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language || resolved.usedLng, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && this.options.compatibilityAPI !== 'v1' && resolved && resolved.res) options.lng = this.language || resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (lastKey && lastKey[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(options)\n        },\n        ...options\n      } : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();\n      const needsContextHandling = options.context !== undefined && (isString(options.context) || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils && this.utils.hasLoadedNamespace && !this.utils.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat && this.i18nFormat.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      if (typeof Intl !== 'undefined' && typeof Intl.getCanonicalLocales !== 'undefined') {\n        try {\n          let formattedCode = Intl.getCanonicalLocales(code)[0];\n          if (formattedCode && this.options.lowerCaseLng) {\n            formattedCode = formattedCode.toLowerCase();\n          }\n          if (formattedCode) return formattedCode;\n        } catch (e) {}\n      }\n      const specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n      let p = code.split('-');\n      if (this.options.lowerCaseLng) {\n        p = p.map(part => part.toLowerCase());\n      } else if (p.length === 2) {\n        p[0] = p[0].toLowerCase();\n        p[1] = p[1].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n      } else if (p.length === 3) {\n        p[0] = p[0].toLowerCase();\n        if (p[1].length === 2) p[1] = p[1].toUpperCase();\n        if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n      }\n      return p.join('-');\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nlet sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he', 'iw'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nlet _rulesPluralsTypes = {\n  1: n => Number(n > 1),\n  2: n => Number(n != 1),\n  3: n => 0,\n  4: n => Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2),\n  5: n => Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5),\n  6: n => Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2),\n  7: n => Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2),\n  8: n => Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3),\n  9: n => Number(n >= 2),\n  10: n => Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4),\n  11: n => Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3),\n  12: n => Number(n % 10 != 1 || n % 100 == 11),\n  13: n => Number(n !== 0),\n  14: n => Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3),\n  15: n => Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2),\n  16: n => Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2),\n  17: n => Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1),\n  18: n => Number(n == 0 ? 0 : n == 1 ? 1 : 2),\n  19: n => Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3),\n  20: n => Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2),\n  21: n => Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0),\n  22: n => Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3)\n};\nconst nonIntlVersions = ['v1', 'v2', 'v3'];\nconst intlVersions = ['v4'];\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst createRules = () => {\n  const rules = {};\n  sets.forEach(set => {\n    set.lngs.forEach(l => {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n};\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    if ((!this.options.compatibilityJSON || intlVersions.includes(this.options.compatibilityJSON)) && (typeof Intl === 'undefined' || !Intl.PluralRules)) {\n      this.options.compatibilityJSON = 'v3';\n      this.logger.error('Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.');\n    }\n    this.rules = createRules();\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this.shouldUseIntlApi()) {\n      const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n      const type = options.ordinal ? 'ordinal' : 'cardinal';\n      const cacheKey = JSON.stringify({\n        cleanedCode,\n        type\n      });\n      if (cacheKey in this.pluralRulesCache) {\n        return this.pluralRulesCache[cacheKey];\n      }\n      let rule;\n      try {\n        rule = new Intl.PluralRules(cleanedCode, {\n          type\n        });\n      } catch (err) {\n        if (!code.match(/-|_/)) return;\n        const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n        rule = this.getRule(lngPart, options);\n      }\n      this.pluralRulesCache[cacheKey] = rule;\n      return rule;\n    }\n    return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n  }\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const rule = this.getRule(code, options);\n    if (this.shouldUseIntlApi()) {\n      return rule && rule.resolvedOptions().pluralCategories.length > 1;\n    }\n    return rule && rule.numbers.length > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const rule = this.getRule(code, options);\n    if (!rule) {\n      return [];\n    }\n    if (this.shouldUseIntlApi()) {\n      return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n    }\n    return rule.numbers.map(number => this.getSuffix(code, number, options));\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      if (this.shouldUseIntlApi()) {\n        return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n      }\n      return this.getSuffixRetroCompatible(rule, count);\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return '';\n  }\n  getSuffixRetroCompatible(rule, count) {\n    const idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n    let suffix = rule.numbers[idx];\n    if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      if (suffix === 2) {\n        suffix = 'plural';\n      } else if (suffix === 1) {\n        suffix = '';\n      }\n    }\n    const returnSuffix = () => this.options.prepend && suffix.toString() ? this.options.prepend + suffix.toString() : suffix.toString();\n    if (this.options.compatibilityJSON === 'v1') {\n      if (suffix === 1) return '';\n      if (typeof suffix === 'number') return `_plural_${suffix.toString()}`;\n      return returnSuffix();\n    } else if (this.options.compatibilityJSON === 'v2') {\n      return returnSuffix();\n    } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      return returnSuffix();\n    }\n    return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n  }\n  shouldUseIntlApi() {\n    return !nonIntlVersions.includes(this.options.compatibilityJSON);\n  }\n}\n\nconst deepFindWithDefaults = function (data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options.interpolation && options.interpolation.format || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp && existingRegExp.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (val, lng, options) => {\n    let optForCache = options;\n    if (options && options.interpolationkey && options.formatParams && options.formatParams[options.interpolationkey] && options[options.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [options.interpolationkey]: undefined\n      };\n    }\n    const key = lng + JSON.stringify(optForCache);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n};\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options && options.formatParams && options.formatParams[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    if (this.backend && this.backend.init) {\n      this.backend.init(services, options.backend, options);\n    }\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend && this.backend.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initImmediate: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  }\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initImmediate) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    if (this.options.compatibilityAPI !== 'v1') {\n      this.options.interpolation = {\n        ...defOpts.interpolation,\n        ...this.options.interpolation\n      };\n    }\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else if (typeof Intl !== 'undefined') {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        compatibilityJSON: this.options.compatibilityJSON,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && this.options.compatibilityAPI !== 'v1' && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initImmediate) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng && usedLng.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      if (this.options.preload) {\n        this.options.preload.forEach(l => append(l));\n      }\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = isString(lngs) ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        if (this.services.languageDetector && this.services.languageDetector.cacheUserLanguage) this.services.languageDetector.cacheUserLanguage(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = {\n          ...opts\n        };\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      if (options.keyPrefix !== '') options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    return this.translator && this.translator.translate(...arguments);\n  }\n  exists() {\n    return this.translator && this.translator.exists(...arguments);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services && this.services.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      clone.store = new ResourceStore(this.store.data, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _classCallCheck as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","import _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\n\nvar arr = [];\nvar each = arr.forEach;\nvar slice = arr.slice;\nfunction defaults(obj) {\n  each.call(slice.call(arguments, 1), function (source) {\n    if (source) {\n      for (var prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop];\n      }\n    }\n  });\n  return obj;\n}\n\n// eslint-disable-next-line no-control-regex\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\nvar serializeCookie = function serializeCookie(name, val, options) {\n  var opt = options || {};\n  opt.path = opt.path || '/';\n  var value = encodeURIComponent(val);\n  var str = \"\".concat(name, \"=\").concat(value);\n  if (opt.maxAge > 0) {\n    var maxAge = opt.maxAge - 0;\n    if (Number.isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += \"; Max-Age=\".concat(Math.floor(maxAge));\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n    str += \"; Domain=\".concat(opt.domain);\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n    str += \"; Path=\".concat(opt.path);\n  }\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n    str += \"; Expires=\".concat(opt.expires.toUTCString());\n  }\n  if (opt.httpOnly) str += '; HttpOnly';\n  if (opt.secure) str += '; Secure';\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n  return str;\n};\nvar cookie = {\n  create: function create(name, value, minutes, domain) {\n    var cookieOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      path: '/',\n      sameSite: 'strict'\n    };\n    if (minutes) {\n      cookieOptions.expires = new Date();\n      cookieOptions.expires.setTime(cookieOptions.expires.getTime() + minutes * 60 * 1000);\n    }\n    if (domain) cookieOptions.domain = domain;\n    document.cookie = serializeCookie(name, encodeURIComponent(value), cookieOptions);\n  },\n  read: function read(name) {\n    var nameEQ = \"\".concat(name, \"=\");\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  },\n  remove: function remove(name) {\n    this.create(name, '', -1);\n  }\n};\nvar cookie$1 = {\n  name: 'cookie',\n  lookup: function lookup(options) {\n    var found;\n    if (options.lookupCookie && typeof document !== 'undefined') {\n      var c = cookie.read(options.lookupCookie);\n      if (c) found = c;\n    }\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupCookie && typeof document !== 'undefined') {\n      cookie.create(options.lookupCookie, lng, options.cookieMinutes, options.cookieDomain, options.cookieOptions);\n    }\n  }\n};\n\nvar querystring = {\n  name: 'querystring',\n  lookup: function lookup(options) {\n    var found;\n    if (typeof window !== 'undefined') {\n      var search = window.location.search;\n      if (!window.location.search && window.location.hash && window.location.hash.indexOf('?') > -1) {\n        search = window.location.hash.substring(window.location.hash.indexOf('?'));\n      }\n      var query = search.substring(1);\n      var params = query.split('&');\n      for (var i = 0; i < params.length; i++) {\n        var pos = params[i].indexOf('=');\n        if (pos > 0) {\n          var key = params[i].substring(0, pos);\n          if (key === options.lookupQuerystring) {\n            found = params[i].substring(pos + 1);\n          }\n        }\n      }\n    }\n    return found;\n  }\n};\n\nvar hasLocalStorageSupport = null;\nvar localStorageAvailable = function localStorageAvailable() {\n  if (hasLocalStorageSupport !== null) return hasLocalStorageSupport;\n  try {\n    hasLocalStorageSupport = window !== 'undefined' && window.localStorage !== null;\n    var testKey = 'i18next.translate.boo';\n    window.localStorage.setItem(testKey, 'foo');\n    window.localStorage.removeItem(testKey);\n  } catch (e) {\n    hasLocalStorageSupport = false;\n  }\n  return hasLocalStorageSupport;\n};\nvar localStorage = {\n  name: 'localStorage',\n  lookup: function lookup(options) {\n    var found;\n    if (options.lookupLocalStorage && localStorageAvailable()) {\n      var lng = window.localStorage.getItem(options.lookupLocalStorage);\n      if (lng) found = lng;\n    }\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupLocalStorage && localStorageAvailable()) {\n      window.localStorage.setItem(options.lookupLocalStorage, lng);\n    }\n  }\n};\n\nvar hasSessionStorageSupport = null;\nvar sessionStorageAvailable = function sessionStorageAvailable() {\n  if (hasSessionStorageSupport !== null) return hasSessionStorageSupport;\n  try {\n    hasSessionStorageSupport = window !== 'undefined' && window.sessionStorage !== null;\n    var testKey = 'i18next.translate.boo';\n    window.sessionStorage.setItem(testKey, 'foo');\n    window.sessionStorage.removeItem(testKey);\n  } catch (e) {\n    hasSessionStorageSupport = false;\n  }\n  return hasSessionStorageSupport;\n};\nvar sessionStorage = {\n  name: 'sessionStorage',\n  lookup: function lookup(options) {\n    var found;\n    if (options.lookupSessionStorage && sessionStorageAvailable()) {\n      var lng = window.sessionStorage.getItem(options.lookupSessionStorage);\n      if (lng) found = lng;\n    }\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupSessionStorage && sessionStorageAvailable()) {\n      window.sessionStorage.setItem(options.lookupSessionStorage, lng);\n    }\n  }\n};\n\nvar navigator$1 = {\n  name: 'navigator',\n  lookup: function lookup(options) {\n    var found = [];\n    if (typeof navigator !== 'undefined') {\n      if (navigator.languages) {\n        // chrome only; not an array, so can't use .push.apply instead of iterating\n        for (var i = 0; i < navigator.languages.length; i++) {\n          found.push(navigator.languages[i]);\n        }\n      }\n      if (navigator.userLanguage) {\n        found.push(navigator.userLanguage);\n      }\n      if (navigator.language) {\n        found.push(navigator.language);\n      }\n    }\n    return found.length > 0 ? found : undefined;\n  }\n};\n\nvar htmlTag = {\n  name: 'htmlTag',\n  lookup: function lookup(options) {\n    var found;\n    var htmlTag = options.htmlTag || (typeof document !== 'undefined' ? document.documentElement : null);\n    if (htmlTag && typeof htmlTag.getAttribute === 'function') {\n      found = htmlTag.getAttribute('lang');\n    }\n    return found;\n  }\n};\n\nvar path = {\n  name: 'path',\n  lookup: function lookup(options) {\n    var found;\n    if (typeof window !== 'undefined') {\n      var language = window.location.pathname.match(/\\/([a-zA-Z-]*)/g);\n      if (language instanceof Array) {\n        if (typeof options.lookupFromPathIndex === 'number') {\n          if (typeof language[options.lookupFromPathIndex] !== 'string') {\n            return undefined;\n          }\n          found = language[options.lookupFromPathIndex].replace('/', '');\n        } else {\n          found = language[0].replace('/', '');\n        }\n      }\n    }\n    return found;\n  }\n};\n\nvar subdomain = {\n  name: 'subdomain',\n  lookup: function lookup(options) {\n    // If given get the subdomain index else 1\n    var lookupFromSubdomainIndex = typeof options.lookupFromSubdomainIndex === 'number' ? options.lookupFromSubdomainIndex + 1 : 1;\n    // get all matches if window.location. is existing\n    // first item of match is the match itself and the second is the first group macht which sould be the first subdomain match\n    // is the hostname no public domain get the or option of localhost\n    var language = typeof window !== 'undefined' && window.location && window.location.hostname && window.location.hostname.match(/^(\\w{2,5})\\.(([a-z0-9-]{1,63}\\.[a-z]{2,6})|localhost)/i);\n\n    // if there is no match (null) return undefined\n    if (!language) return undefined;\n    // return the given group match\n    return language[lookupFromSubdomainIndex];\n  }\n};\n\n// some environments, throws when accessing document.cookie\nvar canCookies = false;\ntry {\n  // eslint-disable-next-line no-unused-expressions\n  document.cookie;\n  canCookies = true;\n  // eslint-disable-next-line no-empty\n} catch (e) {}\nvar order = ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag'];\nif (!canCookies) order.splice(1, 1);\nfunction getDefaults() {\n  return {\n    order: order,\n    lookupQuerystring: 'lng',\n    lookupCookie: 'i18next',\n    lookupLocalStorage: 'i18nextLng',\n    lookupSessionStorage: 'i18nextLng',\n    // cache user language\n    caches: ['localStorage'],\n    excludeCacheFor: ['cimode'],\n    // cookieMinutes: 10,\n    // cookieDomain: 'myDomain'\n\n    convertDetectedLanguage: function convertDetectedLanguage(l) {\n      return l;\n    }\n  };\n}\nvar Browser = /*#__PURE__*/function () {\n  function Browser(services) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Browser);\n    this.type = 'languageDetector';\n    this.detectors = {};\n    this.init(services, options);\n  }\n  return _createClass(Browser, [{\n    key: \"init\",\n    value: function init(services) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var i18nOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.services = services || {\n        languageUtils: {}\n      }; // this way the language detector can be used without i18next\n      this.options = defaults(options, this.options || {}, getDefaults());\n      if (typeof this.options.convertDetectedLanguage === 'string' && this.options.convertDetectedLanguage.indexOf('15897') > -1) {\n        this.options.convertDetectedLanguage = function (l) {\n          return l.replace('-', '_');\n        };\n      }\n\n      // backwards compatibility\n      if (this.options.lookupFromUrlIndex) this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex;\n      this.i18nOptions = i18nOptions;\n      this.addDetector(cookie$1);\n      this.addDetector(querystring);\n      this.addDetector(localStorage);\n      this.addDetector(sessionStorage);\n      this.addDetector(navigator$1);\n      this.addDetector(htmlTag);\n      this.addDetector(path);\n      this.addDetector(subdomain);\n    }\n  }, {\n    key: \"addDetector\",\n    value: function addDetector(detector) {\n      this.detectors[detector.name] = detector;\n      return this;\n    }\n  }, {\n    key: \"detect\",\n    value: function detect(detectionOrder) {\n      var _this = this;\n      if (!detectionOrder) detectionOrder = this.options.order;\n      var detected = [];\n      detectionOrder.forEach(function (detectorName) {\n        if (_this.detectors[detectorName]) {\n          var lookup = _this.detectors[detectorName].lookup(_this.options);\n          if (lookup && typeof lookup === 'string') lookup = [lookup];\n          if (lookup) detected = detected.concat(lookup);\n        }\n      });\n      detected = detected.map(function (d) {\n        return _this.options.convertDetectedLanguage(d);\n      });\n      if (this.services.languageUtils.getBestMatchFromCodes) return detected; // new i18next v19.5.0\n      return detected.length > 0 ? detected[0] : null; // a little backward compatibility\n    }\n  }, {\n    key: \"cacheUserLanguage\",\n    value: function cacheUserLanguage(lng, caches) {\n      var _this2 = this;\n      if (!caches) caches = this.options.caches;\n      if (!caches) return;\n      if (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(lng) > -1) return;\n      caches.forEach(function (cacheName) {\n        if (_this2.detectors[cacheName]) _this2.detectors[cacheName].cacheUserLanguage(lng, _this2.options);\n      });\n    }\n  }]);\n}();\nBrowser.type = 'languageDetector';\n\nexport { Browser as default };\n","import{_$LH as o}from\"./lit-html.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{I:t}=o,i=o=>null===o||\"object\"!=typeof o&&\"function\"!=typeof o,n={HTML:1,SVG:2,MATHML:3},e=(o,t)=>void 0===t?void 0!==o?._$litType$:o?._$litType$===t,l=o=>null!=o?._$litType$?.h,c=o=>void 0!==o?._$litDirective$,d=o=>o?._$litDirective$,f=o=>void 0===o.strings,s=()=>document.createComment(\"\"),r=(o,i,n)=>{const e=o._$AA.parentNode,l=void 0===i?o._$AB:i._$AA;if(void 0===n){const i=e.insertBefore(s(),l),c=e.insertBefore(s(),l);n=new t(i,c,o,o.options)}else{const t=n._$AB.nextSibling,i=n._$AM,c=i!==o;if(c){let t;n._$AQ?.(o),n._$AM=o,void 0!==n._$AP&&(t=o._$AU)!==i._$AU&&n._$AP(t)}if(t!==l||c){let o=n._$AA;for(;o!==t;){const t=o.nextSibling;e.insertBefore(o,l),o=t}}}return n},v=(o,t,i=o)=>(o._$AI(t,i),o),u={},m=(o,t=u)=>o._$AH=t,p=o=>o._$AH,M=o=>{o._$AP?.(!1,!0);let t=o._$AA;const i=o._$AB.nextSibling;for(;t!==i;){const o=t.nextSibling;t.remove(),t=o}},h=o=>{o._$AR()};export{n as TemplateResultType,h as clearPart,p as getCommittedValue,d as getDirectiveClass,r as insertPart,l as isCompiledTemplateResult,c as isDirectiveResult,i as isPrimitive,f as isSingleExpression,e as isTemplateResult,M as removePart,v as setChildPartValue,m as setCommittedValue};\n//# sourceMappingURL=directive-helpers.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t={ATTRIBUTE:1,CHILD:2,PROPERTY:3,BOOLEAN_ATTRIBUTE:4,EVENT:5,ELEMENT:6},e=t=>(...e)=>({_$litDirective$:t,values:e});class i{constructor(t){}get _$AU(){return this._$AM._$AU}_$AT(t,e,i){this._$Ct=t,this._$AM=e,this._$Ci=i}_$AS(t,e){return this.update(t,e)}update(t,e){return this.render(...e)}}export{i as Directive,t as PartType,e as directive};\n//# sourceMappingURL=directive.js.map\n","import{isSingleExpression as i}from\"./directive-helpers.js\";import{Directive as t,PartType as e}from\"./directive.js\";export{directive}from\"./directive.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const s=(i,t)=>{const e=i._$AN;if(void 0===e)return!1;for(const i of e)i._$AO?.(t,!1),s(i,t);return!0},o=i=>{let t,e;do{if(void 0===(t=i._$AM))break;e=t._$AN,e.delete(i),i=t}while(0===e?.size)},r=i=>{for(let t;t=i._$AM;i=t){let e=t._$AN;if(void 0===e)t._$AN=e=new Set;else if(e.has(i))break;e.add(i),c(t)}};function h(i){void 0!==this._$AN?(o(this),this._$AM=i,r(this)):this._$AM=i}function n(i,t=!1,e=0){const r=this._$AH,h=this._$AN;if(void 0!==h&&0!==h.size)if(t)if(Array.isArray(r))for(let i=e;i<r.length;i++)s(r[i],!1),o(r[i]);else null!=r&&(s(r,!1),o(r));else s(this,i)}const c=i=>{i.type==e.CHILD&&(i._$AP??=n,i._$AQ??=h)};class f extends t{constructor(){super(...arguments),this._$AN=void 0}_$AT(i,t,e){super._$AT(i,t,e),r(this),this.isConnected=i._$AU}_$AO(i,t=!0){i!==this.isConnected&&(this.isConnected=i,i?this.reconnected?.():this.disconnected?.()),t&&(s(this,i),o(this))}setValue(t){if(i(this._$Ct))this._$Ct._$AI(t,this);else{const i=[...this._$Ct._$AH];i[this._$Ci]=t,this._$Ct._$AI(i,this,0)}}disconnected(){}reconnected(){}}export{f as AsyncDirective,t as Directive,e as PartType};\n//# sourceMappingURL=async-directive.js.map\n","// @ts-check\r\nimport { noChange } from 'lit-html';\r\nimport { directive, AsyncDirective } from 'lit-html/async-directive.js';\r\nimport { PartType } from 'lit-html/directive.js';\r\n\r\n/** @type {import('i18next').i18n | null} */\r\nlet i18n = null;\r\n\r\n/** @type {(i18n: import('i18next').i18n) => void} */\r\nlet i18nResolver = () => {};\r\n\r\nconst i18Provider = new Promise((res) => {\r\n    i18nResolver = res;\r\n});\r\n\r\n/** @type {import('i18next').ThirdPartyModule} */\r\nexport const initLitI18n = {\r\n    type: '3rdParty',\r\n\r\n    /**\r\n     * initialize the i18next instance to use\r\n     * @param {import('i18next').i18n} i18nextInstance to use\r\n     */\r\n    init(i18nextInstance) {\r\n        setI18n(i18nextInstance);\r\n    },\r\n};\r\n\r\n/**\r\n * Sets the i18next instance to use for the translations.\r\n * Favor using the plugin\r\n * @example\r\n * ```js\r\n * i18next.use(initLitI18n)\r\n * ```\r\n * @param {import('i18next').i18n} i18nextInstance\r\n */\r\nexport const setI18n = (i18nextInstance) => {\r\n    i18n = i18nextInstance;\r\n    i18nResolver(i18n);\r\n};\r\n\r\n/**\r\n * Used to keep track of Parts that need to be updated should the language change.\r\n * @type {Map<TranslateBase, { keys?: string|string[]; options?: {}; }>}\r\n */\r\nexport const registry = new Map();\r\n\r\n/**\r\n * Removes parts that are no longer connected.\r\n * Called internally on a timer but can also be called manually.\r\n */\r\nexport const registryCleanup = () => {\r\n    registry.forEach((details, part) => {\r\n        if (part.isConnected === false || isConnected(part) === false) {\r\n            registry.delete(part);\r\n        }\r\n    });\r\n};\r\n\r\n/** lit-html does not seem to fire life cycle hook for part disconnected, we need to record and manage parts ourselves. */\r\nsetInterval(registryCleanup, 10000);\r\n\r\nlet initialized = false;\r\n\r\n/** Iterates all registered translate directives re-evaluating the translations */\r\nconst updateAll = () => {\r\n    registry.forEach((details, part) => {\r\n        if (part.isConnected && isConnected(part)) {\r\n            const translation = translateAndInit(details.keys, details.options);\r\n            part.setValue(translation);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Lazily sets up i18next. Incase this library is loaded before i18next has been loaded.\r\n * This defers i18next setup until the first translation is requested.\r\n * @param {string|string[]} [keys]\r\n * @param {any} [opts]\r\n * @returns {string}\r\n */\r\nfunction translateAndInit(keys, opts) {\r\n    if (!i18n) {\r\n        return '';\r\n    }\r\n\r\n    if (initialized === false) {\r\n        /** Handle language changes */\r\n        i18n.on('languageChanged', updateAll);\r\n        // @ts-ignore\r\n        i18n.store.on('added', updateAll);\r\n        initialized = true;\r\n    }\r\n\r\n    const translation = i18n.t(keys, opts);\r\n\r\n    if (typeof translation === 'string') {\r\n        return translation;\r\n    }\r\n    // returnObjects not supported https://www.i18next.com/translation-function/objects-and-arrays#objects\r\n    return '';\r\n}\r\n\r\n/**\r\n * @param {TranslateBase} translateDirective\r\n * @returns {boolean}\r\n */\r\nconst isConnected = (translateDirective) => {\r\n    // eslint-disable-next-line prefer-destructuring\r\n    const part = /** @type {import('lit-html/directive.js').Part} */ (translateDirective.part);\r\n    if (part.type === PartType.ATTRIBUTE) return part.element.isConnected;\r\n    if (part.type === PartType.CHILD) return part.parentNode ? part.parentNode.isConnected : false;\r\n    if (part.type === PartType.PROPERTY) return part.element.isConnected;\r\n    if (part.type === PartType.BOOLEAN_ATTRIBUTE) return part.element.isConnected;\r\n    if (part.type === PartType.EVENT) return part.element.isConnected;\r\n    if (part.type === PartType.ELEMENT) return part.element.isConnected;\r\n    throw new Error('Unsupported Part');\r\n};\r\n\r\n/** */\r\nclass TranslateBase extends AsyncDirective {\r\n    /** @abstract */\r\n    render() {}\r\n\r\n    /** @param {import('lit-html/directive.js').PartInfo} part */\r\n    constructor(part) {\r\n        super(part);\r\n\r\n        this.value = '';\r\n        /** @type {import('lit-html/directive.js').PartInfo} */\r\n        this.part = part;\r\n    }\r\n\r\n    /**\r\n     * @param {string | string[]} [keys] - translation key\r\n     * @param {?any} [options] - i18next translation options\r\n     * @returns {string|Symbol} translated string\r\n     */\r\n    translate(keys, options) {\r\n        let opts = options;\r\n        registry.set(this, { keys, options: opts });\r\n\r\n        if (typeof options === 'function') {\r\n            opts = options();\r\n        }\r\n\r\n        const translation = translateAndInit(keys, opts);\r\n\r\n        if (this.isConnected === false || translation === undefined || this.value === translation) {\r\n            return noChange;\r\n        }\r\n\r\n        return translation;\r\n    }\r\n\r\n    /** clean up the registry */\r\n    disconnected() {\r\n        registry.delete(this);\r\n    }\r\n}\r\n\r\n/** */\r\nclass Translate extends TranslateBase {\r\n    /**\r\n     * @param {string | string[]} [keys] - translation key\r\n     * @param {any} [options] - i18next translation options\r\n     * @returns {string|Symbol} translated string\r\n     */\r\n    render(keys, options) {\r\n        i18Provider?.then(() => {\r\n            this.setValue(this.translate(keys, options));\r\n        });\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/** */\r\nclass TranslateWhen extends TranslateBase {\r\n    /**\r\n     * @param {Promise} [promise] to wait for\r\n     * @param {string | string[]} [keys] - translation key\r\n     * @param {any} [options] - i18next translation options\r\n     * @returns {string|Symbol} translated string\r\n     */\r\n    render(promise, keys, options) {\r\n        promise?.then(() => {\r\n            this.setValue(this.translate(keys, options));\r\n        });\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * The translate directive\r\n * @example\r\n * ```js\r\n * import { translate as t, i18next, html, render } from 'lit-i18n/src/lit-i18n.js';\r\n * i18next.init({...i18next config...});\r\n * class MyElement extends HTMLElement {\r\n *     connectedCallback() {\r\n *         this.person = { name: 'Fred', age: 23, male: true };\r\n *         render(this.renderTemplate, this);\r\n *     }\r\n *     get renderTemplate() {\r\n *         return html`\r\n *             <span class=\"basic\">${t('introduceself', { name: this.person.name })}</span>\r\n *             <div class=\"title\" title=\"${t('divtitle')}\">Div with translated title</div>\r\n *             <div class=\"title-interpolation\" title=\"${t('whatishow', { what: 'i18next', how: 'great' })}\"></div>\r\n *             <span class=\"person\">${t('datamodel', { person: this.person })}</span>\r\n *             <input class=\"placeholder\" type=\"text\" placeholder=\"${t('entername')}\" />\r\n *         `;\r\n *     }\r\n * }\r\n * ```\r\n */\r\nexport const translate = directive(Translate);\r\n\r\n/**\r\n * @deprecated as of 4.0.0 use `translate` which already guarantees i18next is initialized\r\n * Can be used like translate but it also takes a Promise. This can be used if you can't guarantee if the i18next resource bundle is loaded.\r\n * @example\r\n * ```js\r\n * import { translateWhen } from 'lit-i18n/src/lit-i18n.js';\r\n * const initializeI18next = i18next.use(someBackend).init(....);\r\n * const translateDirective = (keys, options) => translateWhen(initializeI18next, keys, options);\r\n * // Now you can use translateDirective in your lit-html templates.\r\n * html`<div>${translateDirective('some.key')}</div>`\r\n * ```\r\n */\r\nexport const translateWhen = directive(TranslateWhen);\r\n","import 'dayjs/locale/hu'\nimport 'dayjs/locale/en'\n\nimport dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat' // ES 2015\nimport localeData from 'dayjs/plugin/localeData'\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat'\nimport weekday from 'dayjs/plugin/weekday'\nimport i18next, { t } from 'i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { initLitI18n, translate } from 'lit-i18n'\n\nimport en from './locales/en.json'\nimport hu from './locales/hu.json'\n\ndayjs.extend(localeData)\ndayjs.extend(weekday)\ndayjs.extend(LocalizedFormat)\ndayjs.extend(customParseFormat)\n\nconst DEFAULT_LOCALE = 'hu'\n\nconst getDefaultLang = () => {\n  let lang =\n    document.documentElement.lang || navigator.language || DEFAULT_LOCALE\n  lang = lang.slice(0, 2)\n  return lang\n}\n\ni18next\n  .use(LanguageDetector)\n  .use(initLitI18n)\n  .init({\n    fallbackLng: 'hu',\n    interpolation: {\n      escapeValue: false,\n    },\n    resources: {\n      en: {\n        translation: {\n          ...en,\n        },\n      },\n      hu: {\n        translation: {\n          ...hu,\n        },\n      },\n    },\n  })\n\ndayjs.locale(getDefaultLang())\ni18next.changeLanguage(getDefaultLang())\n\nconst documentElementObserver = new MutationObserver(update)\ndocumentElementObserver.observe(document.documentElement, {\n  attributes: true,\n  attributeFilter: ['dir', 'lang'],\n})\n\nexport function update() {\n  const lang = getDefaultLang()\n\n  dayjs.locale(lang)\n  i18next.changeLanguage(lang)\n}\n\n/**\n * Detects whether a locale prefers 12-hour or 24-hour time format.\n * Uses dayjs locale data to determine the preference.\n * @param locale - The locale to check (e.g., 'en', 'hu', 'en-US', 'hu-HU')\n * @returns '12h' for 12-hour format, '24h' for 24-hour format\n */\nexport function getTimeFormatPreference(locale: string): '12h' | '24h' {\n  try {\n    // Set the locale temporarily to check its format\n    const currentLocale = dayjs.locale()\n    dayjs.locale(locale)\n    const dayjsLocale = dayjs.localeData()\n    const longTimeFormat = dayjsLocale.longDateFormat('LT')\n\n    // Restore original locale\n    dayjs.locale(currentLocale)\n\n    // If the locale has a defined LT format, check if it contains AM/PM indicators\n    if (longTimeFormat && longTimeFormat !== 'LT') {\n      // Check if the format contains AM/PM indicators (A or a)\n      if (longTimeFormat.includes('A') || longTimeFormat.includes('a')) {\n        return '12h'\n      }\n\n      // Check if the format uses 24-hour (H:mm) vs 12-hour (h:mm)\n      if (longTimeFormat.includes('H:mm') || longTimeFormat.includes('HH:mm')) {\n        return '24h'\n      }\n\n      if (longTimeFormat.includes('h:mm')) {\n        return '12h'\n      }\n    }\n\n    // If no specific format is found, fall back to common patterns\n    const localeLower = locale.toLowerCase()\n    if (\n      localeLower.startsWith('en') ||\n      localeLower.startsWith('us') ||\n      localeLower.startsWith('ca') ||\n      localeLower.startsWith('au') ||\n      localeLower.startsWith('nz') ||\n      localeLower.startsWith('ph') ||\n      localeLower.startsWith('in') ||\n      localeLower.startsWith('pk') ||\n      localeLower.startsWith('bd') ||\n      localeLower.startsWith('lk') ||\n      localeLower.startsWith('np') ||\n      localeLower.startsWith('mm') ||\n      localeLower.startsWith('my') ||\n      localeLower.startsWith('sg')\n    ) {\n      return '12h'\n    }\n\n    // Most other locales use 24-hour format\n    return '24h'\n  } catch (error) {\n    // If locale detection fails, fall back to common patterns\n    const localeLower = locale.toLowerCase()\n    if (\n      localeLower.startsWith('en') ||\n      localeLower.startsWith('us') ||\n      localeLower.startsWith('ca') ||\n      localeLower.startsWith('au') ||\n      localeLower.startsWith('nz') ||\n      localeLower.startsWith('ph') ||\n      localeLower.startsWith('in') ||\n      localeLower.startsWith('pk') ||\n      localeLower.startsWith('bd') ||\n      localeLower.startsWith('lk') ||\n      localeLower.startsWith('np') ||\n      localeLower.startsWith('mm') ||\n      localeLower.startsWith('my') ||\n      localeLower.startsWith('sg')\n    ) {\n      return '12h'\n    }\n\n    // Most other locales use 24-hour format\n    return '24h'\n  }\n}\n\nexport { i18next, t, translate }\n","import { clsx } from 'clsx'\nimport { PropertyValueMap, TemplateResult, unsafeCSS } from 'lit'\nimport { property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\n\nimport { CommonSize, HeadingLevel, LabelPlacement } from '@/dap-design-system'\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { t } from '@/localization/localization'\n\nimport styles from './accordion.scss?inline'\n\nexport type AccordionVariant =\n  | 'default'\n  | 'collapsed'\n  | 'clean'\n  | 'clean-collapsed'\n\nexport interface AccordionEventDetail {\n  open: boolean\n  item: AccordionBaseElement\n}\n\nexport type AccordionOpenedEvent = CustomEvent<AccordionEventDetail>\nexport type AccordionClosedEvent = CustomEvent<AccordionEventDetail>\n\nlet accordionCounter = 0\n\nexport class AccordionBaseElement extends DdsElement {\n  static readonly styles = unsafeCSS(styles)\n\n  private readonly accordionId: string\n  private readonly buttonId: string\n  private readonly contentId: string\n\n  /** The size of the accordion\n   * @type { 'sm' | 'lg' }\n   */\n  @property({ type: String }) size: CommonSize = 'sm'\n\n  /** The heading level of the accordion\n   * @type { 1 | 2 | 3 | 4 | 5 | 6 }\n   */\n  @property({ type: Number })\n  headingLevel: HeadingLevel = 4\n\n  /** Whether the accordion is opened */\n  @property({ type: Boolean, reflect: true }) opened = false\n\n  /** Whether the accordion is disabled */\n  @property({ type: Boolean, reflect: true }) disabled = false\n\n  /** Whether the accordion is in loading state */\n  @property({ type: Boolean, reflect: true }) loading = false\n\n  /** The heading text of the accordion, this will be used as the aria label of the heading also if ariaLabel is not provided */\n  @property({ type: String }) heading?: string\n\n  /** The loading aria label of the accordion */\n  @property({ type: String }) loadingAriaLabel?: string\n\n  /** The location of the icon\n   * @type { 'left' | 'right' }\n   */\n  @property({ type: String }) iconLocation: LabelPlacement = 'right'\n\n  /** The variant of the accordion\n   * @type { 'default' | 'collapsed' | 'clean' | 'clean-collapsed' }\n   */\n  @property({ type: String }) variant: AccordionVariant = 'default'\n\n  /** Whether this is the last item in an accordion group */\n  @property({ type: Boolean }) lastItem = false\n\n  /** ID of element that describes the accordion */\n  @property({ type: String, attribute: 'aria-describedby' })\n  ariaDescribedBy?: string\n\n  constructor() {\n    super()\n    accordionCounter++\n    this.accordionId = `accordion-${accordionCounter}`\n    this.buttonId = `${this.accordionId}-button`\n    this.contentId = `${this.accordionId}-content`\n  }\n\n  headingRender() {\n    return html`<div>${this.heading}</div>`\n  }\n\n  contentRender() {\n    return html`<div></div>`\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n  }\n\n  validateProperties(): void {\n    if (this.headingLevel < 1 || this.headingLevel > 6) {\n      console.warn('headingLevel must be between 1 and 6')\n    }\n\n    if (\n      !['default', 'collapsed', 'clean', 'clean-collapsed'].includes(\n        this.variant,\n      )\n    ) {\n      console.warn('Invalid accordion variant. Using default.')\n    }\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n    this.validateProperties()\n  }\n\n  private onChange(): void {\n    try {\n      if (this.opened) {\n        this.emit('dds-opened', {\n          open: true,\n          item: this,\n        } as AccordionEventDetail)\n      } else {\n        this.emit('dds-closed', {\n          open: false,\n          item: this,\n        } as AccordionEventDetail)\n      }\n    } catch (error) {\n      console.error('Error emitting accordion event:', error)\n    }\n  }\n\n  private toggle(): void {\n    if (this.disabled || this.loading) {\n      return\n    }\n\n    this.opened = !this.opened\n    this.onChange()\n  }\n\n  private handleKeyDown(event: KeyboardEvent): void {\n    if (this.disabled || this.loading) {\n      return\n    }\n\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      this.toggle()\n    }\n  }\n\n  private handleClick(event: Event): void {\n    if (this.disabled || this.loading) {\n      event.preventDefault()\n      return\n    }\n\n    this.toggle()\n  }\n\n  private renderButtons() {\n    return html`\n      <button\n        class=\"accordion__button\"\n        type=\"button\"\n        part=\"button\"\n        id=\"${this.buttonId}\"\n        aria-controls=\"${this.contentId}\"\n        aria-expanded=\"${this.opened}\"\n        aria-disabled=\"${this.disabled}\"\n        aria-label=${ifDefined(this.ariaLabel ?? this.heading)}\n        aria-describedby=\"${ifDefined(this.ariaDescribedBy)}\"\n        ?disabled=\"${this.disabled}\"\n        @click=\"${this.handleClick}\"\n        @keydown=\"${this.handleKeyDown}\">\n        ${this.loading\n          ? html`<span\n              class=\"accordion__loading\"\n              aria-label=\"${this.loadingAriaLabel ?? t('loading')}\">\n              <dap-ds-icon-loading-spinner\n                size=\"16\"></dap-ds-icon-loading-spinner>\n            </span>`\n          : html`<span\n              class=\"accordion__icon-wrapper\"\n              aria-hidden=\"true\"\n              part=\"icon-wrapper\">\n              <slot name=\"icon-opened\" class=\"accordion__icon-opened\">\n                <dap-ds-icon\n                  exportparts=\"icon:open-icon, base:open-icon-base\"\n                  size=\"${this.size}\"\n                  name=\"arrow-up-s-line\"\n                  class=\"open-icon\"></dap-ds-icon>\n              </slot>\n              <slot name=\"icon-closed\" class=\"accordion__icon-closed\">\n                <dap-ds-icon\n                  exportparts=\"icon:close-icon, base:close-icon-base\"\n                  size=\"${this.size}\"\n                  name=\"arrow-down-s-line\"\n                  class=\"close-icon\"></dap-ds-icon>\n              </slot>\n            </span>`}\n        <span part=\"heading-text\" class=\"accordion__heading-text\">\n          <slot name=\"heading\"> ${this.headingRender()} </slot>\n        </span>\n      </button>\n    `\n  }\n\n  private renderContent() {\n    return html`\n      <div\n        part=\"content\"\n        class=\"accordion__content\"\n        id=\"${this.contentId}\"\n        aria-labelledby=\"${this.buttonId}\"\n        role=\"region\"\n        aria-hidden=\"${!this.opened}\">\n        <div part=\"content-container\" class=\"accordion-content__container\">\n          <slot></slot>\n          ${this.contentRender()}\n        </div>\n      </div>\n    `\n  }\n\n  private renderHeading(): TemplateResult {\n    return html`\n    <div class=\"accordion__heading\" part=\"heading\">\n      <${unsafeStatic(`h${this.headingLevel}`)}\n       class=\"accordion__heading-content\">\n        ${this.renderButtons()}\n      </${unsafeStatic(`h${this.headingLevel}`)}>\n  </div>\n    `\n  }\n\n  renderAccordion() {\n    return html`\n      <div\n        part=\"base\"\n        class=${clsx('accordion', {\n          'accordion--opened': this.opened,\n          'accordion--disabled': this.disabled,\n          'accordion--loading': this.loading,\n          'accordion--sm': this.size === 'sm',\n          'accordion--lg': this.size === 'lg',\n          'accordion--icon-left': this.iconLocation === 'left',\n          'accordion--icon-right': this.iconLocation === 'right',\n          [`accordion--${this.variant}`]: this.variant,\n          'accordion--last-item': this.lastItem,\n        })}>\n        ${this.renderHeading()} ${this.renderContent()}\n      </div>\n    `\n  }\n}\n","import { customElement } from 'lit/decorators.js'\n\nimport { AccordionBaseElement } from './accordion-base-element'\n\n/**\n * `dap-ds-accordion` is a custom accordion component.\n * @element dap-ds-accordion\n * @summary An accordion is a vertically stacked list of interactive items that can be expanded or collapsed to reveal or hide content.\n * @title - Accordion\n *\n * @property { 'sm' | 'lg' } size - The size of the accordion. Default is `sm`.\n * @property {string} heading - The heading text of the accordion, this will be used as the aria label of the heading also if ariaLabel is not provided\n * @property { 1 | 2 | 3 | 4 | 5 | 6 } headingLevel - The heading level of the accordion. Default is `4`.\n * @property {boolean} opened - Whether the accordion is opened. Default is `false`.\n * @property { 'left' | 'right' } iconLocation - The location of the icon. Default is `right`.\n * @property { 'default' | 'collapsed' | 'clean' | 'clean-collapsed' } variant - The variant of the accordion.\n * @property {boolean} lastItem - Whether the accordion is the last item.\n * @property {boolean} disabled - Whether the accordion is disabled.\n * @property {boolean} loading - Whether the accordion is in loading state.\n *\n * @event {{ open: boolean, item: AccordionBaseElement }} dds-opened - Event fired when the accordion is opened.\n * @event {{ open: boolean, item: AccordionBaseElement }} dds-closed - Event fired when the accordion is closed.\n *\n * @slot default - The content of the accordion.\n * @slot heading - The heading of the accordion.\n * @slot icon-opened - The icon when the accordion is opened.\n * @slot icon-closed - The icon when the accordion is closed.\n *\n * @csspart base - The main accordion container.\n * @csspart heading - The heading of the accordion.\n * @csspart button - The button of the accordion.\n * @csspart content - The content of the accordion.\n * @csspart content-container - The container of the accordion content.\n * @csspart icon-wrapper - The icon wrapper of the accordion.\n * @csspart open-icon - The icon when the accordion is opened.\n * @csspart open-icon-base - The base of the icon when the accordion is opened.\n * @csspart close-icon - The icon when the accordion is closed.\n * @csspart close-icon-base - The base of the icon when the accordion is closed.\n *\n * @cssproperty --dds-accordion-border-width - The width of the accordion border (default: var(--dds-border-width-base))\n * @cssproperty --dds-accordion-border-style - The style of the accordion border (default: solid)\n * @cssproperty --dds-accordion-border-radius - The border radius of the accordion (default: var(--dds-radius-base))\n * @cssproperty --dds-accordion-border-color - The color of the accordion border (default: var(--dds-border-neutral-divider))\n * @cssproperty --dds-accordion-background-color - The background color of the accordion (default: var(--dds-background-neutral-subtle))\n * @cssproperty --dds-accordion-text-color - The text color of the accordion (default: var(--dds-text-neutral-strong))\n * @cssproperty --dds-accordion-hover-background - The background color when hovering over the accordion (default: var(--dds-background-neutral-base))\n * @cssproperty --dds-accordion-active-background - The background color when the accordion is active (default: var(--dds-background-neutral-medium))\n * @cssproperty --dds-accordion-icon-background - The background color of the accordion icon (default: var(--dds-transparent-black-subtle))\n * @cssproperty --dds-accordion-icon-color - The color of the accordion icon (default: var(--dds-icon-neutral-base))\n * @cssproperty --dds-accordion-icon-hover-background - The background color of the accordion icon when hovered (default: var(--dds-transparent-black-base))\n * @cssproperty --dds-accordion-icon-active-background - The background color of the accordion icon when active (default: var(--dds-transparent-black-strong))\n * @cssproperty --dds-accordion-icon-hover-color - The color of the accordion icon when hovered (default: var(--dds-icon-neutral-strong))\n * @cssproperty --dds-accordion-icon-active-color - The color of the accordion icon when active (default: var(--dds-icon-neutral-strong))\n * @cssproperty --dds-accordion-content-color - The color of the accordion content (default: var(--dds-text-text-neutral))\n * @cssproperty --dds-accordion-transition-duration - The duration of the accordion transitions (default: var(--dds-transition-fast))\n * @cssproperty --dds-accordion-transition-timing - The timing function of the accordion transitions (default: var(--dds-easing-ease-in-out))\n * @cssproperty --dds-accordion-divider-color - The color of the divider between accordion items (default: var(--dds-border-neutral-divider))\n */\n@customElement('dap-ds-accordion')\nexport default class DapDSAccordion extends AccordionBaseElement {\n  render() {\n    return this.renderAccordion()\n  }\n}\n","import clsx from 'clsx'\nimport { PropertyValueMap, unsafeCSS } from 'lit'\nimport {\n  customElement,\n  property,\n  queryAssignedElements,\n} from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport DapDSAccordion from '../accordion/accordion.component'\nimport { AccordionVariant } from '../accordion/accordion-base-element'\nimport styles from './accordion-group.scss?inline'\n\n/**\n * `dap-ds-accordion-group` is a custom accordion group component.\n * @element dap-ds-accordion-group\n * @summary An accordion group is a collection of accordion components.\n * @title - Accordion group\n * @group accordion\n *\n * @slot - The content of the accordion group.\n *\n * @csspart base - The main accordion group container.\n *\n * @cssproperty --dds-accordion-group-spacing - Controls the gap between accordion items (default: var(--dds-spacing-300))\n * @cssproperty --dds-accordion-group-border-color - Controls the border color (default: var(--dds-border-neutral-subtle))\n * @cssproperty --dds-accordion-group-border-width - Controls the border width (default: var(--dds-border-width-base))\n * @cssproperty --dds-accordion-group-border-radius - Controls the border radius (default: var(--dds-radius-base))\n * @cssproperty --dds-accordion-group-background - Controls the background color (default: transparent)\n */\n@customElement('dap-ds-accordion-group')\nexport default class DapDSAccordionGroup extends DdsElement {\n  @queryAssignedElements({ selector: 'dap-ds-accordion' })\n  private readonly accordions!: Array<DapDSAccordion>\n\n  /** Whether to close other accordions when one is opened. */\n  @property({ type: String }) autoClose = 'true'\n\n  /** The variant of the accordion\n   * @type { 'default' | 'collapsed' | 'clean' | 'clean-collapsed' }\n   */\n  @property({ type: String }) variant: AccordionVariant = 'default'\n\n  static readonly styles = unsafeCSS(styles)\n\n  private readonly boundOnAccordionChange = this.onAccordionChange.bind(this)\n  private readonly boundOnSlotChange = this.onSlotChange.bind(this)\n\n  connectedCallback(): void {\n    super.connectedCallback()\n    this.addEventListener('slotchange', this.boundOnSlotChange)\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback()\n    this.removeEventListener('slotchange', this.boundOnSlotChange)\n    this.accordions.forEach(accordion => {\n      accordion.removeEventListener('dds-opened', this.boundOnAccordionChange)\n    })\n  }\n\n  protected firstUpdated(\n    _changedProperties:\n      | PropertyValueMap<DapDSAccordionGroup>\n      | Map<PropertyKey, unknown>,\n  ): void {\n    this.setupAccordions()\n  }\n\n  private onSlotChange(): void {\n    this.setupAccordions()\n  }\n\n  private setupAccordions(): void {\n    this.accordions.forEach((accordion, index) => {\n      accordion.variant = this.variant\n      accordion.lastItem = index === this.accordions.length - 1\n\n      accordion.removeEventListener('dds-opened', this.boundOnAccordionChange)\n      accordion.addEventListener('dds-opened', this.boundOnAccordionChange)\n    })\n  }\n\n  private onAccordionChange(event: CustomEvent): void {\n    const openedAccordion = event.detail.item\n\n    if (this.autoClose === 'true') {\n      this.accordions.forEach(accordion => {\n        if (openedAccordion !== accordion) {\n          accordion.removeAttribute('opened')\n        }\n      })\n    }\n  }\n\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        class=${clsx('accordion-group', `accordion-group--${this.variant}`)}>\n        <slot></slot>\n      </div>\n    `\n  }\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nexport default arrayReduce;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default basePropertyOf;\n","import basePropertyOf from './_basePropertyOf.js';\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nexport default deburrLetter;\n","import deburrLetter from './_deburrLetter.js';\nimport toString from './toString.js';\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nexport default deburr;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nexport default asciiWords;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nexport default hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nexport default unicodeWords;\n","import asciiWords from './_asciiWords.js';\nimport hasUnicodeWord from './_hasUnicodeWord.js';\nimport toString from './toString.js';\nimport unicodeWords from './_unicodeWords.js';\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nexport default words;\n","import arrayReduce from './_arrayReduce.js';\nimport deburr from './deburr.js';\nimport words from './words.js';\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nexport default createCompounder;\n","import createCompounder from './_createCompounder.js';\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nexport default kebabCase;\n","export const anchorClass = 'dds-anchor'\n","export const adoptLightStyles = (element: HTMLElement) => {\n  const global = window\n  const supportsAdoptingStyleSheets =\n    global.ShadowRoot &&\n    (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n    'adoptedStyleSheets' in Document.prototype &&\n    'replace' in CSSStyleSheet.prototype\n\n  const styles = (element.constructor as any).styles\n\n  const myStyleSheet = new CSSStyleSheet()\n  myStyleSheet.replace(styles)\n\n  if (supportsAdoptingStyleSheets) {\n    document.adoptedStyleSheets = [...document.adoptedStyleSheets, myStyleSheet]\n  } else {\n    styles.forEach((s: any) => {\n      const style = document.createElement('style')\n      const nonce = (global as any)['litNonce']\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce)\n      }\n      style.textContent = s.cssText\n      document.head.appendChild(style)\n    })\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\nimport { kebabCase } from 'lodash-es'\n\nimport { anchorClass } from '@/common/const'\nimport { adoptLightStyles } from '@/internal/adopt-light-styles'\nimport { DdsElement } from '@/internal/dds-hu-element'\n\nimport typographyStyles from '../typography/_styles/typography.scss?inline'\nimport { TypographyVariant } from '../typography/typography.component'\nimport styles from './anchor-heading.scss?inline'\n\nexport type HeadingVariant = Extract<\n  TypographyVariant,\n  'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n>\n\n/**\n * `dap-ds-anchor-heading`\n * @summary Anchor heading is a heading with an anchor link.\n * @element dap-ds-anchor-heading\n * @title - Anchor heading\n *\n * @attribute {'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'} variant - The variant of the heading. Default is `h2`. Can be `h1`, `h2`, `h3`, `h4`, `h5`, or `h6`.\n * @attribute {string} label - The label of the heading.\n *\n * @csspart base - The main anchor heading container.\n * @csspart link - The link of the anchor heading. dap-ds-link element.\n * @csspart link-base - The base of the link part.\n * @csspart text - The text of the anchor heading.\n *\n * @cssproperty --dds-anchor-link-color - The color of the anchor link. Default is the primary color.\n * @cssproperty --dds-anchor-link-opacity - The opacity of the anchor link when not hovered. Default is 0.\n * @cssproperty --dds-anchor-link-hover-opacity - The opacity of the anchor link when hovered. Default is 1.\n * @cssproperty --dds-anchor-link-transition - The transition property for the anchor link opacity. Default is 'opacity 0.2s ease-in-out'.\n */\n@customElement('dap-ds-anchor-heading')\nexport default class DapDSAnchorHeading extends DdsElement {\n  @property() variant!: HeadingVariant\n  @property() label!: string\n\n  static readonly styles = [unsafeCSS(styles), unsafeCSS(typographyStyles)]\n\n  createRenderRoot() {\n    adoptLightStyles(this)\n    return this\n  }\n\n  get elementId() {\n    return this.id ? this.id : kebabCase(this.label)\n  }\n\n  get anchorTitle() {\n    return `Link to ${this.label}`\n  }\n\n  render() {\n    return html`\n    <${unsafeStatic(this.variant)}\n      id=${this.elementId}\n      part=\"base\"\n      class=${clsx(anchorClass, { [`typography-${this.variant}`]: this.variant })}\n    >\n      ${this.label}\n      <dap-ds-link\n        part=\"link\"\n        exportparts=\"base: link-base, text: link-text\"\n        class=\"dds-anchor__link\"\n        href=${`#${this.elementId}`}\n        aria-label=${this.anchorTitle}\n        title=${this.anchorTitle}>\n        &#8203;\n      </dap-ds-link>\n    </${unsafeStatic(this.variant)}>\n  `\n  }\n}\n","import clsx from 'clsx'\nimport { nothing, unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { Size } from '@/dap-design-system'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './avatar.scss?inline'\n\nexport type AvatarShape = 'circle' | 'rounded' | 'square'\nexport type AvatarVariant = 'image' | 'initials' | 'icon'\n\n/**\n * `dap-ds-avatar`\n * @summary Avatar component can be used to display user profile images, initials, or icons.\n * @element dap-ds-avatar\n * @title - Avatar\n *\n * @slot icon - The icon to display when variant is 'icon'.\n * @slot fallback - Custom fallback content when image fails to load.\n *\n * @event dds-click - Fired when the avatar is clicked (only when interactive).\n * @event dds-load - Fired when the image loads successfully.\n * @event dds-error - Fired when the image fails to load.\n *\n * @csspart base - The main avatar container.\n * @csspart img - The avatar image.\n * @csspart initials - The initials container.\n * @csspart icon - The icon container.\n * @csspart fallback - The fallback content container.\n * @csspart loading - The loading indicator.\n *\n * @cssproperty --dds-avatar-border-radius - The border radius of the avatar. Default varies by shape.\n * @cssproperty --dds-avatar-background-color - The background color of the avatar. Default is neutral.\n * @cssproperty --dds-avatar-border-width - The width of the avatar's border. Default is 0.\n * @cssproperty --dds-avatar-border-color - The color of the avatar's border. Default is transparent.\n * @cssproperty --dds-avatar-border-style - The style of the avatar's border. Default is solid.\n * @cssproperty --dds-avatar-transition - The transition property for the avatar. Default is 'all 0.2s ease-in-out'.\n * @cssproperty --dds-avatar-text-color - The color of initials text. Default is neutral strong.\n * @cssproperty --dds-avatar-font-size - The font size for initials. Calculated based on size.\n * @cssproperty --dds-avatar-font-weight - The font weight for initials. Default is semibold.\n *\n * @cssproperty --dds-avatar-size-lg - The size of the large avatar. Default is 80px.\n * @cssproperty --dds-avatar-size-md - The size of the medium avatar. Default is 64px.\n * @cssproperty --dds-avatar-size-sm - The size of the small avatar. Default is 48px.\n * @cssproperty --dds-avatar-size-xs - The size of the extra small avatar. Default is 32px.\n * @cssproperty --dds-avatar-size-xxs - The size of the extra extra small avatar. Default is 24px.\n */\n@customElement('dap-ds-avatar')\nexport default class DapDSAvatar extends DdsElement {\n  /** The size of the avatar\n   * @default md\n   * @type { 'xxs' | 'xs' | 'sm' | 'md' | 'lg' }\n   * @example\n   * ```html\n   * <dap-ds-avatar size=\"xxs\">\n   * <dap-ds-avatar size=\"xs\">\n   * <dap-ds-avatar size=\"sm\">\n   * <dap-ds-avatar size=\"md\">\n   * <dap-ds-avatar size=\"lg\">\n   * ```\n   */\n  @property({ reflect: true }) size: Size = 'md'\n  /** The shape of the avatar\n   * @default circle\n   * @type { 'circle' | 'rounded' | 'square' }\n   * @example\n   * ```html\n   * <dap-ds-avatar shape=\"circle\">\n   * <dap-ds-avatar shape=\"rounded\">\n   * <dap-ds-avatar shape=\"square\">\n   * ```\n   */\n  @property({ reflect: true }) shape: AvatarShape = 'circle'\n  /** The variant type of the avatar\n   * @default image\n   * @type { 'image' | 'initials' | 'icon' }\n   * @example\n   * ```html\n   * <dap-ds-avatar variant=\"image\">\n   * <dap-ds-avatar variant=\"initials\">\n   * <dap-ds-avatar variant=\"icon\">\n   * ```\n   */\n  @property({ reflect: true }) variant: AvatarVariant = 'image'\n  /** The source of the avatar image */\n  @property() src: string\n  /** The alt text of the avatar */\n  @property() alt: string\n  /** The initials to display when variant is 'initials' */\n  @property() initials: string\n  /** Accessible label for the avatar */\n  @property() label: string\n  /** Loading state indicator */\n  @property({ type: Boolean }) loading = false\n  /** Whether the avatar is interactive (clickable) */\n  @property({ type: Boolean, reflect: true }) interactive = false\n  /** The width of the avatar. This will override the size */\n  @property({ type: Number }) width: number\n  /** The height of the avatar. This will override the size */\n  @property({ type: Number }) height: number\n\n  @state() private hasImageError = false\n  @state() private isImageLoading = true\n\n  static readonly styles = unsafeCSS(styles)\n\n  private handleImageLoad = () => {\n    this.isImageLoading = false\n    this.hasImageError = false\n    this.emit('dds-load')\n  }\n\n  private handleImageError = () => {\n    this.isImageLoading = false\n    this.hasImageError = true\n    this.emit('dds-error')\n  }\n\n  private handleClick = (event: Event) => {\n    if (this.interactive) {\n      this.emit('dds-click', { originalEvent: event })\n    }\n  }\n\n  private generateInitials(initials?: string): string {\n    if (!initials || !initials.trim()) return ''\n    return initials\n      .trim()\n      .split(' ')\n      .filter(word => word.length > 0)\n      .map(word => word.charAt(0))\n      .join('')\n      .toUpperCase()\n      .slice(0, 2)\n  }\n\n  private mapSizeToSpinnerSize(\n    size: Size,\n  ): 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs' {\n    switch (size) {\n      case 'xxs':\n        return 'xs'\n      case 'xs':\n        return 'sm'\n      case 'sm':\n        return 'md'\n      case 'md':\n        return 'lg'\n      case 'lg':\n        return 'xl'\n      default:\n        return 'lg'\n    }\n  }\n\n  private renderImage() {\n    if (!this.src || this.hasImageError) return nothing\n\n    return html`\n      <img\n        class=${clsx('avatar__img', `avatar__img--${this.size}`)}\n        style=${this.width && this.height\n          ? `width: ${this.width}px; height: ${this.height}px;`\n          : ''}\n        part=\"img\"\n        alt=${ifDefined(this.alt)}\n        src=${this.src}\n        loading=\"lazy\"\n        @load=${this.handleImageLoad}\n        @error=${this.handleImageError} />\n    `\n  }\n\n  private renderInitials() {\n    const displayInitials = this.generateInitials(this.initials)\n    if (!displayInitials) return null\n\n    return html`\n      <div\n        class=${clsx('avatar__initials', `avatar__initials--${this.size}`)}\n        part=\"initials\"\n        aria-label=${ifDefined(this.label || `Avatar for ${this.initials}`)}>\n        ${displayInitials}\n      </div>\n    `\n  }\n\n  private renderIcon() {\n    return html`\n      <div\n        class=${clsx('avatar__icon', `avatar__icon--${this.size}`)}\n        part=\"icon\"\n        aria-label=${ifDefined(this.label || 'Avatar icon')}>\n        <slot name=\"icon\"></slot>\n      </div>\n    `\n  }\n\n  private renderFallback() {\n    return html`\n      <div\n        class=${clsx('avatar__fallback', `avatar__fallback--${this.size}`)}\n        part=\"fallback\"\n        aria-label=${ifDefined(this.label || 'Avatar')}>\n        <slot name=\"fallback\">\n          <dap-ds-icon-user-line></dap-ds-icon-user-line>\n        </slot>\n      </div>\n    `\n  }\n\n  private renderLoading() {\n    if (!this.loading || !this.isImageLoading) return nothing\n\n    return html`\n      <div\n        class=${clsx('avatar__loading', `avatar__loading--${this.size}`)}\n        part=\"loading\"\n        aria-label=${ifDefined(this.label || 'Loading avatar')}>\n        <dap-ds-spinner\n          size=${this.mapSizeToSpinnerSize(this.size)}\n          variant=\"brand\"></dap-ds-spinner>\n      </div>\n    `\n  }\n\n  private renderContent() {\n    if (this.loading && this.isImageLoading && this.variant === 'image') {\n      return this.renderLoading()\n    }\n\n    switch (this.variant) {\n      case 'image':\n        if (this.src && !this.hasImageError) {\n          return this.renderImage()\n        } else if (this.initials) {\n          return this.renderInitials()\n        } else {\n          return this.renderFallback()\n        }\n      case 'initials':\n        return this.renderInitials() || this.renderFallback()\n      case 'icon':\n        return this.renderIcon()\n      default:\n        return this.renderFallback()\n    }\n  }\n\n  render() {\n    const baseClasses = clsx(\n      'avatar',\n      `avatar--${this.size}`,\n      `avatar--${this.shape}`,\n      `avatar--${this.variant}`,\n      {\n        'avatar--interactive': this.interactive,\n        'avatar--loading': this.loading && this.isImageLoading,\n        'avatar--error': this.hasImageError,\n      },\n    )\n\n    return html`\n      <div\n        class=${baseClasses}\n        part=\"base\"\n        role=${ifDefined(this.interactive ? 'button' : undefined)}\n        tabindex=${ifDefined(this.interactive ? 0 : undefined)}\n        @click=${this.handleClick}\n        @keydown=${(e: KeyboardEvent) => {\n          if (this.interactive && (e.key === 'Enter' || e.key === ' ')) {\n            e.preventDefault()\n            this.handleClick(e)\n          }\n        }}>\n        ${this.renderContent()}\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { nothing, unsafeCSS } from 'lit'\nimport {\n  customElement,\n  property,\n  queryAssignedElements,\n} from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DapDSAvatar, Size } from '@/dap-design-system'\nimport { t } from '@/localization/localization'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './avatar-group.scss?inline'\n\nexport type AvatarGroupLayout = 'stack' | 'grid'\n\n/**\n * `dap-ds-avatar-group`\n * @summary Avatar group component displays multiple avatars in an organized layout with overflow management.\n * @element dap-ds-avatar-group\n * @title - Avatar Group\n * @group avatar\n *\n * @slot - The avatars to display in the group.\n *\n * @event dds-overflow-click - Fired when the overflow indicator is clicked.\n *\n * @csspart base - The main container of the avatar group.\n * @csspart avatars - The container for the visible avatars.\n * @csspart overflow - The overflow indicator element.\n *\n * @cssproperty --dds-avatar-group-gap - Gap between avatars in grid layout. Default is 0.\n * @cssproperty --dds-avatar-group-overlap - Overlap amount for stacked layout. Default is -8px.\n * @cssproperty --dds-avatar-group-border-width - Border width for avatars. Default is 2px.\n * @cssproperty --dds-avatar-group-border-color - Border color for avatars. Default is white.\n * @cssproperty --dds-avatar-group-overflow-bg - Background color for overflow indicator.\n * @cssproperty --dds-avatar-group-overflow-color - Text color for overflow indicator.\n * @cssproperty --dds-avatar-group-overflow-border - Border for overflow indicator.\n * @cssproperty --dds-avatar-group-size-lg - Size for large avatars. Default is 80px.\n * @cssproperty --dds-avatar-group-size-md - Size for medium avatars. Default is 64px.\n * @cssproperty --dds-avatar-group-size-sm - Size for small avatars. Default is 48px.\n * @cssproperty --dds-avatar-group-size-xs - Size for extra small avatars. Default is 32px.\n * @cssproperty --dds-avatar-group-size-xxs - Size for extra extra small avatars. Default is 24px.\n */\n@customElement('dap-ds-avatar-group')\nexport default class DapDSAvatarGroup extends DdsElement {\n  @queryAssignedElements({ flatten: true })\n  private avatars!: NodeListOf<DapDSAvatar>\n\n  /** The size of avatars in the group\n   * @default md\n   * @type { 'xxs' | 'xs' | 'sm' | 'md' | 'lg' }\n   * @example\n   * ```html\n   * <dap-ds-avatar-group size=\"xxs\">\n   * <dap-ds-avatar-group size=\"xs\">\n   * <dap-ds-avatar-group size=\"sm\">\n   * <dap-ds-avatar-group size=\"md\">\n   * <dap-ds-avatar-group size=\"lg\">\n   * ```\n   */\n  @property({ reflect: true }) size: Size = 'md'\n\n  /** Layout type for the avatar group\n   * @default stack\n   * @type { 'stack' | 'grid' }\n   * @example\n   * ```html\n   * <dap-ds-avatar-group layout=\"stack\">\n   * <dap-ds-avatar-group layout=\"grid\">\n   * ```\n   */\n  @property({ reflect: true }) layout: AvatarGroupLayout = 'stack'\n\n  /** Maximum number of avatars to show before showing overflow */\n  @property({ type: Number }) max: number = 3\n\n  /** Whether to show the total count in overflow indicator */\n  @property({ type: Boolean, attribute: 'show-total' }) showTotal: boolean =\n    false\n\n  /** Interactive overflow indicator */\n  @property({ type: Boolean, attribute: 'interactive-overflow' })\n  interactiveOverflow: boolean = false\n\n  /** Accessible label for the avatar group */\n  @property() label: string\n\n  /** Accessible label for the overflow indicator */\n  @property({ attribute: 'overflow-label' }) overflowLabel: string\n\n  static readonly styles = unsafeCSS(styles)\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.updateComplete.then(() => {\n      this.styleSlottedAvatars()\n    })\n  }\n\n  firstUpdated() {\n    this.styleSlottedAvatars()\n\n    const slot = this.shadowRoot?.querySelector('slot')\n    if (slot) {\n      slot.addEventListener('slotchange', () => {\n        this.styleSlottedAvatars()\n        this.requestUpdate()\n      })\n    }\n  }\n\n  updated(changedProperties: Map<string | number | symbol, unknown>) {\n    super.updated(changedProperties)\n\n    if (\n      changedProperties.has('layout') ||\n      changedProperties.has('size') ||\n      changedProperties.has('max')\n    ) {\n      this.styleSlottedAvatars()\n    }\n  }\n\n  private handleOverflowClick = (event: Event) => {\n    if (this.interactiveOverflow) {\n      this.emit('dds-overflow-click', { originalEvent: event })\n    }\n  }\n\n  private renderOverflowIndicator(hiddenCount: number, totalCount: number) {\n    if (hiddenCount <= 0) return nothing\n\n    const displayText = this.showTotal\n      ? `+${totalCount - this.max}`\n      : `+${hiddenCount}`\n    const ariaLabel =\n      this.overflowLabel ||\n      t('avatar-group.overflow-label', {\n        count: hiddenCount,\n      })\n\n    return html`\n      <div\n        part=\"overflow\"\n        class=${clsx(\n          'avatar-group__overflow',\n          `avatar-group__overflow--${this.size}`,\n          {\n            'avatar-group__overflow--interactive': this.interactiveOverflow,\n          },\n        )}\n        role=${ifDefined(this.interactiveOverflow ? 'button' : undefined)}\n        tabindex=${ifDefined(this.interactiveOverflow ? 0 : undefined)}\n        aria-label=${ariaLabel}\n        @click=${this.handleOverflowClick}\n        @keydown=${(e: KeyboardEvent) => {\n          if (\n            this.interactiveOverflow &&\n            (e.key === 'Enter' || e.key === ' ')\n          ) {\n            e.preventDefault()\n            this.handleOverflowClick(e)\n          }\n        }}>\n        ${displayText}\n      </div>\n    `\n  }\n\n  private styleSlottedAvatars() {\n    this.avatars.forEach((avatar, index) => {\n      avatar.setAttribute('size', this.size)\n\n      if (this.layout === 'stack') {\n        avatar.style.setProperty(\n          '--dds-avatar-border-width',\n          'var(--dds-avatar-group-border-width)',\n        )\n        avatar.style.setProperty(\n          '--dds-avatar-border-color',\n          'var(--dds-avatar-group-border-color)',\n        )\n        avatar.style.zIndex = String(this.avatars.length - index)\n\n        if (index > 0) {\n          avatar.style.marginLeft = 'var(--dds-avatar-group-overlap)'\n        } else {\n          avatar.style.marginLeft = ''\n        }\n      } else {\n        // Reset margins for grid layout\n        avatar.style.marginLeft = ''\n        avatar.style.zIndex = ''\n      }\n\n      if (index >= this.max) {\n        avatar.style.display = 'none'\n      } else {\n        avatar.style.display = ''\n      }\n    })\n  }\n\n  render() {\n    const totalCount = this.avatars.length\n    const hiddenCount = Math.max(0, totalCount - this.max)\n\n    const baseClasses = clsx(\n      'avatar-group',\n      `avatar-group--${this.layout}`,\n      `avatar-group--${this.size}`,\n    )\n\n    return html`\n      <div\n        part=\"base\"\n        class=${baseClasses}\n        role=\"group\"\n        aria-label=${ifDefined(\n          this.label ||\n            `Group of ${totalCount} avatar${totalCount !== 1 ? 's' : ''}`,\n        )}>\n        <div part=\"avatars\" class=\"avatar-group__avatars\">\n          <slot></slot>\n        </div>\n        ${this.renderOverflowIndicator(hiddenCount, totalCount)}\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './badge.scss?inline'\n\nexport type BadgeType =\n  | 'neutral'\n  | 'brand'\n  | 'info'\n  | 'positive'\n  | 'warning'\n  | 'negative'\n\nexport type BadgeSize = 'sm' | 'lg'\n\n/**\n * `dap-ds-badge`\n * @summary A badge is a small status descriptor for UI elements.\n * @element dap-ds-badge\n * @title - Badge\n *\n * @slot - The content of the badge.\n * @slot icon - The icon of the badge.\n *\n * @csspart base - The main container of the badge.\n * @csspart icon - The icon of the badge.\n * @csspart content - The content of the badge.\n * @csspart icon-base - The base of the icon.\n *\n * @cssproperty --dds-badge-border-width - The width of the badge's border. Default is the design system's base border width.\n * @cssproperty --dds-badge-border-style - The style of the badge's border. Default is solid.\n * @cssproperty --dds-badge-border-radius - The border radius of the badge. Default is the design system's base radius.\n * @cssproperty --dds-badge-font-weight - The font weight of the badge text. Default is bold.\n * @cssproperty --dds-badge-line-height - The line height of the badge text. Default is 1.2.\n * @cssproperty --dds-badge-transition - The transition property for the badge. Default is 'all 0.2s ease-in-out'.\n *\n * @cssproperty --dds-badge-padding-sm - The padding of the small badge. Default is the design system's spacing-100 and spacing-200.\n * @cssproperty --dds-badge-padding-lg - The padding of the large badge. Default is the design system's spacing-100 and spacing-300.\n * @cssproperty --dds-badge-font-size-sm - The font size of the small badge. Default is the design system's font-xs.\n * @cssproperty --dds-badge-font-size-lg - The font size of the large badge. Default is the design system's font-sm.\n *\n * @cssproperty --dds-badge-neutral-border-color - The border color of the neutral badge. Default is the design system's border-neutral-base.\n * @cssproperty --dds-badge-neutral-background - The background color of the neutral badge. Default is the design system's background-neutral-medium.\n * @cssproperty --dds-badge-neutral-color - The text color of the neutral badge. Default is the design system's text-neutral-subtle.\n *\n * @cssproperty --dds-badge-brand-border-color - The border color of the brand badge. Default is the design system's border-brand-base.\n * @cssproperty --dds-badge-brand-background - The background color of the brand badge. Default is the design system's background-brand-medium.\n * @cssproperty --dds-badge-brand-color - The text color of the brand badge. Default is the design system's text-brand-subtle.\n *\n * @cssproperty --dds-badge-info-border-color - The border color of the info badge. Default is the design system's border-informative-base.\n * @cssproperty --dds-badge-info-background - The background color of the info badge. Default is the design system's background-informative-medium.\n * @cssproperty --dds-badge-info-color - The text color of the info badge. Default is the design system's text-informative-subtle.\n *\n * @cssproperty --dds-badge-positive-border-color - The border color of the positive badge. Default is the design system's border-positive-base.\n * @cssproperty --dds-badge-positive-background - The background color of the positive badge. Default is the design system's background-positive-medium.\n * @cssproperty --dds-badge-positive-color - The text color of the positive badge. Default is the design system's text-positive-subtle.\n *\n * @cssproperty --dds-badge-warning-border-color - The border color of the warning badge. Default is the design system's border-warning-subtle.\n * @cssproperty --dds-badge-warning-background - The background color of the warning badge. Default is the design system's background-warning-medium.\n * @cssproperty --dds-badge-warning-color - The text color of the warning badge. Default is the design system's text-warning-subtle.\n *\n * @cssproperty --dds-badge-negative-border-color - The border color of the negative badge. Default is the design system's border-negative-base.\n * @cssproperty --dds-badge-negative-background - The background color of the negative badge. Default is the design system's background-negative-medium.\n * @cssproperty --dds-badge-negative-color - The text color of the negative badge. Default is the design system's text-negative-subtle.\n */\n@customElement('dap-ds-badge')\nexport default class DapDSBadge extends DdsElement {\n  /** The type of the badge\n   * @type { 'neutral' | 'brand' | 'info' | 'positive' | 'warning' | 'negative' }\n   */\n  @property() type: BadgeType = 'neutral'\n\n  /** The size of the badge\n   * @type { 'sm' | 'lg' }\n   */\n  @property() size: BadgeSize = 'sm'\n\n  /** The icon of the badge, this is a name of a built in icon */\n  @property() icon?: string\n\n  /** Whether the badge represents dynamic content that should announce changes */\n  @property({ type: Boolean }) live = false\n\n  private _hasSlottedIcon = false\n  private _cachedIconSize = 12\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n    this.setAccessibilityAttributes()\n\n    this._cachedIconSize = this.getIconSize(this.size)\n    this.setupSlotListeners()\n    this.updateIconSlot()\n  }\n\n  protected updated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.updated(_changedProperties)\n\n    if (_changedProperties.has('size')) {\n      this._cachedIconSize = this.getIconSize(this.size)\n      this.updateIconSlot()\n    }\n\n    if (_changedProperties.has('live')) {\n      this.setAccessibilityAttributes()\n    }\n\n    if (_changedProperties.has('icon')) {\n      this.validateIcon()\n    }\n  }\n\n  private setAccessibilityAttributes(): void {\n    if (this.live) {\n      this.setAttribute('role', 'status')\n      this.setAttribute('aria-live', 'polite')\n    } else {\n      this.setAttribute('role', 'img')\n      this.removeAttribute('aria-live')\n    }\n  }\n\n  private validateIcon(): void {\n    if (this.icon && typeof this.icon === 'string' && this.icon.trim() === '') {\n      console.warn('Badge: Empty icon name provided')\n    }\n  }\n\n  private setupSlotListeners(): void {\n    try {\n      if (!this.shadowRoot) return\n\n      const iconSlot = this.shadowRoot.querySelector(\n        'slot[name=\"icon\"]',\n      ) as HTMLSlotElement\n\n      if (!iconSlot) return\n\n      iconSlot.addEventListener('slotchange', () => {\n        this.updateIconSlot()\n        this.requestUpdate()\n      })\n    } catch (error) {\n      console.warn('Failed to setup slot listeners:', error)\n    }\n  }\n\n  private updateIconSlot(): void {\n    try {\n      if (!this.shadowRoot) return\n\n      const iconSlot = this.shadowRoot.querySelector(\n        'slot[name=\"icon\"]',\n      ) as HTMLSlotElement\n\n      if (!iconSlot) {\n        this._hasSlottedIcon = false\n        return\n      }\n\n      const assignedElements = iconSlot.assignedElements()\n      this._hasSlottedIcon = assignedElements.length > 0\n\n      if (assignedElements.length > 0) {\n        assignedElements[0].setAttribute(\n          'staticSize',\n          this._cachedIconSize.toString(),\n        )\n      }\n    } catch (error) {\n      console.warn('Failed to update icon slot:', error)\n      this._hasSlottedIcon = false\n    }\n  }\n\n  private getIconSize(size: BadgeSize): number {\n    return size === 'sm' ? 12 : 16\n  }\n\n  private renderIcon() {\n    if (this.icon) {\n      return html`\n        <dap-ds-icon\n          part=\"icon\"\n          exportparts=\"icon, base:icon-base\"\n          name=\"${this.icon}\"\n          staticSize=${this._cachedIconSize}>\n        </dap-ds-icon>\n      `\n    }\n\n    return html`<slot name=\"icon\" part=\"icon\"></slot>`\n  }\n\n  render() {\n    const hasIcon = this.icon || this._hasSlottedIcon\n\n    return html`\n      <div\n        part=\"base\"\n        class=${clsx(\n          'badge',\n          `badge--${this.type}`,\n          `badge--${this.size}`,\n          hasIcon && 'badge--has-icon',\n        )}>\n        <dap-ds-stack direction=\"row\" spacing=\"100\">\n          ${hasIcon ? this.renderIcon() : nothing}\n          <slot part=\"content\"></slot>\n        </dap-ds-stack>\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport {\n  customElement,\n  property,\n  query,\n  queryAssignedElements,\n} from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\nimport { translate } from 'lit-i18n'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\n\nimport styles from './banner.scss?inline'\n\nexport type BannerTheme = 'clean' | 'normal'\n\nexport type BannerVariant =\n  | 'brand'\n  | 'positive'\n  | 'info'\n  | 'warning'\n  | 'negative'\n\nconst iconNameMap = {\n  brand: 'information-2-fill',\n  info: 'information-fill',\n  positive: 'checkbox-circle-fill',\n  warning: 'alert-fill',\n  negative: 'error-warning-fill',\n}\n\n/**\n * `dap-ds-banner` is a custom banner component.\n * @element dap-ds-banner\n * @summary A banner is a message displayed at the top of the page to provide important information to the user.\n * @title - Banner\n *\n * @event {{ void }} dds-close - Event fired when the banner is closed.\n *\n * @slot - The content of the banner.\n * @slot actions - Actions of banner\n * @slot icon - The icon of the banner.\n *\n * @csspart base - The main banner container.\n * @csspart card-base - The wrapper card container.\n * @csspart icon - The icon of the banner.\n * @csspart icon-element - The icon element of the banner.\n * @csspart icon-base - The base of the icon.\n * @csspart closebutton - The close button of the banner.\n * @csspart close-icon-element - The icon element of the close button.\n * @csspart close-icon-base - The base of the close button icon.\n * @csspart actions - The actions of the banner.\n * @csspart title -  The title of the banner.\n *\n * @cssproperty --dds-banner-gap - The gap between banner elements. Default is the design system's spacing-200.\n * @cssproperty --dds-banner-line-height - The line height of the banner text. Default is the design system's font-line-height-xlarge.\n * @cssproperty --dds-banner-transition - The transition property for the banner. Default is 'all 0.2s ease-in-out'.\n *\n * @cssproperty --dds-banner-brand-background - The background color of the brand banner. Default is the design system's banner-background-brand.\n * @cssproperty --dds-banner-brand-icon-color - The color of the brand banner icon. Default is the design system's banner-icon-brand.\n * @cssproperty --dds-banner-brand-text-color - The text color of the brand banner. Default is the design system's banner-text-brand.\n * @cssproperty --dds-banner-brand-action-color - The color of the brand banner actions. Default is the design system's banner-action-enabled.\n *\n * @cssproperty --dds-banner-info-background - The background color of the info banner. Default is the design system's banner-background-informative.\n * @cssproperty --dds-banner-info-icon-color - The color of the info banner icon. Default is the design system's banner-icon-informative.\n * @cssproperty --dds-banner-info-text-color - The text color of the info banner. Default is the design system's banner-text-informative.\n * @cssproperty --dds-banner-info-action-color - The color of the info banner actions. Default is the design system's banner-action-enabled.\n *\n * @cssproperty --dds-banner-positive-background - The background color of the positive banner. Default is the design system's banner-background-positive.\n * @cssproperty --dds-banner-positive-icon-color - The color of the positive banner icon. Default is the design system's banner-icon-positive.\n * @cssproperty --dds-banner-positive-text-color - The text color of the positive banner. Default is the design system's banner-text-positive.\n * @cssproperty --dds-banner-positive-action-color - The color of the positive banner actions. Default is the design system's banner-action-enabled.\n *\n * @cssproperty --dds-banner-warning-background - The background color of the warning banner. Default is the design system's banner-background-warning.\n * @cssproperty --dds-banner-warning-icon-color - The color of the warning banner icon. Default is the design system's banner-icon-warning.\n * @cssproperty --dds-banner-warning-text-color - The text color of the warning banner. Default is the design system's banner-text-warning.\n * @cssproperty --dds-banner-warning-action-color - The color of the warning banner actions. Default is the design system's banner-action-inverted-enabled.\n *\n * @cssproperty --dds-banner-negative-background - The background color of the negative banner. Default is the design system's banner-background-negative.\n * @cssproperty --dds-banner-negative-icon-color - The color of the negative banner icon. Default is the design system's banner-icon-negative.\n * @cssproperty --dds-banner-negative-text-color - The text color of the negative banner. Default is the design system's banner-text-negative.\n * @cssproperty --dds-banner-negative-action-color - The color of the negative banner actions. Default is the design system's banner-action-inverted-enabled.\n */\n@customElement('dap-ds-banner')\nexport default class DapDSBanner extends DdsElement {\n  /** @ignore */\n  @queryAssignedElements({ slot: 'actions' }) actionSlot: HTMLElement[]\n  /** @ignore */\n  @query('.banner__actions') actionContainer: HTMLElement\n\n  /** The variant of the banner\n   * @type { 'brand' | 'positive' | 'info' | 'warning' | 'negative' }\n   */\n  @property() variant: BannerVariant = 'brand'\n\n  /** Whether the banner is closeable */\n  @property({ type: Boolean }) closeable: boolean\n\n  /** State of the banner. If false banner is hidden */\n  @property({ reflect: true }) opened: string = 'true'\n\n  /** The aria-label for the close button */\n  @property({ type: String })\n  closeButtonLabel = 'close'\n\n  /** The icon of the banner, this is a name of a built icon icon */\n  @property({ type: String }) icon: string\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties:\n      | PropertyValueMap<DapDSBanner>\n      | Map<PropertyKey, unknown>,\n  ): void {\n    if (this.actionSlot?.length) {\n      if (this.actionSlot?.length && this.variant !== 'warning') {\n        this.actionSlot.forEach(element => {\n          element.setAttribute('variant', 'inverted')\n        })\n      } else {\n        this.actionSlot.forEach(element => {\n          element.setAttribute('variant', 'warning')\n        })\n      }\n    }\n\n    if (this.actionSlot && !this.actionSlot.length && this.actionContainer) {\n      this.actionContainer.style.display = 'none'\n    }\n  }\n\n  private onCloseClick() {\n    this.emit('dds-close')\n  }\n\n  render() {\n    const icon = iconNameMap[this.variant]\n\n    if (this.opened === 'false') {\n      return nothing\n    }\n    return html`\n      <dap-ds-card size=\"lg\">\n        <dap-ds-card-content\n          class=${clsx(`banner--${this.variant}`)}\n          part=\"card-base\"\n          spacing=\"none\">\n          <div class=${clsx('banner', `banner--${this.variant}`)} part=\"base\">\n            <div class=\"banner__icon-container\">\n              ${this.icon || icon\n                ? html`<slot part=\"icon\" name=\"icon\">\n                    <dap-ds-icon\n                      part=\"icon\"\n                      exportparts=\"icon:icon-element, base:icon-base\"\n                      class=\"banner__icon\"\n                      aria-hidden=\"true\"\n                      name=\"${this.icon || icon}\">\n                    </dap-ds-icon\n                  ></slot>`\n                : html`<slot name=\"icon\" part=\"icon\"></slot>`}\n            </div>\n            <div>\n              <slot class=\"banner__content\"></slot>\n\n              <div class=\"banner__actions\">\n                <slot name=\"actions\" part=\"actions\"></slot>\n              </div>\n            </div>\n\n            ${this.closeable\n              ? html`\n                  <dap-ds-icon-button\n                    class=\"banner__close\"\n                    part=\"close-button\"\n                    exportparts=\"icon-base:close-icon-element, base:close-icon-base\"\n                    variant=\"inverted\"\n                    clean\n                    size=\"md\"\n                    icon=\"close-line\"\n                    part=\"closebutton\"\n                    @click=\"${this.onCloseClick}\"\n                    aria-label=${this.closeButtonLabel ?? translate('close')}>\n                  </dap-ds-icon-button>\n                `\n              : nothing}\n          </div>\n        </dap-ds-card-content>\n      </dap-ds-card>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { html, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\n\nimport { LinkTarget } from '@/common/types'\nimport { DdsElement } from '@/internal/dds-hu-element.js'\n\nimport styles from './breadcrumb-item.scss?inline'\n\n/**\n * `dap-ds-breadcrumb-item` custom element.\n * @element dap-ds-breadcrumb-item\n * @summary A breadcrumb item is a secondary navigation scheme that reveals the user's location in a website or Web application.\n * @title - Breadcrumb item\n * @group breadcrumb\n *\n * @slot - The content of the breadcrumb item.\n * @slot separator - The separator between breadcrumb items. Default is an arrow-right-s-line icon.\n *\n * @csspart base - The main breadcrumb item container. The li element.\n * @csspart link - The link of the breadcrumb item. The dds-link component.\n * @csspart link-base - The base part of the link part. The dds-link components base part.\n * @csspart item-nolink - The item of the breadcrumb item without a link. The span element.\n * @csspart separator - The separator of the breadcrumb item.\n *\n * @cssproperty --dds-breadcrumb-item-display - The display property of the breadcrumb item. Default is inline-flex.\n * @cssproperty --dds-breadcrumb-item-flex-wrap - The flex-wrap property of the breadcrumb item. Default is nowrap.\n * @cssproperty --dds-breadcrumb-item-align-items - The align-items property of the breadcrumb item. Default is center.\n * @cssproperty --dds-breadcrumb-item-color - The text color of the breadcrumb item. Default is the design system's text-neutral-base.\n * @cssproperty --dds-breadcrumb-item-transition - The transition property for the breadcrumb item. Default is 'all 0.2s ease-in-out'.\n * @cssproperty --dds-breadcrumb-item-gap - The gap between the breadcrumb item and the separator. Default is the design system's spacing-200.\n *\n * @cssproperty --dds-breadcrumb-item-padding - The padding of the breadcrumb item. Default is the design system's spacing-200.\n * @cssproperty --dds-breadcrumb-item-font-size - The font size of the breadcrumb item. Default is the design system's font-sm.\n * @cssproperty --dds-breadcrumb-item-font-weight - The font weight of the breadcrumb item. Default is the design system's font-weight-medium.\n * @cssproperty --dds-breadcrumb-item-font-weight-bold - The bold font weight of the breadcrumb item. Default is the design system's font-weight-bold.\n *\n * @cssproperty --dds-breadcrumb-item-separator-color - The color of the separator. Default is the design system's text-neutral-disabled.\n * @cssproperty --dds-breadcrumb-item-link-color - The color of the link. Default is the design system's link-neutral-enabled.\n * @cssproperty --dds-breadcrumb-item-inverted-color - The text color when inverted. Default is the design system's text-neutral-inverted.\n * @cssproperty --dds-breadcrumb-item-inverted-link-color - The link color when inverted. Default is the design system's text-neutral-inverted.\n */\n@customElement('dap-ds-breadcrumb-item')\nexport default class DapDSBreadcrumbItem extends DdsElement {\n  /** The URL of the breadcrumb item. */\n  @property() href?: string\n  /** The target of the breadcrumb item.\n   * @type {'_blank' | '_self' | '_parent' | '_top'}\n   */\n  @property() target?: LinkTarget\n  /** The rel of the breadcrumb item link. */\n  @property() rel = 'noreferrer noopener'\n  /** Whether the breadcrumb item is disabled. */\n  @property({ type: Boolean }) disabled = false\n  /** The variant of the breadcrumb item.\n   * @type {'normal' | 'inverted'}\n   */\n  @property({ type: String, reflect: true }) variant = 'normal'\n\n  static readonly styles = unsafeCSS(styles)\n\n  render() {\n    return html`\n      <li\n        part=\"base\"\n        class=${clsx('breadcrumb-item', {\n          'breadcrumb-item--inverted': this.variant === 'inverted',\n        })}>\n        ${this.href\n          ? html`\n              <dap-ds-link\n                theme=\"brand\"\n                bold\n                part=\"link\"\n                exportparts=\"base:link-base\"\n                href=${this.href}\n                target=${ifDefined(this.target)}\n                rel=${ifDefined(\n                  this._shouldIncludeRel() ? this.rel : undefined,\n                )}\n                .disabled=${this.disabled}>\n                <slot></slot>\n              </dap-ds-link>\n            `\n          : html`<span part=\"item-nolink\" class=\"breadcrumb-item-nolink\">\n              <slot></slot>\n            </span>`}\n\n        <span\n          part=\"separator\"\n          class=\"breadcrumb-item__separator\"\n          aria-hidden=\"true\"\n          role=\"presentation\">\n          <slot name=\"separator\">\n            <dap-ds-icon name=\"arrow-right-s-line\"></dap-ds-icon>\n          </slot>\n        </span>\n      </li>\n    `\n  }\n\n  private _shouldIncludeRel(): boolean {\n    if (!this.href) return false\n    // Include rel for external links or when target is specified\n    return this.target !== undefined || this.href.startsWith('http')\n  }\n}\n","import clsx from 'clsx'\nimport { html, unsafeCSS } from 'lit'\nimport { customElement, property, query } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\n\nimport DapDSBreadcrumbItem from '../breadcrumb-item/breadcrumb-item.component'\nimport styles from './breadcrumb.scss?inline'\n\n/**\n * `dap-ds-breadcrumb`\n * @summary A breadcrumb is a secondary navigation scheme that reveals the user's location in a website or Web application.\n * @element dap-ds-breadcrumb\n * @title - Breadcrumb\n *\n * @slot - The content of the breadcrumb.\n * @slot separator - The separator between breadcrumb items. Default is '/'.\n *\n * @csspart base - The main breadcrumb container.\n * @csspart separator - The separator of the breadcrumb.\n *\n * @cssproperty --dds-breadcrumb-width - The width of the breadcrumb container. Default is 100%.\n * @cssproperty --dds-breadcrumb-overflow-x - The horizontal overflow behavior of the breadcrumb. Default is auto.\n * @cssproperty --dds-breadcrumb-transition - The transition property for the breadcrumb. Default is 'all 0.2s ease-in-out'.\n *\n * @cssproperty --dds-breadcrumb-list-display - The display property of the breadcrumb list. Default is flex.\n * @cssproperty --dds-breadcrumb-list-flex-wrap - The flex-wrap property of the breadcrumb list. Default is nowrap.\n * @cssproperty --dds-breadcrumb-list-align-items - The align-items property of the breadcrumb list. Default is center.\n * @cssproperty --dds-breadcrumb-list-min-width - The minimum width of the breadcrumb list. Default is max-content.\n */\n@customElement('dap-ds-breadcrumb')\nexport default class DapDSBreadcrumb extends DdsElement {\n  static readonly styles = unsafeCSS(styles)\n  /** @ignore */\n  @query('slot') defaultSlot!: HTMLSlotElement\n  /** @ignore */\n  @query('slot[name=\"separator\"]') separatorSlot!: HTMLSlotElement\n\n  /* Variant of the breadcrumb\n   * @type {'normal' | 'inverted'}\n   */\n  @property({ type: String }) variant = 'normal'\n\n  /** Mobile version of the breadcrumb */\n  @property({ type: Boolean }) mobile = false\n\n  /** The aria-labelledby of the breadcrumb */\n  @property({ type: String, attribute: 'aria-labelledby' })\n  ariaLabelledBy?: string\n\n  private _cachedItems: DapDSBreadcrumbItem[] = []\n  private _debounceTimeout?: number\n\n  private cloneSeparator() {\n    const separator = this.separatorSlot.assignedElements({\n      flatten: true,\n    })[0] as HTMLElement\n\n    const clone = separator.cloneNode(true) as HTMLElement\n    clone.slot = 'separator'\n\n    return clone\n  }\n\n  private handleSlotChange(): void {\n    if (this._debounceTimeout) {\n      clearTimeout(this._debounceTimeout)\n    }\n\n    this._debounceTimeout = window.setTimeout(() => {\n      this._updateBreadcrumbItems()\n    }, 16) // One frame delay for batching\n  }\n\n  private _updateBreadcrumbItems(): void {\n    const items = Array.from(\n      this.defaultSlot.assignedElements({ flatten: true }),\n    ).filter(\n      (el): el is DapDSBreadcrumbItem => el instanceof DapDSBreadcrumbItem,\n    )\n\n    // Check if items have actually changed to avoid unnecessary work\n    const itemsChanged =\n      items.length !== this._cachedItems.length ||\n      items.some((item, index) => item !== this._cachedItems[index])\n\n    if (!itemsChanged) return\n\n    this._cachedItems = items\n\n    items.forEach((item, index) => {\n      const isLast = index === items.length - 1\n\n      if (this.mobile && index !== 0 && !isLast) {\n        item.style.display = 'none'\n        return\n      } else {\n        item.style.display = ''\n      }\n\n      item.toggleAttribute('inverted', this.variant === 'inverted')\n      item.variant = this.variant\n      if (isLast) {\n        item.setAttribute('aria-current', 'page')\n      } else {\n        item.removeAttribute('aria-current')\n      }\n      item.toggleAttribute('disabled', isLast)\n\n      const separator = item.querySelector('[slot=\"separator\"]')\n      if (!isLast && !separator) {\n        item.append(this.cloneSeparator())\n      }\n    })\n  }\n\n  render() {\n    return html`\n      <nav\n        part=\"base\"\n        aria-label=\"${ifDefined(this.ariaLabel) || ''}\"\n        aria-labelledby=\"${ifDefined(this.ariaLabelledBy) || ''}\"\n        class=\"${clsx('breadcrumb')}\">\n        <ol class=\"breadcrumb__list\" part=\"list\">\n          <slot @slotchange=\"${this.handleSlotChange}\"></slot>\n        </ol>\n      </nav>\n      <span hidden aria-hidden=\"true\">\n        <slot name=\"separator\"> <span>/</span> </slot>\n      </span>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { html, LitElement } from 'lit'\nimport { property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\n\nimport { FeedbackType } from '@/components/feedback/feedback'\nimport { CommonSize, Size } from '@/dap-design-system'\n\ntype Constructor<T = Record<string, unknown>> = {\n  new (...args: any[]): T\n  prototype: T\n}\n\nexport interface FeedbackElementInterface {\n  feedbackSize?: CommonSize\n  feedback: string\n  feedbackType?: FeedbackType\n  feedbackSubtle?: boolean\n  feedbackNoMargin?: boolean\n  feedbackId?: string\n  renderFeedback(content?: unknown): unknown\n}\n\nexport function FeedbackMixin<T extends Constructor<LitElement>>(\n  constructor: T,\n): T & Constructor<FeedbackElementInterface> {\n  class FeedbackElement extends constructor {\n    @property() feedbackSize?: Size = 'sm'\n    @property() feedback: string\n    @property() feedbackType: FeedbackType = 'positive'\n    @property({ type: Boolean, reflect: true }) feedbackSubtle = false\n    @property({ type: Boolean }) feedbackNoMargin = false\n    @property() feedbackId?: string\n\n    renderFeedback() {\n      return html`<div\n        part=\"base\"\n        class=${clsx(\n          'feedback',\n          `feedback--${this.feedbackType}`,\n          `feedback--${this.feedbackSize}`,\n          {\n            'feedback--subtle': this.feedbackSubtle,\n            'feedback--no-margin': this.feedbackNoMargin,\n          },\n        )}>\n        <slot name=\"icon\" class=\"feedback__icon\">\n          <dap-ds-icon\n            part=\"icon\"\n            aria-hidden=\"true\"\n            size=\"${ifDefined(this.feedbackSize) as CommonSize}\"\n            name=\"${this._iconType(this.feedbackType)}\">\n          </dap-ds-icon>\n        </slot>\n        <div part=\"text\" class=\"feedback__text\" role=\"alert\" aria-live=\"polite\">\n          <slot></slot>\n        </div>\n      </div> `\n    }\n\n    private _iconType(type: FeedbackType): string {\n      switch (type) {\n        case 'positive':\n          return `checkbox-circle-${this.feedbackSubtle ? 'line' : 'fill'}`\n        case 'negative':\n          return `error-warning-${this.feedbackSubtle ? 'line' : 'fill'}`\n        case 'warning':\n          return `alert-${this.feedbackSubtle ? 'line' : 'fill'}`\n        default:\n          return `information-${this.feedbackSubtle ? 'line' : 'fill'}`\n      }\n    }\n  }\n  return FeedbackElement as Constructor<FeedbackElementInterface> & T\n}\n","import { ReactiveElement } from 'lit'\nimport { property } from 'lit/decorators.js'\n\ntype Constructor<T = Record<string, unknown>> = {\n  new (...args: any[]): T\n  prototype: T\n}\n\ntype DisableableElement = HTMLElement & { disabled?: boolean }\n\nexport interface FocusableElementInterface {\n  disabled: boolean\n  autofocus: boolean\n  focusElement: DisableableElement\n  focus(options?: FocusOptions): void\n  blur(): void\n  click(): void\n}\n\nexport function FocusableMixin<T extends Constructor<ReactiveElement>>(\n  constructor: T,\n): T & Constructor<FocusableElementInterface> {\n  class FocusableElement extends constructor {\n    @property({ type: Boolean, reflect: true })\n    public disabled = false\n    @property({ type: Boolean })\n    public override autofocus = false\n\n    get focusElement(): DisableableElement {\n      throw new Error('Must implement focusElement getter!')\n    }\n\n    public override focus(options?: FocusOptions): void {\n      if (this.disabled || !this.focusElement) {\n        return\n      }\n\n      if (this.focusElement !== this) {\n        this.focusElement.focus(options)\n      } else {\n        HTMLElement.prototype.focus.apply(this, [options])\n      }\n    }\n\n    public override blur(): void {\n      const focusElement = this.focusElement || this\n      if (focusElement !== this) {\n        focusElement.blur()\n      } else {\n        HTMLElement.prototype.blur.apply(this)\n      }\n    }\n\n    public override click(): void {\n      if (this.disabled) {\n        return\n      }\n\n      const focusElement = this.focusElement || this\n      if (focusElement !== this) {\n        focusElement.click()\n      } else {\n        HTMLElement.prototype.click.apply(this)\n      }\n    }\n  }\n\n  return FocusableElement as Constructor<FocusableElementInterface> & T\n}\n","import { PropertyValueMap } from 'lit'\nimport { property } from 'lit/decorators.js'\n\nimport { InputStatus } from '@/common/types'\n\nimport { DdsElement } from '../dds-hu-element'\n\nconst CheckedAttributes = [\n  'value',\n  'checked',\n  'selected',\n  'disabled',\n  'readonly',\n]\n\ntype Constructor<T = Record<string, unknown>> = {\n  new (...args: any[]): T\n  prototype: T\n}\n\nexport interface FormElementInterface {\n  name: string\n  defaultValue?: any\n  form?: string\n  formElement?: HTMLFormElement | null\n  disabled: boolean\n  required: boolean\n  readonly: boolean\n  invalid: boolean\n  value?: any\n  status?: InputStatus\n  internals: ElementInternals\n  validity: ValidityState\n  validationMessage: string\n  willValidate: boolean\n  innerInput: HTMLElement\n  autocomplete: string\n  setValidity(): void\n  checkValidity(): boolean\n  reportValidity(): boolean\n  onInput(event?: InputEvent): void\n  onKeydown(event?: KeyboardEvent): void\n  onBlur(): void\n  onFocus(): void\n  onChange(event?: InputEvent): void\n  handleInvalid(event: Event): void\n}\n\nexport function FormElementMixin<T extends Constructor<DdsElement>>(\n  constructor: T,\n): T & Constructor<FormElementInterface> {\n  class FormElement extends constructor {\n    $input!: HTMLInputElement\n    @property({ reflect: true }) name?: string\n    @property() defaultValue?: any\n    @property({ reflect: true }) form?: string\n    @property({ type: Boolean, reflect: true }) disabled = false\n    @property({ type: Boolean, reflect: true, attribute: true }) required =\n      false\n    @property({ type: Boolean, reflect: true }) readonly = false\n    @property({ type: Boolean }) silent = true\n    @property({ type: Boolean, reflect: true }) invalid = false\n    @property({ reflect: true }) status?: InputStatus\n    @property() autocomplete = 'off'\n\n    @property({ attribute: true, reflect: true }) value?: any\n\n    @property({ attribute: false }) internals!: ElementInternals\n    public formElement: HTMLFormElement | null | undefined = null\n\n    public get innerInput() {\n      return this.$input\n    }\n\n    static get formAssociated() {\n      return true\n    }\n\n    constructor(...args: any[]) {\n      super(...args)\n      this.internals = this.attachInternals()\n    }\n\n    connectedCallback() {\n      super.connectedCallback()\n      this.formElement = this.closest('form')\n      if (!this.defaultValue) {\n        this.defaultValue = this.value\n      }\n    }\n\n    attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n      super.attributeChangedCallback(name, oldValue, newValue)\n      if (CheckedAttributes.includes(name) && newValue !== oldValue) {\n        switch (name) {\n          case 'value':\n            if (this.nodeName !== 'DAP-DS-BUTTON') {\n              this.internals.setFormValue(newValue)\n            }\n            break\n          case 'checked':\n            this.internals.setFormValue(newValue !== null ? 'on' : null)\n        }\n      }\n    }\n\n    formResetCallback() {\n      this.internals.setValidity({})\n      this.internals.setFormValue(this.defaultValue)\n    }\n\n    onInput() {\n      this.emit('dds-input', { value: this.$input.value })\n    }\n\n    onBlur() {\n      this.emit('dds-blur')\n    }\n\n    onFocus() {\n      this.emit('dds-focus')\n    }\n\n    onChange() {\n      this.emit('dds-change', { value: this.$input.value })\n    }\n\n    onKeydown(event: KeyboardEvent) {\n      this.emit('dds-keydown', { value: this.$input.value, event })\n    }\n\n    handleInvalid(event: Event) {\n      if (this.silent) {\n        event.preventDefault()\n      }\n    }\n\n    protected async firstUpdated(\n      _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n    ) {\n      this.$input = this.shadowRoot?.getElementById('input') as HTMLInputElement\n\n      if (this.nodeName !== 'DAP-DS-BUTTON') {\n        this.internals.setFormValue(this.value)\n        this.setValidity()\n      }\n    }\n\n    setValidity() {\n      if (this.$input) {\n        if (!this.$input.checkValidity()) {\n          this.internals.setValidity(\n            this.$input.validity,\n            this.validationMessage,\n            this.$input,\n          )\n        } else {\n          this.internals.setValidity({})\n        }\n      }\n    }\n\n    public get validity() {\n      return this.$input.validity\n    }\n\n    public get validationMessage() {\n      return ' '\n    }\n\n    public get willValidate() {\n      return this.$input.willValidate\n    }\n\n    public checkValidity() {\n      return this.$input.checkValidity()\n    }\n\n    public reportValidity() {\n      return this.$input.reportValidity()\n    }\n  }\n\n  return FormElement as Constructor<FormElementInterface> & T\n}\n","import clsx from 'clsx'\nimport { html, LitElement } from 'lit'\nimport { property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\n\nimport { CommonFormElementSize, PopupPlacement, Size } from '@/common/types'\nimport { t } from '@/localization/localization'\n\ntype Constructor<T = Record<string, unknown>> = {\n  new (...args: any[]): T\n  prototype: T\n}\n\nexport interface LabelableElementInterface {\n  label?: string\n  description?: string\n  tooltip?: string\n  tooltipPlacement: PopupPlacement\n  size: Size\n  required: boolean\n  disabled: boolean\n  optional: boolean\n  optionalLabel: string\n  subtle: boolean\n  tooltipAriaLabel: string\n  renderLabel(id?: string, content?: unknown): unknown\n}\n\nexport const LabelableMixin = <T extends Constructor<LitElement>>(base: T) => {\n  class LabelableElement extends base {\n    @property() label?: string\n    @property() description?: string\n    @property() tooltip?: string\n    @property() tooltipPlacement: PopupPlacement = 'bottom'\n    @property() size: Size = 'sm'\n    @property({ type: Boolean, reflect: true }) optional = false\n    @property() optionalLabel = t('label.optional')\n    @property({ type: Boolean, reflect: true }) subtle = false\n    @property({ type: Boolean, reflect: true }) required = false\n    @property({ type: Boolean, reflect: true }) disabled = false\n    @property({ type: String }) tooltipAriaLabel = t('label.tooltip')\n\n    renderLabel(id?: string, content?: unknown) {\n      return html` <div class=\"label-container\">\n      ${\n        this.label &&\n        html`<dap-ds-form-label\n          part=\"label\"\n          id=${id ?? 'label'}\n          exportparts=\"base: label-base, required: label-required, optional: label-optional\"\n          .size=${this.size}\n          .required=${this.required}\n          .disabled=${this.disabled}\n          .subtle=${this.subtle}\n          .optional=${this.optional}\n          .optionalLabel=${this.optionalLabel}\n          class=${clsx('label')}\n          for=\"input\"\n          label=${ifDefined(this.label)}></dap-ds-form-label>`\n      }\n      </dap-ds-form-label>\n      ${\n        this.tooltip &&\n        html` <dap-ds-tooltip\n          part=\"tooltip\"\n          content=${this.tooltip}\n          mode=\"toggle\"\n          placement=${this.tooltipPlacement}>\n          <dap-ds-icon-button\n            slot=\"trigger\"\n            size=${this.size as 'xs' | 'sm' | 'md' | 'lg'}\n            iconSize=${this.size === 'xs' ? '16' : '22'}\n            clean\n            aria-label=${this.tooltipAriaLabel}>\n            <dap-ds-icon\n              name=\"information-line\"\n              aria-hidden=\"true\"\n              class=\"info-button\"></dap-ds-icon>\n          </dap-ds-icon-button>\n        </dap-ds-tooltip>`\n      }\n    </div>\n    ${\n      this.description &&\n      html`\n        <dap-ds-typography\n          part=\"description\"\n          variant=\"description\"\n          size=${ifDefined(this.size as CommonFormElementSize)}\n          id=\"description\">\n          ${this.description}\n        </dap-ds-typography>\n      `\n    }\n      ${content}`\n    }\n  }\n\n  return LabelableElement as Constructor<LabelableElementInterface> & T\n}\n","export const isReducedMotion = window.matchMedia(\n  '(prefers-reduced-motion: reduce)',\n).matches\n\nexport function isMobileView() {\n  const mobileBreakpoint = getComputedStyle(document.documentElement)\n    .getPropertyValue('--dds-breakpoints-small')\n    .trim()\n\n  const isMobileView = window.matchMedia(\n    `(max-width: ${mobileBreakpoint})`,\n  ).matches\n\n  return isMobileView\n}\n\nexport function setFromParentSize(element: HTMLElement) {\n  const size = element.closest('dap-ds-card')?.getAttribute('size')\n  element.setAttribute('size', size ?? 'sm')\n}\n\nexport function numberRange(start: number, end: number): number[] {\n  return Array.from({ length: end - start + 1 }, (_, i) => start + i)\n}\n\nexport const JSONAttributeParser = (value: string | null) => {\n  let convertedValue = {}\n  try {\n    convertedValue = JSON.parse(value ?? '')\n  } catch (error) {\n    console.error('Incorrect Json string data', {\n      data: value,\n    })\n  }\n\n  return convertedValue\n}\n\nexport function getValidityStateObject(state: Partial<ValidityState>) {\n  return {\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valid: true,\n    valueMissing: false,\n    ...state,\n  }\n}\n","import { LitElement, PropertyValues } from 'lit'\nimport { property } from 'lit/decorators.js'\n\nimport { ElementSpacing, Size } from '@/common/types'\nimport { setFromParentSize } from '@/common/utils'\n\ntype Constructor<T = Record<string, unknown>> = {\n  new (...args: any[]): T\n  prototype: T\n}\n\nexport interface SizedElementInterface {\n  size: Size\n  parentSized: string\n  spacing: ElementSpacing\n}\n\nexport function SizedMixin<T extends Constructor<LitElement>>(\n  constructor: T,\n): T & Constructor<SizedElementInterface> {\n  class SizedElement extends constructor {\n    @property() size: Size = 'sm'\n    @property() parentSized = 'false'\n    @property() spacing: ElementSpacing = 'none'\n\n    protected override update(changes: PropertyValues): void {\n      if (!this.hasAttribute('size')) {\n        this.setAttribute('size', this.size)\n      }\n\n      if (this.parentSized === 'true') {\n        setFromParentSize(this)\n      }\n\n      super.update(changes)\n    }\n  }\n  return SizedElement as Constructor<SizedElementInterface> & T\n}\n","import { DdsElement } from '../dds-hu-element'\nimport { FeedbackMixin } from './feedbackMixin'\nimport { FocusableMixin } from './focusableMixin'\nimport { FormElementMixin } from './formElementMixin'\nimport { LabelableMixin } from './labelableMixin'\nimport { SizedMixin } from './sizedMixin'\n\nexport const GenericFormElement = FeedbackMixin(\n  FocusableMixin(LabelableMixin(SizedMixin(FormElementMixin(DdsElement)))),\n)\n","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","import { cva } from 'class-variance-authority'\n\nexport const buttonVariants = cva('button', {\n  variants: {\n    intent: {\n      'primary': 'button--primary',\n      'outline': 'button--outline',\n      'subtle': 'button--subtle',\n      'clean': 'button--clean',\n      'primary-inverted': 'button--primary-inverted',\n      'outline-inverted': 'button--outline-inverted',\n      'subtle-inverted': 'button--subtle-inverted',\n      'clean-inverted': 'button--clean-inverted',\n      'subtle-neutral': 'button--subtle-neutral',\n      'subtle-quiet': 'button--subtle-quiet',\n      'subtle-quiet-inverted': 'button--subtle-quiet-inverted',\n      'subtle-menu': 'button--subtle-menu',\n      'subtle-menu-item': 'button--subtle-menu-item',\n    },\n    size: {\n      lg: 'button--lg',\n      md: 'button--md',\n      sm: 'button--sm',\n      xs: 'button--xs',\n    },\n    shape: {\n      button: '',\n      circle: 'dds-button--circle',\n    },\n  },\n  compoundVariants: [\n    { shape: 'circle', size: 'md', class: 'button--circle-md' },\n    { shape: 'circle', size: 'sm', class: 'button--circle-sm' },\n    { shape: 'circle', size: 'xs', class: 'button--circle-xs' },\n  ],\n  defaultVariants: {\n    intent: 'primary',\n    size: 'md',\n    shape: 'button',\n  },\n})\n","import clsx from 'clsx'\nimport { PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property, query } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\n\nimport { GenericFormElement } from '@/internal/mixin/genericFormElement'\nimport { t } from '@/localization/localization'\n\nimport { ButtonShape, LinkTarget } from '../../common/types'\nimport { ButtonSize } from '../icon-button/icon-button.component'\nimport styles from './_styles/button.scss?inline'\nimport { buttonVariants } from './button.variants'\n\nexport type ButtonVariant =\n  | 'primary'\n  | 'outline'\n  | 'subtle'\n  | 'clean'\n  | 'primary-inverted'\n  | 'outline-inverted'\n  | 'subtle-inverted'\n  | 'clean-inverted'\n  | 'subtle-neutral'\n  | 'subtle-quiet'\n  | 'subtle-quiet-inverted'\n  | 'subtle-menu'\n  | 'subtle-menu-item'\nexport type HtmlButtonType = 'button' | 'submit' | 'reset'\n\nconst LOADING_ICON_SIZES = {\n  lg: 24,\n  md: 20,\n  sm: 16,\n  xs: 16,\n} as const\n\n/**\n * `dap-ds-button` is a versatile button component for triggering actions and navigation.\n * @element dap-ds-button\n * @summary A button is a clickable element that can be used to trigger an action, submit forms, or navigate to other pages.\n * @title - Button\n *\n * @example Basic Usage\n * ```html\n * <dap-ds-button>Click me</dap-ds-button>\n * <dap-ds-button variant=\"outline\">Secondary action</dap-ds-button>\n * <dap-ds-button href=\"/dashboard\">Navigate</dap-ds-button>\n * ```\n *\n * @example Form Integration\n * ```html\n * <form>\n *   <dap-ds-button htmlType=\"submit\">Submit Form</dap-ds-button>\n *   <dap-ds-button htmlType=\"reset\" variant=\"outline\">Reset</dap-ds-button>\n * </form>\n * ```\n *\n * @example Accessibility\n * ```html\n * <!-- Icon-only buttons require aria-label -->\n * <dap-ds-button aria-label=\"Close dialog\" shape=\"circle\">\n *   <dap-ds-icon name=\"close-line\"></dap-ds-icon>\n * </dap-ds-button>\n * ```\n *\n * @event dds-loading-timeout - Emitted when the loading timeout is reached\n *\n * @slot - The content of the button. Can contain text, icons, or other elements.\n *\n * @csspart base - The main button container.\n * @csspart high-contrast - The high contrast part of the button.\n * @csspart content - The content wrapper inside the button.\n *\n * @cssproperty --dds-button-padding-x - Horizontal padding of the button (default: var(--dds-spacing-300))\n * @cssproperty --dds-button-padding-y - Vertical padding of the button (default: var(--dds-spacing-300))\n * @cssproperty --dds-button-border-radius - Border radius of the button (default: var(--dds-radius-rounded))\n * @cssproperty --dds-button-font-weight - Font weight of the button (default: 700)\n * @cssproperty --dds-button-line-height - Line height of the button (default: var(--dds-font-line-height-large))\n * @cssproperty --dds-button-transition - Transition property of the button (default: all 0.2s ease-in-out)\n * @cssproperty --dds-button-disabled-opacity - Opacity of disabled button (default: 0.5)\n *\n * @cssproperty --dds-button-size-lg - Size of large button (default: var(--dds-spacing-1200))\n * @cssproperty --dds-button-size-md - Size of medium button (default: var(--dds-spacing-1000))\n * @cssproperty --dds-button-size-sm - Size of small button (default: var(--dds-spacing-800))\n * @cssproperty --dds-button-size-xs - Size of extra small button (default: var(--dds-spacing-600))\n *\n * @cssproperty --dds-button-circle-lg - Size of large circle button (default: var(--dds-spacing-1200))\n * @cssproperty --dds-button-circle-md - Size of medium circle button (default: var(--dds-spacing-1000))\n * @cssproperty --dds-button-circle-sm - Size of small circle button (default: var(--dds-spacing-800))\n * @cssproperty --dds-button-circle-xs - Size of extra small circle button (default: var(--dds-spacing-600))\n *\n * Primary button properties:\n * @cssproperty --dds-button-primary-color-bg - Background color of primary button (default: var(--dds-button-primary-background-enabled))\n * @cssproperty --dds-button-primary-color-bg-hover - Background color of primary button on hover (default: var(--dds-button-primary-background-hover))\n * @cssproperty --dds-button-primary-color-bg-active - Background color of primary button when active (default: var(--dds-button-primary-background-pressed))\n * @cssproperty --dds-button-primary-color-bg-disabled - Background color of disabled primary button (default: var(--dds-button-primary-background-disabled))\n * @cssproperty --dds-button-primary-color-text - Text color of primary button (default: var(--dds-button-primary-text-enabled))\n * @cssproperty --dds-button-primary-color-text-disabled - Text color of disabled primary button (default: var(--dds-button-primary-text-disabled))\n *\n * Primary inverted button properties:\n * @cssproperty --dds-button-primary-inverted-color-bg - Background color of primary inverted button (default: var(--dds-button-primary-background-inverted-enabled))\n * @cssproperty --dds-button-primary-inverted-color-bg-hover - Background color of primary inverted button on hover (default: var(--dds-button-primary-background-inverted-hover))\n * @cssproperty --dds-button-primary-inverted-color-bg-active - Background color of primary inverted button when active (default: var(--dds-button-primary-background-inverted-pressed))\n * @cssproperty --dds-button-primary-inverted-color-bg-disabled - Background color of disabled primary inverted button (default: var(--dds-button-primary-background-inverted-disabled))\n * @cssproperty --dds-button-primary-inverted-color-text - Text color of primary inverted button (default: var(--dds-button-primary-text-inverted))\n * @cssproperty --dds-button-primary-inverted-color-text-disabled - Text color of disabled primary inverted button (default: var(--dds-button-primary-text-inverted-disabled))\n *\n * Outline button properties:\n * @cssproperty --dds-button-outline-color-border - Border color of outline button (default: var(--dds-button-outline-border-enabled))\n * @cssproperty --dds-button-outline-color-border-hover - Border color of outline button on hover (default: var(--dds-button-outline-border-hover))\n * @cssproperty --dds-button-outline-color-border-active - Border color of outline button when active (default: var(--dds-button-outline-border-pressed))\n * @cssproperty --dds-button-outline-color-border-disabled - Border color of disabled outline button (default: var(--dds-button-outline-border-disabled))\n * @cssproperty --dds-button-outline-color-text - Text color of outline button (default: var(--dds-button-outline-text-enabled))\n * @cssproperty --dds-button-outline-color-text-hover - Text color of outline button on hover (default: var(--dds-button-outline-text-hover))\n * @cssproperty --dds-button-outline-color-text-active - Text color of outline button when active (default: var(--dds-button-outline-text-pressed))\n * @cssproperty --dds-button-outline-color-text-disabled - Text color of disabled outline button (default: var(--dds-button-outline-text-disabled))\n *\n * Outline inverted button properties:\n * @cssproperty --dds-button-outline-inverted-color-border - Border color of outline inverted button (default: var(--dds-button-outline-border-inverted-enabled))\n * @cssproperty --dds-button-outline-inverted-color-border-hover - Border color of outline inverted button on hover (default: var(--dds-button-outline-border-inverted-hover))\n * @cssproperty --dds-button-outline-inverted-color-border-active - Border color of outline inverted button when active (default: var(--dds-button-outline-border-inverted-pressed))\n * @cssproperty --dds-button-outline-inverted-color-border-disabled - Border color of disabled outline inverted button (default: var(--dds-button-outline-border-inverted-disabled))\n * @cssproperty --dds-button-outline-inverted-color-text - Text color of outline inverted button (default: var(--dds-button-outline-text-inverted-enabled))\n * @cssproperty --dds-button-outline-inverted-color-text-hover - Text color of outline inverted button on hover (default: var(--dds-button-outline-text-inverted-hover))\n * @cssproperty --dds-button-outline-inverted-color-text-active - Text color of outline inverted button when active (default: var(--dds-button-outline-text-inverted-pressed))\n * @cssproperty --dds-button-outline-inverted-color-text-disabled - Text color of disabled outline inverted button (default: var(--dds-button-outline-text-inverted-disabled))\n *\n * Subtle button properties:\n * @cssproperty --dds-button-subtle-color-bg - Background color of subtle button (default: var(--dds-button-subtle-background-enabled))\n * @cssproperty --dds-button-subtle-color-bg-hover - Background color of subtle button on hover (default: var(--dds-button-subtle-background-hover))\n * @cssproperty --dds-button-subtle-color-bg-active - Background color of subtle button when active (default: var(--dds-button-subtle-background-pressed))\n * @cssproperty --dds-button-subtle-color-bg-disabled - Background color of disabled subtle button (default: var(--dds-button-subtle-background-disabled))\n * @cssproperty --dds-button-subtle-color-border - Border color of subtle button (default: var(--dds-button-subtle-border-enabled))\n * @cssproperty --dds-button-subtle-color-border-hover - Border color of subtle button on hover (default: var(--dds-button-subtle-border-hover))\n * @cssproperty --dds-button-subtle-color-border-active - Border color of subtle button when active (default: var(--dds-button-subtle-border-pressed))\n * @cssproperty --dds-button-subtle-color-border-disabled - Border color of disabled subtle button (default: var(--dds-button-subtle-border-disabled))\n * @cssproperty --dds-button-subtle-color-text - Text color of subtle button (default: var(--dds-button-subtle-text-enabled))\n * @cssproperty --dds-button-subtle-color-text-hover - Text color of subtle button on hover (default: var(--dds-button-subtle-text-hover))\n * @cssproperty --dds-button-subtle-color-text-active - Text color of subtle button when active (default: var(--dds-button-subtle-text-pressed))\n * @cssproperty --dds-button-subtle-color-text-disabled - Text color of disabled subtle button (default: var(--dds-button-subtle-text-disabled))\n *\n * Clean button properties:\n * @cssproperty --dds-button-clean-color-text - Text color of clean button (default: var(--dds-text-link-base))\n * @cssproperty --dds-button-clean-color-text-hover - Text color of clean button on hover (default: var(--dds-text-link-hover))\n * @cssproperty --dds-button-clean-color-text-active - Text color of clean button when active (default: var(--dds-text-link-pressed))\n * @cssproperty --dds-button-clean-color-text-disabled - Text color of disabled clean button (default: var(--dds-text-neutral-disabled))\n *\n * Clean inverted button properties:\n * @cssproperty --dds-button-clean-inverted-color-text - Text color of clean inverted button (default: var(--dds-button-primary-text-inverted))\n * @cssproperty --dds-button-clean-inverted-color-text-hover - Text color of clean inverted button on hover (default: var(--dds-button-primary-text-inverted))\n * @cssproperty --dds-button-clean-inverted-color-text-active - Text color of clean inverted button when active (default: var(--dds-button-primary-text-inverted))\n * @cssproperty --dds-button-clean-inverted-color-text-disabled - Text color of disabled clean inverted button (default: var(--dds-text-neutral-disabled))\n *\n * Danger button properties:\n * @cssproperty --dds-button-danger-color-bg - Background color of danger button (default: var(--dds-button-primary-background-destructive-enabled))\n * @cssproperty --dds-button-danger-color-bg-hover - Background color of danger button on hover (default: var(--dds-button-primary-background-destructive-hover))\n * @cssproperty --dds-button-danger-color-bg-active - Background color of danger button when active (default: var(--dds-button-primary-background-destructive-pressed))\n * @cssproperty --dds-button-danger-color-text - Text color of danger button (default: var(--dds-button-primary-text-enabled))\n * @cssproperty --dds-button-danger-outline-color-border - Border color of danger outline button (default: var(--dds-button-outline-border-destructive-enabled))\n * @cssproperty --dds-button-danger-outline-color-border-hover - Border color of danger outline button on hover (default: var(--dds-button-outline-border-destructive-hover))\n * @cssproperty --dds-button-danger-outline-color-border-active - Border color of danger outline button when active (default: var(--dds-button-outline-border-destructive-pressed))\n * @cssproperty --dds-button-danger-outline-color-text - Text color of danger outline button (default: var(--dds-button-outline-text-destructive-enabled))\n * @cssproperty --dds-button-danger-outline-color-text-hover - Text color of danger outline button on hover (default: var(--dds-button-outline-text-destructive-hover))\n * @cssproperty --dds-button-danger-outline-color-text-active - Text color of danger outline button when active (default: var(--dds-button-outline-text-destructive-pressed))\n * @cssproperty --dds-button-danger-subtle-color-bg - Background color of danger subtle button (default: var(--dds-button-subtle-background-destructive-enabled))\n * @cssproperty --dds-button-danger-subtle-color-bg-hover - Background color of danger subtle button on hover (default: var(--dds-button-subtle-background-destructive-hover))\n * @cssproperty --dds-button-danger-subtle-color-bg-active - Background color of danger subtle button when active (default: var(--dds-button-subtle-background-destructive-pressed))\n * @cssproperty --dds-button-danger-subtle-color-text - Text color of danger subtle button (default: var(--dds-button-subtle-text-destructive-enabled))\n * @cssproperty --dds-button-danger-subtle-color-text-hover - Text color of danger subtle button on hover (default: var(--dds-button-subtle-text-destructive-hover))\n * @cssproperty --dds-button-danger-subtle-color-text-active - Text color of danger subtle button when active (default: var(--dds-button-subtle-text-destructive-pressed))\n * @cssproperty --dds-button-danger-clean-color-text - Text color of danger clean button (default: var(--dds-text-negative-subtle))\n * @cssproperty --dds-button-danger-clean-color-text-hover - Text color of danger clean button on hover (default: var(--dds-text-negative-base))\n * @cssproperty --dds-button-danger-clean-color-text-active - Text color of danger clean button when active (default: var(--dds-text-negative-strong))\n */\n@customElement('dap-ds-button')\nexport default class DapDSButton extends GenericFormElement {\n  /**\n   * @ignore\n   */\n  @query('.button') readonly button!: HTMLButtonElement | HTMLLinkElement\n\n  /** The visual style variant of the button\n   * @type { 'primary' | 'outline' | 'subtle' | 'subtle-neutral' | 'subtle-quiet' | 'subtle-quiet-inverted' | 'clean' | 'primary-inverted' | 'outline-inverted' | 'subtle-inverted' | 'clean-inverted' | 'subtle-menu' | 'subtle-menu-item' }\n   * @default 'primary'\n   * @example\n   * ```html\n   * <dap-ds-button variant=\"primary\">Primary action</dap-ds-button>\n   * <dap-ds-button variant=\"outline\">Secondary action</dap-ds-button>\n   * <dap-ds-button variant=\"subtle\">Tertiary action</dap-ds-button>\n   * ```\n   * @group Visual\n   */\n  @property({ reflect: true }) variant: ButtonVariant = 'primary'\n\n  /** The size of the button affecting padding and font size\n   * @type { 'lg' | 'md' | 'sm' | 'xs' }\n   * @default 'md'\n   * @example\n   * ```html\n   * <dap-ds-button size=\"xs\">Extra small</dap-ds-button>\n   * <dap-ds-button size=\"sm\">Small</dap-ds-button>\n   * <dap-ds-button>Medium (default)</dap-ds-button>\n   * <dap-ds-button size=\"lg\">Large</dap-ds-button>\n   * ```\n   * @group Visual\n   */\n  @property({ reflect: true }) size: ButtonSize = 'md'\n\n  /** Whether the button is in loading state, showing a spinner and disabling interaction\n   * @default false\n   * @example\n   * ```html\n   * <dap-ds-button loading>Submitting...</dap-ds-button>\n   * ```\n   * @group State\n   */\n  @property({ type: Boolean, reflect: true }) loading = false\n\n  /** Whether the button represents a destructive action (applies danger styling)\n   * @default false\n   * @example\n   * ```html\n   * <dap-ds-button danger>Delete Account</dap-ds-button>\n   * <dap-ds-button variant=\"outline\" danger>Remove Item</dap-ds-button>\n   * ```\n   * @group State\n   */\n  @property({ type: Boolean }) danger = false\n\n  /** The shape of the button - use 'circle' for icon-only buttons\n   * @type { 'button' | 'circle' }\n   * @default 'button'\n   * @example\n   * ```html\n   * <dap-ds-button shape=\"circle\" aria-label=\"Close\">\n   *   <dap-ds-icon name=\"close-line\"></dap-ds-icon>\n   * </dap-ds-button>\n   * ```\n   * @group Visual\n   */\n  @property({ reflect: true }) shape: ButtonShape = 'button'\n\n  /** The HTML type attribute for form interaction\n   * @type { 'button' | 'submit' | 'reset' }\n   * @default 'button'\n   * @example\n   * ```html\n   * <form>\n   *   <dap-ds-button htmlType=\"submit\">Submit</dap-ds-button>\n   *   <dap-ds-button htmlType=\"reset\">Reset</dap-ds-button>\n   * </form>\n   * ```\n   * @group Form\n   */\n  @property() htmlType: HtmlButtonType = 'button'\n\n  /** The URL to navigate to. When present, the button renders as an anchor element\n   * @example\n   * ```html\n   * <dap-ds-button href=\"/dashboard\">Go to Dashboard</dap-ds-button>\n   * <dap-ds-button href=\"https://example.com\" target=\"_blank\">External Link</dap-ds-button>\n   * ```\n   * @group Navigation\n   */\n  @property() href?: string\n\n  /** The target attribute for link navigation\n   * @type { '_blank' | '_self' | '_parent' | '_top' }\n   * @default '_self'\n   * @example\n   * ```html\n   * <dap-ds-button href=\"https://example.com\" target=\"_blank\">Open in new tab</dap-ds-button>\n   * ```\n   * @group Navigation\n   */\n  @property() target: LinkTarget = '_self'\n\n  /** The rel attribute for link security and behavior\n   * @default 'noreferrer noopener'\n   * @example\n   * ```html\n   * <dap-ds-button href=\"https://example.com\" rel=\"noopener\">Safe external link</dap-ds-button>\n   * ```\n   * @group Navigation\n   */\n  @property() rel?: string\n\n  /** The ID of the element controlled by this button\n   * @example\n   * ```html\n   * <dap-ds-button aria-controls=\"menu-1\" aria-expanded=\"false\">Menu</dap-ds-button>\n   * <div id=\"menu-1\">Menu content</div>\n   * ```\n   * @group Accessibility\n   */\n  @property({ type: String, attribute: 'aria-controls' }) ariaControls?: string\n\n  /** The ID of the element that describes the button\n   * @example\n   * ```html\n   * <dap-ds-button aria-describedby=\"help-text\">Submit</dap-ds-button>\n   * <div id=\"help-text\">This will submit your form data</div>\n   * ```\n   * @group Accessibility\n   */\n  @property({ type: String, attribute: 'aria-describedby' })\n  ariaDescribedBy?: string\n\n  /** Controls loading timeout in milliseconds\n   * @default 0\n   * @group State\n   */\n  @property({ type: Number }) loadingTimeout = 0\n\n  /** Enables high contrast theme toggle functionality (internal use)\n   * @default false\n   * @ignore\n   */\n  @property({ type: Boolean }) hc: boolean = false\n\n  /** Whether the button is active\n   * @default false\n   * @example\n   * ```html\n   * <dap-ds-button active>Active</dap-ds-button>\n   * ```\n   */\n  @property({ type: Boolean }) active: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  private loadingTimer?: number\n\n  private getSecureRel(): string {\n    if (this.target === '_blank') {\n      return this.rel ?? 'noreferrer noopener'\n    }\n    return this.rel ?? ''\n  }\n\n  private validateAriaExpanded(): string | undefined | null {\n    if (this.ariaExpanded && !['true', 'false'].includes(this.ariaExpanded)) {\n      console.warn('aria-expanded must be \"true\" or \"false\"')\n      return undefined\n    }\n\n    return this.ariaExpanded\n  }\n\n  private validateAriaPressed(): string | undefined | null {\n    if (\n      this.ariaPressed &&\n      !['true', 'false', 'mixed'].includes(this.ariaPressed)\n    ) {\n      console.warn('aria-pressed must be \"true\", \"false\", or \"mixed\"')\n      return undefined\n    }\n\n    return this.ariaPressed\n  }\n\n  private validateProperties(): void {\n    if (\n      this.shape === 'circle' &&\n      !this.ariaLabel &&\n      !this.textContent?.trim()\n    ) {\n      console.warn(\n        'Circle buttons require aria-label or visible text for accessibility',\n      )\n    }\n\n    if (this.href && this.htmlType !== 'button') {\n      console.warn(\n        'htmlType is ignored when href is provided - button will render as anchor',\n      )\n    }\n\n    if (this.href && !this.isValidUrl(this.href)) {\n      console.warn('Invalid URL provided for href attribute')\n    }\n  }\n\n  private isValidUrl(url: string): boolean {\n    try {\n      if (\n        url.startsWith('/') ||\n        url.startsWith('./') ||\n        url.startsWith('../')\n      ) {\n        return true\n      }\n      new URL(url)\n      return true\n    } catch {\n      return false\n    }\n  }\n\n  private handleClick(): boolean {\n    if (this.disabled || this.loading) {\n      return false\n    }\n\n    let handled = false\n    if (this.htmlType !== 'button') {\n      const proxy = document.createElement('button')\n      proxy.type = this.htmlType\n      this.insertAdjacentElement('afterend', proxy)\n\n      proxy.click()\n      proxy.remove()\n      handled = true\n    }\n\n    if (this.hc) {\n      this.toggleHighContrast()\n    }\n\n    return handled\n  }\n\n  private toggleHighContrast(): void {\n    document.body.classList.toggle('high-contrast-theme')\n  }\n\n  private startLoadingTimeout(): void {\n    if (this.loadingTimeout > 0) {\n      this.loadingTimer = window.setTimeout(() => {\n        this.loading = false\n        this.emit(\n          'dds-loading-timeout',\n          {\n            timeout: this.loadingTimeout,\n          },\n          {\n            bubbles: true,\n          },\n        )\n      }, this.loadingTimeout)\n    }\n  }\n\n  private clearLoadingTimeout(): void {\n    if (this.loadingTimer) {\n      clearTimeout(this.loadingTimer)\n      this.loadingTimer = undefined\n    }\n  }\n\n  focus(options?: FocusOptions) {\n    this.button.focus(options)\n  }\n\n  /**\n   * @ignore\n   */\n  public get focusElement() {\n    return this.button\n  }\n\n  protected updated(\n    changedProperties: Map<string | number | symbol, unknown>,\n  ): void {\n    super.updated(changedProperties)\n\n    if (changedProperties.has('loading')) {\n      if (this.loading) {\n        this.startLoadingTimeout()\n      } else {\n        this.clearLoadingTimeout()\n      }\n    }\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n    this.validateProperties()\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback()\n    this.clearLoadingTimeout()\n  }\n\n  render() {\n    return html`\n      <${unsafeStatic(this.href ? 'a' : 'button')}\n        part=\"base\"\n        .disabled=${this.disabled}\n        aria-disabled=${this.disabled}\n        aria-label=${ifDefined(this.ariaLabel)}\n        aria-hidden=${ifDefined(this.ariaHidden)}\n        aria-expanded=${ifDefined(this.validateAriaExpanded())}\n        aria-controls=${ifDefined(this.ariaControls)}\n        aria-haspopup=${ifDefined(this.ariaHasPopup)}\n        aria-describedby=${ifDefined(this.ariaDescribedBy)}\n        aria-pressed=${ifDefined(this.validateAriaPressed())}\n        .autofocus=${this.autofocus}\n        type=${ifDefined(this.href ? null : this.htmlType)}\n        name=${ifDefined(this.name)}\n        href=${ifDefined(this.href)}\n        target=${ifDefined(this.target)}\n        rel=${ifDefined(this.getSecureRel())}\n        class=${clsx(\n          buttonVariants({\n            intent: this.variant,\n            size: this.size,\n            shape: this.shape,\n          }),\n          {\n            'dds-button--danger': this.danger,\n            'dds-button--loading': this.loading,\n            'dds-button--active': this.active,\n          },\n        )}\n        @click=${this.handleClick}>\n        <div part=\"high-contrast\" class=\"button__highcontrast\"></div>\n        ${\n          this.loading\n            ? this._getLoadingSpinner()\n            : html` <span part=\"content\" class=\"button__text\">\n                <slot></slot>\n              </span>`\n        }\n      </${unsafeStatic(this.href ? 'a' : 'button')}>\n    `\n  }\n\n  private getLoadingIconSize(size: ButtonSize): number {\n    return LOADING_ICON_SIZES[size] || LOADING_ICON_SIZES.md\n  }\n\n  private _getLoadingSpinner() {\n    return html`\n      <span class=\"button__spinner\" aria-live=\"polite\">\n        <dap-ds-icon-loading-spinner\n          size=${this.getLoadingIconSize(this.size)}\n          aria-label=${t('loading')}></dap-ds-icon-loading-spinner>\n      </span>\n      <span class=\"sr-only\"> ${t('loading')} - <slot></slot> </span>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport dayjs, { Dayjs } from 'dayjs'\nimport { nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { FocusableMixin } from '@/internal/mixin/focusableMixin'\nimport { t } from '@/localization/localization'\n\nimport styles from './calendar-cell.scss?inline'\n\n/**\n * `dap-ds-calendar-cell`\n * @summary Calendar cell represents a single cell in the calendar.\n * @element dap-ds-calendar-cell\n * @title - Calendar cell\n * @group calendar\n *\n * @slot - The content of the calendar cell.\n *\n * @csspart base - The main calendar cell container.\n * @csspart today-mark - The today mark of the calendar cell.\n *\n */\n@customElement('dap-ds-calendar-cell')\nexport default class DapDSCalendarCell extends FocusableMixin(DdsElement) {\n  /** The value of the calendar cell. */\n  @property({ attribute: false }) value: Dayjs\n  /** Whether the calendar cell is selected. */\n  @property({ type: Boolean }) selected: boolean = false\n  /** Whether the calendar cell is disabled. */\n  @property({ type: Boolean }) disabledDay: boolean = false\n  /** Whether the calendar cell is today. */\n  @property({ type: Boolean }) today: boolean = false\n  /** Whether the calendar cell is out of range. */\n  @property({ type: Boolean }) outOfRange: boolean = false\n  /** Whether the calendar cell is a date header. */\n  @property({ type: Boolean }) header: boolean = false\n  /** Whether the calendar cell is focused. */\n  @property({ type: Boolean }) focused: boolean = false\n\n  private _cachedLabel: string = ''\n  private _lastLabelUpdate: number = 0\n\n  static readonly styles = unsafeCSS(styles)\n\n  get label(): string {\n    if (this.value) {\n      const currentTime = Date.now()\n\n      // Only recalculate if state changed or more than 100ms passed (debounce rapid updates)\n      if (\n        this._cachedLabel === '' ||\n        this._lastLabelUpdate === 0 ||\n        currentTime - this._lastLabelUpdate > 100\n      ) {\n        // Cache expensive dayjs formatting\n        const dateLabel = dayjs(this.value).format('LL, dddd')\n        const todayLabel = this.today ? t('calendar.today') : ''\n        const selectedLabel = this.selected ? t('selected') : ''\n        this._cachedLabel = `${dateLabel} ${todayLabel} ${selectedLabel}`.trim()\n        this._lastLabelUpdate = currentTime\n      }\n\n      return this._cachedLabel\n    }\n\n    return ''\n  }\n\n  public get focusElement(): HTMLElement {\n    return this\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n\n    this.setAttribute('aria-label', this.label)\n  }\n\n  protected updated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.updated(_changedProperties)\n\n    if (_changedProperties.has('disabledDay')) {\n      this.setAttribute('aria-disabled', this.disabledDay ? 'true' : 'false')\n    }\n\n    if (_changedProperties.has('selected')) {\n      if (this.role === 'button') {\n        this.setAttribute('aria-selected', this.selected ? 'true' : 'false')\n      }\n      this.setAttribute('aria-label', this.label)\n    }\n  }\n\n  getDayName(dateStr: string, locale: string) {\n    const date = new Date(dateStr)\n    return date.toLocaleDateString(locale, { weekday: 'long' })\n  }\n\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        class=${clsx(\n          'calendar-cell',\n          { 'calendar-cell--selected': this.selected },\n          { 'calendar-cell--disabled': this.disabledDay },\n          { 'calendar-cell--today': this.today },\n          { 'calendar-cell--out-of-range': this.outOfRange },\n          { 'calendar-cell--header': this.header },\n          { 'calendar-cell--focused': this.focused },\n        )}>\n        <slot></slot>\n        ${this.today\n          ? html`<span\n              part=\"today-mark\"\n              class=\"calendar-cell__today-mark\"></span>`\n          : nothing}\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport dayjs, { Dayjs } from 'dayjs'\nimport { PropertyValueMap, unsafeCSS } from 'lit'\nimport {\n  customElement,\n  property,\n  query,\n  queryAll,\n  state,\n} from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { translate } from '@/localization/localization'\n\nimport DapDSSelect from '../select/select.component'\nimport styles from './calendar.scss?inline'\nimport DapDSCalendarCell from './calendar-cell.component'\n\n/**\n * `dap-ds-calendar`\n * @summary A calendar is a visual representation of dates. It allows users to select a date.\n * @element dap-ds-calendar\n * @title - Calendar\n *\n * @event {{ value: Dayjs }} dds-change - Fired when the calendar value changes.\n *\n * @slot - The content of the calendar.\n *\n * @csspart base - The main calendar container.\n * @csspart header - The header of the calendar.\n * @csspart body - The body of the calendar.\n *\n * @cssproperty --dds-calendar-display - The display property of the calendar container. Default is flex.\n * @cssproperty --dds-calendar-isolation - The isolation property of the calendar. Default is isolate.\n * @cssproperty --dds-calendar-block-display - The display property of the calendar block. Default is block.\n * @cssproperty --dds-calendar-transition - The transition property for the calendar. Default is 'all 0.2s ease-in-out'.\n *\n * @cssproperty --dds-calendar-header-display - The display property of the calendar header. Default is grid.\n * @cssproperty --dds-calendar-header-grid-flow - The grid-auto-flow property of the calendar header. Default is column.\n * @cssproperty --dds-calendar-header-width - The width of the calendar header. Default is 100%.\n * @cssproperty --dds-calendar-header-gap - The gap between header items. Default is the design system's spacing-100.\n *\n * @cssproperty --dds-calendar-select-min-height - The minimum height of the select trigger. Default is auto.\n * @cssproperty --dds-calendar-select-max-height - The maximum height of the select trigger. Default is 32px.\n * @cssproperty --dds-calendar-select-padding - The padding of the select trigger. Default is the design system's spacing-200.\n * @cssproperty --dds-calendar-select-border-radius - The border radius of the select trigger. Default is the design system's radius-rounded.\n * @cssproperty --dds-calendar-select-border-color - The border color of the select trigger. Default is the design system's border-neutral-transparent-interactive.\n * @cssproperty --dds-calendar-select-background - The background color of the select trigger. Default is the design system's button-subtle-background-enabled.\n * @cssproperty --dds-calendar-select-color - The text color of the select trigger. Default is the design system's button-subtle-text-enabled.\n * @cssproperty --dds-calendar-select-font-size - The font size of the select trigger. Default is the design system's font-sm.\n * @cssproperty --dds-calendar-select-font-style - The font style of the select trigger. Default is normal.\n * @cssproperty --dds-calendar-select-font-weight - The font weight of the select trigger. Default is the design system's font-weight-bold.\n *\n * @cssproperty --dds-calendar-nav-button-margin - The margin of the navigation buttons. Default is the design system's spacing-200.\n * @cssproperty --dds-calendar-nav-button-color - The color of the navigation button icons. Default is the design system's button-subtle-icon-enabled.\n */\n@customElement('dap-ds-calendar')\nexport default class DapDSCalendar extends DdsElement {\n  @queryAll('dap-ds-calendar-cell:not([header])')\n  private readonly cells: NodeListOf<DapDSCalendarCell>\n\n  @query('#monthSelect')\n  private readonly monthSelect: DapDSSelect\n\n  /** The value of the calendar.\n   * @type {Dayjs}\n   */\n  @property({ attribute: false }) value?: Dayjs\n\n  /** The current visible date of the calendar. Only the month and year are considered.\n   * @type {Dayjs}\n   * @default dayjs()\n   */\n  @property({ attribute: false }) currentDate = dayjs()\n\n  /** The minimum date of the calendar. Only the month and year are considered.\n   * @type {Dayjs}\n   * @default dayjs().subtract(50, 'year')\n   */\n  @property({ attribute: false }) minDate = dayjs().subtract(50, 'year')\n\n  /** The maximum date of the calendar. Only the month and year are considered.\n   * @type {Dayjs}\n   * @default dayjs().add(50, 'year')\n   */\n  @property({ attribute: false }) maxDate = dayjs().add(50, 'year')\n\n  /** The function to determine if the date is disabled.\n   * @type {Function}\n   * @default () => false\n   */\n  @property({ attribute: false }) disabledDate = (date: Dayjs) => {\n    return !date\n  }\n\n  /** The locale of the calendar.\n   * @type {string}\n   * @default dayjs.locale()\n   */\n  @property({ reflect: true }) locale: string = dayjs.locale()\n\n  @state() private _currentCell: DapDSCalendarCell\n  @state() private _yearOptionsLoaded = false\n\n  private instanceLocalData = dayjs().localeData()\n\n  async connectedCallback(): Promise<void> {\n    super.connectedCallback()\n\n    if (!dayjs.isDayjs(this.currentDate)) {\n      this.currentDate = dayjs(this.currentDate)\n    }\n\n    if (this.locale) {\n      this.instanceLocalData = dayjs().locale(this.locale).localeData()\n      this.currentDate = dayjs(this.currentDate).locale(this.locale)\n      // Remove requestUpdate() - let Lit handle the update cycle\n    }\n  }\n\n  static readonly styles = unsafeCSS(styles)\n\n  get startDate() {\n    if (dayjs.isDayjs(this.currentDate)) {\n      return dayjs(this.currentDate.toDate())\n        .locale(this.locale)\n        .startOf('month')\n    }\n    return dayjs(this.currentDate).locale(this.locale).startOf('month')\n  }\n\n  get endDate() {\n    return dayjs(this.currentDate).locale(this.locale).endOf('month')\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n    const documentElementObserver = new MutationObserver(\n      this.updateLocaleFromHtml,\n    )\n\n    documentElementObserver.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: ['dir', 'lang'],\n    })\n\n    this.setValue(this.value, false)\n\n    // Load year options after initial render to improve startup performance\n    // but ensure they're available for user interaction\n    setTimeout(() => this.loadYearOptions(), 100)\n  }\n\n  protected updated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.updated(_changedProperties)\n\n    if (_changedProperties.has('value')) {\n      this.setValue(this.value, false)\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null,\n  ): void {\n    if (name === 'locale') {\n      this.updateLocale(value)\n    }\n  }\n\n  private readonly updateLocale = (locale?: string | null) => {\n    if (!locale) {\n      this.locale = dayjs.locale()\n    } else {\n      this.instanceLocalData = dayjs().locale(locale).localeData()\n      this.locale = locale\n\n      // Defer DOM manipulation to avoid update cycles\n      this.updateComplete.then(() => {\n        this.monthSelect\n          ?.querySelectorAll('dap-ds-option-item')\n          .forEach(item => item.remove())\n\n        const monthOptions = this.getAllowedMonths(\n          dayjs(this.currentDate).locale(this.locale),\n        ).map(month => {\n          const option = document.createElement('dap-ds-option-item')\n          option.value = `${this.instanceLocalData.months().indexOf(month) + 1}`\n          option.appendChild(document.createTextNode(month))\n          return option\n        })\n\n        monthOptions.forEach(monthOption =>\n          this.monthSelect?.appendChild(monthOption),\n        )\n      })\n    }\n    // Remove manual requestUpdate() - locale property change will trigger update\n  }\n\n  private readonly updateLocaleFromHtml = (mutationList: any) => {\n    this.updateLocale(mutationList[0].target[mutationList[0].attributeName])\n  }\n\n  setValue(value?: Dayjs, setFocus = true) {\n    if (value) {\n      if (\n        this.isOutOfRange(\n          dayjs(this.currentDate).locale(this.locale),\n          dayjs(value),\n        )\n      ) {\n        this.setToFirstDayOfMonth()\n      } else {\n        const selectedCell = this.getCellByDate(dayjs(value))\n        this.setCurrentCell(selectedCell!, setFocus)\n      }\n    } else if (\n      this.isOutOfRange(dayjs(this.currentDate).locale(this.locale), dayjs())\n    ) {\n      this.setToFirstAllowedDayOfMonth()\n    } else {\n      this.setToToday()\n    }\n  }\n\n  private readonly getWeeksInMonth = (date: Dayjs) => {\n    const days = date.daysInMonth()\n    const weekday = date.weekday()\n\n    return Math.ceil((days + weekday) / 7)\n  }\n\n  private loadYearOptions() {\n    if (!this._yearOptionsLoaded) {\n      this._yearOptionsLoaded = true\n      // Immediate update for better UX\n      this.requestUpdate()\n    }\n  }\n\n  isOutOfRange(currentDate: Dayjs, date: Dayjs) {\n    return !dayjs(currentDate).locale(this.locale).isSame(date, 'month')\n  }\n\n  isToday(date: Dayjs) {\n    return date.isSame(new Date(), 'day')\n  }\n\n  isSelected(date: Dayjs) {\n    if (!this.value) {\n      return false\n    }\n\n    return date.isSame(this.value, 'day')\n  }\n\n  getDatesInWeek(week: number, from: Dayjs) {\n    let date = from.startOf('week').add(week, 'week')\n    const dates: Dayjs[] = []\n\n    while (dates.length < 7) {\n      dates.push(date)\n      const nextDate = date.add(1, 'day')\n      if (date.isSame(from.endOf('month'))) {\n        break\n      }\n      date = nextDate\n    }\n\n    return dates\n  }\n\n  isDateInAllowedRange(date: Dayjs) {\n    //check if the date year and month is in the allowed range\n    const minDate = dayjs(this.minDate).locale(this.locale)\n    const maxDate = dayjs(this.maxDate).locale(this.locale)\n    const minYear = minDate.year()\n    const maxYear = maxDate.year()\n    const minMonth = minDate.month()\n    const maxMonth = maxDate.month()\n\n    if (date.year() < minYear || date.year() > maxYear) {\n      return false\n    }\n\n    if (date.year() === minYear && date.month() < minMonth) {\n      return false\n    }\n\n    if (date.year() === minYear && date.month() > maxMonth) {\n      return false\n    }\n\n    return true\n  }\n\n  isMonthInAllowedRange(year: number, month: number) {\n    return this.isDateInAllowedRange(dayjs(new Date(year, month, 1)))\n  }\n\n  isDateInAllowedRangeByDate(year: number, month: number, date: number) {\n    return this.isDateInAllowedRange(dayjs(new Date(year, month, date)))\n  }\n\n  getAllowedMonths(currentDate: Dayjs) {\n    const minDate = dayjs(this.minDate).locale(this.locale)\n    const maxDate = dayjs(this.maxDate).locale(this.locale)\n    const minYear = minDate.year()\n    const maxYear = maxDate.year()\n    const minMonth = minDate.month()\n    const maxMonth = maxDate.month()\n\n    if (currentDate.year() === minYear && currentDate.year() === maxYear) {\n      return Array.from(\n        { length: maxMonth - minMonth + 1 },\n        (_, i) => this.instanceLocalData.months()[i + minMonth],\n      )\n    }\n\n    if (currentDate.year() === minYear) {\n      return Array.from(\n        { length: 12 - minMonth },\n        (_, i) => this.instanceLocalData.months()[i + minMonth],\n      )\n    }\n\n    if (currentDate.year() === maxYear) {\n      return Array.from(\n        { length: maxMonth + 1 },\n        (_, i) => this.instanceLocalData.months()[i],\n      )\n    }\n\n    const months = Array.from(\n      { length: 12 },\n      (_, i) => this.instanceLocalData.months()[i],\n    )\n\n    return months\n  }\n\n  setMonth(month: number) {\n    if (\n      month < 0 &&\n      this.isMonthInAllowedRange(dayjs(this.currentDate).year() - 1, 11)\n    ) {\n      this.setYear(dayjs(this.currentDate).locale(this.locale).year() - 1)\n      this.currentDate = this.currentDate.locale(this.locale).set('month', 11)\n      return\n    }\n\n    if (\n      month > 11 &&\n      this.isMonthInAllowedRange(\n        dayjs(this.currentDate).locale(this.locale).year() + 1,\n        0,\n      )\n    ) {\n      this.setYear(dayjs(this.currentDate).year() + 1)\n      this.currentDate = this.currentDate.set('month', 0)\n      return\n    }\n\n    if (\n      !this.isMonthInAllowedRange(\n        dayjs(this.currentDate).locale(this.locale).year(),\n        month,\n      )\n    ) {\n      return\n    }\n\n    this.currentDate = dayjs(this.currentDate)\n      .locale(this.locale)\n      .set('month', month)\n    // Remove requestUpdate() - currentDate property change will trigger update\n  }\n\n  setDay(day: number) {\n    const date = dayjs(this.currentDate).locale(this.locale)\n\n    if (!this.isDateInAllowedRangeByDate(date.year(), date.month(), day)) {\n      return\n    }\n\n    this.currentDate = date.set('date', day)\n    // Remove requestUpdate() - currentDate property change will trigger update\n  }\n\n  setYear(year: number) {\n    const date = dayjs(this.currentDate).locale(this.locale)\n\n    this.currentDate = date.set('year', year)\n    // Remove requestUpdate() - currentDate property change will trigger update\n  }\n\n  setSelectedDate(date: Dayjs) {\n    if (this.disabledDate(date)) {\n      return\n    }\n\n    if (!this.isDateInAllowedRange(date)) {\n      return\n    }\n\n    if (this.isOutOfRange(dayjs(this.currentDate).locale(this.locale), date)) {\n      this.setMonth(date.month())\n    }\n\n    this.value = date\n    this.setCurrentCell(this.getCellByDate(date)!)\n\n    this.emit('dds-change', {\n      value: this.value,\n      type: 'value',\n    })\n  }\n\n  getFirstDayOfMonthCell() {\n    return [...this.cells].find(cell => {\n      return dayjs(cell.value).locale(this.locale).isSame(this.startDate, 'day')\n    })\n  }\n\n  getCellByDate(date: Dayjs) {\n    return [...this.cells].find(cell => {\n      return dayjs(cell.value).locale(this.locale).isSame(date, 'day')\n    })\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Tab') {\n      return\n    }\n\n    event.preventDefault()\n    const element = event.composedPath()[0]\n    if (element instanceof DapDSCalendarCell) {\n      switch (event.code) {\n        case 'ArrowLeft':\n          this.focusNextCell(element, -1)\n          break\n        case 'ArrowRight':\n          this.focusNextCell(element, 1)\n          break\n        case 'ArrowUp':\n          this.focusNextCell(element, -7)\n          break\n        case 'ArrowDown':\n          this.focusNextCell(element, 7)\n          break\n        case 'PageUp':\n          this.setMonth(dayjs(this.currentDate).locale(this.locale).month() - 1)\n          break\n        case 'PageDown':\n          this.setMonth(dayjs(this.currentDate).locale(this.locale).month() + 1)\n          break\n        case 'Enter':\n          this.setSelectedDate(element.value)\n          break\n        case 'Escape':\n          this.emit('dds-close')\n          break\n      }\n    } else if (event.key === 'Escape') {\n      this.emit('dds-close')\n    }\n  }\n\n  setCurrentCell(cell: DapDSCalendarCell, setFocus = true) {\n    if (this._currentCell) {\n      this._currentCell.setAttribute('tabindex', '-1')\n    }\n    this._currentCell = cell\n    if (this._currentCell) {\n      this._currentCell.setAttribute('tabindex', '0')\n    }\n\n    if (setFocus && this._currentCell) {\n      this.setFocusToCurrentCell()\n    }\n  }\n\n  setFocusToCurrentCell() {\n    this._currentCell.focus()\n  }\n\n  setToFirstDayOfMonth() {\n    const firstDayofMonth = this.getFirstDayOfMonthCell()\n    firstDayofMonth?.setAttribute('tabindex', '0')\n    this._currentCell = firstDayofMonth!\n  }\n\n  setToToday() {\n    const today = this.getCellByDate(dayjs())\n    today?.setAttribute('tabindex', '0')\n    this._currentCell = today!\n  }\n\n  setToFirstAllowedDayOfMonth(currentDate = this.currentDate) {\n    const firstAllowedDay = this.getCellByDate(\n      dayjs(currentDate).locale(this.locale).startOf('month'),\n    )\n    firstAllowedDay?.setAttribute('tabindex', '0')\n    this._currentCell = firstAllowedDay!\n  }\n\n  focusNextCell(element: DapDSCalendarCell, offset: number) {\n    const index = [...this.cells].indexOf(element)\n    const nextIndex = index + offset\n    const currentMonth = dayjs(this.currentDate).locale(this.locale).month()\n\n    if (nextIndex >= 0 && nextIndex < this.cells.length) {\n      const cell = this.cells[nextIndex]\n      this.setCurrentCell(cell)\n    } else if (nextIndex < 0) {\n      this.setMonth(currentMonth - 1)\n\n      if (this.currentDate.month() < currentMonth) {\n        this.updateComplete.then(() => {\n          const lastDay = dayjs(this.currentDate)\n            .locale(this.locale)\n            .endOf('month')\n          const lastDayCell = this.getCellByDate(lastDay)\n          this.setCurrentCell(lastDayCell!)\n        })\n      }\n    } else if (nextIndex >= this.cells.length) {\n      this.setMonth(currentMonth + 1)\n\n      if (this.currentDate.month() > currentMonth) {\n        this.updateComplete.then(() => {\n          const firstDay = dayjs(this.currentDate)\n            .locale(this.locale)\n            .startOf('month')\n          const firstDayCell = this.getCellByDate(firstDay)\n          this.setCurrentCell(firstDayCell!)\n        })\n      }\n    }\n  }\n\n  public captureFocus(): void {\n    this.focus()\n    this.setFocusToCurrentCell()\n  }\n\n  private getWeekdaysMin() {\n    const firstDay = this.instanceLocalData.firstDayOfWeek()\n    const weekdays = this.instanceLocalData.weekdaysMin()\n    return weekdays.slice(firstDay).concat(weekdays.slice(0, firstDay))\n  }\n\n  renderCalendarGridHeader() {\n    return html`<thead part=\"calendar-grid-header\" class=\"calendar-grid-header\">\n      <tr class=\"calendar-grid-header-row\">\n        ${this.getWeekdaysMin().map(\n          day =>\n            html`<th>\n              <dap-ds-calendar-cell header>${day}</dap-ds-calendar-cell>\n            </th>`,\n        )}\n      </tr>\n    </thead>`\n  }\n\n  renderCalendarGridBody(date: Dayjs) {\n    return html`<tbody part=\"body\" class=\"calendar-grid-body\">\n      ${[\n        ...new Array(\n          this.getWeeksInMonth(date || dayjs().locale(this.locale)),\n        ).keys(),\n      ].map(\n        week =>\n          html`<tr class=\"calendar-grid-row\">\n            ${this.getDatesInWeek(week, date).map(d => {\n              const isDisabled =\n                !this.isDateInAllowedRange(d) || this.disabledDate(d)\n\n              return html`<td role=\"gridcell\" aria-disabled=${isDisabled}>\n                <dap-ds-calendar-cell\n                  ?outofrange=${this.isOutOfRange(this.currentDate, d)}\n                  ?today=${this.isToday(d)}\n                  ?selected=${this.isSelected(d)}\n                  .value=${d}\n                  ?disabledDay=${isDisabled}\n                  role=\"button\"\n                  aria-pressed=${this.isSelected(d)}\n                  aria-disabled=${isDisabled}\n                  @click=${() => !isDisabled && this.setSelectedDate(d)}\n                  @keydown=${this.handleKeyDown}\n                  >${d.date()}</dap-ds-calendar-cell\n                >\n              </td>`\n            })}\n          </tr> `,\n      )}\n    </tbody>`\n  }\n\n  renderCalendarHeader() {\n    return html`\n      <header\n        part=\"header\"\n        class=\"calendar__header\"\n        @keydown=${this.handleKeyDown}>\n        <dap-ds-icon-button\n          class=\"calendar__header-button-prev\"\n          clean\n          size=\"lg\"\n          variant=\"brand\"\n          icon=\"arrow-left-l-line\"\n          @keydown=${this.handleKeyDown}\n          aria-label=${translate('calendar.prevMonth')}\n          @click=${() => {\n            this.setMonth(this.currentDate.month() - 1)\n          }}>\n        </dap-ds-icon-button>\n        <dap-ds-select\n          floatingStrategy=\"fixed\"\n          class=${clsx(\n            'calendar__header-select',\n            'calendar__header-year-select',\n          )}\n          @dds-keydown=${this.handleKeyDown}\n          size=\"sm\"\n          noAnimation\n          aria-label=${translate('calendar.year')}\n          value=${dayjs(this.currentDate).year()}\n          @dds-change=${(e: CustomEvent) => {\n            e.preventDefault()\n            e.stopPropagation()\n            if (\n              e.detail.value &&\n              !isNaN(parseInt(e.detail.value)) &&\n              parseInt(e.detail.value) !==\n                dayjs(this.currentDate).locale(this.locale).year()\n            ) {\n              this.currentDate = dayjs(this.currentDate)\n                .locale(this.locale)\n                .set('year', parseInt(e.detail.value))\n              // Remove requestUpdate() - currentDate property change will trigger update\n            }\n          }}>\n          <dap-ds-icon-expand-up-down-fill\n            slot=\"indicator-icon\"\n            size=\"16\"></dap-ds-icon-expand-up-down-fill>\n          ${this._yearOptionsLoaded\n            ? [\n                ...new Array(\n                  dayjs(this.maxDate).locale(this.locale).year() -\n                    dayjs(this.minDate).locale(this.locale).year() +\n                    1,\n                ).keys(),\n              ].map(\n                year =>\n                  html`<dap-ds-option-item\n                    value=${dayjs(this.minDate).locale(this.locale).year() +\n                    year}>\n                    ${dayjs(this.minDate).locale(this.locale).year() + year}\n                  </dap-ds-option-item>`,\n              )\n            : html`<dap-ds-option-item value=${dayjs(this.currentDate).year()}>\n                ${dayjs(this.currentDate).year()}\n              </dap-ds-option-item>`}\n        </dap-ds-select>\n        <dap-ds-select\n          id=\"monthSelect\"\n          floatingStrategy=\"fixed\"\n          class=${clsx(\n            'calendar__header-select',\n            'calendar__header-month-select',\n          )}\n          size=\"sm\"\n          noAnimation\n          aria-label=${translate('calendar.month')}\n          value=${dayjs(this.currentDate).locale(this.locale).month() + 1}\n          @dds-change=${(e: CustomEvent) => {\n            e.preventDefault()\n            e.stopPropagation()\n\n            if (\n              e.detail.value &&\n              !isNaN(parseInt(e.detail.value)) &&\n              parseInt(e.detail.value) !==\n                dayjs(this.currentDate).locale(this.locale).month() + 1\n            ) {\n              this.setMonth(parseInt(e.detail.value) - 1)\n            }\n          }}>\n          <dap-ds-icon-expand-up-down-fill\n            slot=\"indicator-icon\"\n            size=\"16\"></dap-ds-icon-expand-up-down-fill>\n          ${this.getAllowedMonths(\n            dayjs(this.currentDate).locale(this.locale),\n          ).map(\n            month =>\n              html`<dap-ds-option-item\n                value=${this.instanceLocalData.months().indexOf(month) + 1}>\n                ${month}\n              </dap-ds-option-item>`,\n          )}\n        </dap-ds-select>\n        <dap-ds-icon-button\n          class=\"calendar__header-button-next\"\n          clean\n          size=\"lg\"\n          variant=\"brand\"\n          icon=\"arrow-right-l-line\"\n          aria-label=${translate('calendar.nextMonth')}\n          @click=${() => {\n            this.setMonth(\n              dayjs(this.currentDate).locale(this.locale).month() + 1,\n            )\n          }}>\n        </dap-ds-icon-button>\n      </header>\n    `\n  }\n\n  render() {\n    return html` <div class=\"calendar\">\n      ${this.renderCalendarHeader()}\n      <table\n        part=\"base\"\n        class=\"calendar__grid\"\n        role=\"grid\"\n        aria-label=${`${this.value ? dayjs(this.value).locale(this.locale).format('LL, dddd') : ''}`}>\n        ${this.renderCalendarGridHeader()}\n        ${this.renderCalendarGridBody(this.startDate)}\n      </table>\n    </div>`\n  }\n}\n","import clsx from 'clsx'\nimport { nothing, unsafeCSS } from 'lit'\nimport {\n  customElement,\n  property,\n  queryAssignedElements,\n} from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { Alignment, BackgroundShade } from '@/common/types'\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { translate } from '@/localization/localization'\n\nimport styles from './callout.scss?inline'\n\nexport type CalloutVariant =\n  | 'brand'\n  | 'info'\n  | 'positive'\n  | 'warning'\n  | 'negative'\n\n/**\n * `dap-ds-callout` is a custom callout component.\n * @element dap-ds-callout\n * @title - Callout\n *\n * @event {{ void }} dds-close - Fired when the close button is clicked.\n *\n * @slot - The content of the callout.\n * @slot title - The title of the callout.\n * @slot icon - The icon of the callout.\n * @slot actions - The actions of the callout.\n * @slot close - The close button of the callout.\n *\n * @csspart base - The main callout container.\n * @csspart icon - The icon of the callout.\n * @csspart title - The title of the callout.\n * @csspart description - The description of the callout.\n * @csspart actions - The actions of the callout.\n * @csspart close - The close button of the callout.\n *\n * @cssproperty --dds-callout-padding - Padding of the callout content. Default: var(--dds-spacing-300)\n * @cssproperty --dds-callout-gap - Gap between elements in horizontal layout. Default: var(--dds-spacing-300)\n * @cssproperty --dds-callout-icon-size - Size of the icon. Default: var(--dds-spacing-600)\n * @cssproperty --dds-callout-title-color - Color of the title text. Default: var(--dds-text-neutral-strong)\n * @cssproperty --dds-callout-description-color - Color of the description text. Default: var(--dds-text-neutral-base)\n * @cssproperty --dds-callout-title-font-size - Font size of the title. Default: var(--dds-font-base)\n * @cssproperty --dds-callout-description-font-size - Font size of the description. Default: var(--dds-font-base)\n * @cssproperty --dds-callout-title-font-weight - Font weight of the title. Default: var(--dds-font-weight-bold)\n * @cssproperty --dds-callout-description-font-weight - Font weight of the description. Default: var(--dds-font-weight-medium)\n * @cssproperty --dds-callout-actions-font-weight - Font weight of the actions. Default: var(--dds-font-weight-bold)\n * @cssproperty --dds-callout-actions-gap - Gap between action items. Default: var(--dds-spacing-400)\n * @cssproperty --dds-callout-content-gap - Gap between content elements. Default: var(--dds-spacing-100)\n * @cssproperty --dds-callout-border-radius - Border radius of the callout. Default: var(--dds-radius-base)\n *\n * @cssproperty --dds-callout-brand-background - Brand variant background color. Default: var(--dds-background-brand-base)\n * @cssproperty --dds-callout-brand-background-subtle - Brand variant subtle background color. Default: var(--dds-background-brand-subtle)\n * @cssproperty --dds-callout-brand-background-medium - Brand variant medium background color. Default: var(--dds-background-brand-medium)\n * @cssproperty --dds-callout-brand-background-strong - Brand variant strong background color. Default: var(--dds-background-brand-strong)\n * @cssproperty --dds-callout-brand-icon - Brand variant icon color. Default: var(--dds-icon-brand-subtle)\n * @cssproperty --dds-callout-brand-border - Brand variant border color. Default: var(--dds-border-brand-subtle)\n *\n * @cssproperty --dds-callout-info-background - Info variant background color. Default: var(--dds-background-informative-base)\n * @cssproperty --dds-callout-info-background-subtle - Info variant subtle background color. Default: var(--dds-background-informative-subtle)\n * @cssproperty --dds-callout-info-background-medium - Info variant medium background color. Default: var(--dds-background-informative-medium)\n * @cssproperty --dds-callout-info-background-strong - Info variant strong background color. Default: var(--dds-background-informative-strong)\n * @cssproperty --dds-callout-info-icon - Info variant icon color. Default: var(--dds-icon-informative-subtle)\n * @cssproperty --dds-callout-info-border - Info variant border color. Default: var(--dds-border-informative-subtle)\n *\n * @cssproperty --dds-callout-positive-background - Positive variant background color. Default: var(--dds-background-positive-base)\n * @cssproperty --dds-callout-positive-background-subtle - Positive variant subtle background color. Default: var(--dds-background-positive-subtle)\n * @cssproperty --dds-callout-positive-background-medium - Positive variant medium background color. Default: var(--dds-background-positive-medium)\n * @cssproperty --dds-callout-positive-background-strong - Positive variant strong background color. Default: var(--dds-background-positive-strong)\n * @cssproperty --dds-callout-positive-icon - Positive variant icon color. Default: var(--dds-icon-positive-subtle)\n * @cssproperty --dds-callout-positive-border - Positive variant border color. Default: var(--dds-border-positive-subtle)\n *\n * @cssproperty --dds-callout-warning-background - Warning variant background color. Default: var(--dds-background-warning-base)\n * @cssproperty --dds-callout-warning-background-subtle - Warning variant subtle background color. Default: var(--dds-background-warning-subtle)\n * @cssproperty --dds-callout-warning-background-medium - Warning variant medium background color. Default: var(--dds-background-warning-medium)\n * @cssproperty --dds-callout-warning-background-strong - Warning variant strong background color. Default: var(--dds-background-warning-strong)\n * @cssproperty --dds-callout-warning-icon - Warning variant icon color. Default: var(--dds-icon-neutral-strong)\n * @cssproperty --dds-callout-warning-border - Warning variant border color. Default: var(--dds-border-warning-subtle)\n *\n * @cssproperty --dds-callout-negative-background - Negative variant background color. Default: var(--dds-background-negative-base)\n * @cssproperty --dds-callout-negative-background-subtle - Negative variant subtle background color. Default: var(--dds-background-negative-subtle)\n * @cssproperty --dds-callout-negative-background-medium - Negative variant medium background color. Default: var(--dds-background-negative-medium)\n * @cssproperty --dds-callout-negative-background-strong - Negative variant strong background color. Default: var(--dds-background-negative-strong)\n * @cssproperty --dds-callout-negative-icon - Negative variant icon color. Default: var(--dds-icon-negative-subtle)\n * @cssproperty --dds-callout-negative-border - Negative variant border color. Default: var(--dds-border-negative-subtle)\n */\n@customElement('dap-ds-callout')\nexport default class DapDSCallout extends DdsElement {\n  /** @ignore */\n  @queryAssignedElements({ slot: 'actions' }) actionSlot: Element[]\n\n  /** The variant of the callout\n   * @type { 'brand' | 'positive' | 'info' | 'warning' | 'negative' }\n   */\n  @property() variant: CalloutVariant = 'brand'\n\n  /** The alignment of the callout. Can be `vertical` or `horizontal`.\n   * @type { 'vertical' | 'horizontal' }\n   */\n  @property() alignment: Alignment = 'horizontal'\n\n  /** The strongness of the callout colors. Can be `subtle`, `base`, `medium`, or `strong`.\n   * @type { 'subtle' | 'base' | 'medium' | 'strong' }\n   */\n  @property() shade: BackgroundShade = 'base'\n\n  /** If the callout has a border */\n  @property({ type: String }) noBorder: string = 'true'\n\n  /** If the callout has a close button */\n  @property({ type: Boolean }) closeable: boolean = false\n\n  /** The header of the callout */\n  @property() title: string\n\n  /** The label of the close button */\n  @property() closeButtonLabel: string\n\n  /** If the callout is opened */\n  @property({ reflect: true }) opened: string = 'true'\n\n  static readonly styles = unsafeCSS(styles)\n\n  private get hasActions(): boolean {\n    return this.actionSlot && this.actionSlot.length > 0\n  }\n\n  private static readonly defaultIcons = {\n    brand: html`<dap-ds-icon-information-2-fill\n      aria-hidden=\"true\"></dap-ds-icon-information-2-fill>`,\n    info: html`<dap-ds-icon-information-2-fill\n      aria-hidden=\"true\"></dap-ds-icon-information-2-fill>`,\n    positive: html`<dap-ds-icon-checkbox-circle-fill\n      aria-hidden=\"true\"></dap-ds-icon-checkbox-circle-fill>`,\n    warning: html`<dap-ds-icon-alert-fill\n      aria-hidden=\"true\"></dap-ds-icon-alert-fill>`,\n    negative: html`<dap-ds-icon-error-warning-fill\n      aria-hidden=\"true\"></dap-ds-icon-error-warning-fill>`,\n  } as const\n\n  getDefaultIcon(variant: CalloutVariant) {\n    return DapDSCallout.defaultIcons[variant] ?? DapDSCallout.defaultIcons.brand\n  }\n\n  handleClose() {\n    this.emit('dds-close')\n  }\n\n  private handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Escape' && this.closeable) {\n      event.preventDefault()\n      this.handleClose()\n    }\n  }\n\n  render() {\n    return this.opened !== 'false'\n      ? html`\n          <dap-ds-card\n            part=\"base\"\n            role=\"region\"\n            aria-live=\"polite\"\n            aria-labelledby=${this.title ? 'callout-title' : nothing}\n            @keydown=${this.handleKeyDown}\n            .noBorder=${this.noBorder === 'true'}\n            class=${clsx(\n              'callout',\n              `callout--${this.variant}`,\n              `callout--${this.alignment}`,\n              `callout--${this.shade}`,\n              { [`callout--border`]: this.noBorder === 'false' },\n            )}>\n            <dap-ds-card-content class=\"callout__content\" spacing=\"none\">\n              <span class=\"callout__icon\">\n                <slot name=\"icon\" part=\"icon\">\n                  ${this.getDefaultIcon(this.variant)}\n                </slot>\n              </span>\n              <span class=\"callout__content-wrapper\">\n                ${this.title\n                  ? html`<span\n                      part=\"title\"\n                      class=\"callout__title\"\n                      id=\"callout-title\">\n                      <slot name=\"title\">${this.title}</slot>\n                    </span>`\n                  : nothing}\n                <span part=\"description\" class=\"callout__description\">\n                  <slot></slot>\n                </span>\n                ${this.hasActions\n                  ? html`<span part=\"actions\" class=\"callout__actions\">\n                      <slot name=\"actions\" part=\"actions\"></slot>\n                    </span>`\n                  : nothing}\n              </span>\n              ${this.closeable\n                ? html` <span part=\"close\" class=\"callout__close\">\n                    <slot name=\"close\">\n                      <dap-ds-icon-button\n                        clean\n                        aria-label=${this.closeButtonLabel\n                          ? this.closeButtonLabel\n                          : translate('close')}\n                        @click=${this.handleClose}>\n                        <dap-ds-icon name=\"close-line\"></dap-ds-icon>\n                      </dap-ds-icon-button>\n                    </slot>\n                  </span>`\n                : nothing}\n            </dap-ds-card-content>\n          </dap-ds-card>\n        `\n      : nothing\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\n\nimport { LinkTarget } from '@/common/types'\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\n\nimport styles from './_styles/card.scss?inline'\n\n/**\n * `dap-ds-card`\n * @summary A card is a container for content, actions, and images in a consistent format.\n * @element dap-ds-card\n * @title - Card\n *\n * @property {'sm' | 'md' | 'lg'} size - The size of the card title. Default is `sm`.\n *\n * @slot - The content of the card.\n *\n * @csspart base - The main card container.\n *\n * @cssproperty --dds-card-padding - The padding of the card. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-border-radius - The border radius of the card. Default is `var(--dds-radius-large)`.\n * @cssproperty --dds-card-border-width - The border width of the card. Default is `var(--dds-border-width-base)`.\n * @cssproperty --dds-card-border-color - The border color of the card. Default is `var(--dds-border-neutral-divider)`.\n * @cssproperty --dds-card-background - The background color of the card. Default is `var(--dds-background-neutral-base)`.\n * @cssproperty --dds-card-hover-border-color - The border color when hovering over the card. Default is `var(--dds-border-brand-base)`.\n * @cssproperty --dds-card-active-border-color - The border color when the card is active. Default is `var(--dds-border-brand-medium)`.\n * @cssproperty --dds-card-shadow - The box shadow of the card. Default is `none`.\n * @cssproperty --dds-card-hover-shadow - The box shadow when hovering over the card. Default is `none`.\n * @cssproperty --dds-card-transition-duration - The duration of the card's transitions. Default is `var(--dds-transition-medium)`.\n * @cssproperty --dds-card-transition-timing - The timing function of the card's transitions. Default is `var(--dds-easing-ease-in-out)`.\n */\n@customElement('dap-ds-card')\nexport default class DapDSCard extends SizedMixin(DdsElement) {\n  /** Whether the card is interactive. Default is false. If true, the card will be rendered as an anchor element. */\n  @property({ type: Boolean }) interactive = false\n  /**\n   * The render as type of the card, only applicable when interactive.\n   * @type {'a' | 'button'}\n   */\n  @property({ type: String }) renderAs: 'a' | 'button' = 'a'\n  /** Whether the card is disabled. */\n  @property({ type: Boolean, reflect: true }) disabled = false\n  /** Removes the border around the card */\n  @property({ type: Boolean }) noBorder = false\n  /** Removes the padding around the card */\n  @property({ type: Boolean }) noPadding = false\n\n  /** The link target of the card\n   * @type { '_blank' | '_self' | '_parent' | '_top' }\n   */\n  @property() target: LinkTarget = '_self'\n\n  /** The URL of the card. */\n  @property() href: string\n\n  /** The rel of the card link. */\n  @property() rel = 'noreferrer noopener'\n\n  static readonly styles = unsafeCSS(styles)\n\n  override focus(options?: FocusOptions) {\n    if (this.interactive) {\n      ;(this.shadowRoot?.querySelector('.card') as HTMLElement)?.focus(options)\n    }\n  }\n\n  render() {\n    return html`\n      ${this.interactive\n        ? html`<${unsafeStatic(this.renderAs)}\n            part=\"base\"\n            class=${clsx('card', {\n              'card--interactive': true,\n              'card--disabled': this.disabled,\n              'card--no-border': this.noBorder,\n              'card--no-padding': this.noPadding,\n              [`card--${this.size}`]: true,\n            })}\n            aria-label=${ifDefined(this.ariaLabel) || ''}\n            target=${this.target}\n            href=${ifDefined(this.href)}\n            rel=${this.target}>\n            <div\n              part=\"high-contrast\"\n              class=${clsx({\n                'card__highcontrast': true,\n                'card__highcontrast--hover': true,\n                ['card__highcontrast--noborder']: !this.noBorder,\n              })}></div>\n\n            <slot></slot>\n          </${unsafeStatic(this.renderAs)}>`\n        : html`<div\n            part=\"base\"\n            class=\"${clsx('card', {\n              [`card--${this.size}`]: true,\n              'card--disabled': this.disabled,\n              'card--no-border': this.noBorder,\n            })}\">\n            <div\n              part=\"high-contrast\"\n              class=${clsx({\n                'card__highcontrast': true,\n                'card__highcontrast--hover': true,\n                ['card__highcontrast--noborder']: !this.noBorder,\n              })}></div>\n            <slot></slot>\n          </div>`}\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\n\nimport styles from './_styles/card-actions.scss?inline'\n\n/**\n * `dap-ds-card-actions`\n * @summary A card actions is a container for actions in a card.\n * @element dap-ds-card-actions\n * @title - Card actions\n * @group card\n *\n * @property {'sm' | 'md' | 'lg'} size - The size of the card actions. Default is `sm`.\n * @property {'top' | 'bottom' | 'both' | 'none'} spacing - The spacing of the card actions. This adds a margin to the card actions. Default is `bottom`.\n *\n * @slot - The content of the card actions.\n *\n * @csspart base - The main card actions container.\n *\n * @cssproperty --dds-card-actions-gap - The gap between items in the card actions. Default is `var(--dds-spacing-200)`.\n * @cssproperty --dds-card-actions-padding-lg - The padding for large size card actions. Default is `var(--dds-spacing-600)`.\n * @cssproperty --dds-card-actions-padding-md - The padding for medium size card actions. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-actions-padding-sm - The padding for small size card actions. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-actions-margin-lg - The margin for large size card actions spacing. Default is `var(--dds-spacing-600)`.\n * @cssproperty --dds-card-actions-margin-md - The margin for medium size card actions spacing. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-actions-margin-sm - The margin for small size card actions spacing. Default is `var(--dds-spacing-400)`.\n */\n@customElement('dap-ds-card-actions')\nexport default class DapDSCardActions extends SizedMixin(DdsElement) {\n  /** Whether the card actions should be sized from the parent. */\n  @property() parentSized: string = 'true'\n\n  static readonly styles = unsafeCSS(styles)\n\n  constructor() {\n    super()\n    this.spacing = 'bottom'\n  }\n\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        class=${clsx(\n          'card-actions',\n          `card-actions--${this.size}`,\n          `card-actions-spacing--${this.spacing}`,\n        )}>\n        <slot> </slot>\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\n\nimport styles from './_styles/card-content.scss?inline'\n\n/**\n * `dap-ds-card-content`\n * @summary A card content is a container for content in a card.\n * @element dap-ds-card-content\n * @title - Card content\n * @group card\n *\n * @property {'sm' | 'md' | 'lg'} size - The size of the card subtitle. Default is `sm`.\n * @property {'top' | 'bottom' | 'both' | 'none'} spacing - The spacing of the card content. This adds a margin to the card subtitle. Default is `bottom`.\n *\n * @slot - The content of the card-content.\n *\n * @csspart base - The main card content container.\n *\n * @cssproperty --dds-card-content-padding - The padding of the card content. Default is `0`.\n * @cssproperty --dds-card-content-margin - The margin of the card content. Default is `0`.\n * @cssproperty --dds-card-content-font-size - The font size of the card content. Default is `var(--dds-font-base)`.\n * @cssproperty --dds-card-content-line-height - The line height of the card content. Default is `var(--dds-font-line-height-xlarge)`.\n * @cssproperty --dds-card-content-spacing-lg - The large spacing value. Default is `var(--dds-spacing-600)`.\n * @cssproperty --dds-card-content-spacing-md - The medium spacing value. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-content-spacing-sm - The small spacing value. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-content-spacing-top - The top spacing value. Default is `0`.\n * @cssproperty --dds-card-content-spacing-bottom - The bottom spacing value. Default is `0`.\n */\n@customElement('dap-ds-card-content')\nexport default class DapDSCardContent extends SizedMixin(DdsElement) {\n  /** The base rendered root tag of the card content. */\n  @property() renderAs = 'div'\n  /** Whether the card content should be sized from the parent. */\n  @property() parentSized: string = 'true'\n\n  static readonly styles = unsafeCSS(styles)\n\n  constructor() {\n    super()\n    this.spacing = 'bottom'\n  }\n\n  render() {\n    return html`\n      <${unsafeStatic(this.renderAs)} part=\"base\" class=${clsx(\n        'card-content',\n        `card-content--${this.size}`,\n        `card-content-spacing--${this.spacing}`,\n      )}>\n        <slot> </slot>\n      </${unsafeStatic(this.renderAs)}>\n    `\n  }\n}\n","import { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\n\nimport styles from './_styles/card-image.scss?inline'\n\n/**\n * `dap-ds-card-image`\n * @summary A card image is a container for images in a card.\n * @element dap-ds-card-image\n * @title - Card image\n * @group card\n *\n * @slot - The default slot for the image. The slot can accept any element, for example a video. If nothing is added to the slot, the image will be rendered.\n *\n * @csspart base - The main card image container.\n *\n * @cssproperty --dds-card-image-width - The width of the image. Default is `100%`.\n * @cssproperty --dds-card-image-height - The height of the image. Default is `auto`.\n * @cssproperty --dds-card-image-object-fit - How the image fits within its container. Default is `cover`.\n * @cssproperty --dds-card-image-background-position - The background position of the image. Default is `center`.\n * @cssproperty --dds-card-image-background-size - How the background image is sized. Default is `cover`.\n * @cssproperty --dds-card-image-background-repeat - How the background image repeats. Default is `no-repeat`.\n */\n@customElement('dap-ds-card-image')\nexport default class DapDSCardImage extends DdsElement {\n  /** The source of the image.*/\n  @property() src: string\n  /** The alt text of the image.*/\n  @property() alt: string\n  /** The width of the image.*/\n  @property({ type: Number }) width: number\n  /** The height of the image.*/\n  @property({ type: Number }) height: number\n\n  static readonly styles = unsafeCSS(styles)\n\n  render() {\n    return html`<slot\n      ><img\n        part=\"base\"\n        class=\"card-image\"\n        style=${`width: ${this.width}px; height: ${this.height}px;`}\n        alt=${this.alt}\n        src=${this.src}\n    /></slot>`\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\n\nimport styles from './_styles/card-subtitle.scss?inline'\n\n/**\n * `dap-ds-card-subtitle`\n * @summary Subtitle of the card\n * @element dap-ds-card-subtitle\n * @title - Card subtitle\n * @group card\n *\n * @property {'sm' | 'lg'} size - The size of the card subtitle. Default is `sm`.\n * @property {'top' | 'bottom' | 'both' | 'none'} spacing - The spacing of the card subtitle. This adds a margin to the card subtitle. Default is `top`.\n *\n * @slot - The content of the subtitle.\n *\n * @csspart base - The subtitle container.\n *\n * @cssproperty --dds-card-subtitle-color - The color of the subtitle text. Default is `var(--dds-text-neutral-subtle)`.\n * @cssproperty --dds-card-subtitle-font-size - The font size of the subtitle. Default is `var(--dds-font-xs)`.\n * @cssproperty --dds-card-subtitle-font-weight - The font weight of the subtitle. Default is `var(--dds-font-weight-bold)`.\n * @cssproperty --dds-card-subtitle-line-height - The line height of the subtitle. Default is `var(--dds-font-line-height-large)`.\n *\n * @cssproperty --dds-card-subtitle-padding-sm - The padding for small size. Default is `0 var(--dds-spacing-400)`.\n * @cssproperty --dds-card-subtitle-padding-md - The padding for medium size. Default is `0 var(--dds-spacing-400)`.\n * @cssproperty --dds-card-subtitle-padding-lg - The padding for large size. Default is `0 var(--dds-spacing-600)`.\n *\n * @cssproperty --dds-card-subtitle-margin-sm - The base margin for small size. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-subtitle-margin-md - The base margin for medium size. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-subtitle-margin-lg - The base margin for large size. Default is `var(--dds-spacing-600)`.\n *\n * @cssproperty --dds-card-subtitle-spacing-top-sm - The top spacing for small size. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-subtitle-spacing-top-md - The top spacing for medium size. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-subtitle-spacing-top-lg - The top spacing for large size. Default is `var(--dds-spacing-600)`.\n *\n * @cssproperty --dds-card-subtitle-spacing-bottom-sm - The bottom spacing for small size. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-subtitle-spacing-bottom-md - The bottom spacing for medium size. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-subtitle-spacing-bottom-lg - The bottom spacing for large size. Default is `var(--dds-spacing-600)`.\n *\n * @cssproperty --dds-card-subtitle-spacing-both-sm - The both (top and bottom) spacing for small size. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-subtitle-spacing-both-md - The both (top and bottom) spacing for medium size. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-subtitle-spacing-both-lg - The both (top and bottom) spacing for large size. Default is `var(--dds-spacing-600)`.\n */\n@customElement('dap-ds-card-subtitle')\nexport default class DapDSCardSubtitle extends SizedMixin(DdsElement) {\n  /** The base rendered root tag of the card subtitle. */\n  @property() renderAs = 'span'\n  /** Whether the card subtitle should be sized from the parent. */\n  @property() parentSized: string = 'true'\n\n  static readonly styles = unsafeCSS(styles)\n\n  constructor() {\n    super()\n    this.spacing = 'top'\n  }\n\n  render() {\n    return html`\n      <${unsafeStatic(this.renderAs)} part=\"base\" class=${clsx(\n        'card-subtitle',\n        `card-subtitle--${this.size}`,\n        `card-subtitle-spacing--${this.spacing}\n      `,\n      )}>\n        <slot></slot>\n      </${unsafeStatic(this.renderAs)}>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\n\nimport styles from './_styles/card-title.scss?inline'\n\n/**\n * `dap-ds-card-title`\n * @summary Title of the card\n * @element dap-ds-card-title\n * @title - Card title\n * @group card\n *\n * @property {'sm' |'md' | 'lg'} size - The size of the card title. Default is `sm`.\n * @property {boolean} noPadding - Whether the card title should have no padding.\n * @property {'top' | 'bottom' | 'both' | 'none'} spacing - The spacing of the card title. This adds a margin to the card title. Default is `top`.\n *\n * @slot - The content of the title.\n *\n * @csspart base - The main card title container.\n *\n * @cssproperty --dds-card-title-color - The text color of the card title. Default is `var(--dds-color-text-primary)`.\n * @cssproperty --dds-card-title-font-family - The font family of the card title. Default is `var(--dds-font-family-base)`.\n * @cssproperty --dds-card-title-font-weight - The font weight of the card title. Default is `var(--dds-font-weight-bold)`.\n * @cssproperty --dds-card-title-line-height - The line height of the card title. Default is `var(--dds-font-line-height-large)`.\n * @cssproperty --dds-card-title-margin-bottom - The bottom margin of the card title. Default is `var(--dds-spacing-100)`.\n *\n * @cssproperty --dds-card-title-sm-padding-x - The horizontal padding for small size. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-title-sm-padding-bottom - The bottom padding for small size. Default is `var(--dds-spacing-100)`.\n * @cssproperty --dds-card-title-sm-spacing-top - The top spacing for small size. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-title-sm-spacing-bottom - The bottom spacing for small size. Default is `var(--dds-spacing-400)`.\n *\n * @cssproperty --dds-card-title-md-padding-x - The horizontal padding for medium size. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-title-md-padding-bottom - The bottom padding for medium size. Default is `var(--dds-spacing-100)`.\n * @cssproperty --dds-card-title-md-spacing-top - The top spacing for medium size. Default is `var(--dds-spacing-400)`.\n * @cssproperty --dds-card-title-md-spacing-bottom - The bottom spacing for medium size. Default is `var(--dds-spacing-400)`.\n *\n * @cssproperty --dds-card-title-lg-padding-x - The horizontal padding for large size. Default is `var(--dds-spacing-600)`.\n * @cssproperty --dds-card-title-lg-padding-bottom - The bottom padding for large size. Default is `var(--dds-spacing-100)`.\n * @cssproperty --dds-card-title-lg-spacing-top - The top spacing for large size. Default is `var(--dds-spacing-600)`.\n * @cssproperty --dds-card-title-lg-spacing-bottom - The bottom spacing for large size. Default is `var(--dds-spacing-600)`.\n */\n@customElement('dap-ds-card-title')\nexport default class DapDSCardTitle extends SizedMixin(DdsElement) {\n  /** The base rendered root tag of the card title. */\n  @property() renderAs = 'span'\n  /** Whether the card title should be sized from the parent. */\n  @property() parentSized: string = 'true'\n  /** Whether the card title should have no padding. */\n  @property({ type: Boolean }) noPadding: boolean\n\n  static readonly styles = unsafeCSS(styles)\n\n  constructor() {\n    super()\n    this.spacing = 'top'\n  }\n\n  render() {\n    return html`\n      <${unsafeStatic(this.renderAs)} part=\"base\" class=${clsx(\n        'card-title',\n        `card-title--${this.size}`,\n        `card-title-spacing--${this.spacing}`,\n        {\n          'card-title--no-padding': this.noPadding,\n        },\n      )}>\n        <slot></slot>\n      </${unsafeStatic(this.renderAs)}>\n    `\n  }\n}\n","import { LitElement } from 'lit'\nimport { property } from 'lit/decorators.js'\n\ntype Constructor<T = Record<string, unknown>> = {\n  new (...args: any[]): T\n  prototype: T\n}\n\nexport interface ChoiceElementMixinInterface {\n  checked: boolean\n}\n\nexport function ChoiceElementMixin<T extends Constructor<LitElement>>(\n  constructor: T,\n): T & Constructor<ChoiceElementMixinInterface> {\n  class ChoiceElement extends constructor {\n    @property({ type: Boolean, reflect: true }) checked = false\n  }\n\n  return ChoiceElement as Constructor<ChoiceElementMixinInterface> & T\n}\n","import { LitElement } from 'lit'\nimport { property } from 'lit/decorators.js'\n\nimport { DescriptionPlacement, LabelPlacement } from '@/common/types'\n\ntype Constructor<T = Record<string, unknown>> = {\n  new (...args: any[]): T\n  prototype: T\n}\n\nexport interface LabelPositionedElementInterface {\n  labelPlacement: LabelPlacement\n  descriptionPlacement: DescriptionPlacement\n}\n\nexport function LabelPositionedMixin<T extends Constructor<LitElement>>(\n  constructor: T,\n): T & Constructor<LabelPositionedElementInterface> {\n  class LabelPositionedElement extends constructor {\n    @property() labelPlacement: LabelPlacement = 'right'\n    @property()\n    descriptionPlacement: DescriptionPlacement = 'bottom'\n  }\n  return LabelPositionedElement as Constructor<LabelPositionedElementInterface> &\n    T\n}\n","import { DdsElement } from '../dds-hu-element'\nimport { ChoiceElementMixin } from './choiceElementMixin'\nimport { FeedbackMixin } from './feedbackMixin'\nimport { FocusableMixin } from './focusableMixin'\nimport { FormElementMixin } from './formElementMixin'\nimport { LabelableMixin } from './labelableMixin'\nimport { LabelPositionedMixin } from './labelPositionedMixin'\nimport { SizedMixin } from './sizedMixin'\n\nexport const LabeledChoiceElement = FeedbackMixin(\n  LabelPositionedMixin(\n    ChoiceElementMixin(\n      FocusableMixin(LabelableMixin(SizedMixin(FormElementMixin(DdsElement)))),\n    ),\n  ),\n)\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property, query } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { CommonFormElementSize, CommonSize } from '@/common/types'\nimport { LabeledChoiceElement } from '@/internal/mixin/labeledChoiceElement'\n\nimport styles from './_styles/checkbox.scss?inline'\n\n/**\n * `dap-ds-checkbox`\n * @summary A checkbox is a form element that allows the user to select one or more options from a set.\n * @element dap-ds-checkbox\n * @title - Checkbox\n *\n * @event {{ checked: boolean, indeterminate: boolean, value: string, disabled: boolean, readonly: boolean, type: 'checkbox' }} dds-change - Fired when the checkbox is checked or unchecked.\n * @event {{ void }} dds-blur - Emitted when the checkbox loses focus.\n * @event {{ void }} dds-focus - Emitted when the checkbox gains focus.\n * @event {{ checked: boolean, indeterminate: boolean, value: string, disabled: boolean, readonly: boolean }} dds-input - Emitted when the checkbox receives input.\n *\n * @property {string} name - The name of the checkbox.\n * @property {string} value - The value of the checkbox.\n * @property {boolean} checked - Whether the checkbox is checked.\n * @property {string} label - The label of the checkbox.\n * @property {string} description - The description of the checkbox.\n * @property {boolean} disabled - Whether the checkbox is disabled.\n * @property {boolean} readonly - Whether the checkbox is readonly (cannot be changed but value is submitted with form).\n * @property {boolean} required - Whether the checkbox is required.\n * @property {'xs' | 'sm' | 'lg'} size - The size of the checkbox. Default is 'sm'.\n * @property {'left' | 'right'} labelPlacement - The placement of the label.\n * @property {'top' | 'bottom'} descriptionPlacement - The placement of the description.\n * @property {boolean} subtle - The weight of the label.\n * @property {string} feedback - The feedback of the checkbox.\n * @property {'negative' | 'positive' | 'warning'} feedbackType - The feedback type of the checkbox.\n * @property {boolean} invalid - The invalid state of the checkbox.\n * @property {boolean} optional - The optional state of the checkbox.\n * @property {string} optionalLabel - The optional label of the checkbox.\n *\n * @csspart base - The main checkbox container.\n * @csspart label - The label of the checkbox.\n * @csspart input - The input of the checkbox.\n * @csspart control - The control of the checkbox.\n * @csspart icon - The icon of the checkbox.\n * @csspart label-container - The label container of the checkbox.\n * @csspart description - The description of the checkbox.\n * @csspart readonly - The readonly state of the checkbox.\n *\n * @cssproperty --dds-checkbox-size - The size of the checkbox. Default is `var(--dds-spacing-500)`.\n * @cssproperty --dds-checkbox-border-width - The border width of the checkbox. Default is `var(--dds-border-width-large)`.\n * @cssproperty --dds-checkbox-border-radius - The border radius of the checkbox. Default is `var(--dds-radius-small)`.\n * @cssproperty --dds-checkbox-border-color - The border color of the checkbox. Default is `var(--dds-border-neutral-base)`.\n * @cssproperty --dds-checkbox-background-color - The background color of the checkbox. Default is `transparent`.\n * @cssproperty --dds-checkbox-icon-color - The color of the checkbox icon. Default is `var(--dds-button-primary-icon-enabled)`.\n * @cssproperty --dds-checkbox-hover-border-color - The border color when hovering over the checkbox. Default is `var(--dds-border-neutral-medium)`.\n * @cssproperty --dds-checkbox-hover-background-color - The background color when hovering over the checkbox. Default is `var(--dds-background-neutral-medium)`.\n * @cssproperty --dds-checkbox-active-border-color - The border color when the checkbox is active. Default is `var(--dds-border-neutral-strong)`.\n * @cssproperty --dds-checkbox-active-background-color - The background color when the checkbox is active. Default is `var(--dds-background-neutral-strong)`.\n * @cssproperty --dds-checkbox-checked-border-color - The border color when the checkbox is checked. Default is `var(--dds-background-brand-base-inverted)`.\n * @cssproperty --dds-checkbox-checked-background-color - The background color when the checkbox is checked. Default is `var(--dds-background-brand-base-inverted)`.\n * @cssproperty --dds-checkbox-checked-hover-border-color - The border color when hovering over a checked checkbox. Default is `var(--dds-background-brand-medium-inverted)`.\n * @cssproperty --dds-checkbox-checked-hover-background-color - The background color when hovering over a checked checkbox. Default is `var(--dds-background-brand-medium-inverted)`.\n * @cssproperty --dds-checkbox-checked-active-border-color - The border color when a checked checkbox is active. Default is `var(--dds-background-brand-strong-inverted)`.\n * @cssproperty --dds-checkbox-checked-active-background-color - The background color when a checked checkbox is active. Default is `var(--dds-background-brand-strong-inverted)`.\n * @cssproperty --dds-checkbox-invalid-border-color - The border color when the checkbox is invalid. Default is `var(--dds-border-negative-base)`.\n * @cssproperty --dds-checkbox-invalid-background-color - The background color when the checkbox is invalid. Default is `var(--dds-background-negative-base)`.\n * @cssproperty --dds-checkbox-invalid-hover-border-color - The border color when hovering over an invalid checkbox. Default is `var(--dds-border-negative-medium)`.\n * @cssproperty --dds-checkbox-invalid-hover-background-color - The background color when hovering over an invalid checkbox. Default is `var(--dds-background-negative-medium)`.\n * @cssproperty --dds-checkbox-invalid-active-border-color - The border color when an invalid checkbox is active. Default is `var(--dds-border-negative-strong)`.\n * @cssproperty --dds-checkbox-invalid-active-background-color - The background color when an invalid checkbox is active. Default is `var(--dds-background-negative-strong)`.\n * @cssproperty --dds-checkbox-disabled-border-color - The border color when the checkbox is disabled. Default is `var(--dds-button-primary-background-disabled)`.\n * @cssproperty --dds-checkbox-disabled-background-color - The background color when the checkbox is disabled. Default is `var(--dds-button-primary-background-disabled)`.\n * @cssproperty --dds-checkbox-disabled-icon-color - The color of the checkbox icon when disabled. Default is `var(--dds-button-primary-icon-disabled)`.\n * @cssproperty --dds-checkbox-readonly-border-color - The border color when the checkbox is readonly. Default is `var(--dds-border-neutral-subtle)`.\n * @cssproperty --dds-checkbox-readonly-background-color - The background color when the checkbox is readonly. Default is `var(--dds-background-neutral-subtle)`.\n * @cssproperty --dds-checkbox-readonly-icon-color - The color of the checkbox icon when readonly. Default is `var(--dds-text-neutral-base)`.\n */\n@customElement('dap-ds-checkbox')\nexport default class DapDSCheckbox extends LabeledChoiceElement {\n  @query('#input') private readonly input!: HTMLInputElement\n\n  /** Whether the checkbox is indeterminate */\n  @property({ type: Boolean, reflect: true }) indeterminate = false\n\n  /** Whether the checkbox should prevent the default action */\n  @property({ type: Boolean, reflect: true }) preventDefault: boolean = false\n\n  /** This sets up border around the checkbox, when true. */\n  @property({ type: Boolean }) border: boolean = false\n\n  /** Whether the checkbox is readonly */\n  @property({ type: Boolean, reflect: true }) readonly: boolean = false\n\n  /** The type of the checkbox\n   * @type {'normal' | 'background'}\n   */\n  @property({ type: String }) type: 'normal' | 'background' = 'normal'\n\n  static readonly styles = unsafeCSS(styles)\n\n  /**\n   * Validates property combinations and logs warnings for invalid states.\n   * @private\n   */\n  private validateProperties(): void {\n    // Warn if both checked and indeterminate are true (invalid combination)\n    if (this.checked && this.indeterminate) {\n      console.warn(\n        'Checkbox: Cannot be both checked and indeterminate simultaneously. Indeterminate state will take precedence.',\n      )\n    }\n  }\n\n  /**\n   * Gets the aria-describedby attribute value by combining description and feedback IDs.\n   * @returns {string | undefined} Space-separated IDs or undefined if none exist\n   * @private\n   */\n  private getAriaDescribedBy(): string | undefined {\n    const ids: string[] = []\n\n    if (this.description) {\n      ids.push('description')\n    }\n\n    if (this.feedback) {\n      ids.push('feedback')\n    }\n\n    return ids.length > 0 ? ids.join(' ') : undefined\n  }\n\n  /**\n   * Gets the aria-checked attribute value based on checkbox state.\n   * @returns {'true' | 'false' | 'mixed'} The appropriate aria-checked value\n   * @private\n   */\n  private getAriaChecked(): 'true' | 'false' | 'mixed' {\n    if (this.indeterminate) {\n      return 'mixed'\n    }\n    return this.checked ? 'true' : 'false'\n  }\n\n  /**\n   * Handles click events on the checkbox.\n   * Manages the checked/indeterminate state transitions and emits change events.\n   * @private\n   */\n  private handleClick(event?: Event) {\n    // Early return if click should be prevented, component is disabled, or readonly\n    if (this.preventDefault || this.disabled || this.readonly) {\n      if (this.readonly && event) {\n        event.preventDefault()\n        event.stopPropagation()\n      }\n      return\n    }\n\n    // Validate property combinations before state change\n    this.validateProperties()\n\n    // Handle state transitions\n    if (this.indeterminate) {\n      this.indeterminate = false\n      this.checked = true\n    } else {\n      this.checked = !this.checked\n    }\n\n    const { checked, indeterminate, value, disabled } = this\n\n    // Emit change event with null safety\n    try {\n      this.emit('dds-change', {\n        checked,\n        indeterminate,\n        value: value || (checked ? 'on' : 'off'),\n        disabled,\n        readonly: this.readonly,\n        type: 'checkbox',\n      })\n    } catch (error) {\n      console.error('Error emitting checkbox change event:', error)\n    }\n\n    // Update validity state with error handling\n    try {\n      this.setValidity()\n    } catch (error) {\n      console.error('Error setting checkbox validity:', error)\n    }\n  }\n\n  /**\n   * Handles input events on the checkbox.\n   * Emits the dds-input event with current checkbox state.\n   * @private\n   */\n  private handleInput() {\n    const { checked, indeterminate, value, disabled } = this\n\n    const event = new CustomEvent('dds-input', {\n      bubbles: true,\n      cancelable: false,\n      composed: true,\n      detail: {\n        checked,\n        indeterminate,\n        value,\n        disabled,\n        readonly: this.readonly,\n      },\n    })\n\n    this.dispatchEvent(event)\n  }\n\n  /**\n   * Handles keyboard events on the checkbox.\n   * Provides enhanced keyboard navigation and accessibility.\n   * @param {KeyboardEvent} event - The keyboard event\n   * @private\n   */\n  private handleKeyDown(event: KeyboardEvent): void {\n    // Early return if readonly\n    if (this.readonly) {\n      return\n    }\n\n    // Handle Space key to toggle checkbox (in addition to default behavior)\n    if (event.code === 'Space') {\n      // Allow default Space behavior for checkbox input\n      // This ensures proper accessibility and form behavior\n      return\n    }\n\n    // Handle Enter key to toggle checkbox (custom behavior)\n    if (event.code === 'Enter') {\n      event.preventDefault()\n      this.handleClick()\n    }\n  }\n\n  public get focusElement(): HTMLInputElement {\n    if (!this.input) {\n      throw new Error(\n        'Checkbox input element not found. Component may not be properly initialized.',\n      )\n    }\n    return this.input\n  }\n\n  /**\n   * Programmatically focuses the checkbox input element.\n   * @public\n   */\n  public focus(): void {\n    if (this.input && !this.disabled && !this.readonly) {\n      this.input.focus()\n    }\n  }\n\n  /**\n   * Programmatically blurs the checkbox input element.\n   * @public\n   */\n  public blur(): void {\n    if (this.input) {\n      this.input.blur()\n    }\n  }\n\n  /**\n   * Renders the appropriate icon based on checkbox state.\n   * @returns {TemplateResult | null} The icon template or null if unchecked\n   * @private\n   */\n  renderIcon() {\n    if (this.indeterminate) {\n      return html`\n        <dap-ds-icon-subtract-line\n          class=\"checkbox__icon\"\n          part=\"icon\"\n          size=\"16\"\n          decorative></dap-ds-icon-subtract-line>\n      `\n    }\n\n    if (this.checked) {\n      return html`\n        <dap-ds-icon-check-line2\n          class=\"checkbox__icon\"\n          part=\"icon\"\n          size=\"16\"\n          decorative></dap-ds-icon-check-line2>\n      `\n    }\n\n    return null\n  }\n\n  /**\n   * Handles invalid events on the checkbox input.\n   * Prevents the default browser validation UI from showing and manages invalid state.\n   * @param {Event} event - The invalid event\n   * @private\n   */\n  handleInvalid(event: Event) {\n    event.preventDefault()\n    // Set invalid state if not already set\n    if (!this.invalid) {\n      this.invalid = true\n    }\n  }\n\n  render() {\n    return html`\n      <div part=\"base\">\n        <label\n          part=\"base-label\"\n          id=\"label\"\n          class=${clsx('checkbox choice', `checkbox--${this.size}`, {\n            'checkbox--checked': this.checked,\n            'checkbox--disabled': this.disabled,\n            'checkbox--readonly': this.readonly,\n            'checkbox--indeterminate': this.indeterminate,\n            'checkbox--required': this.required,\n            'choice--readonly': this.readonly,\n            'choice--disabled': this.disabled,\n            'choice__label--right': this.labelPlacement === 'right',\n            'choice__label--left': this.labelPlacement === 'left',\n          })}>\n          <div\n            part=\"wrapper\"\n            class=${clsx('input__wrapper', {\n              'input__wrapper--background': this.type === 'background',\n              'input__wrapper--border': this.border,\n            })}>\n            <input\n              part=\"input\"\n              type=\"checkbox\"\n              class=${clsx('input', {\n                'input--background': this.type === 'background',\n              })}\n              name=${ifDefined(this.name ? this.name : undefined)}\n              id=\"input\"\n              .indeterminate=${this.indeterminate}\n              .checked=${this.checked}\n              .disabled=${this.disabled}\n              .required=${this.required}\n              aria-label=${ifDefined(this.ariaLabel) || ''}\n              aria-describedby=${ifDefined(this.getAriaDescribedBy())}\n              aria-checked=${this.getAriaChecked()}\n              .aria-invalid=${this.invalid ? 'true' : null}\n              @invalid=${this.handleInvalid}\n              @click=${this.handleClick}\n              @input=${this.handleInput}\n              @keydown=${this.handleKeyDown}\n              @blur=${super.onBlur}\n              @focus=${super.onFocus} />\n\n            <span\n              part=\"control\"\n              class=${clsx('input__control', `input__control--${this.size}`, {\n                'input__control--checked': this.checked,\n                'input__control--disabled': this.disabled,\n                'input__control--readonly': this.readonly,\n                'input__control--indeterminate': this.indeterminate,\n                'input__control--invalid': this.invalid,\n              })}>\n              <span\n                part=\"high-contrast\"\n                class=${clsx(\n                  'input__control-high-contrast',\n                  `input__control-high-contrast--${this.size}`,\n                  {\n                    'input__control-high-contrast--disabled': this.disabled,\n                    'input__control-high-contrast--readonly': this.readonly,\n                  },\n                )}></span>\n              <slot name=\"iconcontent\"> ${this.renderIcon()} </slot>\n            </span>\n\n            <div\n              part=\"label-container\"\n              class=${clsx('choice__label-container', {\n                'choice__label-container--disabled': this.disabled,\n                'choice__label-container--readonly': this.readonly,\n                'choice__label--bottom': this.descriptionPlacement === 'top',\n                'choice__label--top': this.descriptionPlacement === 'bottom',\n              })}>\n              ${this.label &&\n              html`<dap-ds-form-label\n                id=\"label\"\n                class=\"label\"\n                part=\"label\"\n                .size=${this.size}\n                .required=${this.required}\n                .optional=${this.optional}\n                .optionalLabel=${this.optionalLabel}\n                .disabled=${this.disabled || this.readonly}\n                .readonly=${this.readonly}\n                label=${ifDefined(this.label)}\n                subtle\n                renderAs=\"span\">\n              </dap-ds-form-label>`}\n              ${this.description &&\n              html`\n                <dap-ds-typography\n                  class=\"description\"\n                  variant=\"description\"\n                  part=\"description\"\n                  size=${ifDefined(this.size as CommonFormElementSize)}\n                  id=\"description\">\n                  ${this.description}\n                </dap-ds-typography>\n              `}\n            </div>\n          </div>\n          ${this.feedback &&\n          html`\n            <dap-ds-feedback\n              part=\"feedback\"\n              feedbackType=${ifDefined(this.feedbackType)}\n              feedbackSize=${ifDefined(this.size) as CommonSize}\n              id=\"feedback\"\n              .subtle=${this.subtle}>\n              ${this.feedback}\n            </dap-ds-feedback>\n          `}\n        </label>\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport { property, query, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { PopupPlacement } from '@/common/types'\nimport { getValidityStateObject } from '@/common/utils'\nimport { GenericFormElement } from '@/internal/mixin/genericFormElement'\nimport { t, translate } from '@/localization/localization'\n\nimport DapDSOptionList from '../option-list/option-list.component'\nimport styles from './combobox.scss?inline'\n\nexport default class ComboboxBaseElement extends GenericFormElement {\n  @query('input') readonly triggerInput: HTMLInputElement\n  @query('dap-ds-option-list') readonly optionList: DapDSOptionList\n  @property({ reflect: true }) placement: PopupPlacement = 'bottom-start'\n  @property({ type: Boolean, reflect: true }) opened = false\n  @property() searchMode: 'none' | 'typehead' | 'autocomplete' | 'manual' =\n    'autocomplete'\n  @property({ type: Boolean }) search = false\n  @property() clearButton?: string = 'true'\n  @property() placeholder: string | null\n  @property({ type: Boolean }) sync?: boolean\n  @property({ type: Boolean }) allowManualInput?: boolean = false\n  @property({ type: Boolean }) searchForText?: boolean = false\n  @property({ type: String }) searchOnValueSet? = 'false'\n  @property({ type: Boolean }) loading?: boolean = false\n  @property({ type: String }) selectable?: string = 'true'\n  @property({ type: Boolean }) noAnimation?: boolean = false\n  @property({ type: Boolean }) textComplete?: boolean = false\n  @property({ type: Boolean }) openOnEmpty?: boolean = false\n  @property() searchButtonAriaLabel?: string\n  @property({ type: Boolean }) subtle: boolean\n\n  @state() selectedItem: any\n  @state() currentItem: any\n  @state() selectedText: string\n\n  private optionListObserver: MutationObserver | null = null\n  private isUserInteraction: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected async firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): Promise<void> {\n    super.firstUpdated(_changedProperties)\n\n    await this.optionList.updateComplete\n\n    if (this.value) {\n      // Try to find the selected item from available options\n      this.selectedItem = this.optionList\n        ?.getAllOptions()\n        .find(option => option.value === this.value)\n\n      if (this.selectedItem) {\n        this.selectedText = this.selectedItem.optionText || ''\n      } else {\n        // If no selected item found, leave selectedText empty\n        // It will be updated when options are loaded via updateSelectionFromValue\n        this.selectedText = ''\n      }\n\n      if (\n        !this.selectedText &&\n        (this.allowManualInput || this.searchMode === 'none')\n      ) {\n        this.selectedText = this.value\n      }\n    }\n\n    // Set up MutationObserver to watch for dynamic option changes\n    this.setupOptionListObserver()\n  }\n\n  protected updated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.updated(_changedProperties)\n\n    // Handle value property changes from outside the component\n    // Only process for combobox components, not search components\n    if (_changedProperties.has('value') && this.triggerInput && !this.search) {\n      const newValue = this.value\n      if (newValue) {\n        this.handleValueChange(newValue)\n      } else {\n        this.clearSelection()\n      }\n    }\n  }\n\n  /**\n   * Handles value changes from outside the component\n   * This ensures the selection state is updated when the value is set programmatically\n   */\n  private handleValueChange(newValue: string): void {\n    if (!newValue) return\n\n    // Mark this as programmatic change, not user interaction\n    this.isUserInteraction = false\n\n    // Try to find the option with the new value\n    const option = this.getComboboxOptions().find(opt => opt.value === newValue)\n\n    if (option) {\n      // Option found, update selection\n      this.selectedItem = option\n      this.selectedText = option.optionText || option.textContent || ''\n\n      // Update the input value\n      if (this.triggerInput) {\n        this.triggerInput.value = this.selectedText\n      }\n\n      // Trigger re-render\n      this.requestUpdate()\n    } else {\n      // Option not found yet (might be loading)\n      this.selectedItem = null\n\n      // For search components, preserve the selectedText to maintain search functionality\n      // For combobox components, clear it to avoid showing raw values\n      if (!this.search) {\n        this.selectedText = ''\n\n        // Clear input value\n        if (this.triggerInput) {\n          this.triggerInput.value = ''\n        }\n      }\n\n      // Trigger re-render\n      this.requestUpdate()\n    }\n  }\n\n  private setupOptionListObserver(): void {\n    if (!this.optionList) return\n\n    // Disconnect existing observer if any\n    if (this.optionListObserver) {\n      this.optionListObserver.disconnect()\n    }\n\n    // Create new observer to watch for changes in the option list\n    this.optionListObserver = new MutationObserver(mutations => {\n      let shouldUpdateState = false\n\n      mutations.forEach(mutation => {\n        if (mutation.type === 'childList') {\n          // Check if option items were added or removed\n          const addedOptions = Array.from(mutation.addedNodes).some(\n            node => node.nodeName === 'DAP-DS-OPTION-ITEM',\n          )\n          const removedOptions = Array.from(mutation.removedNodes).some(\n            node => node.nodeName === 'DAP-DS-OPTION-ITEM',\n          )\n\n          if (addedOptions || removedOptions) {\n            shouldUpdateState = true\n          }\n        }\n      })\n\n      if (shouldUpdateState) {\n        // Update combobox state based on new option list\n        this.updateComboboxState()\n      }\n    })\n\n    // Start observing the combobox element itself for slot changes\n    // This is needed because remote data is added directly to the combobox element\n    this.optionListObserver.observe(this, {\n      childList: true,\n      subtree: true,\n    })\n  }\n\n  private updateComboboxState(): void {\n    // Wait for the next tick to ensure DOM is updated\n    requestAnimationFrame(() => {\n      const hasOptions = this.getComboboxOptions().length > 0\n      const hasInputValue =\n        this.triggerInput?.value && this.triggerInput.value.trim() !== ''\n\n      // If we have options and the dropdown should be open, show it\n      // For search components (this.search = true) or autocomplete mode\n      // Only open if this is a user interaction, not programmatic value setting\n      if (\n        hasOptions &&\n        hasInputValue &&\n        (this.isAutoComplete || this.search) &&\n        this.isUserInteraction\n      ) {\n        if (!this.opened) {\n          this.showDropDown()\n        }\n      } else if (!hasOptions && !this.openOnEmpty && hasInputValue) {\n        // If no options and we don't allow empty, hide the dropdown\n        // But only if the user has actually typed something\n        this.hideDropDown()\n      }\n\n      // If we have a value but no selectedItem, try to update the selection\n      // This handles the case where options are loaded asynchronously\n      if (this.value && !this.selectedItem && hasOptions) {\n        this.updateSelectionFromValue()\n      }\n    })\n  }\n\n  /**\n   * Updates the selection state based on the current value\n   * This is useful when options are loaded asynchronously\n   */\n  private updateSelectionFromValue(): void {\n    if (!this.value) return\n\n    // Mark this as programmatic change, not user interaction\n    this.isUserInteraction = false\n\n    const option = this.getComboboxOptions().find(\n      opt => opt.value === this.value,\n    )\n\n    if (option) {\n      this.selectedItem = option\n      this.selectedText = option.optionText || option.textContent || ''\n\n      // Update the input value to show the selected text\n      if (this.triggerInput) {\n        this.triggerInput.value = this.selectedText\n      }\n\n      // Trigger re-render to update clear icon visibility\n      this.requestUpdate()\n    }\n  }\n\n  private cleanupOptionListObserver(): void {\n    if (this.optionListObserver) {\n      this.optionListObserver.disconnect()\n      this.optionListObserver = null\n    }\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback()\n    this.cleanupOptionListObserver()\n  }\n\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null,\n  ): void {\n    if (name === 'value' && !value) {\n      this.clearSelection()\n    }\n\n    super.attributeChangedCallback(name, _old, value)\n  }\n\n  get isAutoComplete() {\n    return this.searchMode === 'autocomplete' || this.searchMode === 'manual'\n  }\n\n  /**\n   * Get all option items directly from the combobox element\n   * This is more reliable for dynamic updates than the option list component\n   */\n  private getComboboxOptions(): any[] {\n    return Array.from(this.querySelectorAll('dap-ds-option-item'))\n  }\n\n  get isOpenOnEmpty() {\n    return (\n      this.openOnEmpty ||\n      (!this.openOnEmpty && this.getComboboxOptions().length > 0)\n    )\n  }\n\n  get isOpenOnAutocomplete() {\n    return this.isAutoComplete && this.isOpenOnEmpty\n  }\n\n  get shouldHideClearIcon() {\n    // Check if input is empty (cross-browser compatible)\n    const inputValue = this.triggerInput?.value || ''\n    const hasPlaceholder = this.placeholder && this.placeholder.trim() !== ''\n\n    // Only apply JavaScript fallback when there's no placeholder\n    // When there IS a placeholder, let CSS :placeholder-shown handle it\n    if (hasPlaceholder) {\n      return false // Let CSS handle it\n    }\n\n    // Hide clear icon when input is empty and has no placeholder\n    return inputValue === ''\n  }\n\n  handleClick = () => {\n    if (!this.getComboboxOptions().length && !this.openOnEmpty) {\n      this.hideDropDown()\n    } else {\n      this.opened ? this.hideDropDown() : this.showDropDown()\n    }\n  }\n\n  private async handleEnterKey(event: KeyboardEvent) {\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (this.allowManualInput) {\n      return this.handleSearchEnter()\n    }\n\n    if (this.currentItem && this.opened) {\n      return this.handleCurrentItemEnter()\n    }\n\n    if (this.search && !this.isAutoComplete) {\n      return this.handleSearchEnter()\n    }\n\n    return this.handleDefaultEnter()\n  }\n\n  private async handleCurrentItemEnter() {\n    if (this.currentItem.value === this.selectedItem?.value) {\n      this.hideDropDown()\n      this.triggerInput.value = this.selectedItem.text\n      this.triggerInput.focus()\n      return\n    }\n\n    if (this.currentItem.value !== this.selectedItem?.value) {\n      if (!this.searchForText) {\n        await this.handleSelectedItemChange(this.currentItem)\n      } else {\n        await this.handleTextSearch(this.currentItem.text)\n      }\n    }\n  }\n\n  private async handleSearchEnter() {\n    this.emit('dds-search', { search: this.selectedText })\n    this.setValidity()\n    return this.hideDropDown()\n  }\n\n  private async handleDefaultEnter() {\n    if (this.opened) {\n      return this.hideDropDown()\n    } else {\n      // For autocomplete mode, allow opening even without options initially\n      // The MutationObserver will handle showing/hiding based on actual option availability\n      return (\n        (this.openOnEmpty ||\n          this.getComboboxOptions().length ||\n          this.isAutoComplete) &&\n        this.showDropDown()\n      )\n    }\n  }\n\n  private async handleSelectedItemChange(item: any) {\n    this.selectedItem = item\n    this.emit('dds-change', this.selectedItem)\n    await this.updateComplete\n    this.value = this.selectedItem.value\n    this.selectedText = this.currentItem.text\n    this.triggerInput.value = this.currentItem.text\n    this.triggerInput.focus()\n    this.setValidity()\n  }\n\n  private async handleTextSearch(text: string) {\n    this.value = text\n    this.selectedText = text\n    this.triggerInput.value = text\n    this.triggerInput.focus()\n    this.emit('dds-search', { search: text })\n    this.setValidity()\n  }\n\n  private async handleArrowKeys(event: KeyboardEvent) {\n    event.preventDefault()\n\n    if (!this.opened) {\n      // For autocomplete mode, allow opening even without options initially\n      // The MutationObserver will handle showing/hiding based on actual option availability\n      if (\n        this.openOnEmpty ||\n        this.getComboboxOptions().length ||\n        this.isAutoComplete\n      ) {\n        this.showDropDown()\n      } else {\n        return // Don't proceed if we can't open dropdown\n      }\n    }\n\n    await this.updateComplete\n    this.optionList.captureFocus(event.key)\n  }\n\n  handleKeyDown = async (event: KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      return\n    }\n\n    if (event.key === 'Enter') {\n      return this.handleEnterKey(event)\n    }\n\n    if (event.key === 'Escape') {\n      this.hideDropDown()\n      return this.focus()\n    }\n\n    if (\n      (event.key === 'ArrowDown' ||\n        event.key === 'ArrowUp' ||\n        event.key === 'ArrowLeft' ||\n        event.key === 'ArrowRight') &&\n      this.isAutoComplete\n    ) {\n      return this.handleArrowKeys(event)\n    }\n\n    // For autocomplete mode, only show dropdown if there are options OR if openOnEmpty is true\n    if (this.isAutoComplete && this.triggerInput?.value && !this.opened) {\n      const hasOptions = this.getComboboxOptions().length > 0\n      if (this.openOnEmpty || hasOptions) {\n        this.showDropDown()\n      }\n    }\n  }\n\n  handleInput = async (event: InputEvent) => {\n    const input = this.triggerInput\n\n    // Mark this as user interaction\n    this.isUserInteraction = true\n    if (\n      event.inputType !== 'deleteContentBackward' ||\n      (event.inputType === 'deleteContentBackward' && this.allowManualInput)\n    ) {\n      this.selectedText = input.value\n      if (this.search) {\n        this.value = input.value\n      }\n    } else if (this.search) {\n      this.selectedText = input.value\n      this.value = input.value\n    } else if (\n      input.value === '' &&\n      event.inputType === 'deleteContentBackward'\n    ) {\n      this.clearSelection()\n    }\n\n    this.emit('dds-input', { input: input.value, originalEvent: event })\n    this.setValidity()\n\n    // Trigger re-render to update clear icon visibility\n    this.requestUpdate()\n\n    // For autocomplete mode, only show dropdown if there are options OR if openOnEmpty is true\n    if (this.isAutoComplete && input.value && !this.opened) {\n      const hasOptions = this.getComboboxOptions().length > 0\n      if (this.openOnEmpty || hasOptions) {\n        this.showDropDown()\n      }\n    }\n  }\n\n  async clearSelection() {\n    // Mark this as programmatic change, not user interaction\n    this.isUserInteraction = false\n    if (this.triggerInput) {\n      this.triggerInput.value = ''\n    }\n    this.selectedText = ''\n    this.selectedItem = null\n\n    this.value = undefined\n\n    // Trigger re-render to update clear icon visibility\n    this.requestUpdate()\n\n    await this.updateComplete\n\n    this.emit('dds-change', this.selectedItem)\n  }\n\n  handleListKeyDown = (event: CustomEvent) => {\n    if (event.detail.key === 'Escape') {\n      this.hideDropDown()\n      this.currentItem = this.selectedItem\n      this.selectedText = ''\n      this.triggerInput.value = this.selectedItem.text\n      this.triggerInput.focus()\n    }\n  }\n\n  handleDocumentMouseDown = (event: MouseEvent) => {\n    const path = event.composedPath()\n    if (this && !path.includes(this)) {\n      this.hideDropDown()\n    }\n  }\n\n  handleFocus = () => {\n    this.emit('dds-focus')\n  }\n\n  handleBlur = () => {\n    this.emit('dds-blur')\n  }\n\n  async showDropDown() {\n    if (this.disabled || this.readonly || !this.isAutoComplete || this.opened) {\n      return\n    }\n\n    // For autocomplete mode, allow opening even without options initially\n    // The MutationObserver will handle showing/hiding based on actual option availability\n    if (\n      !this.openOnEmpty &&\n      !this.getComboboxOptions().length &&\n      !this.isAutoComplete\n    ) {\n      return\n    }\n\n    this.opened = true\n\n    document.addEventListener('mousedown', this.handleDocumentMouseDown)\n  }\n\n  async hideDropDown() {\n    if (!this.opened) {\n      return\n    }\n\n    this.opened = false\n\n    document.removeEventListener('mousedown', this.handleDocumentMouseDown)\n\n    await this.updateComplete\n    this.focus()\n    this.clearSelectionRange()\n  }\n\n  public get focusElement() {\n    return this.triggerInput\n  }\n\n  handleSelectedChange = async (event: CustomEvent) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (this.searchForText) {\n      this.selectedText = event.detail.text\n      this.value = event.detail.text\n      this.triggerInput.value = event.detail.text\n\n      this.emit('dds-search', { search: this.selectedText })\n\n      // Trigger re-render to update clear icon visibility\n      this.requestUpdate()\n\n      this.setValidity()\n    } else {\n      this.selectedItem = event.detail\n      this.selectedText = event.detail.text\n\n      if (this.value !== this.selectedItem?.value) {\n        this.triggerInput.value = event.detail.text\n        this.value = this.selectedItem.value\n        this.emit('dds-change', this.selectedItem)\n\n        // Trigger re-render to update clear icon visibility\n        this.requestUpdate()\n\n        await this.updateComplete\n\n        if (this.currentItem) {\n          this.triggerInput.value = this.currentItem.text\n        }\n        this.triggerInput.focus()\n        this.setValidity()\n      }\n    }\n\n    this.hideDropDown()\n  }\n\n  handleOptionDeselect = (event: CustomEvent) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    this.selectedItem = null\n    this.selectedText = ''\n    this.value = undefined\n    this.triggerInput.value = ''\n    this.emit('dds-change', null)\n\n    // Trigger re-render to update clear icon visibility\n    this.requestUpdate()\n\n    this.setValidity()\n  }\n\n  handleCurrentOptionChange = (event: CustomEvent) => {\n    this.currentItem = event.detail\n\n    if (event.detail) {\n      if (\n        this.textComplete &&\n        this.searchMode !== 'manual' &&\n        this.searchMode !== 'none'\n      ) {\n        this.triggerInput.value = event.detail.text\n      }\n\n      if (\n        this.isAutoComplete &&\n        this.selectedText &&\n        this.selectedText !== '' &&\n        !this.allowManualInput &&\n        this.textComplete\n      ) {\n        this.triggerInput.value = event.detail.text\n        this.setSelectionRange(\n          this.selectedText.length,\n          this.triggerInput.value.length,\n        )\n      }\n    }\n  }\n\n  handleListChanged = (event: CustomEvent) => {\n    if (!event.detail.elements.length && !this.openOnEmpty) {\n      this.hideDropDown()\n    }\n  }\n\n  handleClearClick = () => {\n    if (!this.disabled) {\n      this.clearSelection()\n\n      this.triggerInput.focus()\n      this.setValidity()\n\n      if (!this.openOnEmpty) {\n        this.hideDropDown()\n      }\n\n      this.emit('dds-clear')\n    }\n  }\n\n  handleSearchClick = (event: MouseEvent) => {\n    event.stopPropagation()\n    event.preventDefault()\n\n    this.setValidity()\n    this.emit('dds-search', { search: this.selectedText })\n  }\n\n  private setSelectionRange(start: number, end: number) {\n    this.triggerInput.setSelectionRange(start, end)\n  }\n\n  private clearSelectionRange() {\n    const controlValueLength = this.triggerInput.value.length\n\n    this.setSelectionRange(controlValueLength, controlValueLength)\n  }\n\n  getValidity() {\n    if (this.isAutoComplete) {\n      return this.getAutoCompleteValidity()\n    }\n    return this.getBasicValidity()\n  }\n\n  formResetCallback() {\n    this.internals.setValidity({})\n    this.internals.setFormValue(this.defaultValue)\n    this.value = this.defaultValue\n    this.selectedItem = this.defaultValue\n  }\n\n  private getAutoCompleteValidity(): boolean {\n    if (this.allowManualInput) {\n      return this.getManualInputValidity()\n    }\n    if (this.searchForText) {\n      return this.getSearchTextValidity()\n    }\n    return this.getSelectedItemValidity()\n  }\n\n  private getManualInputValidity(): boolean {\n    return (\n      this.triggerInput.value !== '' ||\n      (this.selectedItem !== null && this.selectedItem !== undefined)\n    )\n  }\n\n  private getSearchTextValidity(): boolean {\n    return this.triggerInput.value !== ''\n  }\n\n  private getSelectedItemValidity(): boolean {\n    return !!this.selectedItem\n  }\n\n  private getBasicValidity(): boolean {\n    return this.triggerInput.value !== ''\n  }\n\n  // custom validation\n  get validity(): ValidityState {\n    if (this.internals.validity) {\n      return this.internals.validity\n    } else {\n      return getValidityStateObject({\n        valueMissing: this.required && !this.getValidity(),\n      })\n    }\n  }\n\n  get validationMessage(): string {\n    return t('form.validationMessage.select')\n  }\n\n  checkValidity() {\n    return this.required ? this.getValidity() : true\n  }\n\n  reportValidity() {\n    return this.required ? this.checkValidity() : true\n  }\n\n  setValidity() {\n    if (!this.checkValidity()) {\n      this.internals.setValidity(\n        {\n          valueMissing: this.required && !this.getValidity(),\n        },\n        this.validationMessage,\n        this.triggerInput,\n      )\n    } else {\n      this.internals.setValidity({})\n    }\n  }\n\n  handleInvalid(event: Event) {\n    event.preventDefault()\n  }\n\n  getActiveDescendant() {\n    if (!this.opened) {\n      return this.triggerInput\n    }\n\n    const activeOption = this.optionList?.getActiveOption()\n    return activeOption\n  }\n\n  getSearchIconSize(size: string) {\n    switch (size) {\n      case 'sm':\n        return 'md'\n      case 'lg':\n        return 'lg'\n      case 'xs':\n        return 'sm'\n      default:\n        return 'md'\n    }\n  }\n\n  getInnerIconSize(size: string) {\n    switch (size) {\n      case 'sm':\n        return 16\n      case 'lg':\n        return 16\n      case 'xs':\n        return 10\n      default:\n        return 16\n    }\n  }\n\n  private renderInput() {\n    return html`<input\n      role=\"combobox\"\n      class=\"${clsx('input', `input--${this.size}`, {\n        'input--disabled': this.disabled,\n        'input--readonly': this.readonly,\n      })}\"\n      aria-expanded=${this.opened}\n      aria-haspopup=\"listbox\"\n      aria-labelledby=\"label\"\n      aria-describedby=\"description ${this.feedback ? 'feedback' : ''}\"\n      aria-disabled=${this.disabled}\n      aria-autocomplete=\"both\"\n      aria-controls=\"option-list\"\n      aria-activedescendant=${ifDefined(this.getActiveDescendant()?.id)}\n      ?required=${this.required}\n      ?readonly=${this.readonly}\n      ?autofocus=${this.autofocus}\n      autocomplete=${this.autocomplete as any}\n      ?disabled=${this.disabled}\n      value=${this.selectedText !== ''\n        ? this.selectedText\n        : this.selectedItem?.text || ''}\n      placeholder=${ifDefined(this.placeholder ?? '')}\n      type=${this.search ? 'search' : 'text'}\n      @blur=${this.handleBlur}\n      @focus=${this.handleFocus}\n      @input=${this.handleInput}\n      @keydown=${this.handleKeyDown}\n      @click=${this.handleClick} />`\n  }\n\n  private renderClearButton() {\n    if (this.clearButton !== 'true' || this.readonly) return nothing\n\n    return html`<div\n      class=\"${clsx('clear-icon', {\n        'clear-icon--hidden': this.shouldHideClearIcon,\n      })}\">\n      <dap-ds-icon-button\n        icon=\"close-line\"\n        aria-label=${translate('clear')}\n        ?disabled=${this.disabled}\n        @click=${this.handleClearClick}></dap-ds-icon-button>\n    </div>`\n  }\n\n  private renderIndicatorIcon() {\n    const isAutocompleteOrManual =\n      this.searchMode === 'autocomplete' || this.searchMode === 'manual'\n    const showLoadingSpinner = this.loading\n      ? html`<dap-ds-icon-loading-spinner></dap-ds-icon-loading-spinner>`\n      : null\n\n    if (isAutocompleteOrManual && !this.search) {\n      return html`<div\n        class=\"${clsx('indicator-icon', {\n          'indicator-icon--loading': this.loading,\n        })}\">\n        ${showLoadingSpinner ||\n        html`<dap-ds-icon-arrow-right-s-line\n          aria-hidden=\"true\"\n          @click=${this.handleClick}>\n        </dap-ds-icon-arrow-right-s-line>`}\n      </div>`\n    }\n\n    if (this.search) {\n      return html`<div\n        class=\"${clsx('indicator-icon', {\n          'indicator-icon--loading': this.loading,\n        })}\">\n        ${showLoadingSpinner ||\n        html`<dap-ds-icon-button\n          size=${this.getSearchIconSize(this.size)}\n          variant=${this.subtle ? 'neutral' : 'inverted-brand'}\n          icon=\"search-line\"\n          aria-label=${this.searchButtonAriaLabel ?? translate('search')}\n          @click=${this.handleSearchClick}>\n        </dap-ds-icon-button>`}\n      </div>`\n    }\n\n    return nothing\n  }\n\n  private renderSelectActions() {\n    return html`<div\n      class=\"${clsx('select-action', `select-action--${this.size}`, {\n        'select-action--disabled': this.disabled,\n        'select-action--readonly': this.readonly,\n        'select-action--opened': this.opened,\n      })}\">\n      ${this.renderClearButton()} ${this.renderIndicatorIcon()}\n    </div>`\n  }\n\n  private renderOptionList() {\n    return html`<dap-ds-option-list\n      class=\"option-list\"\n      part=\"option-list\"\n      id=\"option-list\"\n      .search=${this.search}\n      searchMode=${this.allowManualInput ? 'none' : this.searchMode}\n      searchOnValueSet=${this.searchOnValueSet === 'true'}\n      filterText=${this.selectedText}\n      size=${ifDefined(this.size)}\n      value=${ifDefined(this.value)}\n      selectable=${ifDefined(this.selectable)}\n      @dds-option-change=${this.handleSelectedChange}\n      @dds-option-deselect=${this.handleOptionDeselect}\n      @dds-keydown=${this.handleListKeyDown}\n      @dds-current-change=${this.handleCurrentOptionChange}\n      @dds-list-changed=${this.handleListChanged}>\n      <slot></slot>\n    </dap-ds-option-list>`\n  }\n\n  renderCombobox() {\n    return html` ${(this, this.renderLabel())}\n      <div>\n        <dap-ds-popup\n          part=\"base\"\n          class=\"select-popup\"\n          overflow\n          ?opened=${this.opened}\n          ?hasArrow=${false}\n          placement=${this.placement}\n          floatingStrategy=\"fixed\"\n          offset=\"4\"\n          ?sync=${this.sync}\n          @dds-closed=${this.hideDropDown}\n          @dds-opened=${this.showDropDown}>\n          <div\n            slot=\"trigger\"\n            part=\"trigger\"\n            class=\"${clsx('select', `select--${this.size}`, {\n              'select--disabled': this.disabled,\n              'select--readonly': this.readonly,\n              'select--opened': this.opened,\n              'select--loading': this.loading,\n              'select--success': this.status === 'success',\n              'select--error': this.status === 'error',\n              'select--no-animation': this.noAnimation,\n            })}\">\n            ${this.renderInput()} ${this.renderSelectActions()}\n          </div>\n          ${this.renderOptionList()}\n        </dap-ds-popup>\n        ${this.feedback &&\n        html`<dap-ds-feedback\n          part=\"feedback\"\n          feedbackType=${ifDefined(this.feedbackType)}\n          feedbackSize=\"${ifDefined(this.size as 'lg' | 'sm' | 'xs')}\"\n          id=\"feedback\">\n          ${this.feedback}\n        </dap-ds-feedback>`}\n      </div>`\n  }\n}\n","import { customElement } from 'lit/decorators.js'\n\nimport ComboboxBaseElement from './comboboxBase'\n\n/**\n * `dap-ds-combobox`\n * @summary A select is a form element that allows the user to select one option from a set.\n * @element dap-ds-combobox\n * @title - Combobox\n *\n * @event {{ value }} dds-change - Fired when the select value changes.\n * @event {{ void }} dds-blur - Emitted when the select loses focus.\n * @event {{ void }} dds-focus - Emitted when the select gains focus.\n * @event {{ void }} dds-clear - Emitted when the select is cleared.\n * @event {{ search: string }} dds-search - Emitted when the manual input value changes.\n * @event {{ input: string, originalEvent: Event }} dds-input - Emitted when typing happens in the input.\n *\n * @property {string} value - The value of the select.\n * @property {string} placeholder - The placeholder of the select.\n * @property { 'top' | 'top-start' | 'top-end' | 'right' | 'right-start'| 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end'} placement - The placement of the select dropdown. Default is 'bottom-start'.\n * @property {boolean} opened - Whether the select dropdown is opened.\n * @property {boolean} sync - The sync mode of the select dropdown. How the dropdown item size is synced to the trigger element'.\n * @property {string} label - The label of the select.\n * @property {string} description - The description of the select.\n * @property {string} tooltip - The tooltip of the select.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The tooltip placement of the input.\n * @property {'xs' | 'sm' | 'lg'} size - The size of the select. Default is 'sm'.\n * @property {boolean} disabled - Whether the select is disabled.\n * @property {boolean} required - Whether the select is required.\n * @property {boolean} readonly - Whether the select is readonly.\n * @property {boolean} autofocus - Whether the select is autofocus.\n * @property {string} feedback - The feedback content of the select.\n * @property {'negative' | 'positive' | 'warning' | 'info'} feedbackType - The feedback type of the select.\n * @property {'none' | 'typehead' | 'autocomplete' | 'manual'} searchMode - The search mode of the select.\n * @property {boolean} openOnEmpty - Whether the combobox should open on empty results.\n * @property {boolean} allowManualInput - Whether the combobox allows manual input, or free text.\n * @property {boolean} searchForText - Whether the combobox should search for the selected item text.\n * @property {boolean} textComplete - Whether the combobox should complete the text.\n * @property {string} searchButtonAriaLabel - The aria label of the search button.\n * @property {string} selectable - Show the selected item check mark in the dropdown. 'true' or 'false'\n * @property {boolean} noAnimation - Whether the combobox open indicator should be animated.\n *\n * @csspart base - The main select container.\n * @csspart trigger - The trigger button of the select.\n * @csspart label - The label of the select.\n * @csspart description - The description of the select.\n * @csspart feedback - The feedback of the select.\n * @csspart tooltip - The tooltip of the select.\n * @csspart option-list - The option list of the select.\n *\n * @cssproperty --dds-combobox-background - The background color of the combobox. Defaults to var(--dds-fields-background-default).\n * @cssproperty --dds-combobox-border-color - The border color of the combobox. Defaults to var(--dds-border-neutral-base).\n * @cssproperty --dds-combobox-border-width - The border width of the combobox. Defaults to var(--dds-border-width-base, 1px).\n * @cssproperty --dds-combobox-border-radius - The border radius of the combobox. Defaults to var(--dds-radius-base).\n * @cssproperty --dds-combobox-text-color - The text color of the combobox. Defaults to var(--dds-text-neutral-base).\n * @cssproperty --dds-combobox-placeholder-color - The placeholder text color. Defaults to var(--dds-text-neutral-subtle).\n * @cssproperty --dds-combobox-disabled-background - The background color when disabled. Defaults to var(--dds-background-neutral-stronger).\n * @cssproperty --dds-combobox-disabled-text - The text color when disabled. Defaults to var(--dds-text-neutral-disabled).\n * @cssproperty --dds-combobox-error-border - The border color for error state. Defaults to var(--dds-border-negative-base).\n * @cssproperty --dds-combobox-success-border - The border color for success state. Defaults to var(--dds-border-positive-base).\n * @cssproperty --dds-combobox-icon-color - The color of the icons. Defaults to var(--dds-text-icon-neutral-subtle).\n * @cssproperty --dds-combobox-clear-icon-color - The color of the clear icon. Defaults to var(--dds-button-subtle-icon-neutral-enabled).\n * @cssproperty --dds-combobox-popup-background - The background color of the popup. Defaults to var(--dds-background-neutral-subtle).\n * @cssproperty --dds-combobox-popup-shadow - The box shadow of the popup. Defaults to 0 4px 6px -1px rgb(0 0 0 / 8%), 0 2px 4px -1px rgb(0 0 0 / 6%).\n *\n * @cssproperty --dds-combobox-padding-xs - The padding for extra small size. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-padding-sm - The padding for small size. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-padding-lg - The padding for large size. Defaults to var(--dds-spacing-300).\n * @cssproperty --dds-combobox-padding-horizontal - The horizontal padding. Defaults to var(--dds-spacing-300).\n * @cssproperty --dds-combobox-padding-vertical - The vertical padding. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-gap - The gap between elements. Defaults to var(--dds-spacing-100).\n * @cssproperty --dds-combobox-icon-gap - The gap between icons. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-action-gap - The gap between action elements. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-action-padding - The padding for action elements. Defaults to var(--dds-spacing-300).\n * @cssproperty --dds-combobox-clear-icon-width - The width of the clear icon. Defaults to var(--dds-spacing-800).\n * @cssproperty --dds-combobox-dropdown-icon-right - The right position of the dropdown icon. Defaults to var(--dds-spacing-600).\n * @cssproperty --dds-combobox-min-width - The minimum width of the combobox. Defaults to 7.5rem.\n *\n * @slot - The default slot for the options.\n */\n@customElement('dap-ds-combobox')\nexport default class DapDSCombobox extends ComboboxBaseElement {\n  render() {\n    return this.renderCombobox()\n  }\n}\n","/**\n * Keyboard navigation utilities for dropdown/menu components\n */\n\nexport interface KeyboardNavigationItem {\n  setAttribute(name: string, value: string): void\n  focus(): void\n  click(): void\n  textContent: string | null\n}\n\nexport interface KeyboardNavigationOptions {\n  enabledSelector: string\n  onSelectionChange?: (item: HTMLElement, index: number, total: number) => void\n  onItemClick?: (item: HTMLElement) => void\n}\n\nexport class KeyboardNavigationManager {\n  private _cachedItems: NodeListOf<Element> | null = null\n  private _cacheInvalidated = true\n  private _focusedItem: HTMLElement | null = null\n  private _focusedIndex = -1\n  private _container: Element\n  private _options: KeyboardNavigationOptions\n\n  constructor(container: Element, options: KeyboardNavigationOptions) {\n    this._container = container\n    this._options = options\n  }\n\n  invalidateCache() {\n    this._cachedItems = null\n    this._cacheInvalidated = true\n  }\n\n  getEnabledItems(): Element[] {\n    if (this._cacheInvalidated || !this._cachedItems) {\n      this._cachedItems = this._container.querySelectorAll(\n        this._options.enabledSelector,\n      )\n      this._cacheInvalidated = false\n    }\n    return Array.from(this._cachedItems)\n  }\n\n  setFocusedItem(index: number) {\n    const items = this.getEnabledItems()\n\n    // Clear current focus\n    if (this._focusedItem) {\n      this._focusedItem.setAttribute('tabindex', '-1')\n      this._focusedItem.setAttribute('aria-selected', 'false')\n    }\n\n    // Normalize index (circular navigation)\n    if (index < 0) {\n      index = items.length - 1\n    } else if (index >= items.length) {\n      index = 0\n    }\n\n    // Set new focus\n    this._focusedIndex = index\n    this._focusedItem = items[index] as HTMLElement\n\n    if (this._focusedItem) {\n      this._focusedItem.setAttribute('tabindex', '0')\n      this._focusedItem.setAttribute('aria-selected', 'true')\n      this._focusedItem.focus()\n\n      // Notify callback\n      this._options.onSelectionChange?.(\n        this._focusedItem,\n        index + 1,\n        items.length,\n      )\n    }\n  }\n\n  initializeFocus(lastClickedItem?: HTMLElement) {\n    const items = this.getEnabledItems()\n\n    // Set all items to tabindex -1 and role menuitem initially\n    items.forEach(item => {\n      const htmlItem = item as HTMLElement\n      htmlItem.setAttribute('tabindex', '-1')\n      htmlItem.setAttribute('role', 'menuitem')\n      htmlItem.setAttribute('aria-selected', 'false')\n    })\n\n    // Find the item to focus (last clicked or first available)\n    let focusIndex = 0\n    if (lastClickedItem) {\n      const lastClickedIndex = items.indexOf(lastClickedItem)\n      if (lastClickedIndex !== -1) {\n        focusIndex = lastClickedIndex\n      }\n    }\n\n    if (items.length > 0) {\n      this.setFocusedItem(focusIndex)\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent): boolean {\n    switch (event.key) {\n      case 'ArrowDown':\n        event.preventDefault()\n        this.setFocusedItem(this._focusedIndex + 1)\n        return true\n\n      case 'ArrowUp':\n        event.preventDefault()\n        this.setFocusedItem(this._focusedIndex - 1)\n        return true\n\n      case 'Tab':\n        event.preventDefault()\n        // Tab moves forward, Shift+Tab moves backward\n        if (event.shiftKey) {\n          this.setFocusedItem(this._focusedIndex - 1)\n        } else {\n          this.setFocusedItem(this._focusedIndex + 1)\n        }\n        return true\n\n      case 'Home':\n        event.preventDefault()\n        this.setFocusedItem(0)\n        return true\n\n      case 'End':\n        event.preventDefault()\n        this.setFocusedItem(this.getEnabledItems().length - 1)\n        return true\n\n      case 'Enter':\n      case ' ':\n        event.preventDefault()\n        if (this._focusedItem) {\n          this._focusedItem.click()\n          this._options.onItemClick?.(this._focusedItem)\n        }\n        return true\n\n      default:\n        return false\n    }\n  }\n\n  reset() {\n    this._focusedItem = null\n    this._focusedIndex = -1\n  }\n\n  get focusedItem() {\n    return this._focusedItem\n  }\n\n  get focusedIndex() {\n    return this._focusedIndex\n  }\n}\n\n/**\n * Creates a live region for screen reader announcements\n */\nexport function createOrUpdateLiveRegion(\n  container: Element,\n  announcement: string,\n): void {\n  let liveRegion = container.querySelector('[aria-live]') as HTMLElement\n  if (!liveRegion) {\n    liveRegion = document.createElement('div')\n    liveRegion.setAttribute('aria-live', 'polite')\n    liveRegion.setAttribute('aria-atomic', 'true')\n    liveRegion.style.position = 'absolute'\n    liveRegion.style.left = '-10000px'\n    liveRegion.style.width = '1px'\n    liveRegion.style.height = '1px'\n    liveRegion.style.overflow = 'hidden'\n    container.appendChild(liveRegion)\n  }\n\n  liveRegion.textContent = announcement\n}\n\n/**\n * Announces current selection to screen readers\n */\nexport function announceSelection(\n  container: Element,\n  item: HTMLElement,\n  position: number,\n  total: number,\n): void {\n  const text = item.textContent?.trim() || ''\n  const announcement = `${text}, ${position} of ${total}`\n  createOrUpdateLiveRegion(container, announcement)\n}\n\n/**\n * Standard keyboard navigation handler for dropdown/menu components\n */\nexport function createKeyboardNavigationHandler(\n  container: Element,\n  options: KeyboardNavigationOptions,\n) {\n  const manager = new KeyboardNavigationManager(container, {\n    ...options,\n    onSelectionChange: (item, position, total) => {\n      announceSelection(container, item, position, total)\n      options.onSelectionChange?.(item, position, total)\n    },\n  })\n\n  return {\n    manager,\n    handleKeyDown: (event: KeyboardEvent) => manager.handleKeyDown(event),\n    invalidateCache: () => manager.invalidateCache(),\n    initializeFocus: (lastClickedItem?: HTMLElement) =>\n      manager.initializeFocus(lastClickedItem),\n    reset: () => manager.reset(),\n  }\n}\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nconst yAxisSides = /*#__PURE__*/new Set(['top', 'bottom']);\nfunction getSideAxis(placement) {\n  return yAxisSides.has(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nconst lrPlacement = ['left', 'right'];\nconst rlPlacement = ['right', 'left'];\nconst tbPlacement = ['top', 'bottom'];\nconst btPlacement = ['bottom', 'top'];\nfunction getSideList(side, isStart, rtl) {\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rlPlacement : lrPlacement;\n      return isStart ? lrPlacement : rlPlacement;\n    case 'left':\n    case 'right':\n      return isStart ? tbPlacement : btPlacement;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n          if (!ignoreCrossAxisOverflow ||\n          // We leave the current main axis only if every placement on that axis\n          // overflows the main axis.\n          overflowsData.every(d => getSideAxis(d.placement) === initialSideAxis ? d.overflows[0] > 0 : true)) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nconst originSides = /*#__PURE__*/new Set(['left', 'top']);\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = originSides.has(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = originSides.has(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nconst invalidOverflowDisplayValues = /*#__PURE__*/new Set(['inline', 'contents']);\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !invalidOverflowDisplayValues.has(display);\n}\nconst tableElements = /*#__PURE__*/new Set(['table', 'td', 'th']);\nfunction isTableElement(element) {\n  return tableElements.has(getNodeName(element));\n}\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(element) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (_e) {\n      return false;\n    }\n  });\n}\nconst transformProperties = ['transform', 'translate', 'scale', 'rotate', 'perspective'];\nconst willChangeValues = ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'];\nconst containValues = ['paint', 'layout', 'strict', 'content'];\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return transformProperties.some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || willChangeValues.some(value => (css.willChange || '').includes(value)) || containValues.some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nconst lastTraversableNodeNames = /*#__PURE__*/new Set(['html', 'body', '#document']);\nfunction isLastTraversableNode(node) {\n  return lastTraversableNodeNames.has(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, arrow as arrow$1, autoPlacement as autoPlacement$1, detectOverflow as detectOverflow$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle as getComputedStyle$1, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle$1(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll) {\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - getWindowScrollBarX(documentElement, htmlRect);\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Safety check: ensure the scrollbar space is reasonable in case this\n// calculation is affected by unusual styles.\n// Most scrollbars leave 15-18px of space.\nconst SCROLLBAR_MAX = 25;\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  const windowScrollbarX = getWindowScrollBarX(html);\n  // <html> `overflow: hidden` + `scrollbar-gutter: stable` reduces the\n  // visual width of the <html> but this is not considered in the size\n  // of `html.clientWidth`.\n  if (windowScrollbarX <= 0) {\n    const doc = html.ownerDocument;\n    const body = doc.body;\n    const bodyStyles = getComputedStyle(body);\n    const bodyMarginInline = doc.compatMode === 'CSS1Compat' ? parseFloat(bodyStyles.marginLeft) + parseFloat(bodyStyles.marginRight) || 0 : 0;\n    const clippingStableScrollbarWidth = Math.abs(html.clientWidth - body.clientWidth - bodyMarginInline);\n    if (clippingStableScrollbarWidth <= SCROLLBAR_MAX) {\n      width -= clippingStableScrollbarWidth;\n    }\n  } else if (windowScrollbarX <= SCROLLBAR_MAX) {\n    // If the <body> scrollbar is on the left, the width needs to be extended\n    // by the scrollbar amount so there isn't extra space on the right.\n    width += windowScrollbarX;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nconst absoluteOrFixed = /*#__PURE__*/new Set(['absolute', 'fixed']);\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && absoluteOrFixed.has(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n\n  // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n  // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n  function setLeftRTLScrollbarOffset() {\n    offsets.x = getWindowScrollBarX(documentElement);\n  }\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      setLeftRTLScrollbarOffset();\n    }\n  }\n  if (isFixed && !isOffsetParentAnElement && documentElement) {\n    setLeftRTLScrollbarOffset();\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle$1(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle$1(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (_e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import {\n  arrow,\n  autoUpdate,\n  computePosition,\n  Coords,\n  flip,\n  offset,\n  shift,\n  size,\n} from '@floating-ui/dom'\nimport { clsx } from 'clsx'\nimport { TemplateResult, unsafeCSS } from 'lit'\nimport { property, query } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\n\nimport { FloatingStrategy, PopupPlacement } from '../../common/types'\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './popup.scss?inline'\n\nexport default class PopupBaseElement extends SizedMixin(DdsElement) {\n  static readonly styles = unsafeCSS(styles)\n\n  private triggerElement: Element | null = null\n  private cleanup: ReturnType<typeof autoUpdate> | undefined\n  private intersectionObserver: IntersectionObserver | null = null\n\n  @query('.popup') private readonly popup!: HTMLDivElement\n  @query('.popup__arrow') private readonly arrowElement?: HTMLDivElement\n\n  /** The disabled state of the popup. */\n  @property({ reflect: true, type: Boolean }) disabled? = false\n\n  /** The open state of the popup. */\n  @property({ reflect: true, type: Boolean }) opened? = false\n\n  /** The placement of the popup.\n   * @type {'top' | 'right' | 'bottom' | 'left' | 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end' | 'left-start' | 'left-end' | 'right-start' | 'right-end'}\n   */\n  @property({ reflect: true }) placement: PopupPlacement = 'bottom'\n\n  /** The floating strategy of the popup.\n   * @type {'absolute' | 'fixed'}\n   */\n  @property({ reflect: true })\n  floatingStrategy: FloatingStrategy = 'absolute'\n\n  /** The offset of the popup. */\n  @property({ type: Number }) offset = 0\n\n  /** Whether the popup should sync its width with the trigger. */\n  @property({ type: Boolean }) sync?: boolean\n\n  /** The maximum height of the popup. */\n  @property({ type: Number }) maxHeight: number | 'auto' = 250\n\n  /** The maximum width of the popup. */\n  @property({ type: Number }) maxWidth: number | 'auto' = 'auto'\n\n  /** Whether the popup has an arrow. */\n  @property({ type: Boolean }) hasArrow: boolean\n\n  /** Whether the popup should overflow. */\n  @property({ type: Boolean }) overflow: boolean\n\n  /** Whether the popup should take full width of the screen. */\n  @property({ type: Boolean }) fullWidth: boolean\n\n  async connectedCallback() {\n    super.connectedCallback()\n\n    await this.updateComplete\n    this.startUpdate()\n  }\n\n  protected firstUpdated(changedProps: Map<string, unknown>) {\n    super.firstUpdated(changedProps)\n\n    this.triggerElement?.setAttribute('aria-controls', 'popup')\n    this.triggerElement?.setAttribute('aria-expanded', 'false')\n  }\n\n  async updated(changedProps: Map<string, unknown>) {\n    super.updated(changedProps)\n\n    if (changedProps.has('opened')) {\n      if (this.opened) {\n        this.startUpdate()\n        this.triggerElement?.setAttribute('aria-expanded', 'true')\n        this.emit('dds-opened')\n      } else {\n        this.stopUpdate()\n        this.triggerElement?.setAttribute('aria-expanded', 'false')\n        this.emit('dds-closed')\n      }\n    }\n\n    if (changedProps.has('anchor')) {\n      this._handleTriggerSlotChange()\n    }\n\n    if (this.opened) {\n      await this.updateComplete\n      this.updatePosition()\n    }\n  }\n\n  async _handleTriggerSlotChange(e?: Event | undefined) {\n    this._handleTriggerSlotChangeCallback(e)\n\n    await this.stopUpdate()\n\n    this.triggerElement = this.querySelector<HTMLElement>('[slot=\"trigger\"]')\n\n    if (!this.triggerElement) {\n      this.triggerElement = this.shadowRoot?.querySelector(\n        'slot[name=\"trigger\"] *',\n      ) as HTMLElement\n    }\n\n    if (this.triggerElement instanceof HTMLSlotElement) {\n      this.triggerElement = this.triggerElement.assignedElements({\n        flatten: true,\n      })[0] as HTMLElement\n    }\n\n    if (this.triggerElement) {\n      this.startUpdate()\n    }\n  }\n\n  public _handleTriggerSlotChangeCallback(_e?: Event) {\n    return\n  }\n\n  public _handleContentSlotChange(_e: Event) {\n    return\n  }\n\n  public startUpdate() {\n    if (!this.triggerElement) {\n      return\n    }\n\n    // Create IntersectionObserver to detect when trigger is out of viewport\n    this.intersectionObserver?.disconnect()\n    this.intersectionObserver = new IntersectionObserver(\n      entries => {\n        // If trigger is not intersecting (out of viewport), close the popup\n        if (entries[0] && !entries[0].isIntersecting && this.opened) {\n          this.opened = false\n          this.emit('dds-close')\n        }\n      },\n      { threshold: 0 },\n    )\n    this.intersectionObserver.observe(this.triggerElement)\n\n    this.cleanup = autoUpdate(this.triggerElement, this.popup, () => {\n      this.updatePosition()\n    })\n  }\n\n  public async stopUpdate(): Promise<void> {\n    return new Promise(resolve => {\n      if (this.intersectionObserver) {\n        this.intersectionObserver.disconnect()\n        this.intersectionObserver = null\n      }\n\n      if (this.cleanup) {\n        this.cleanup()\n        this.cleanup = undefined\n        requestAnimationFrame(() => resolve())\n      } else {\n        resolve()\n      }\n    })\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback()\n\n    // Clean up the IntersectionObserver\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect()\n      this.intersectionObserver = null\n    }\n\n    this.stopUpdate()\n  }\n\n  private async updatePosition() {\n    if (this.disabled || !this.triggerElement) {\n      return\n    }\n\n    // Check if trigger element is visible in viewport\n    const triggerRect = this.triggerElement.getBoundingClientRect()\n    const isVisible =\n      triggerRect.top < window.innerHeight &&\n      triggerRect.bottom > 0 &&\n      triggerRect.left < window.innerWidth &&\n      triggerRect.right > 0\n\n    if (!isVisible) {\n      if (this.opened) {\n        this.opened = false\n        this.emit('dds-close')\n      }\n      return\n    }\n\n    const { x, y, placement, middlewareData } = await computePosition(\n      this.triggerElement,\n      this.popup,\n      {\n        placement: this.placement,\n        strategy: this.floatingStrategy,\n        middleware: [\n          offset(this.offset),\n          flip(),\n          shift(),\n          size({\n            apply: ({ rects }) => {\n              const syncWidth = this.sync\n              this.popup.style.width = syncWidth\n                ? `${rects.reference.width}px`\n                : ''\n              this.popup.style.maxHeight = this.maxHeight\n                ? `${this.maxHeight}px`\n                : ''\n\n              this.popup.style.maxWidth = this.maxWidth\n                ? `${this.maxWidth}px`\n                : ''\n\n              if (this.fullWidth) {\n                this.popup.style.width = '100vw'\n              }\n            },\n          }),\n          ...(this.arrowElement\n            ? [arrow({ element: this.arrowElement, padding: 8 })]\n            : []),\n        ],\n      },\n    )\n\n    Object.assign(this.popup.style, {\n      left: `${x}px`,\n      top: `${y}px`,\n    })\n\n    if (this.arrowElement) {\n      const { x: arrowX, y: arrowY } = middlewareData.arrow as Coords\n      const [side] = placement.split('-')\n      const staticSide =\n        {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right',\n        }[side] ?? ''\n\n      Object.assign(this.arrowElement.style, {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n        [staticSide]: `-5px`,\n      })\n    }\n  }\n\n  renderTrigger(): TemplateResult {\n    return html``\n  }\n\n  renderPopup() {\n    return html`\n      <slot name=\"trigger\" @slotchange=${this._handleTriggerSlotChange}>\n        ${this.renderTrigger()}\n      </slot>\n      <div\n        part=\"popup\"\n        id=\"popup\"\n        aria-hidden=${this.opened ? 'false' : 'true'}\n        class=${clsx('popup', `popup--${this.size}`, {\n          'popup--opened': this.opened,\n          'popup--fixed': this.floatingStrategy === 'fixed',\n          'popup--has-arrow': this.hasArrow,\n          'popup--overflow': this.overflow,\n          'popup--full-width': this.fullWidth,\n        })}>\n        <slot @slotchange=${this._handleContentSlotChange}></slot>\n        ${this.hasArrow\n          ? html`<div\n              part=\"arrow\"\n              class=${clsx('popup__arrow', {\n                ['popup__arrow--' + this.placement.split('-')[0]]: true,\n              })}\n              role=\"presentation\"></div>`\n          : ''}\n      </div>\n    `\n  }\n}\n","import { customElement } from 'lit/decorators.js'\n\nimport PopupBaseElement from './popup-base-element'\n\n/**\n * `dap-ds-popup`\n * @summary A popup is a container for popup content.\n * @element dap-ds-popup\n * @title - Popup\n *\n * @property {'xs' | 'sm' | 'lg'} size - The size of the popup.\n * @property {boolean} disabled - The disabled state of the popup.\n * @property {boolean} opened - The open state of the popup.\n * @property {'top' | 'right' | 'bottom' | 'left' | 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end' | 'left-start' | 'left-end' | 'right-start' | 'right-end'} placement - The placement of the popup.\n * @property {'absolute' | 'fixed'} floatingStrategy - The floating strategy of the popup.\n * @property {number} offset - The offset of the popup.\n * @property {boolean} sync - Whether the popup should sync its width with the trigger.\n * @property {number | 'auto'} maxHeight - The maximum height of the popup.\n * @property {number | 'auto'} maxWidth - The maximum width of the popup.\n * @property {boolean} hasArrow - Whether the popup has an arrow.\n * @property {boolean} overflow - Whether the popup should overflow.\n * @property {boolean} fullWidth - Whether the popup should take full width of the screen.\n *\n * @event {{ void }} dds-opened - Fired when the popup is opened.\n * @event {{ void }} dds-closed - Fired when the popup is closed.\n * @event {{ void }} dds-close - Fired when the popup should be closed.\n *\n * @slot trigger - The trigger of the popup.\n * @slot - The content of the popup.\n *\n * @csspart popup - The main popup container.\n * @csspart arrow - The arrow of the popup.\n *\n * @cssproperty --dds-popup-z-index - Z-index of the popup.\n * @cssproperty --dds-popup-padding - Default padding of the popup.\n * @cssproperty --dds-popup-padding-xs - Padding of the popup when size is xs.\n * @cssproperty --dds-popup-padding-lg - Padding of the popup when size is lg.\n * @cssproperty --dds-popup-border-width - Border width of the popup.\n * @cssproperty --dds-popup-border-radius - Border radius of the popup.\n * @cssproperty --dds-popup-border-color - Border color of the popup.\n * @cssproperty --dds-popup-background - Background color of the popup.\n * @cssproperty --dds-popup-color - Text color of the popup.\n * @cssproperty --dds-popup-arrow-size - Size of the popup arrow.\n */\n@customElement('dap-ds-popup')\nexport default class DapDSPopup extends PopupBaseElement {\n  render() {\n    return this.renderPopup()\n  }\n}\n","import clsx from 'clsx'\nimport { nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport {\n  customElement,\n  property,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { createKeyboardNavigationHandler } from '../../internal/keyboard-navigation.js'\nimport DapDSPopup from '../popup/popup.component.js'\nimport styles from './command.scss?inline'\n\n/**\n * `dap-ds-command`\n * @summary A command is a component that displays a list of commands.\n * @element dap-ds-command\n * @title - Command\n *\n * @event {{ value: string }} dds-change - Fired when the command value changes.\n *\n * @slot trigger - The trigger element for the command dropdown.\n * @slot - The command items.\n */\n@customElement('dap-ds-command')\nexport default class DapDSCommand extends DapDSPopup {\n  constructor() {\n    super()\n    this.placement = 'bottom-start'\n    this.overflow = true\n  }\n\n  @queryAssignedElements({ slot: 'trigger' })\n  private readonly _trigger!: HTMLElement[]\n\n  static readonly styles = unsafeCSS(styles)\n\n  /**\n   * The value of the command.\n   */\n  @property({ type: String })\n  value: string | null = null\n\n  /** Whether the command popup should take full width of the screen. */\n  @property({ type: Boolean }) fullWidth: boolean = false\n\n  /** ID of element that labels the command dropdown. */\n  @property({ type: String, attribute: 'aria-labelledby' })\n  ariaLabelledBy?: string\n\n  @state()\n  private _lastClickedItem: HTMLElement | null = null\n\n  private _keyboardNavigation: ReturnType<\n    typeof createKeyboardNavigationHandler\n  > | null = null\n\n  async connectedCallback() {\n    await super.connectedCallback()\n    this.addEventListener('keydown', this._handleKeyDown)\n    // Bind methods to maintain proper context\n    this.handleClick = this.handleClick.bind(this)\n    this.handleDocumentMouseDown = this.handleDocumentMouseDown.bind(this)\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback()\n    this.removeEventListener('keydown', this._handleKeyDown)\n    // Ensure document listener is cleaned up\n    document.removeEventListener('mousedown', this.handleDocumentMouseDown)\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties as Map<string, unknown>)\n\n    if (this.value) {\n      const item = this.querySelector(\n        `dap-ds-command-item[value=\"${this.value}\"]`,\n      )\n      if (item) {\n        this._lastClickedItem = item as HTMLElement\n        this._lastClickedItem.focus()\n      }\n    }\n  }\n\n  async updated(changedProperties: Map<string, unknown>) {\n    await super.updated(changedProperties)\n\n    if (changedProperties.has('opened') && this.opened) {\n      // Initialize keyboard navigation when dropdown opens\n      await this.updateComplete\n      this._initializeKeyboardNavigation()\n    }\n  }\n\n  private _initializeKeyboardNavigation() {\n    this._keyboardNavigation = createKeyboardNavigationHandler(this, {\n      enabledSelector: 'dap-ds-command-item:not([disabled])',\n      onItemClick: (item: HTMLElement) => {\n        this._lastClickedItem = item\n      },\n    })\n\n    // Initialize focus after next update\n    this.updateComplete.then(() => {\n      this._keyboardNavigation?.initializeFocus(\n        this._lastClickedItem || undefined,\n      )\n    })\n  }\n\n  private _handleKeyDown(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'ArrowUp':\n      case 'Home':\n      case 'End':\n      case 'Enter':\n      case ' ':\n        if (!this.opened) {\n          if (\n            event.key === 'ArrowDown' ||\n            event.key === 'ArrowUp' ||\n            event.key === 'Enter' ||\n            event.key === ' '\n          ) {\n            event.preventDefault()\n            this.showDropDown()\n          }\n          return\n        }\n\n        if (this._keyboardNavigation?.handleKeyDown(event)) {\n          // Key was handled by navigation manager\n          if (event.key === 'Enter' || event.key === ' ') {\n            this._handleFocusOut()\n          }\n        }\n        break\n\n      case 'Escape':\n        event.preventDefault()\n        this._handleFocusOut()\n        break\n    }\n  }\n\n  private _handleMenuItemClick(event: CustomEvent) {\n    const { value, closeOnSelect } = event.detail\n    this.emit('dds-change', { value })\n    if (closeOnSelect === 'true') {\n      this._lastClickedItem = event.target as HTMLElement\n      this._handleFocusOut()\n    }\n  }\n\n  private handleClick(event: MouseEvent) {\n    event.stopPropagation()\n    this.opened ? this.hideDropDown() : this.showDropDown()\n  }\n\n  private handleDocumentMouseDown(event: MouseEvent) {\n    const path = event.composedPath()\n    if (this && !path.includes(this)) {\n      this.hideDropDown()\n    }\n  }\n\n  async showDropDown() {\n    if (this.opened) {\n      return\n    }\n\n    this.opened = true\n    this._trigger[0]?.setAttribute('aria-expanded', 'true')\n\n    document.addEventListener('mousedown', this.handleDocumentMouseDown)\n\n    await this.updateComplete\n  }\n\n  async hideDropDown() {\n    if (!this.opened) {\n      return\n    }\n\n    this.opened = false\n    this._trigger[0]?.setAttribute('aria-expanded', 'false')\n\n    document.removeEventListener('mousedown', this.handleDocumentMouseDown)\n\n    // Reset keyboard navigation state\n    this._keyboardNavigation?.reset()\n\n    await this.updateComplete\n\n    this.focus()\n  }\n\n  private _handleFocusOut() {\n    this.hideDropDown()\n    this.focus()\n  }\n\n  public focus() {\n    if (this._trigger && this._trigger.length > 0) {\n      const triggerElement = this._trigger[0]\n      const rect = triggerElement.getBoundingClientRect()\n      const isFullyInViewport =\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= window.innerHeight &&\n        rect.right <= window.innerWidth\n\n      if (isFullyInViewport) {\n        triggerElement.focus({ preventScroll: true })\n      }\n    }\n  }\n\n  private _handleTriggerChange() {\n    if (this._trigger && this._trigger.length > 0) {\n      this._trigger[0].setAttribute('aria-controls', 'popup')\n      this._trigger[0].setAttribute('aria-expanded', 'false')\n    }\n  }\n\n  private _handleDefaultSlotChange() {\n    this._keyboardNavigation?.invalidateCache()\n  }\n\n  render() {\n    return html`\n      <dap-ds-popup\n        part=\"popup-base\"\n        id=\"popup\"\n        role=\"menu\"\n        aria-label=${this.ariaLabel || 'Command menu'}\n        aria-labelledby=${this.ariaLabelledBy || nothing}\n        aria-orientation=\"vertical\"\n        ?opened=${this.opened}\n        exportparts=\"popup\"\n        class=${clsx('command')}\n        placement=${this.placement}\n        ?disabled=${this.disabled}\n        @click=${this.handleClick}\n        maxHeight=${this.maxHeight}\n        ?overflow=${this.overflow}\n        offset=${this.offset}\n        ?sync=${this.sync}\n        ?hasArrow=${this.hasArrow}\n        ?fullWidth=${this.fullWidth}\n        floatingStrategy=${this.floatingStrategy}\n        @dds-close=${this._handleFocusOut}\n        @dds-command-item-click=${this._handleMenuItemClick}>\n        <slot\n          name=\"trigger\"\n          slot=\"trigger\"\n          @slotchange=${this._handleTriggerChange}></slot>\n        <slot @slotchange=${this._handleDefaultSlotChange}></slot>\n      </dap-ds-popup>\n    `\n  }\n}\n","import { unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './command-group.scss?inline'\n\n/**\n * `dap-ds-command-group`\n * @summary A command group is a group of command items.\n * @element dap-ds-command-group\n * @title - Command group\n * @group command\n *\n * @slot - The default slot for the command group.\n *\n * @cssprop --dds-command-group-gap - The gap between command group elements. Defaults to var(--dds-spacing-100)\n * @cssprop --dds-command-group-margin-bottom - The bottom margin of the command group. Defaults to var(--dds-spacing-200)\n * @cssprop --dds-command-group-border-radius - The border radius of the command group. Defaults to var(--dds-radius-small)\n * @cssprop --dds-command-group-label-font-weight - The font weight of the command group label. Defaults to var(--dds-font-weight-bold)\n * @cssprop --dds-command-group-items-gap - The gap between command items. Defaults to var(--dds-spacing-100)\n */\n@customElement('dap-ds-command-group')\nexport default class DapDSCommandGroup extends DdsElement {\n  static readonly styles = unsafeCSS(styles)\n\n  /**\n   * The label of the command group.\n   */\n  @property({ type: String })\n  label?: string\n\n  /**\n   * Whether the command group is exclusive, only one item can be selected at a time.\n   */\n  @property({ type: Boolean })\n  exclusive = false\n\n  @state()\n  private _selectedItem: HTMLElement | null = null\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.addEventListener(\n      'dds-command-item-click',\n      this._handleItemClick as EventListener,\n    )\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback()\n    this.removeEventListener(\n      'dds-command-item-click',\n      this._handleItemClick as EventListener,\n    )\n  }\n\n  private _handleItemClick(event: Event) {\n    if (!this.exclusive) return\n\n    const customEvent = event as CustomEvent\n    const clickedItem = customEvent.target as HTMLElement\n    if (clickedItem === this._selectedItem) return\n\n    // Deselect previously selected item\n    if (this._selectedItem) {\n      this._selectedItem.removeAttribute('selected')\n    }\n\n    // Select new item\n    this._selectedItem = clickedItem\n    this._selectedItem.setAttribute('selected', '')\n  }\n\n  render() {\n    return html`\n      <div class=\"command-group\">\n        ${this.label\n          ? html`<div class=\"command-group__label\">${this.label}</div>`\n          : ''}\n        <div class=\"command-group__items\">\n          <slot></slot>\n        </div>\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { nothing, unsafeCSS } from 'lit'\nimport { customElement, property, query, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\n\nimport { LinkTarget } from '@/dap-design-system'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './command-item.scss?inline'\n\n/**\n * `dap-ds-command-item`\n * @summary A command item is a command item that can be selected.\n * @element dap-ds-command-item\n * @title - Command item\n * @group command\n *\n * @event {{ value: string, closeOnSelect: boolean }} dds-command-item-click - Fired when the command item is clicked.\n *\n * @slot - The label of the command item.\n * @slot check - The check of the command item.\n *\n * @csspart base - The base part of the command item.\n * @csspart content - The content part of the command item.\n * @csspart label - The label part of the command item.\n *\n * @cssprop --dds-command-item-padding - The padding of the command item\n * @cssprop --dds-command-item-background - The background color of the command item\n * @cssprop --dds-command-item-color - The text color of the command item\n * @cssprop --dds-command-item-hover-background - The background color of the command item on hover\n * @cssprop --dds-command-item-selected-background - The background color of the selected command item\n */\n@customElement('dap-ds-command-item')\nexport default class DapDSCommandItem extends DdsElement {\n  @query('#trigger')\n  private readonly _trigger!: HTMLButtonElement\n\n  static readonly styles = unsafeCSS(styles)\n\n  /**\n   * The value of the command item.\n   */\n  @property({ type: String })\n  value?: string\n\n  /**\n   * Whether the command item is disabled.\n   */\n  @property({ type: Boolean })\n  disabled = false\n\n  /** The name of the button */\n  @property() name: string\n\n  /** The Href of the button. If this present the button will be rendered as an anchor `<a></a>` element. */\n  @property() href: string\n\n  /** The target of the button\n   * @type { '_blank' | '_self' | '_parent' | '_top' }\n   */\n  @property() target: LinkTarget = '_self'\n\n  /**\n   * The rel of the button link. Default is `noreferrer noopener`.\n   */\n  @property() rel = 'noreferrer noopener'\n\n  /**\n   * Whether the command item is selectable.\n   */\n  @property({ type: Boolean })\n  selectable = false\n\n  /**\n   * Whether the command item is selected.\n   */\n  @property({ type: Boolean })\n  selected = false\n\n  /**\n   * Whether the command item should close the command when selected.\n   */\n  @property({ type: String })\n  closeOnSelect = 'true'\n\n  @state()\n  private _isSelected = false\n\n  connectedCallback() {\n    super.connectedCallback()\n    this._isSelected = this.selected\n  }\n\n  updated(changedProperties: Map<string, unknown>) {\n    super.updated(changedProperties)\n    if (changedProperties.has('selected')) {\n      this._isSelected = this.selected\n    }\n  }\n\n  private _handleClick(event: Event) {\n    event.stopPropagation()\n\n    if (this.disabled) return\n    this._isSelected = !this._isSelected\n    this.emit('dds-command-item-click', {\n      value: this.value,\n      closeOnSelect: this.closeOnSelect,\n    })\n  }\n\n  private _handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      if (!this.href) {\n        event.preventDefault()\n        this._handleClick(event)\n      } else {\n        event.stopPropagation()\n      }\n    }\n\n    if (event.key === 'Escape') {\n      event.preventDefault()\n      this.emit('dds-close')\n    }\n  }\n\n  public focus() {\n    if (this._trigger) {\n      this._trigger.focus()\n    }\n  }\n\n  render() {\n    return html`\n      <${unsafeStatic(this.href ? 'a' : 'button')}\n        part=\"base\"\n        id=\"trigger\"\n        class=${clsx('command-item', {\n          'command-item--disabled': this.disabled,\n          'command-item--selected': this.selectable && this._isSelected,\n        })}\n        .disabled=${this.disabled}\n        aria-disabled=${this.disabled}\n        aria-label=${ifDefined(this.ariaLabel) || ''}\n        aria-pressed=${ifDefined(this.href ? undefined : this.selected)}\n        href=${this.href}\n        target=${this.target}\n        rel=${this.rel}\n        .autofocus=${this.autofocus}\n        @click=${this._handleClick}\n        @keydown=${this._handleKeyDown}>\n        <span\n          part=\"content\"\n          class=${clsx('command-item__content', {\n            'command-item__content--selectable': this.selectable,\n          })}>\n          ${\n            this.selectable\n              ? this._isSelected\n                ? html`<slot name=\"check\"\n                    ><dap-ds-icon\n                      name=\"check-line2\"\n                      aria-hidden=\"true\"></dap-ds-icon\n                  ></slot>`\n                : html`<span class=\"sr-only\"></span>`\n              : nothing\n          }\n          <span part=\"label\" class=\"command-item__label\"><slot></slot></span>\n        </span>\n      </${unsafeStatic(this.href ? 'a' : 'button')}\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { PropertyValues, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DapDSContentSwitcherItem } from '@/dap-design-system'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './content-switcher.scss?inline'\n\n/**\n * `dap-ds-content-switcher`\n * @summary A content switcher is a set of two or more segments, each of which functions as a mutually exclusive button.\n * @element dap-ds-content-switcher\n * @title - Content switcher\n *\n * @slot - The content switcher items.\n *\n * @event {{ value: string, selected: boolean }} dds-change - Fired when the content switcher is changed.\n *\n * @csspart base - The main content switcher container.\n *\n * @cssproperty --dds-content-switcher-min-width - The minimum width of the content switcher (default: var(--dds-spacing-4000, 160px))\n * @cssproperty --dds-content-switcher-padding - The padding of the content switcher (default: var(--dds-spacing-100, 4px))\n * @cssproperty --dds-content-switcher-border-width - The border width of the content switcher (default: var(--dds-border-width-base))\n * @cssproperty --dds-content-switcher-border-color - The border color of the content switcher (default: var(--dds-border-neutral-transparent))\n * @cssproperty --dds-content-switcher-border-radius - The border radius of the content switcher (default: var(--dds-radius-rounded, 1000px))\n * @cssproperty --dds-content-switcher-background - The background color of the content switcher (default: var(--dds-transparent-black-subtle, rgb(0 0 0 / 5%)))\n * @cssproperty --dds-content-switcher-gap - The gap between content switcher items (default: var(--dds-spacing-100, 4px))\n */\n@customElement('dap-ds-content-switcher')\nexport default class DapDSContentSwitcher extends DdsElement {\n  /** Whether the content switcher allows multiple selections. */\n  @property({ type: Boolean, reflect: true }) multiSelect: boolean = false\n  /** The value of the content switcher. A comma-separated list if `multiSelect` is `true`. */\n  @property({ type: String, reflect: true }) value: string\n\n  static readonly styles = unsafeCSS(styles)\n\n  private getAllInputs() {\n    return [\n      ...this.querySelectorAll<DapDSContentSwitcherItem>(\n        'dap-ds-content-switcher-item',\n      ),\n    ]\n  }\n\n  private async syncInputElements() {\n    const inputs = this.getAllInputs()\n\n    await Promise.all(\n      inputs.map(async input => {\n        if (this.multiSelect && this.value) {\n          const values = this.value?.split(',').map(item => item.trim())\n\n          input.checked = values.includes(input.value)\n        } else {\n          input.checked = input.value === this.value\n        }\n      }),\n    )\n  }\n\n  private handleInputClick(event: MouseEvent) {\n    const target = (\n      event.target as HTMLElement\n    ).closest<DapDSContentSwitcherItem>('dap-ds-content-switcher-item')\n    const inputs = this.getAllInputs()\n    const oldValue = this.value\n\n    if (target!.disabled) {\n      return\n    }\n\n    if (!this.multiSelect) {\n      this.value = target!.value\n      inputs.forEach(input => (input.checked = input === target))\n\n      if (this.value !== oldValue) {\n        this.emit('dds-change', { value: target!.value, selected: true })\n      }\n    } else {\n      target!.checked = !target!.checked\n      this.value = inputs\n        .filter(input => input.checked)\n        .map(input => input.value)\n        .join(',')\n\n      this.emit('dds-change', { value: this.value })\n    }\n  }\n\n  protected updated(_changedProperties: PropertyValues): void {\n    if (_changedProperties.has('value')) {\n      this.syncInputElements()\n    }\n  }\n\n  render() {\n    return html`\n      <div part=\"base\" class=${clsx('content-switcher')}>\n        <slot\n          @click=${this.handleInputClick}\n          @slotchange=${this.syncInputElements}></slot>\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './content-switcher-item.scss?inline'\n\n/**\n * `dap-ds-content-switcher-item`\n * @summary Segmented control item component for the segmented control.\n * @element dap-ds-content-switcher-item\n * @title - Content switcher item\n * @group content-switcher\n *\n * @slot iconcontent - The icon content of the segmented control item.\n *\n * @csspart input - The input of the segmented control item.\n *\n * @cssproperty --dds-content-switcher-item-height - The height of the content switcher item (default: var(--dds-spacing-800, 32px))\n * @cssproperty --dds-content-switcher-item-padding - The padding of the content switcher item (default: var(--dds-spacing-200, 8px) var(--dds-spacing-400, 16px))\n * @cssproperty --dds-content-switcher-item-font-size - The font size of the content switcher item (default: var(--dds-size-sm, 14px))\n * @cssproperty --dds-content-switcher-item-font-weight - The font weight of the content switcher item (default: var(--dds-weight-bold, 700))\n * @cssproperty --dds-content-switcher-item-border-radius - The border radius of the content switcher item (default: var(--dds-radius-large, 16px))\n * @cssproperty --dds-content-switcher-item-background - The background color of the content switcher item (default: transparent)\n * @cssproperty --dds-content-switcher-item-color - The text color of the content switcher item (default: var(--dds-text-neutral-base))\n * @cssproperty --dds-content-switcher-item-border-color - The border color of the content switcher item (default: transparent)\n * @cssproperty --dds-content-switcher-item-checked-background - The background color of the checked content switcher item (default: var(--dds-button-primary-background-enabled))\n * @cssproperty --dds-content-switcher-item-checked-color - The text color of the checked content switcher item (default: var(--dds-text-neutral-on-inverted))\n * @cssproperty --dds-content-switcher-item-checked-border-color - The border color of the checked content switcher item (default: var(--dds-border-neutral-transparent-interactive))\n */\n@customElement('dap-ds-content-switcher-item')\nexport default class DapDSContentSwitcherItem extends DdsElement {\n  /** The value of the segmented control item. */\n  @property({ type: String, reflect: true }) value: string\n  /** The checked state of the segmented control item. */\n  @property({ type: Boolean }) checked: boolean = false\n  /** The disabled state of the segmented control item. */\n  @property({ type: Boolean, reflect: true }) disabled: boolean = false\n  /** The name of the segmented control item. */\n  @property({ type: String, reflect: true }) name: string\n\n  static readonly styles = unsafeCSS(styles)\n\n  render() {\n    return html`\n      <button\n        part=\"input\"\n        name=${ifDefined(this.name)}\n        value=${ifDefined(this.value)}\n        .checked=${this.checked}\n        .disabled=${this.disabled}\n        aria-label=${ifDefined(this.ariaLabel) || ''}\n        aria-pressed=${this.checked}\n        .autofocus=${this.autofocus}\n        class=${clsx('content-switcher__input', {\n          'content-switcher__input--checked': this.checked,\n        })}>\n        <slot slot=\"iconcontent\"></slot>\n      </button>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { html, nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\n\nimport { CommonFormElementSize, InputTypes } from '@/common/types'\nimport { GenericFormElement } from '@/internal/mixin/genericFormElement'\n\nimport styles from './_styles/input.scss?inline'\n\nexport class InputBaseElement extends GenericFormElement {\n  @query('#input') input!: HTMLInputElement\n  @queryAssignedElements({ slot: 'addon-before' })\n  private readonly _addonBeforeNode!: NodeListOf<HTMLElement>\n  @queryAssignedElements({ slot: 'addon-after' })\n  private readonly _addonAfterNode!: NodeListOf<HTMLElement>\n  @queryAssignedElements({ slot: 'prefix' })\n  private readonly _prefixNode!: NodeListOf<HTMLElement>\n  @queryAssignedElements({ slot: 'postfix' })\n  private readonly _postfixNode!: NodeListOf<HTMLElement>\n\n  @property() type: InputTypes = 'text'\n  @property() placeholder?: string\n  @property({ type: Number }) minlength?: number\n  @property({ type: Number }) maxlength?: number\n  @property({ type: Number }) min?: number\n  @property({ type: Number }) max?: number\n  @property() pattern?: string\n  @property({ type: Number }) step?: number | 'any'\n  @property() inputmode?: string\n  @property({ type: Boolean, reflect: true }) loading = false\n  @property({ type: Boolean }) manualValueSet = false\n  @property({ type: Boolean }) disableEnter = false\n  @state() private _hasAddonBefore = false\n  @state() private _hasAddonAfter = false\n  @state() private _hasPrefix = false\n  @state() private _hasPostfix = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  public get nativeControl(): HTMLInputElement {\n    return this.shadowRoot?.querySelector('.input__control') as HTMLInputElement\n  }\n\n  private _handleSlotChange(event: Event) {\n    const target = event?.target as HTMLInputElement\n    target.setAttribute('slot', 'icon')\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n    // this.role = 'textbox'\n    this._hasAddonBefore = !!this._addonBeforeNode.length\n    this._hasAddonAfter = !!this._addonAfterNode.length\n    this._hasPrefix = !!this._prefixNode.length\n    this._hasPostfix = !!this._postfixNode.length\n  }\n\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n    super.attributeChangedCallback(name, oldValue, newValue)\n\n    if (name === 'value' && this.input) {\n      this.input.value = newValue\n    }\n  }\n\n  onInput = () => {\n    if (!this.input.validity.badInput && !this.manualValueSet) {\n      this.value = this.input.value\n    }\n\n    this.emit('dds-input', { value: this.input.value })\n    this.setValidity()\n  }\n\n  formResetCallback() {\n    this.internals.setValidity({})\n    this.internals.setFormValue(this.defaultValue)\n    this.value = this.defaultValue\n    this.input.value = this.defaultValue || ''\n  }\n\n  onBlur() {\n    this.emit('dds-blur')\n  }\n\n  onFocus() {\n    this.emit('dds-focus')\n  }\n\n  onChange() {\n    this.value = this.input.value\n\n    if (!this.manualValueSet) {\n      this.emit('dds-change', { value: this.input.value })\n    }\n\n    this.setValidity()\n  }\n\n  onKeydown(event: KeyboardEvent) {\n    this.emit('dds-keydown', { value: this.input.value, originalEvent: event })\n\n    const hasModifier =\n      event.metaKey || event.ctrlKey || event.shiftKey || event.altKey\n\n    if (!this.disableEnter && event.key === 'Enter' && !hasModifier) {\n      setTimeout(() => {\n        if (!event.defaultPrevented && !event.isComposing) {\n          const proxy = document.createElement('button')\n          proxy.type = 'submit'\n          this.insertAdjacentElement('afterend', proxy)\n\n          proxy.click()\n          proxy.remove()\n        }\n      })\n    }\n  }\n\n  public get focusElement() {\n    return this.input\n  }\n\n  handleInvalid(event: Event) {\n    event.preventDefault()\n  }\n\n  renderDefaultContent() {\n    return html` <span\n        part=\"prefix\"\n        class=${clsx({ 'input__addon-prefix': !!this._hasPrefix })}>\n        <slot name=\"prefix\"></slot>\n      </span>\n      <span\n        part=\"postfix\"\n        class=${clsx({\n          'input__addon-postfix': this._hasPostfix || this.loading,\n        })}>\n        ${this.loading\n          ? html`<dap-ds-spinner size=\"lg\"></dap-ds-spinner>`\n          : nothing}\n        <slot name=\"postfix\"></slot>\n      </span>`\n  }\n\n  renderInput(content?: unknown) {\n    return html`\n      <div class=\"label-container\">\n        ${this.label &&\n        html`<dap-ds-form-label\n          part=\"label\"\n          id=\"label\"\n          for=\"input\"\n          .size=${this.size}\n          .required=${this.required}\n          .optional=${this.optional}\n          .disabled=${this.disabled}\n          class=${clsx('label')}\n          label=${ifDefined(this.label)}>\n        </dap-ds-form-label>`}\n        ${this.tooltip &&\n        html` <dap-ds-tooltip\n          part=\"tooltip\"\n          content=${this.tooltip}\n          mode=\"toggle\"\n          floatingStrategy=\"fixed\"\n          placement=${this.tooltipPlacement}>\n          <dap-ds-icon-button\n            clean\n            class=\"info-button\"\n            slot=\"trigger\"\n            aria-label=${this.tooltipAriaLabel}\n            size=${this.size as 'xs' | 'sm' | 'md' | 'lg'}\n            iconSize=${this.size === 'xs' ? '16' : '22'}>\n            <dap-ds-icon\n              name=\"information-line\"\n              class=\"info-button\"></dap-ds-icon>\n          </dap-ds-icon-button>\n        </dap-ds-tooltip>`}\n      </div>\n      ${this.description &&\n      html`\n        <dap-ds-typography\n          part=\"description\"\n          variant=\"description\"\n          size=${ifDefined(this.size as CommonFormElementSize)}\n          id=\"description\">\n          ${this.description}\n        </dap-ds-typography>\n      `}\n      <span\n        part=\"base\"\n        class=${clsx(\n          'input',\n          `input--${this.size}`,\n          { 'input--success': this.status === 'success' },\n          { 'input--error': this.status === 'error' },\n          { 'input--disabled': this.disabled },\n          { 'input--readonly': this.readonly },\n          { 'input--has-addon-before': !!this._hasAddonBefore },\n          { 'input--has-addon-after': !!this._hasAddonAfter },\n          { 'input--has-prefix': !!this._hasPrefix },\n          { 'input--has-postfix': !!this._hasPostfix || this.loading },\n        )}>\n        <span\n          part=\"addon-before\"\n          class=${clsx({\n            'input__addon-before': !!this._hasAddonBefore,\n            [`input__addon-before--${this.size}`]: !!this._hasAddonBefore,\n            'input__addon-before--disabled':\n              !!this._hasAddonBefore && this.disabled,\n            'input__addon-before--readonly':\n              !!this._hasAddonBefore && this.readonly,\n            'input__addon-before--success':\n              !!this._hasAddonBefore && this.status === 'success',\n            'input__addon-before--error':\n              !!this._hasAddonBefore && this.status === 'error',\n          })}>\n          <slot name=\"addon-before\"></slot>\n        </span>\n        <div class=\"input__container\">\n          <input\n            id=\"input\"\n            class=${clsx(\n              'input__control',\n              `input__control--${this.size}`,\n              { 'input__control--success': this.status === 'success' },\n              { 'input__control--error': this.status === 'error' },\n              { 'input__control--disabled': this.disabled },\n              { 'input__control--readonly': this.readonly },\n              { 'input__control--has-addon-before': !!this._hasAddonBefore },\n              { 'input__control--has-addon-after': !!this._hasAddonAfter },\n              { 'input__control--has-prefix': !!this._hasPrefix },\n              {\n                'input__control--has-postfix':\n                  !!this._hasPostfix || this.loading,\n              },\n            )}\n            part=\"input\"\n            name=${ifDefined(this.name ? this.name : undefined)}\n            type=${this.type}\n            ?disabled=${this.disabled}\n            ?readonly=${this.readonly}\n            ?required=${this.required}\n            placeholder=${ifDefined(this.placeholder)}\n            value=${ifDefined(this.value)}\n            minlength=${ifDefined(this.minlength)}\n            maxlength=${ifDefined(this.maxlength)}\n            aria-labelledby=${ifDefined(this.label ? 'label' : nothing)}\n            aria-describedby=\"${ifDefined(\n              this.description ? 'description' : nothing,\n            )}${ifDefined(this.feedback ? ' feedback' : nothing)}\"\n            min=${ifDefined(this.min)}\n            max=${ifDefined(this.max)}\n            pattern=${ifDefined(this.pattern)}\n            step=${ifDefined(this.step as number)}\n            inputmode=${ifDefined(this.inputmode)}\n            ?autofocus=${this.autofocus}\n            autocomplete=${this.autocomplete as any}\n            autocapitalize=${ifDefined(this.autocapitalize ? 'on' : 'off')}\n            @change=${this.onChange}\n            @input=${this.onInput}\n            @keydown=${this.onKeydown}\n            @invalid=${this.handleInvalid}\n            @blur=${this.onBlur}\n            @focus=${this.onFocus} />\n          ${content ?? this.renderDefaultContent()}\n        </div>\n        <span\n          part=\"addon-after\"\n          class=${clsx({\n            'input__addon-after': !!this._hasAddonAfter,\n            [`input__addon-after--${this.size}`]: !!this._hasAddonAfter,\n            'input__addon-after--disabled':\n              !!this._hasAddonAfter && this.disabled,\n            'input__addon-after--readonly':\n              !!this._hasAddonAfter && this.readonly,\n            'input__addon-after--success':\n              !!this._hasAddonAfter && this.status === 'success',\n            'input__addon-after--error':\n              !!this._hasAddonAfter && this.status === 'error',\n          })}>\n          <slot name=\"addon-after\"></slot>\n        </span>\n      </span>\n      ${this.feedback && this._renderFeedback()}\n    `\n  }\n\n  private _renderFeedback() {\n    return html`\n      <dap-ds-feedback\n        part=\"feedback\"\n        role=\"alert\"\n        feedbackType=${ifDefined(this.feedbackType)}\n        feedbackSize=\"${ifDefined(this.size as 'lg' | 'sm' | 'xs')}\"\n        .subtle=${this.subtle}\n        id=\"feedback\">\n        <slot\n          name=\"feedback-icon\"\n          @slotchange=\"${this._handleSlotChange}\"></slot>\n        ${this.feedback}\n      </dap-ds-feedback>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { html } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\n\nimport { translate } from '@/localization/localization'\n\nimport { InputBaseElement } from '../input/input-base-element'\n\n/**\n * `dap-ds-copybox-input`\n * @summary A copybox input is a field for copying an input value.\n * @element dap-ds-copybox-input\n * @title - CopyBox input\n *\n * @property {string} label - The label of the input.\n * @property {string} placeholder - The placeholder of the input.\n * @property {string} description - The description of the input.\n * @property {string} tooltip - The tooltip of the input.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The position of the tooltip. Can be `top`, `right`, `bottom`, or `left`.\n * @property {'success' | 'error'} status - The status of the input. Can be `success` or `error`.\n * @property {'xs' | 'sm' | 'sm'} size - The size of the input. Default is `sm`.\n * @property {string} name - The name of the input.\n * @property {string} value - The value of the input.\n * @property {boolean} disabled - The disabled state of the input. Default is false.\n * @property {boolean} required - The required state of the input. Default is false.\n * @property {boolean} readonly - The readonly state of the input. Default is false.\n * @property {boolean} autofocus - The autofocus state of the input. Default is false.\n * @property {string} feedback - The feedback of the input.\n * @property {'negative' | 'positive' | 'warning'} feedbackType - The feedback type of the input. Can be `negative`, `positive`, or `warning`.\n * @property {boolean} loading - The loading state of the input. Default is false.\n * @property {boolean} optional - The optional state of the input.\n * @property {string} optionalLabel - The optional label of the input.\n * @property {boolean} subtle - The weight of the label. Default is `false`\n * @property {string} copyButtonAriaLabel - The aria label of the copy button.\n *\n * @event {{ value: string }} dds-copy - Fired when the user clicks on the copy button.\n * @event {{ value: string }} dds-change - Fired when the input value changes.\n * @event {{ value: string }} dds-input - Fired when the input value changes.\n * @event {{ value: string, originalEvent: Event }} dds-keydown - Fired when a key is pressed down.\n * @event {{ void }} dds-blur - Fired when the input loses focus.\n * @event {{ void }} dds-focus - Emitted when the input gains focus.\n * @event {{ void }} dds-not-allowed - Emitted when the value cannot be copied.\n *\n * @cssproperty --dds-input-height - The height of the input. Default is var(--dds-spacing-1000).\n * @cssproperty --dds-input-padding - The padding of the input. Default is var(--dds-spacing-300).\n * @cssproperty --dds-input-font-size - The font size of the input. Default is var(--dds-font-base).\n * @cssproperty --dds-input-border-color - The border color of the input. Default is var(--dds-border-neutral-base).\n * @cssproperty --dds-input-background-color - The background color of the input. Default is var(--dds-fields-background-default).\n * @cssproperty --dds-input-text-color - The text color of the input. Default is var(--dds-text-neutral-base).\n * @cssproperty --dds-input-border-radius - The border radius of the input. Default is var(--dds-radius-base).\n * @cssproperty --dds-input-border-width - The border width of the input. Default is var(--dds-border-width-base).\n * @cssproperty --dds-input-disabled-background - The background color of the disabled input. Default is var(--dds-fields-background-disabled).\n * @cssproperty --dds-input-disabled-text - The text color of the disabled input. Default is var(--dds-text-neutral-disabled).\n * @cssproperty --dds-input-readonly-background - The background color of the readonly input. Default is var(--dds-fields-background-read-only).\n * @cssproperty --dds-input-readonly-text - The text color of the readonly input. Default is var(--dds-text-neutral-subtle).\n * @cssproperty --dds-input-success-border - The border color of the success input. Default is var(--dds-border-positive-base).\n * @cssproperty --dds-input-error-border - The border color of the error input. Default is var(--dds-border-negative-base).\n * @cssproperty --dds-input-addon-background - The background color of the input addon. Default is var(--dds-background-ui-neutral-enabled).\n * @cssproperty --dds-input-addon-success-background - The background color of the success input addon. Default is var(--dds-background-ui-positive-enabled).\n * @cssproperty --dds-input-addon-error-background - The background color of the error input addon. Default is var(--dds-background-ui-negative-enabled).\n *\n * @csspart base - The base container of the component.\n * @csspart postfix - The inner postfix icon part of the component.\n * @csspart button - The button of the component.\n */\n@customElement('dap-ds-copybox-input')\nexport default class DapDSCopyBoxInput extends InputBaseElement {\n  constructor() {\n    super()\n    this.type = 'text'\n  }\n\n  @property({ type: String }) copyButtonAriaLabel?: string\n\n  render() {\n    return this.renderInput(\n      html`<span\n        class=${clsx('input__addon-postfix copybox-input')}\n        part=\"base\">\n        <dap-ds-icon-button\n          part=\"button\"\n          icon=\"clipboard-line\"\n          aria-label=${this.copyButtonAriaLabel\n            ? this.copyButtonAriaLabel\n            : translate('copy')}\n          @click=\"${this.onCopy}\">\n        </dap-ds-icon-button>\n      </span>`,\n    )\n  }\n\n  onCopy() {\n    const inputElement = this.innerInput as HTMLInputElement\n    this.value = inputElement.value\n    this.emit('dds-copy', { value: this.value })\n    this.copyToClipboard()\n  }\n\n  private copyToClipboard() {\n    navigator.clipboard\n      .writeText(this.value)\n      .then(() => {\n        this.emit('dds-copy', { value: this.value })\n      })\n      .catch(() => {\n        this.emit('dds-not-allowed')\n      })\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { translate } from '@/localization/localization'\n\nimport styles from './dap-badge.scss?inline'\n\n/**\n * `dap-ds-dap-badge`\n * @summary A DÁP badge is a brand element showing the use of this system design library.\n * @element dap-ds-dap-badge\n * @title - Dap badge\n *\n * @slot - Description of badge\n * *\n * @csspart base - Main badge container\n * @csspart icon - Badge icon\n * @csspart text - Badge text\n *\n * @cssproperty --dds-badge-padding-sm - Custom padding for the small badge (default: var(--dds-spacing-200) var(--dds-spacing-300))\n * @cssproperty --dds-badge-padding-lg - Custom padding for the large badge (default: var(--dds-spacing-400))\n * @cssproperty --dds-badge-border-width - Custom border width for the badge (default: var(--dds-border-width-base))\n * @cssproperty --dds-badge-border-color - Custom border color for the badge (default: var(--dds-border-neutral-divider))\n * @cssproperty --dds-badge-border-radius - Custom border radius for the badge (default: var(--dds-radius-base))\n * @cssproperty --dds-badge-color - Custom text color for the badge (default: var(--dds-text-neutral-base))\n * @cssproperty --dds-badge-gap - Custom gap between icon and text (default: var(--dds-spacing-200))\n * @cssproperty --dds-badge-font-size-sm - Custom font size for the small badge (default: var(--dds-font-xs))\n * @cssproperty --dds-badge-font-size-lg - Custom font size for the large badge (default: var(--dds-font-xs))\n * @cssproperty --dds-badge-font-weight - Custom font weight for the badge (default: var(--dds-font-weight-medium))\n * @cssproperty --dds-badge-line-height - Custom line height for the badge (default: var(--dds-font-line-height-large))\n * @cssproperty --dds-badge-border-color-normal - Custom border color for the normal variant (default: var(--dds-transparent-black-medium))\n * @cssproperty --dds-badge-background-color-normal - Custom background color for the normal variant (default: var(--dds-background-brand-subtle))\n * @cssproperty --dds-badge-color-normal - Custom text color for the normal variant (default: var(--dds-text-brand-subtle))\n * @cssproperty --dds-badge-border-color-inverted - Custom border color for the inverted variant (default: var(--dds-transparent-white-medium))\n * @cssproperty --dds-badge-background-color-inverted - Custom background color for the inverted variant (default: var(--dds-background-brand-base-inverted))\n * @cssproperty --dds-badge-color-inverted - Custom text color for the inverted variant (default: var(--dds-text-neutral-inverted))\n */\n@customElement('dap-ds-dap-badge')\nexport default class DapDSDAPBadge extends DdsElement {\n  /** The variant of the DÁP badge\n   * @type {'normal' | 'inverted'}\n   */\n  @property({ type: String, reflect: true }) variant = 'normal'\n\n  /** The size of the DÁP badge\n   * @type {'sm' | 'lg'}\n   */\n  @property({ type: String, reflect: true }) size = 'sm'\n\n  static readonly styles = unsafeCSS(styles)\n\n  render() {\n    const iconTemplate =\n      this.size === 'sm'\n        ? html`<svg\n            part=\"icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"19\"\n            height=\"14\"\n            aria-hidden=\"true\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 19 14\">\n            <path\n              d=\"M2.96193 4.88933C1.74231 4.88933 0.752904 5.87801 0.752904 7.09877V13.9811H5.17004V7.09877C5.17004 5.87892 4.18155 4.88933 2.96101 4.88933H2.96193Z\" />\n            <path\n              d=\"M2.95706 4.41761C4.17742 4.41761 5.16909 3.4287 5.17202 2.20881C5.17495 0.988917 4.18804 0 2.96768 0C1.74732 0 0.755654 0.988917 0.752723 2.20881C0.749791 3.4287 1.73671 4.41761 2.95706 4.41761Z\" />\n            <path\n              d=\"M11.2584 0.0187986H6.08486V14H11.2584C15.1183 14 18.2473 10.8704 18.2473 7.00986C18.2473 3.14929 15.1183 0.0187986 11.2584 0.0187986ZM11.4393 9.21838H10.5011V4.80042H11.4393C12.6589 4.80042 13.6483 5.78909 13.6483 7.00986C13.6483 8.23062 12.6599 9.21929 11.4393 9.21929V9.21838Z\" />\n          </svg>`\n        : html`<svg\n            part=\"icon\"\n            width=\"130\"\n            height=\"40\"\n            viewBox=\"0 0 130 40\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M10.7425 13.9C13.6892 13.1992 15.5141 10.2245 14.8186 7.25571C14.1231 4.2869 11.1706 2.44824 8.22396 3.14894C5.2773 3.84965 3.45236 6.82437 4.14783 9.79318C4.84331 12.762 7.79584 14.6007 10.7425 13.9Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M75.6986 10.9708V10.9526C75.6986 9.93152 76.4694 9.40158 77.6211 9.40158C78.0745 9.40158 78.5212 9.49295 78.8 9.59345V9.51122C78.8 8.99956 78.4826 8.70718 77.8206 8.70718C77.3037 8.70718 76.9024 8.80769 76.4671 8.98129L76.1135 7.75924C76.6666 7.53082 77.2561 7.37549 78.1018 7.37549C78.9474 7.37549 79.5822 7.58564 79.9722 7.97852C80.344 8.34171 80.4981 8.85337 80.4981 9.54777V12.3825H78.791V11.8708C78.4554 12.2454 77.9907 12.4898 77.3468 12.4898C76.4127 12.4898 75.694 11.953 75.694 10.9663L75.6986 10.9708ZM78.8204 10.5962V10.3678C78.6481 10.2947 78.4033 10.2399 78.1494 10.2399C77.6506 10.2399 77.3604 10.4866 77.3604 10.852V10.8703C77.3604 11.2084 77.6143 11.4071 77.968 11.4071C78.4668 11.4071 78.8204 11.0873 78.8204 10.5962Z\" />\n            <path\n              d=\"M78.5212 5.30829L80.1195 5.82909L78.7751 6.98718H77.578L78.5212 5.31058V5.30829Z\" />\n            <path d=\"M60.4474 5.72858H62.2453V7.00545H60.4474V5.72858Z\" />\n            <path d=\"M60.4837 7.45087H62.2067V12.3825H60.4837V7.45087Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M53.6051 6.00497H56.0559C58.3253 6.00497 59.6403 7.3161 59.6403 9.15945V9.17773C59.6403 11.0211 58.3049 12.387 56.0174 12.387H53.6051V6.00497ZM56.0831 10.8178C57.1351 10.8178 57.8356 10.233 57.8356 9.20514V9.18687C57.8356 8.16583 57.1351 7.57422 56.0831 7.57422H55.3644V10.8201H56.0831V10.8178Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M63.6781 12.1472L63.1249 13.2961H63.1226C63.83 13.6593 64.6303 13.8603 65.5825 13.8603C66.6073 13.8603 67.2987 13.6114 67.7431 13.1659C68.1784 12.7297 68.3779 12.0992 68.3779 11.197V7.44859H66.6549V8.03335C66.2808 7.64046 65.8455 7.33895 65.1109 7.33895C63.9751 7.33895 62.9866 8.2138 62.9866 9.63685V9.65513C62.9866 11.069 63.9569 11.9439 65.1653 11.9439C65.8818 11.9439 66.3375 11.6081 66.6821 11.2061V11.398C66.6821 12.1815 66.2559 12.6109 65.3943 12.6109C64.7301 12.6109 64.2041 12.4396 63.6781 12.1472ZM65.6845 8.69119C66.2672 8.69119 66.6843 9.09321 66.6843 9.63914V9.65741C66.6843 10.2033 66.2763 10.6145 65.6845 10.6145C65.0928 10.6145 64.6756 10.2125 64.6756 9.66655V9.64827C64.6756 9.10235 65.1019 8.69119 65.6845 8.69119Z\" />\n            <path d=\"M69.3074 5.72858H71.1053V7.00545H69.3074V5.72858Z\" />\n            <path d=\"M69.3437 7.45087H71.069V12.3825H69.3437V7.45087Z\" />\n            <path\n              d=\"M72.3296 8.85109V10.8566H72.325C72.325 12.0353 72.9417 12.4898 73.9778 12.4898C74.4607 12.4898 74.8688 12.3802 75.1771 12.2066V10.8475C74.9685 10.948 74.7509 11.0119 74.5242 11.0119C74.2068 11.0119 74.0526 10.8635 74.0526 10.5186V8.84881H75.1952V7.45316H74.0526V6.2037H72.3296V7.45544H71.7469V8.85109H72.3296Z\" />\n            <path d=\"M83.1371 5.72858H81.4141V12.3847H83.1371V5.72858Z\" />\n            <path d=\"M84.1029 5.72858H85.9008V7.00545H84.1029V5.72858Z\" />\n            <path d=\"M84.1369 7.45087H85.86V12.3825H84.1369V7.45087Z\" />\n            <path\n              d=\"M87.0979 10.7196L86.454 11.768L86.4563 11.7657C87.1364 12.2568 87.9548 12.4944 88.7801 12.4944C89.9794 12.4944 90.7865 11.9279 90.7865 10.8429V10.8246C90.7865 9.86756 90.0134 9.5295 89.0431 9.25539C88.5239 9.10235 88.2428 9.01098 88.2428 8.81911V8.80084C88.2428 8.66378 88.3788 8.56328 88.6418 8.56328C89.034 8.56328 89.5872 8.73459 90.095 9.01784L90.6845 7.9237C90.1222 7.56051 89.3764 7.35037 88.6599 7.35037C87.5241 7.35037 86.6898 7.93512 86.6898 8.98357V9.00185C86.6898 9.99547 87.4629 10.3267 88.4332 10.5802C88.9501 10.7264 89.2222 10.8086 89.2222 11.0005V11.0188C89.2222 11.1924 89.0862 11.2838 88.7869 11.2838C88.2768 11.2838 87.6601 11.0942 87.0979 10.7196Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M55.802 16.896H57.5001L60.2048 23.3238H58.3163L57.8538 22.184H55.403L54.9495 23.3238H53.0973L55.802 16.896ZM57.3437 20.8066L56.6363 18.9929L55.9176 20.8066H57.3437Z\" />\n            <path\n              d=\"M56.9537 14.9339L58.5974 15.4364L57.253 16.4118H55.9743L56.9537 14.9339Z\" />\n            <path d=\"M62.481 16.6722H60.758V23.3284H62.481V16.6722Z\" />\n            <path d=\"M63.4809 16.6722H65.2039V23.3284H63.4809V16.6722Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M65.9203 21.8962V21.9144L65.9226 21.9099C65.9226 22.8966 66.6413 23.4334 67.5753 23.4334C68.2192 23.4334 68.684 23.189 69.0195 22.8144V23.3261H70.7244V20.4914C70.7244 19.797 70.5703 19.2853 70.1985 18.9221C69.8085 18.5292 69.1737 18.3191 68.328 18.3191C67.4824 18.3191 66.8929 18.4744 66.3397 18.7028L66.6934 19.9249C67.1287 19.7513 67.5277 19.6508 68.0446 19.6508C68.7067 19.6508 69.0241 19.9432 69.0241 20.4548V20.5371C68.7452 20.4366 68.2986 20.3452 67.8451 20.3452C66.6912 20.3452 65.9203 20.8751 65.9203 21.8962ZM69.0445 21.3137V21.5421C69.0445 22.0332 68.6908 22.353 68.192 22.353C67.8383 22.353 67.5844 22.1543 67.5844 21.8162V21.7979C67.5844 21.4325 67.8746 21.1858 68.3734 21.1858C68.6273 21.1858 68.8722 21.2406 69.0445 21.3137Z\" />\n            <path\n              d=\"M71.6109 18.3945H73.3271V19.0683C73.6445 18.6572 74.0979 18.2848 74.7894 18.2848C75.4424 18.2848 75.9434 18.5772 76.2064 19.0866C76.6326 18.5932 77.1314 18.2848 77.8501 18.2848C78.893 18.2848 79.5301 18.9404 79.5301 20.0894V23.3261H77.807V20.6444C77.807 20.1076 77.544 19.8244 77.1359 19.8244C76.7278 19.8244 76.4286 20.1076 76.4286 20.6444V23.3261H74.7055V20.6444C74.7055 20.1076 74.4426 19.8244 74.0345 19.8244C73.6264 19.8244 73.3362 20.1076 73.3362 20.6444V23.3261H71.6109V18.3945Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M82.1418 18.3945H80.4188V24.7857H82.1418V22.7253C82.4592 23.0977 82.8945 23.4357 83.6382 23.4357C84.799 23.4357 85.8078 22.4581 85.8078 20.8546V20.8363C85.8078 19.2602 84.799 18.2848 83.6291 18.2848C82.8945 18.2848 82.4774 18.6389 82.1418 19.0501V18.3945ZM84.112 20.8477V20.866C84.112 21.533 83.6586 21.9875 83.1031 21.9875C82.5477 21.9875 82.1033 21.5216 82.1033 20.866V20.8477C82.1033 20.199 82.5386 19.7353 83.1031 19.7353C83.6676 19.7353 84.112 20.2013 84.112 20.8477Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M86.3519 20.8843V20.866C86.3519 19.4635 87.4946 18.2848 89.0748 18.2848C90.655 18.2848 91.7795 19.4429 91.7795 20.8454V20.8637C91.7795 22.2662 90.6346 23.4449 89.0567 23.4449C87.4787 23.4449 86.3519 22.2868 86.3519 20.8843ZM90.1018 20.8843V20.866C90.1018 20.263 89.6665 19.7536 89.0589 19.7536C88.4513 19.7536 88.0342 20.2561 88.0342 20.8477V20.866C88.0342 21.469 88.4695 21.9784 89.0771 21.9784C89.6847 21.9784 90.1018 21.4759 90.1018 20.8843Z\" />\n            <path d=\"M94.2666 16.6722H92.5436V23.3284H94.2666V16.6722Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M95.1848 24.2397L95.738 23.0908C96.264 23.3832 96.79 23.5545 97.4542 23.5545C98.3158 23.5545 98.742 23.1251 98.742 22.3416V22.1497C98.3974 22.5517 97.9417 22.8875 97.2253 22.8875C96.0169 22.8875 95.0465 22.0127 95.0465 20.5987V20.5805C95.0465 19.1574 96.035 18.2826 97.1708 18.2826C97.9054 18.2826 98.3407 18.5841 98.7148 18.977V18.3922H100.438V22.1406C100.438 23.0428 100.238 23.6733 99.803 24.1096C99.3677 24.5458 98.6672 24.8039 97.6424 24.8039C96.6902 24.8039 95.8899 24.6029 95.1825 24.2397H95.1848ZM98.742 20.601V20.5827C98.742 20.0368 98.3248 19.6348 97.7422 19.6348C97.1595 19.6348 96.7333 20.046 96.7333 20.5919V20.6102C96.7333 21.1561 97.1504 21.5581 97.7422 21.5581C98.3339 21.5581 98.742 21.1469 98.742 20.601Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M101.12 21.8962V21.9144L101.116 21.9121C101.116 22.8989 101.834 23.4357 102.768 23.4357C103.412 23.4357 103.877 23.1913 104.213 22.8167V23.3284H105.92V20.4937C105.92 19.7993 105.766 19.2876 105.394 18.9244C105.004 18.5315 104.369 18.3214 103.523 18.3214C102.678 18.3214 102.088 18.4767 101.535 18.7051L101.889 19.9272C102.324 19.7536 102.725 19.6531 103.242 19.6531C103.904 19.6531 104.222 19.9432 104.222 20.4548V20.5371C103.943 20.4366 103.496 20.3452 103.043 20.3452C101.891 20.3452 101.12 20.8751 101.12 21.8962ZM104.242 21.3137V21.5421C104.242 22.0332 103.891 22.353 103.39 22.353C103.036 22.353 102.782 22.1543 102.782 21.8162V21.7979C102.782 21.4325 103.072 21.1858 103.571 21.1858C103.825 21.1858 104.07 21.2406 104.242 21.3137Z\" />\n            <path\n              d=\"M105.541 16.775L103.943 16.2542V16.2565L103 17.9331H104.197L105.541 16.775Z\" />\n            <path\n              d=\"M106.802 18.3899H108.525V19.3835C108.806 18.7097 109.259 18.2711 110.078 18.3077V20.1305H109.933C109.033 20.1305 108.527 20.6513 108.527 21.7911V23.3238H106.804V18.3922L106.802 18.3899Z\" />\n            <path\n              d=\"M110.96 21.6563L110.316 22.7048C110.996 23.1959 111.814 23.4334 112.64 23.4334C113.837 23.4334 114.646 22.8669 114.646 21.782V21.7637C114.646 20.8066 113.873 20.4685 112.903 20.1944C112.383 20.0414 112.102 19.95 112.102 19.7582V19.7399C112.102 19.6028 112.238 19.5023 112.501 19.5023C112.894 19.5023 113.447 19.6736 113.955 19.9569L114.544 18.8627C113.984 18.4996 113.238 18.2894 112.522 18.2894C111.386 18.2894 110.552 18.8742 110.552 19.9226V19.9409C110.552 20.9345 111.325 21.2657 112.295 21.5193C112.812 21.6655 113.084 21.7477 113.084 21.9396V21.9578C113.084 22.1292 112.948 22.2205 112.649 22.2205C112.139 22.2205 111.522 22.0309 110.96 21.6563Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M115.109 21.9144V21.8962C115.109 20.8751 115.879 20.3452 117.033 20.3452C117.487 20.3452 117.933 20.4366 118.212 20.5371V20.4548C118.212 19.9432 117.895 19.6531 117.233 19.6531C116.716 19.6531 116.317 19.7536 115.882 19.9272L115.528 18.7051C116.081 18.4767 116.671 18.3214 117.516 18.3214C118.362 18.3214 118.997 18.5315 119.387 18.9244C119.759 19.2876 119.913 19.7993 119.913 20.4937V23.3284H118.208V22.8167C117.872 23.1913 117.407 23.4357 116.764 23.4357C115.83 23.4357 115.111 22.8989 115.111 21.9121L115.109 21.9144ZM118.23 21.5421V21.3137C118.058 21.2406 117.813 21.1858 117.559 21.1858C117.061 21.1858 116.77 21.4325 116.77 21.7979V21.8162C116.77 22.1543 117.024 22.353 117.378 22.353C117.877 22.353 118.23 22.0332 118.23 21.5421Z\" />\n            <path\n              d=\"M117.931 16.2542L119.53 16.775L118.185 17.9331H116.988L117.931 16.2565V16.2542Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M121.298 23.0908L120.745 24.2397C121.452 24.6029 122.252 24.8039 123.205 24.8039C124.229 24.8039 124.93 24.5458 125.365 24.1096C125.8 23.6733 126 23.0428 126 22.1406V18.3922H124.275V18.977C123.901 18.5841 123.465 18.2826 122.731 18.2826C121.595 18.2826 120.606 19.1574 120.606 20.5805V20.5987C120.606 22.0127 121.577 22.8875 122.785 22.8875C123.502 22.8875 123.957 22.5517 124.302 22.1497V22.3416C124.302 23.1251 123.876 23.5545 123.014 23.5545C122.352 23.5545 121.824 23.3832 121.298 23.0908ZM124.304 20.5827V20.601C124.304 21.1469 123.896 21.5581 123.304 21.5581C122.713 21.5581 122.295 21.1561 122.295 20.6102V20.5919C122.295 20.046 122.722 19.6348 123.304 19.6348C123.887 19.6348 124.304 20.0368 124.304 20.5827Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M53.6051 27.8831H56.328C57.9331 27.8831 58.9692 28.7122 58.9692 30.1261V30.1444C58.9692 31.6474 57.8152 32.4423 56.2373 32.4423H55.3667V34.2651H53.6051V27.8831ZM56.201 31.0558C56.8267 31.0558 57.2099 30.7269 57.2099 30.2266V30.2084C57.2099 29.6624 56.829 29.3701 56.1919 29.3701H55.3667V31.0558H56.201Z\" />\n            <path\n              d=\"M61.3361 29.3335H59.6131L59.6153 29.3358V34.2674H61.3384V32.7347C61.3384 31.5949 61.844 31.0741 62.744 31.0741H62.8891V29.2513C62.0707 29.2147 61.6172 29.6533 61.3361 30.3271V29.3335Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M63.2065 31.8005C63.2065 30.398 64.3514 29.2216 65.9294 29.2216C67.5073 29.2216 68.6341 30.3797 68.6341 31.7822V31.8005C68.6341 33.203 67.4915 34.3816 65.9112 34.3816C64.331 34.3816 63.2065 33.2235 63.2065 31.821V31.8005ZM66.9564 31.8187V31.8005C66.9564 31.1974 66.5211 30.6881 65.9135 30.6881C65.3059 30.6881 64.8888 31.1906 64.8888 31.7822V31.8005C64.8888 32.4035 65.324 32.9129 65.9316 32.9129C66.5392 32.9129 66.9564 32.4103 66.9564 31.8187Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M69.8674 34.0253L69.3142 35.1742V35.1719H69.3097C70.0171 35.5351 70.8174 35.7361 71.7696 35.7361C72.7943 35.7361 73.4949 35.478 73.9302 35.0417C74.3655 34.6055 74.565 33.975 74.565 33.0728V29.3244H72.8419V29.9091C72.4701 29.5185 72.0326 29.217 71.298 29.217C70.1622 29.217 69.1737 30.0919 69.1737 31.5149V31.5332C69.1737 32.9471 70.144 33.822 71.3524 33.822C72.0688 33.822 72.5245 33.4862 72.8692 33.0842V33.2761C72.8692 34.0595 72.4429 34.489 71.5814 34.489C70.9194 34.489 70.3934 34.3177 69.8674 34.0253ZM72.8714 31.5195V31.5378C72.8714 32.0837 72.4633 32.4949 71.8716 32.4949C71.2799 32.4949 70.8627 32.0928 70.8627 31.5469V31.5286C70.8627 30.9827 71.2889 30.5716 71.8716 30.5716C72.4543 30.5716 72.8714 30.9736 72.8714 31.5195Z\" />\n            <path\n              d=\"M75.4968 29.3335H77.2198V30.3271C77.501 29.6533 77.9544 29.2147 78.7728 29.2513V31.0741H78.6277C77.7277 31.0741 77.2221 31.5949 77.2221 32.7347V34.2674H75.4991V29.3358L75.4968 29.3335Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M78.9089 32.8375V32.8558L78.9044 32.8512C78.9044 33.838 79.623 34.3748 80.5571 34.3748C81.201 34.3748 81.6658 34.1303 82.0013 33.7557V34.2674H83.7085V31.4327C83.7085 30.7383 83.5543 30.2266 83.1825 29.8635C82.7925 29.4706 82.1577 29.2604 81.3121 29.2604C80.4664 29.2604 79.877 29.4158 79.3238 29.6442L79.6775 30.8662C80.1127 30.6926 80.514 30.5921 81.031 30.5921C81.693 30.5921 82.0104 30.8845 82.0104 31.3962V31.4784C81.7315 31.3779 81.2849 31.2865 80.8314 31.2865C79.6797 31.2865 78.9089 31.8164 78.9089 32.8375ZM82.0308 32.2527V32.4812C82.0308 32.9723 81.6771 33.292 81.1783 33.292C80.8246 33.292 80.5707 33.0933 80.5707 32.7553V32.737C80.5707 32.3715 80.8609 32.1248 81.3597 32.1248C81.6136 32.1248 81.8585 32.1796 82.0308 32.2527Z\" />\n            <path\n              d=\"M84.6017 29.329H86.3157V30.0028C86.6331 29.5916 87.0865 29.2193 87.778 29.2193C88.4309 29.2193 88.932 29.5117 89.195 30.0233C89.6212 29.53 90.12 29.2193 90.8387 29.2193C91.8816 29.2193 92.5186 29.8749 92.5186 31.0238V34.2605H90.7956V31.5812C90.7956 31.0444 90.5326 30.7611 90.1245 30.7611C89.7164 30.7611 89.4172 31.0444 89.4172 31.5812V34.2605H87.6941V31.5812C87.6941 31.0444 87.4311 30.7611 87.023 30.7611C86.6149 30.7611 86.3247 31.0444 86.3247 31.5812V34.2605H84.6017V29.329Z\" />\n            <path\n              d=\"M4.00175 20.7474C4.00175 17.6961 6.45647 15.2248 9.48261 15.2242C12.511 15.2248 14.9635 17.6984 14.9635 20.7474V37.952H4.00175V20.7474Z\" />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M17.2329 3.04944H30.0718C39.6505 3.04944 47.4156 10.8751 47.4156 20.5259C47.4156 30.1766 39.6505 38 30.0718 38H17.2329V3.04944ZM28.1923 26.0468H30.5207V26.0491C33.5496 26.0491 36.0027 23.5776 36.0027 20.5259C36.0027 17.4742 33.5473 15.0027 30.5207 15.0027H28.1923V26.0468Z\" />\n          </svg> `\n\n    return html`<div\n      part=\"base\"\n      class=${clsx('dap-badge', {\n        [`dap-badge--${this.variant}`]: this.variant,\n        [`dap-badge--${this.size}`]: this.size,\n      })}>\n      <div\n        class=${clsx('dap-badge__icon-container', {\n          [`dap-badge__icon-container--${this.size}`]: this.size,\n          [`dap-badge__icon-container--${this.variant}`]: this.variant,\n        })}>\n        ${iconTemplate}\n      </div>\n      <slot part=\"text\">\n        ${this.size === 'sm'\n          ? translate('dap-badge')\n          : translate('dap-badge-large')}\n      </slot>\n    </div>`\n  }\n}\n","/**\n   * table-core\n   *\n   * Copyright (c) TanStack\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE.md file in the root directory of this source tree.\n   *\n   * @license MIT\n   */\n// type Person = {\n//   firstName: string\n//   lastName: string\n//   age: number\n//   visits: number\n//   status: string\n//   progress: number\n//   createdAt: Date\n//   nested: {\n//     foo: [\n//       {\n//         bar: 'bar'\n//       }\n//     ]\n//     bar: { subBar: boolean }[]\n//     baz: {\n//       foo: 'foo'\n//       bar: {\n//         baz: 'baz'\n//       }\n//     }\n//   }\n// }\n\n// const test: DeepKeys<Person> = 'nested.foo.0.bar'\n// const test2: DeepKeys<Person> = 'nested.bar'\n\n// const helper = createColumnHelper<Person>()\n\n// helper.accessor('nested.foo', {\n//   cell: info => info.getValue(),\n// })\n\n// helper.accessor('nested.foo.0.bar', {\n//   cell: info => info.getValue(),\n// })\n\n// helper.accessor('nested.bar', {\n//   cell: info => info.getValue(),\n// })\n\nfunction createColumnHelper() {\n  return {\n    accessor: (accessor, column) => {\n      return typeof accessor === 'function' ? {\n        ...column,\n        accessorFn: accessor\n      } : {\n        ...column,\n        accessorKey: accessor\n      };\n    },\n    display: column => column,\n    group: column => column\n  };\n}\n\n// Is this type a tuple?\n\n// If this type is a tuple, what indices are allowed?\n\n///\n\nfunction functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nfunction noop() {\n  //\n}\nfunction makeStateUpdater(key, instance) {\n  return updater => {\n    instance.setState(old => {\n      return {\n        ...old,\n        [key]: functionalUpdate(updater, old[key])\n      };\n    });\n  };\n}\nfunction isFunction(d) {\n  return d instanceof Function;\n}\nfunction isNumberArray(d) {\n  return Array.isArray(d) && d.every(val => typeof val === 'number');\n}\nfunction flattenBy(arr, getChildren) {\n  const flat = [];\n  const recurse = subArr => {\n    subArr.forEach(item => {\n      flat.push(item);\n      const children = getChildren(item);\n      if (children != null && children.length) {\n        recurse(children);\n      }\n    });\n  };\n  recurse(arr);\n  return flat;\n}\nfunction memo(getDeps, fn, opts) {\n  let deps = [];\n  let result;\n  return depArgs => {\n    let depTime;\n    if (opts.key && opts.debug) depTime = Date.now();\n    const newDeps = getDeps(depArgs);\n    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => deps[index] !== dep);\n    if (!depsChanged) {\n      return result;\n    }\n    deps = newDeps;\n    let resultTime;\n    if (opts.key && opts.debug) resultTime = Date.now();\n    result = fn(...newDeps);\n    opts == null || opts.onChange == null || opts.onChange(result);\n    if (opts.key && opts.debug) {\n      if (opts != null && opts.debug()) {\n        const depEndTime = Math.round((Date.now() - depTime) * 100) / 100;\n        const resultEndTime = Math.round((Date.now() - resultTime) * 100) / 100;\n        const resultFpsPercentage = resultEndTime / 16;\n        const pad = (str, num) => {\n          str = String(str);\n          while (str.length < num) {\n            str = ' ' + str;\n          }\n          return str;\n        };\n        console.info(`%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`, `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(0, Math.min(120 - 120 * resultFpsPercentage, 120))}deg 100% 31%);`, opts == null ? void 0 : opts.key);\n      }\n    }\n    return result;\n  };\n}\nfunction getMemoOptions(tableOptions, debugLevel, key, onChange) {\n  return {\n    debug: () => {\n      var _tableOptions$debugAl;\n      return (_tableOptions$debugAl = tableOptions == null ? void 0 : tableOptions.debugAll) != null ? _tableOptions$debugAl : tableOptions[debugLevel];\n    },\n    key: process.env.NODE_ENV === 'development' && key,\n    onChange\n  };\n}\n\nfunction createCell(table, row, column, columnId) {\n  const getRenderValue = () => {\n    var _cell$getValue;\n    return (_cell$getValue = cell.getValue()) != null ? _cell$getValue : table.options.renderFallbackValue;\n  };\n  const cell = {\n    id: `${row.id}_${column.id}`,\n    row,\n    column,\n    getValue: () => row.getValue(columnId),\n    renderValue: getRenderValue,\n    getContext: memo(() => [table, column, row, cell], (table, column, row, cell) => ({\n      table,\n      column,\n      row,\n      cell: cell,\n      getValue: cell.getValue,\n      renderValue: cell.renderValue\n    }), getMemoOptions(table.options, 'debugCells', 'cell.getContext'))\n  };\n  table._features.forEach(feature => {\n    feature.createCell == null || feature.createCell(cell, column, row, table);\n  }, {});\n  return cell;\n}\n\nfunction createColumn(table, columnDef, depth, parent) {\n  var _ref, _resolvedColumnDef$id;\n  const defaultColumn = table._getDefaultColumnDef();\n  const resolvedColumnDef = {\n    ...defaultColumn,\n    ...columnDef\n  };\n  const accessorKey = resolvedColumnDef.accessorKey;\n  let id = (_ref = (_resolvedColumnDef$id = resolvedColumnDef.id) != null ? _resolvedColumnDef$id : accessorKey ? typeof String.prototype.replaceAll === 'function' ? accessorKey.replaceAll('.', '_') : accessorKey.replace(/\\./g, '_') : undefined) != null ? _ref : typeof resolvedColumnDef.header === 'string' ? resolvedColumnDef.header : undefined;\n  let accessorFn;\n  if (resolvedColumnDef.accessorFn) {\n    accessorFn = resolvedColumnDef.accessorFn;\n  } else if (accessorKey) {\n    // Support deep accessor keys\n    if (accessorKey.includes('.')) {\n      accessorFn = originalRow => {\n        let result = originalRow;\n        for (const key of accessorKey.split('.')) {\n          var _result;\n          result = (_result = result) == null ? void 0 : _result[key];\n          if (process.env.NODE_ENV !== 'production' && result === undefined) {\n            console.warn(`\"${key}\" in deeply nested key \"${accessorKey}\" returned undefined.`);\n          }\n        }\n        return result;\n      };\n    } else {\n      accessorFn = originalRow => originalRow[resolvedColumnDef.accessorKey];\n    }\n  }\n  if (!id) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(resolvedColumnDef.accessorFn ? `Columns require an id when using an accessorFn` : `Columns require an id when using a non-string header`);\n    }\n    throw new Error();\n  }\n  let column = {\n    id: `${String(id)}`,\n    accessorFn,\n    parent: parent,\n    depth,\n    columnDef: resolvedColumnDef,\n    columns: [],\n    getFlatColumns: memo(() => [true], () => {\n      var _column$columns;\n      return [column, ...((_column$columns = column.columns) == null ? void 0 : _column$columns.flatMap(d => d.getFlatColumns()))];\n    }, getMemoOptions(table.options, 'debugColumns', 'column.getFlatColumns')),\n    getLeafColumns: memo(() => [table._getOrderColumnsFn()], orderColumns => {\n      var _column$columns2;\n      if ((_column$columns2 = column.columns) != null && _column$columns2.length) {\n        let leafColumns = column.columns.flatMap(column => column.getLeafColumns());\n        return orderColumns(leafColumns);\n      }\n      return [column];\n    }, getMemoOptions(table.options, 'debugColumns', 'column.getLeafColumns'))\n  };\n  for (const feature of table._features) {\n    feature.createColumn == null || feature.createColumn(column, table);\n  }\n\n  // Yes, we have to convert table to unknown, because we know more than the compiler here.\n  return column;\n}\n\nconst debug = 'debugHeaders';\n//\n\nfunction createHeader(table, column, options) {\n  var _options$id;\n  const id = (_options$id = options.id) != null ? _options$id : column.id;\n  let header = {\n    id,\n    column,\n    index: options.index,\n    isPlaceholder: !!options.isPlaceholder,\n    placeholderId: options.placeholderId,\n    depth: options.depth,\n    subHeaders: [],\n    colSpan: 0,\n    rowSpan: 0,\n    headerGroup: null,\n    getLeafHeaders: () => {\n      const leafHeaders = [];\n      const recurseHeader = h => {\n        if (h.subHeaders && h.subHeaders.length) {\n          h.subHeaders.map(recurseHeader);\n        }\n        leafHeaders.push(h);\n      };\n      recurseHeader(header);\n      return leafHeaders;\n    },\n    getContext: () => ({\n      table,\n      header: header,\n      column\n    })\n  };\n  table._features.forEach(feature => {\n    feature.createHeader == null || feature.createHeader(header, table);\n  });\n  return header;\n}\nconst Headers = {\n  createTable: table => {\n    // Header Groups\n\n    table.getHeaderGroups = memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, leafColumns, left, right) => {\n      var _left$map$filter, _right$map$filter;\n      const leftColumns = (_left$map$filter = left == null ? void 0 : left.map(columnId => leafColumns.find(d => d.id === columnId)).filter(Boolean)) != null ? _left$map$filter : [];\n      const rightColumns = (_right$map$filter = right == null ? void 0 : right.map(columnId => leafColumns.find(d => d.id === columnId)).filter(Boolean)) != null ? _right$map$filter : [];\n      const centerColumns = leafColumns.filter(column => !(left != null && left.includes(column.id)) && !(right != null && right.includes(column.id)));\n      const headerGroups = buildHeaderGroups(allColumns, [...leftColumns, ...centerColumns, ...rightColumns], table);\n      return headerGroups;\n    }, getMemoOptions(table.options, debug, 'getHeaderGroups'));\n    table.getCenterHeaderGroups = memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, leafColumns, left, right) => {\n      leafColumns = leafColumns.filter(column => !(left != null && left.includes(column.id)) && !(right != null && right.includes(column.id)));\n      return buildHeaderGroups(allColumns, leafColumns, table, 'center');\n    }, getMemoOptions(table.options, debug, 'getCenterHeaderGroups'));\n    table.getLeftHeaderGroups = memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left], (allColumns, leafColumns, left) => {\n      var _left$map$filter2;\n      const orderedLeafColumns = (_left$map$filter2 = left == null ? void 0 : left.map(columnId => leafColumns.find(d => d.id === columnId)).filter(Boolean)) != null ? _left$map$filter2 : [];\n      return buildHeaderGroups(allColumns, orderedLeafColumns, table, 'left');\n    }, getMemoOptions(table.options, debug, 'getLeftHeaderGroups'));\n    table.getRightHeaderGroups = memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.right], (allColumns, leafColumns, right) => {\n      var _right$map$filter2;\n      const orderedLeafColumns = (_right$map$filter2 = right == null ? void 0 : right.map(columnId => leafColumns.find(d => d.id === columnId)).filter(Boolean)) != null ? _right$map$filter2 : [];\n      return buildHeaderGroups(allColumns, orderedLeafColumns, table, 'right');\n    }, getMemoOptions(table.options, debug, 'getRightHeaderGroups'));\n\n    // Footer Groups\n\n    table.getFooterGroups = memo(() => [table.getHeaderGroups()], headerGroups => {\n      return [...headerGroups].reverse();\n    }, getMemoOptions(table.options, debug, 'getFooterGroups'));\n    table.getLeftFooterGroups = memo(() => [table.getLeftHeaderGroups()], headerGroups => {\n      return [...headerGroups].reverse();\n    }, getMemoOptions(table.options, debug, 'getLeftFooterGroups'));\n    table.getCenterFooterGroups = memo(() => [table.getCenterHeaderGroups()], headerGroups => {\n      return [...headerGroups].reverse();\n    }, getMemoOptions(table.options, debug, 'getCenterFooterGroups'));\n    table.getRightFooterGroups = memo(() => [table.getRightHeaderGroups()], headerGroups => {\n      return [...headerGroups].reverse();\n    }, getMemoOptions(table.options, debug, 'getRightFooterGroups'));\n\n    // Flat Headers\n\n    table.getFlatHeaders = memo(() => [table.getHeaderGroups()], headerGroups => {\n      return headerGroups.map(headerGroup => {\n        return headerGroup.headers;\n      }).flat();\n    }, getMemoOptions(table.options, debug, 'getFlatHeaders'));\n    table.getLeftFlatHeaders = memo(() => [table.getLeftHeaderGroups()], left => {\n      return left.map(headerGroup => {\n        return headerGroup.headers;\n      }).flat();\n    }, getMemoOptions(table.options, debug, 'getLeftFlatHeaders'));\n    table.getCenterFlatHeaders = memo(() => [table.getCenterHeaderGroups()], left => {\n      return left.map(headerGroup => {\n        return headerGroup.headers;\n      }).flat();\n    }, getMemoOptions(table.options, debug, 'getCenterFlatHeaders'));\n    table.getRightFlatHeaders = memo(() => [table.getRightHeaderGroups()], left => {\n      return left.map(headerGroup => {\n        return headerGroup.headers;\n      }).flat();\n    }, getMemoOptions(table.options, debug, 'getRightFlatHeaders'));\n\n    // Leaf Headers\n\n    table.getCenterLeafHeaders = memo(() => [table.getCenterFlatHeaders()], flatHeaders => {\n      return flatHeaders.filter(header => {\n        var _header$subHeaders;\n        return !((_header$subHeaders = header.subHeaders) != null && _header$subHeaders.length);\n      });\n    }, getMemoOptions(table.options, debug, 'getCenterLeafHeaders'));\n    table.getLeftLeafHeaders = memo(() => [table.getLeftFlatHeaders()], flatHeaders => {\n      return flatHeaders.filter(header => {\n        var _header$subHeaders2;\n        return !((_header$subHeaders2 = header.subHeaders) != null && _header$subHeaders2.length);\n      });\n    }, getMemoOptions(table.options, debug, 'getLeftLeafHeaders'));\n    table.getRightLeafHeaders = memo(() => [table.getRightFlatHeaders()], flatHeaders => {\n      return flatHeaders.filter(header => {\n        var _header$subHeaders3;\n        return !((_header$subHeaders3 = header.subHeaders) != null && _header$subHeaders3.length);\n      });\n    }, getMemoOptions(table.options, debug, 'getRightLeafHeaders'));\n    table.getLeafHeaders = memo(() => [table.getLeftHeaderGroups(), table.getCenterHeaderGroups(), table.getRightHeaderGroups()], (left, center, right) => {\n      var _left$0$headers, _left$, _center$0$headers, _center$, _right$0$headers, _right$;\n      return [...((_left$0$headers = (_left$ = left[0]) == null ? void 0 : _left$.headers) != null ? _left$0$headers : []), ...((_center$0$headers = (_center$ = center[0]) == null ? void 0 : _center$.headers) != null ? _center$0$headers : []), ...((_right$0$headers = (_right$ = right[0]) == null ? void 0 : _right$.headers) != null ? _right$0$headers : [])].map(header => {\n        return header.getLeafHeaders();\n      }).flat();\n    }, getMemoOptions(table.options, debug, 'getLeafHeaders'));\n  }\n};\nfunction buildHeaderGroups(allColumns, columnsToGroup, table, headerFamily) {\n  var _headerGroups$0$heade, _headerGroups$;\n  // Find the max depth of the columns:\n  // build the leaf column row\n  // build each buffer row going up\n  //    placeholder for non-existent level\n  //    real column for existing level\n\n  let maxDepth = 0;\n  const findMaxDepth = function (columns, depth) {\n    if (depth === void 0) {\n      depth = 1;\n    }\n    maxDepth = Math.max(maxDepth, depth);\n    columns.filter(column => column.getIsVisible()).forEach(column => {\n      var _column$columns;\n      if ((_column$columns = column.columns) != null && _column$columns.length) {\n        findMaxDepth(column.columns, depth + 1);\n      }\n    }, 0);\n  };\n  findMaxDepth(allColumns);\n  let headerGroups = [];\n  const createHeaderGroup = (headersToGroup, depth) => {\n    // The header group we are creating\n    const headerGroup = {\n      depth,\n      id: [headerFamily, `${depth}`].filter(Boolean).join('_'),\n      headers: []\n    };\n\n    // The parent columns we're going to scan next\n    const pendingParentHeaders = [];\n\n    // Scan each column for parents\n    headersToGroup.forEach(headerToGroup => {\n      // What is the latest (last) parent column?\n\n      const latestPendingParentHeader = [...pendingParentHeaders].reverse()[0];\n      const isLeafHeader = headerToGroup.column.depth === headerGroup.depth;\n      let column;\n      let isPlaceholder = false;\n      if (isLeafHeader && headerToGroup.column.parent) {\n        // The parent header is new\n        column = headerToGroup.column.parent;\n      } else {\n        // The parent header is repeated\n        column = headerToGroup.column;\n        isPlaceholder = true;\n      }\n      if (latestPendingParentHeader && (latestPendingParentHeader == null ? void 0 : latestPendingParentHeader.column) === column) {\n        // This column is repeated. Add it as a sub header to the next batch\n        latestPendingParentHeader.subHeaders.push(headerToGroup);\n      } else {\n        // This is a new header. Let's create it\n        const header = createHeader(table, column, {\n          id: [headerFamily, depth, column.id, headerToGroup == null ? void 0 : headerToGroup.id].filter(Boolean).join('_'),\n          isPlaceholder,\n          placeholderId: isPlaceholder ? `${pendingParentHeaders.filter(d => d.column === column).length}` : undefined,\n          depth,\n          index: pendingParentHeaders.length\n        });\n\n        // Add the headerToGroup as a subHeader of the new header\n        header.subHeaders.push(headerToGroup);\n        // Add the new header to the pendingParentHeaders to get grouped\n        // in the next batch\n        pendingParentHeaders.push(header);\n      }\n      headerGroup.headers.push(headerToGroup);\n      headerToGroup.headerGroup = headerGroup;\n    });\n    headerGroups.push(headerGroup);\n    if (depth > 0) {\n      createHeaderGroup(pendingParentHeaders, depth - 1);\n    }\n  };\n  const bottomHeaders = columnsToGroup.map((column, index) => createHeader(table, column, {\n    depth: maxDepth,\n    index\n  }));\n  createHeaderGroup(bottomHeaders, maxDepth - 1);\n  headerGroups.reverse();\n\n  // headerGroups = headerGroups.filter(headerGroup => {\n  //   return !headerGroup.headers.every(header => header.isPlaceholder)\n  // })\n\n  const recurseHeadersForSpans = headers => {\n    const filteredHeaders = headers.filter(header => header.column.getIsVisible());\n    return filteredHeaders.map(header => {\n      let colSpan = 0;\n      let rowSpan = 0;\n      let childRowSpans = [0];\n      if (header.subHeaders && header.subHeaders.length) {\n        childRowSpans = [];\n        recurseHeadersForSpans(header.subHeaders).forEach(_ref => {\n          let {\n            colSpan: childColSpan,\n            rowSpan: childRowSpan\n          } = _ref;\n          colSpan += childColSpan;\n          childRowSpans.push(childRowSpan);\n        });\n      } else {\n        colSpan = 1;\n      }\n      const minChildRowSpan = Math.min(...childRowSpans);\n      rowSpan = rowSpan + minChildRowSpan;\n      header.colSpan = colSpan;\n      header.rowSpan = rowSpan;\n      return {\n        colSpan,\n        rowSpan\n      };\n    });\n  };\n  recurseHeadersForSpans((_headerGroups$0$heade = (_headerGroups$ = headerGroups[0]) == null ? void 0 : _headerGroups$.headers) != null ? _headerGroups$0$heade : []);\n  return headerGroups;\n}\n\nconst createRow = (table, id, original, rowIndex, depth, subRows, parentId) => {\n  let row = {\n    id,\n    index: rowIndex,\n    original,\n    depth,\n    parentId,\n    _valuesCache: {},\n    _uniqueValuesCache: {},\n    getValue: columnId => {\n      if (row._valuesCache.hasOwnProperty(columnId)) {\n        return row._valuesCache[columnId];\n      }\n      const column = table.getColumn(columnId);\n      if (!(column != null && column.accessorFn)) {\n        return undefined;\n      }\n      row._valuesCache[columnId] = column.accessorFn(row.original, rowIndex);\n      return row._valuesCache[columnId];\n    },\n    getUniqueValues: columnId => {\n      if (row._uniqueValuesCache.hasOwnProperty(columnId)) {\n        return row._uniqueValuesCache[columnId];\n      }\n      const column = table.getColumn(columnId);\n      if (!(column != null && column.accessorFn)) {\n        return undefined;\n      }\n      if (!column.columnDef.getUniqueValues) {\n        row._uniqueValuesCache[columnId] = [row.getValue(columnId)];\n        return row._uniqueValuesCache[columnId];\n      }\n      row._uniqueValuesCache[columnId] = column.columnDef.getUniqueValues(row.original, rowIndex);\n      return row._uniqueValuesCache[columnId];\n    },\n    renderValue: columnId => {\n      var _row$getValue;\n      return (_row$getValue = row.getValue(columnId)) != null ? _row$getValue : table.options.renderFallbackValue;\n    },\n    subRows: subRows != null ? subRows : [],\n    getLeafRows: () => flattenBy(row.subRows, d => d.subRows),\n    getParentRow: () => row.parentId ? table.getRow(row.parentId, true) : undefined,\n    getParentRows: () => {\n      let parentRows = [];\n      let currentRow = row;\n      while (true) {\n        const parentRow = currentRow.getParentRow();\n        if (!parentRow) break;\n        parentRows.push(parentRow);\n        currentRow = parentRow;\n      }\n      return parentRows.reverse();\n    },\n    getAllCells: memo(() => [table.getAllLeafColumns()], leafColumns => {\n      return leafColumns.map(column => {\n        return createCell(table, row, column, column.id);\n      });\n    }, getMemoOptions(table.options, 'debugRows', 'getAllCells')),\n    _getAllCellsByColumnId: memo(() => [row.getAllCells()], allCells => {\n      return allCells.reduce((acc, cell) => {\n        acc[cell.column.id] = cell;\n        return acc;\n      }, {});\n    }, getMemoOptions(table.options, 'debugRows', 'getAllCellsByColumnId'))\n  };\n  for (let i = 0; i < table._features.length; i++) {\n    const feature = table._features[i];\n    feature == null || feature.createRow == null || feature.createRow(row, table);\n  }\n  return row;\n};\n\n//\n\nconst ColumnFaceting = {\n  createColumn: (column, table) => {\n    column._getFacetedRowModel = table.options.getFacetedRowModel && table.options.getFacetedRowModel(table, column.id);\n    column.getFacetedRowModel = () => {\n      if (!column._getFacetedRowModel) {\n        return table.getPreFilteredRowModel();\n      }\n      return column._getFacetedRowModel();\n    };\n    column._getFacetedUniqueValues = table.options.getFacetedUniqueValues && table.options.getFacetedUniqueValues(table, column.id);\n    column.getFacetedUniqueValues = () => {\n      if (!column._getFacetedUniqueValues) {\n        return new Map();\n      }\n      return column._getFacetedUniqueValues();\n    };\n    column._getFacetedMinMaxValues = table.options.getFacetedMinMaxValues && table.options.getFacetedMinMaxValues(table, column.id);\n    column.getFacetedMinMaxValues = () => {\n      if (!column._getFacetedMinMaxValues) {\n        return undefined;\n      }\n      return column._getFacetedMinMaxValues();\n    };\n  }\n};\n\nconst includesString = (row, columnId, filterValue) => {\n  var _filterValue$toString, _row$getValue;\n  const search = filterValue == null || (_filterValue$toString = filterValue.toString()) == null ? void 0 : _filterValue$toString.toLowerCase();\n  return Boolean((_row$getValue = row.getValue(columnId)) == null || (_row$getValue = _row$getValue.toString()) == null || (_row$getValue = _row$getValue.toLowerCase()) == null ? void 0 : _row$getValue.includes(search));\n};\nincludesString.autoRemove = val => testFalsey(val);\nconst includesStringSensitive = (row, columnId, filterValue) => {\n  var _row$getValue2;\n  return Boolean((_row$getValue2 = row.getValue(columnId)) == null || (_row$getValue2 = _row$getValue2.toString()) == null ? void 0 : _row$getValue2.includes(filterValue));\n};\nincludesStringSensitive.autoRemove = val => testFalsey(val);\nconst equalsString = (row, columnId, filterValue) => {\n  var _row$getValue3;\n  return ((_row$getValue3 = row.getValue(columnId)) == null || (_row$getValue3 = _row$getValue3.toString()) == null ? void 0 : _row$getValue3.toLowerCase()) === (filterValue == null ? void 0 : filterValue.toLowerCase());\n};\nequalsString.autoRemove = val => testFalsey(val);\nconst arrIncludes = (row, columnId, filterValue) => {\n  var _row$getValue4;\n  return (_row$getValue4 = row.getValue(columnId)) == null ? void 0 : _row$getValue4.includes(filterValue);\n};\narrIncludes.autoRemove = val => testFalsey(val);\nconst arrIncludesAll = (row, columnId, filterValue) => {\n  return !filterValue.some(val => {\n    var _row$getValue5;\n    return !((_row$getValue5 = row.getValue(columnId)) != null && _row$getValue5.includes(val));\n  });\n};\narrIncludesAll.autoRemove = val => testFalsey(val) || !(val != null && val.length);\nconst arrIncludesSome = (row, columnId, filterValue) => {\n  return filterValue.some(val => {\n    var _row$getValue6;\n    return (_row$getValue6 = row.getValue(columnId)) == null ? void 0 : _row$getValue6.includes(val);\n  });\n};\narrIncludesSome.autoRemove = val => testFalsey(val) || !(val != null && val.length);\nconst equals = (row, columnId, filterValue) => {\n  return row.getValue(columnId) === filterValue;\n};\nequals.autoRemove = val => testFalsey(val);\nconst weakEquals = (row, columnId, filterValue) => {\n  return row.getValue(columnId) == filterValue;\n};\nweakEquals.autoRemove = val => testFalsey(val);\nconst inNumberRange = (row, columnId, filterValue) => {\n  let [min, max] = filterValue;\n  const rowValue = row.getValue(columnId);\n  return rowValue >= min && rowValue <= max;\n};\ninNumberRange.resolveFilterValue = val => {\n  let [unsafeMin, unsafeMax] = val;\n  let parsedMin = typeof unsafeMin !== 'number' ? parseFloat(unsafeMin) : unsafeMin;\n  let parsedMax = typeof unsafeMax !== 'number' ? parseFloat(unsafeMax) : unsafeMax;\n  let min = unsafeMin === null || Number.isNaN(parsedMin) ? -Infinity : parsedMin;\n  let max = unsafeMax === null || Number.isNaN(parsedMax) ? Infinity : parsedMax;\n  if (min > max) {\n    const temp = min;\n    min = max;\n    max = temp;\n  }\n  return [min, max];\n};\ninNumberRange.autoRemove = val => testFalsey(val) || testFalsey(val[0]) && testFalsey(val[1]);\n\n// Export\n\nconst filterFns = {\n  includesString,\n  includesStringSensitive,\n  equalsString,\n  arrIncludes,\n  arrIncludesAll,\n  arrIncludesSome,\n  equals,\n  weakEquals,\n  inNumberRange\n};\n// Utils\n\nfunction testFalsey(val) {\n  return val === undefined || val === null || val === '';\n}\n\n//\n\nconst ColumnFiltering = {\n  getDefaultColumnDef: () => {\n    return {\n      filterFn: 'auto'\n    };\n  },\n  getInitialState: state => {\n    return {\n      columnFilters: [],\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onColumnFiltersChange: makeStateUpdater('columnFilters', table),\n      filterFromLeafRows: false,\n      maxLeafRowFilterDepth: 100\n    };\n  },\n  createColumn: (column, table) => {\n    column.getAutoFilterFn = () => {\n      const firstRow = table.getCoreRowModel().flatRows[0];\n      const value = firstRow == null ? void 0 : firstRow.getValue(column.id);\n      if (typeof value === 'string') {\n        return filterFns.includesString;\n      }\n      if (typeof value === 'number') {\n        return filterFns.inNumberRange;\n      }\n      if (typeof value === 'boolean') {\n        return filterFns.equals;\n      }\n      if (value !== null && typeof value === 'object') {\n        return filterFns.equals;\n      }\n      if (Array.isArray(value)) {\n        return filterFns.arrIncludes;\n      }\n      return filterFns.weakEquals;\n    };\n    column.getFilterFn = () => {\n      var _table$options$filter, _table$options$filter2;\n      return isFunction(column.columnDef.filterFn) ? column.columnDef.filterFn : column.columnDef.filterFn === 'auto' ? column.getAutoFilterFn() : // @ts-ignore\n      (_table$options$filter = (_table$options$filter2 = table.options.filterFns) == null ? void 0 : _table$options$filter2[column.columnDef.filterFn]) != null ? _table$options$filter : filterFns[column.columnDef.filterFn];\n    };\n    column.getCanFilter = () => {\n      var _column$columnDef$ena, _table$options$enable, _table$options$enable2;\n      return ((_column$columnDef$ena = column.columnDef.enableColumnFilter) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableColumnFilters) != null ? _table$options$enable : true) && ((_table$options$enable2 = table.options.enableFilters) != null ? _table$options$enable2 : true) && !!column.accessorFn;\n    };\n    column.getIsFiltered = () => column.getFilterIndex() > -1;\n    column.getFilterValue = () => {\n      var _table$getState$colum;\n      return (_table$getState$colum = table.getState().columnFilters) == null || (_table$getState$colum = _table$getState$colum.find(d => d.id === column.id)) == null ? void 0 : _table$getState$colum.value;\n    };\n    column.getFilterIndex = () => {\n      var _table$getState$colum2, _table$getState$colum3;\n      return (_table$getState$colum2 = (_table$getState$colum3 = table.getState().columnFilters) == null ? void 0 : _table$getState$colum3.findIndex(d => d.id === column.id)) != null ? _table$getState$colum2 : -1;\n    };\n    column.setFilterValue = value => {\n      table.setColumnFilters(old => {\n        const filterFn = column.getFilterFn();\n        const previousFilter = old == null ? void 0 : old.find(d => d.id === column.id);\n        const newFilter = functionalUpdate(value, previousFilter ? previousFilter.value : undefined);\n\n        //\n        if (shouldAutoRemoveFilter(filterFn, newFilter, column)) {\n          var _old$filter;\n          return (_old$filter = old == null ? void 0 : old.filter(d => d.id !== column.id)) != null ? _old$filter : [];\n        }\n        const newFilterObj = {\n          id: column.id,\n          value: newFilter\n        };\n        if (previousFilter) {\n          var _old$map;\n          return (_old$map = old == null ? void 0 : old.map(d => {\n            if (d.id === column.id) {\n              return newFilterObj;\n            }\n            return d;\n          })) != null ? _old$map : [];\n        }\n        if (old != null && old.length) {\n          return [...old, newFilterObj];\n        }\n        return [newFilterObj];\n      });\n    };\n  },\n  createRow: (row, _table) => {\n    row.columnFilters = {};\n    row.columnFiltersMeta = {};\n  },\n  createTable: table => {\n    table.setColumnFilters = updater => {\n      const leafColumns = table.getAllLeafColumns();\n      const updateFn = old => {\n        var _functionalUpdate;\n        return (_functionalUpdate = functionalUpdate(updater, old)) == null ? void 0 : _functionalUpdate.filter(filter => {\n          const column = leafColumns.find(d => d.id === filter.id);\n          if (column) {\n            const filterFn = column.getFilterFn();\n            if (shouldAutoRemoveFilter(filterFn, filter.value, column)) {\n              return false;\n            }\n          }\n          return true;\n        });\n      };\n      table.options.onColumnFiltersChange == null || table.options.onColumnFiltersChange(updateFn);\n    };\n    table.resetColumnFilters = defaultState => {\n      var _table$initialState$c, _table$initialState;\n      table.setColumnFilters(defaultState ? [] : (_table$initialState$c = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.columnFilters) != null ? _table$initialState$c : []);\n    };\n    table.getPreFilteredRowModel = () => table.getCoreRowModel();\n    table.getFilteredRowModel = () => {\n      if (!table._getFilteredRowModel && table.options.getFilteredRowModel) {\n        table._getFilteredRowModel = table.options.getFilteredRowModel(table);\n      }\n      if (table.options.manualFiltering || !table._getFilteredRowModel) {\n        return table.getPreFilteredRowModel();\n      }\n      return table._getFilteredRowModel();\n    };\n  }\n};\nfunction shouldAutoRemoveFilter(filterFn, value, column) {\n  return (filterFn && filterFn.autoRemove ? filterFn.autoRemove(value, column) : false) || typeof value === 'undefined' || typeof value === 'string' && !value;\n}\n\nconst sum = (columnId, _leafRows, childRows) => {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return childRows.reduce((sum, next) => {\n    const nextValue = next.getValue(columnId);\n    return sum + (typeof nextValue === 'number' ? nextValue : 0);\n  }, 0);\n};\nconst min = (columnId, _leafRows, childRows) => {\n  let min;\n  childRows.forEach(row => {\n    const value = row.getValue(columnId);\n    if (value != null && (min > value || min === undefined && value >= value)) {\n      min = value;\n    }\n  });\n  return min;\n};\nconst max = (columnId, _leafRows, childRows) => {\n  let max;\n  childRows.forEach(row => {\n    const value = row.getValue(columnId);\n    if (value != null && (max < value || max === undefined && value >= value)) {\n      max = value;\n    }\n  });\n  return max;\n};\nconst extent = (columnId, _leafRows, childRows) => {\n  let min;\n  let max;\n  childRows.forEach(row => {\n    const value = row.getValue(columnId);\n    if (value != null) {\n      if (min === undefined) {\n        if (value >= value) min = max = value;\n      } else {\n        if (min > value) min = value;\n        if (max < value) max = value;\n      }\n    }\n  });\n  return [min, max];\n};\nconst mean = (columnId, leafRows) => {\n  let count = 0;\n  let sum = 0;\n  leafRows.forEach(row => {\n    let value = row.getValue(columnId);\n    if (value != null && (value = +value) >= value) {\n      ++count, sum += value;\n    }\n  });\n  if (count) return sum / count;\n  return;\n};\nconst median = (columnId, leafRows) => {\n  if (!leafRows.length) {\n    return;\n  }\n  const values = leafRows.map(row => row.getValue(columnId));\n  if (!isNumberArray(values)) {\n    return;\n  }\n  if (values.length === 1) {\n    return values[0];\n  }\n  const mid = Math.floor(values.length / 2);\n  const nums = values.sort((a, b) => a - b);\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;\n};\nconst unique = (columnId, leafRows) => {\n  return Array.from(new Set(leafRows.map(d => d.getValue(columnId))).values());\n};\nconst uniqueCount = (columnId, leafRows) => {\n  return new Set(leafRows.map(d => d.getValue(columnId))).size;\n};\nconst count = (_columnId, leafRows) => {\n  return leafRows.length;\n};\nconst aggregationFns = {\n  sum,\n  min,\n  max,\n  extent,\n  mean,\n  median,\n  unique,\n  uniqueCount,\n  count\n};\n\n//\n\nconst ColumnGrouping = {\n  getDefaultColumnDef: () => {\n    return {\n      aggregatedCell: props => {\n        var _toString, _props$getValue;\n        return (_toString = (_props$getValue = props.getValue()) == null || _props$getValue.toString == null ? void 0 : _props$getValue.toString()) != null ? _toString : null;\n      },\n      aggregationFn: 'auto'\n    };\n  },\n  getInitialState: state => {\n    return {\n      grouping: [],\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onGroupingChange: makeStateUpdater('grouping', table),\n      groupedColumnMode: 'reorder'\n    };\n  },\n  createColumn: (column, table) => {\n    column.toggleGrouping = () => {\n      table.setGrouping(old => {\n        // Find any existing grouping for this column\n        if (old != null && old.includes(column.id)) {\n          return old.filter(d => d !== column.id);\n        }\n        return [...(old != null ? old : []), column.id];\n      });\n    };\n    column.getCanGroup = () => {\n      var _column$columnDef$ena, _table$options$enable;\n      return ((_column$columnDef$ena = column.columnDef.enableGrouping) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableGrouping) != null ? _table$options$enable : true) && (!!column.accessorFn || !!column.columnDef.getGroupingValue);\n    };\n    column.getIsGrouped = () => {\n      var _table$getState$group;\n      return (_table$getState$group = table.getState().grouping) == null ? void 0 : _table$getState$group.includes(column.id);\n    };\n    column.getGroupedIndex = () => {\n      var _table$getState$group2;\n      return (_table$getState$group2 = table.getState().grouping) == null ? void 0 : _table$getState$group2.indexOf(column.id);\n    };\n    column.getToggleGroupingHandler = () => {\n      const canGroup = column.getCanGroup();\n      return () => {\n        if (!canGroup) return;\n        column.toggleGrouping();\n      };\n    };\n    column.getAutoAggregationFn = () => {\n      const firstRow = table.getCoreRowModel().flatRows[0];\n      const value = firstRow == null ? void 0 : firstRow.getValue(column.id);\n      if (typeof value === 'number') {\n        return aggregationFns.sum;\n      }\n      if (Object.prototype.toString.call(value) === '[object Date]') {\n        return aggregationFns.extent;\n      }\n    };\n    column.getAggregationFn = () => {\n      var _table$options$aggreg, _table$options$aggreg2;\n      if (!column) {\n        throw new Error();\n      }\n      return isFunction(column.columnDef.aggregationFn) ? column.columnDef.aggregationFn : column.columnDef.aggregationFn === 'auto' ? column.getAutoAggregationFn() : (_table$options$aggreg = (_table$options$aggreg2 = table.options.aggregationFns) == null ? void 0 : _table$options$aggreg2[column.columnDef.aggregationFn]) != null ? _table$options$aggreg : aggregationFns[column.columnDef.aggregationFn];\n    };\n  },\n  createTable: table => {\n    table.setGrouping = updater => table.options.onGroupingChange == null ? void 0 : table.options.onGroupingChange(updater);\n    table.resetGrouping = defaultState => {\n      var _table$initialState$g, _table$initialState;\n      table.setGrouping(defaultState ? [] : (_table$initialState$g = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.grouping) != null ? _table$initialState$g : []);\n    };\n    table.getPreGroupedRowModel = () => table.getFilteredRowModel();\n    table.getGroupedRowModel = () => {\n      if (!table._getGroupedRowModel && table.options.getGroupedRowModel) {\n        table._getGroupedRowModel = table.options.getGroupedRowModel(table);\n      }\n      if (table.options.manualGrouping || !table._getGroupedRowModel) {\n        return table.getPreGroupedRowModel();\n      }\n      return table._getGroupedRowModel();\n    };\n  },\n  createRow: (row, table) => {\n    row.getIsGrouped = () => !!row.groupingColumnId;\n    row.getGroupingValue = columnId => {\n      if (row._groupingValuesCache.hasOwnProperty(columnId)) {\n        return row._groupingValuesCache[columnId];\n      }\n      const column = table.getColumn(columnId);\n      if (!(column != null && column.columnDef.getGroupingValue)) {\n        return row.getValue(columnId);\n      }\n      row._groupingValuesCache[columnId] = column.columnDef.getGroupingValue(row.original);\n      return row._groupingValuesCache[columnId];\n    };\n    row._groupingValuesCache = {};\n  },\n  createCell: (cell, column, row, table) => {\n    cell.getIsGrouped = () => column.getIsGrouped() && column.id === row.groupingColumnId;\n    cell.getIsPlaceholder = () => !cell.getIsGrouped() && column.getIsGrouped();\n    cell.getIsAggregated = () => {\n      var _row$subRows;\n      return !cell.getIsGrouped() && !cell.getIsPlaceholder() && !!((_row$subRows = row.subRows) != null && _row$subRows.length);\n    };\n  }\n};\nfunction orderColumns(leafColumns, grouping, groupedColumnMode) {\n  if (!(grouping != null && grouping.length) || !groupedColumnMode) {\n    return leafColumns;\n  }\n  const nonGroupingColumns = leafColumns.filter(col => !grouping.includes(col.id));\n  if (groupedColumnMode === 'remove') {\n    return nonGroupingColumns;\n  }\n  const groupingColumns = grouping.map(g => leafColumns.find(col => col.id === g)).filter(Boolean);\n  return [...groupingColumns, ...nonGroupingColumns];\n}\n\n//\n\nconst ColumnOrdering = {\n  getInitialState: state => {\n    return {\n      columnOrder: [],\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onColumnOrderChange: makeStateUpdater('columnOrder', table)\n    };\n  },\n  createColumn: (column, table) => {\n    column.getIndex = memo(position => [_getVisibleLeafColumns(table, position)], columns => columns.findIndex(d => d.id === column.id), getMemoOptions(table.options, 'debugColumns', 'getIndex'));\n    column.getIsFirstColumn = position => {\n      var _columns$;\n      const columns = _getVisibleLeafColumns(table, position);\n      return ((_columns$ = columns[0]) == null ? void 0 : _columns$.id) === column.id;\n    };\n    column.getIsLastColumn = position => {\n      var _columns;\n      const columns = _getVisibleLeafColumns(table, position);\n      return ((_columns = columns[columns.length - 1]) == null ? void 0 : _columns.id) === column.id;\n    };\n  },\n  createTable: table => {\n    table.setColumnOrder = updater => table.options.onColumnOrderChange == null ? void 0 : table.options.onColumnOrderChange(updater);\n    table.resetColumnOrder = defaultState => {\n      var _table$initialState$c;\n      table.setColumnOrder(defaultState ? [] : (_table$initialState$c = table.initialState.columnOrder) != null ? _table$initialState$c : []);\n    };\n    table._getOrderColumnsFn = memo(() => [table.getState().columnOrder, table.getState().grouping, table.options.groupedColumnMode], (columnOrder, grouping, groupedColumnMode) => columns => {\n      // Sort grouped columns to the start of the column list\n      // before the headers are built\n      let orderedColumns = [];\n\n      // If there is no order, return the normal columns\n      if (!(columnOrder != null && columnOrder.length)) {\n        orderedColumns = columns;\n      } else {\n        const columnOrderCopy = [...columnOrder];\n\n        // If there is an order, make a copy of the columns\n        const columnsCopy = [...columns];\n\n        // And make a new ordered array of the columns\n\n        // Loop over the columns and place them in order into the new array\n        while (columnsCopy.length && columnOrderCopy.length) {\n          const targetColumnId = columnOrderCopy.shift();\n          const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId);\n          if (foundIndex > -1) {\n            orderedColumns.push(columnsCopy.splice(foundIndex, 1)[0]);\n          }\n        }\n\n        // If there are any columns left, add them to the end\n        orderedColumns = [...orderedColumns, ...columnsCopy];\n      }\n      return orderColumns(orderedColumns, grouping, groupedColumnMode);\n    }, getMemoOptions(table.options, 'debugTable', '_getOrderColumnsFn'));\n  }\n};\n\n//\n\nconst getDefaultColumnPinningState = () => ({\n  left: [],\n  right: []\n});\nconst ColumnPinning = {\n  getInitialState: state => {\n    return {\n      columnPinning: getDefaultColumnPinningState(),\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onColumnPinningChange: makeStateUpdater('columnPinning', table)\n    };\n  },\n  createColumn: (column, table) => {\n    column.pin = position => {\n      const columnIds = column.getLeafColumns().map(d => d.id).filter(Boolean);\n      table.setColumnPinning(old => {\n        var _old$left3, _old$right3;\n        if (position === 'right') {\n          var _old$left, _old$right;\n          return {\n            left: ((_old$left = old == null ? void 0 : old.left) != null ? _old$left : []).filter(d => !(columnIds != null && columnIds.includes(d))),\n            right: [...((_old$right = old == null ? void 0 : old.right) != null ? _old$right : []).filter(d => !(columnIds != null && columnIds.includes(d))), ...columnIds]\n          };\n        }\n        if (position === 'left') {\n          var _old$left2, _old$right2;\n          return {\n            left: [...((_old$left2 = old == null ? void 0 : old.left) != null ? _old$left2 : []).filter(d => !(columnIds != null && columnIds.includes(d))), ...columnIds],\n            right: ((_old$right2 = old == null ? void 0 : old.right) != null ? _old$right2 : []).filter(d => !(columnIds != null && columnIds.includes(d)))\n          };\n        }\n        return {\n          left: ((_old$left3 = old == null ? void 0 : old.left) != null ? _old$left3 : []).filter(d => !(columnIds != null && columnIds.includes(d))),\n          right: ((_old$right3 = old == null ? void 0 : old.right) != null ? _old$right3 : []).filter(d => !(columnIds != null && columnIds.includes(d)))\n        };\n      });\n    };\n    column.getCanPin = () => {\n      const leafColumns = column.getLeafColumns();\n      return leafColumns.some(d => {\n        var _d$columnDef$enablePi, _ref, _table$options$enable;\n        return ((_d$columnDef$enablePi = d.columnDef.enablePinning) != null ? _d$columnDef$enablePi : true) && ((_ref = (_table$options$enable = table.options.enableColumnPinning) != null ? _table$options$enable : table.options.enablePinning) != null ? _ref : true);\n      });\n    };\n    column.getIsPinned = () => {\n      const leafColumnIds = column.getLeafColumns().map(d => d.id);\n      const {\n        left,\n        right\n      } = table.getState().columnPinning;\n      const isLeft = leafColumnIds.some(d => left == null ? void 0 : left.includes(d));\n      const isRight = leafColumnIds.some(d => right == null ? void 0 : right.includes(d));\n      return isLeft ? 'left' : isRight ? 'right' : false;\n    };\n    column.getPinnedIndex = () => {\n      var _table$getState$colum, _table$getState$colum2;\n      const position = column.getIsPinned();\n      return position ? (_table$getState$colum = (_table$getState$colum2 = table.getState().columnPinning) == null || (_table$getState$colum2 = _table$getState$colum2[position]) == null ? void 0 : _table$getState$colum2.indexOf(column.id)) != null ? _table$getState$colum : -1 : 0;\n    };\n  },\n  createRow: (row, table) => {\n    row.getCenterVisibleCells = memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allCells, left, right) => {\n      const leftAndRight = [...(left != null ? left : []), ...(right != null ? right : [])];\n      return allCells.filter(d => !leftAndRight.includes(d.column.id));\n    }, getMemoOptions(table.options, 'debugRows', 'getCenterVisibleCells'));\n    row.getLeftVisibleCells = memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.left], (allCells, left) => {\n      const cells = (left != null ? left : []).map(columnId => allCells.find(cell => cell.column.id === columnId)).filter(Boolean).map(d => ({\n        ...d,\n        position: 'left'\n      }));\n      return cells;\n    }, getMemoOptions(table.options, 'debugRows', 'getLeftVisibleCells'));\n    row.getRightVisibleCells = memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.right], (allCells, right) => {\n      const cells = (right != null ? right : []).map(columnId => allCells.find(cell => cell.column.id === columnId)).filter(Boolean).map(d => ({\n        ...d,\n        position: 'right'\n      }));\n      return cells;\n    }, getMemoOptions(table.options, 'debugRows', 'getRightVisibleCells'));\n  },\n  createTable: table => {\n    table.setColumnPinning = updater => table.options.onColumnPinningChange == null ? void 0 : table.options.onColumnPinningChange(updater);\n    table.resetColumnPinning = defaultState => {\n      var _table$initialState$c, _table$initialState;\n      return table.setColumnPinning(defaultState ? getDefaultColumnPinningState() : (_table$initialState$c = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.columnPinning) != null ? _table$initialState$c : getDefaultColumnPinningState());\n    };\n    table.getIsSomeColumnsPinned = position => {\n      var _pinningState$positio;\n      const pinningState = table.getState().columnPinning;\n      if (!position) {\n        var _pinningState$left, _pinningState$right;\n        return Boolean(((_pinningState$left = pinningState.left) == null ? void 0 : _pinningState$left.length) || ((_pinningState$right = pinningState.right) == null ? void 0 : _pinningState$right.length));\n      }\n      return Boolean((_pinningState$positio = pinningState[position]) == null ? void 0 : _pinningState$positio.length);\n    };\n    table.getLeftLeafColumns = memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.left], (allColumns, left) => {\n      return (left != null ? left : []).map(columnId => allColumns.find(column => column.id === columnId)).filter(Boolean);\n    }, getMemoOptions(table.options, 'debugColumns', 'getLeftLeafColumns'));\n    table.getRightLeafColumns = memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.right], (allColumns, right) => {\n      return (right != null ? right : []).map(columnId => allColumns.find(column => column.id === columnId)).filter(Boolean);\n    }, getMemoOptions(table.options, 'debugColumns', 'getRightLeafColumns'));\n    table.getCenterLeafColumns = memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, left, right) => {\n      const leftAndRight = [...(left != null ? left : []), ...(right != null ? right : [])];\n      return allColumns.filter(d => !leftAndRight.includes(d.id));\n    }, getMemoOptions(table.options, 'debugColumns', 'getCenterLeafColumns'));\n  }\n};\n\nfunction safelyAccessDocument(_document) {\n  return _document || (typeof document !== 'undefined' ? document : null);\n}\n\n//\n\n//\n\nconst defaultColumnSizing = {\n  size: 150,\n  minSize: 20,\n  maxSize: Number.MAX_SAFE_INTEGER\n};\nconst getDefaultColumnSizingInfoState = () => ({\n  startOffset: null,\n  startSize: null,\n  deltaOffset: null,\n  deltaPercentage: null,\n  isResizingColumn: false,\n  columnSizingStart: []\n});\nconst ColumnSizing = {\n  getDefaultColumnDef: () => {\n    return defaultColumnSizing;\n  },\n  getInitialState: state => {\n    return {\n      columnSizing: {},\n      columnSizingInfo: getDefaultColumnSizingInfoState(),\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      columnResizeMode: 'onEnd',\n      columnResizeDirection: 'ltr',\n      onColumnSizingChange: makeStateUpdater('columnSizing', table),\n      onColumnSizingInfoChange: makeStateUpdater('columnSizingInfo', table)\n    };\n  },\n  createColumn: (column, table) => {\n    column.getSize = () => {\n      var _column$columnDef$min, _ref, _column$columnDef$max;\n      const columnSize = table.getState().columnSizing[column.id];\n      return Math.min(Math.max((_column$columnDef$min = column.columnDef.minSize) != null ? _column$columnDef$min : defaultColumnSizing.minSize, (_ref = columnSize != null ? columnSize : column.columnDef.size) != null ? _ref : defaultColumnSizing.size), (_column$columnDef$max = column.columnDef.maxSize) != null ? _column$columnDef$max : defaultColumnSizing.maxSize);\n    };\n    column.getStart = memo(position => [position, _getVisibleLeafColumns(table, position), table.getState().columnSizing], (position, columns) => columns.slice(0, column.getIndex(position)).reduce((sum, column) => sum + column.getSize(), 0), getMemoOptions(table.options, 'debugColumns', 'getStart'));\n    column.getAfter = memo(position => [position, _getVisibleLeafColumns(table, position), table.getState().columnSizing], (position, columns) => columns.slice(column.getIndex(position) + 1).reduce((sum, column) => sum + column.getSize(), 0), getMemoOptions(table.options, 'debugColumns', 'getAfter'));\n    column.resetSize = () => {\n      table.setColumnSizing(_ref2 => {\n        let {\n          [column.id]: _,\n          ...rest\n        } = _ref2;\n        return rest;\n      });\n    };\n    column.getCanResize = () => {\n      var _column$columnDef$ena, _table$options$enable;\n      return ((_column$columnDef$ena = column.columnDef.enableResizing) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableColumnResizing) != null ? _table$options$enable : true);\n    };\n    column.getIsResizing = () => {\n      return table.getState().columnSizingInfo.isResizingColumn === column.id;\n    };\n  },\n  createHeader: (header, table) => {\n    header.getSize = () => {\n      let sum = 0;\n      const recurse = header => {\n        if (header.subHeaders.length) {\n          header.subHeaders.forEach(recurse);\n        } else {\n          var _header$column$getSiz;\n          sum += (_header$column$getSiz = header.column.getSize()) != null ? _header$column$getSiz : 0;\n        }\n      };\n      recurse(header);\n      return sum;\n    };\n    header.getStart = () => {\n      if (header.index > 0) {\n        const prevSiblingHeader = header.headerGroup.headers[header.index - 1];\n        return prevSiblingHeader.getStart() + prevSiblingHeader.getSize();\n      }\n      return 0;\n    };\n    header.getResizeHandler = _contextDocument => {\n      const column = table.getColumn(header.column.id);\n      const canResize = column == null ? void 0 : column.getCanResize();\n      return e => {\n        if (!column || !canResize) {\n          return;\n        }\n        e.persist == null || e.persist();\n        if (isTouchStartEvent(e)) {\n          // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n          if (e.touches && e.touches.length > 1) {\n            return;\n          }\n        }\n        const startSize = header.getSize();\n        const columnSizingStart = header ? header.getLeafHeaders().map(d => [d.column.id, d.column.getSize()]) : [[column.id, column.getSize()]];\n        const clientX = isTouchStartEvent(e) ? Math.round(e.touches[0].clientX) : e.clientX;\n        const newColumnSizing = {};\n        const updateOffset = (eventType, clientXPos) => {\n          if (typeof clientXPos !== 'number') {\n            return;\n          }\n          table.setColumnSizingInfo(old => {\n            var _old$startOffset, _old$startSize;\n            const deltaDirection = table.options.columnResizeDirection === 'rtl' ? -1 : 1;\n            const deltaOffset = (clientXPos - ((_old$startOffset = old == null ? void 0 : old.startOffset) != null ? _old$startOffset : 0)) * deltaDirection;\n            const deltaPercentage = Math.max(deltaOffset / ((_old$startSize = old == null ? void 0 : old.startSize) != null ? _old$startSize : 0), -0.999999);\n            old.columnSizingStart.forEach(_ref3 => {\n              let [columnId, headerSize] = _ref3;\n              newColumnSizing[columnId] = Math.round(Math.max(headerSize + headerSize * deltaPercentage, 0) * 100) / 100;\n            });\n            return {\n              ...old,\n              deltaOffset,\n              deltaPercentage\n            };\n          });\n          if (table.options.columnResizeMode === 'onChange' || eventType === 'end') {\n            table.setColumnSizing(old => ({\n              ...old,\n              ...newColumnSizing\n            }));\n          }\n        };\n        const onMove = clientXPos => updateOffset('move', clientXPos);\n        const onEnd = clientXPos => {\n          updateOffset('end', clientXPos);\n          table.setColumnSizingInfo(old => ({\n            ...old,\n            isResizingColumn: false,\n            startOffset: null,\n            startSize: null,\n            deltaOffset: null,\n            deltaPercentage: null,\n            columnSizingStart: []\n          }));\n        };\n        const contextDocument = safelyAccessDocument(_contextDocument);\n        const mouseEvents = {\n          moveHandler: e => onMove(e.clientX),\n          upHandler: e => {\n            contextDocument == null || contextDocument.removeEventListener('mousemove', mouseEvents.moveHandler);\n            contextDocument == null || contextDocument.removeEventListener('mouseup', mouseEvents.upHandler);\n            onEnd(e.clientX);\n          }\n        };\n        const touchEvents = {\n          moveHandler: e => {\n            if (e.cancelable) {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n            onMove(e.touches[0].clientX);\n            return false;\n          },\n          upHandler: e => {\n            var _e$touches$;\n            contextDocument == null || contextDocument.removeEventListener('touchmove', touchEvents.moveHandler);\n            contextDocument == null || contextDocument.removeEventListener('touchend', touchEvents.upHandler);\n            if (e.cancelable) {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n            onEnd((_e$touches$ = e.touches[0]) == null ? void 0 : _e$touches$.clientX);\n          }\n        };\n        const passiveIfSupported = passiveEventSupported() ? {\n          passive: false\n        } : false;\n        if (isTouchStartEvent(e)) {\n          contextDocument == null || contextDocument.addEventListener('touchmove', touchEvents.moveHandler, passiveIfSupported);\n          contextDocument == null || contextDocument.addEventListener('touchend', touchEvents.upHandler, passiveIfSupported);\n        } else {\n          contextDocument == null || contextDocument.addEventListener('mousemove', mouseEvents.moveHandler, passiveIfSupported);\n          contextDocument == null || contextDocument.addEventListener('mouseup', mouseEvents.upHandler, passiveIfSupported);\n        }\n        table.setColumnSizingInfo(old => ({\n          ...old,\n          startOffset: clientX,\n          startSize,\n          deltaOffset: 0,\n          deltaPercentage: 0,\n          columnSizingStart,\n          isResizingColumn: column.id\n        }));\n      };\n    };\n  },\n  createTable: table => {\n    table.setColumnSizing = updater => table.options.onColumnSizingChange == null ? void 0 : table.options.onColumnSizingChange(updater);\n    table.setColumnSizingInfo = updater => table.options.onColumnSizingInfoChange == null ? void 0 : table.options.onColumnSizingInfoChange(updater);\n    table.resetColumnSizing = defaultState => {\n      var _table$initialState$c;\n      table.setColumnSizing(defaultState ? {} : (_table$initialState$c = table.initialState.columnSizing) != null ? _table$initialState$c : {});\n    };\n    table.resetHeaderSizeInfo = defaultState => {\n      var _table$initialState$c2;\n      table.setColumnSizingInfo(defaultState ? getDefaultColumnSizingInfoState() : (_table$initialState$c2 = table.initialState.columnSizingInfo) != null ? _table$initialState$c2 : getDefaultColumnSizingInfoState());\n    };\n    table.getTotalSize = () => {\n      var _table$getHeaderGroup, _table$getHeaderGroup2;\n      return (_table$getHeaderGroup = (_table$getHeaderGroup2 = table.getHeaderGroups()[0]) == null ? void 0 : _table$getHeaderGroup2.headers.reduce((sum, header) => {\n        return sum + header.getSize();\n      }, 0)) != null ? _table$getHeaderGroup : 0;\n    };\n    table.getLeftTotalSize = () => {\n      var _table$getLeftHeaderG, _table$getLeftHeaderG2;\n      return (_table$getLeftHeaderG = (_table$getLeftHeaderG2 = table.getLeftHeaderGroups()[0]) == null ? void 0 : _table$getLeftHeaderG2.headers.reduce((sum, header) => {\n        return sum + header.getSize();\n      }, 0)) != null ? _table$getLeftHeaderG : 0;\n    };\n    table.getCenterTotalSize = () => {\n      var _table$getCenterHeade, _table$getCenterHeade2;\n      return (_table$getCenterHeade = (_table$getCenterHeade2 = table.getCenterHeaderGroups()[0]) == null ? void 0 : _table$getCenterHeade2.headers.reduce((sum, header) => {\n        return sum + header.getSize();\n      }, 0)) != null ? _table$getCenterHeade : 0;\n    };\n    table.getRightTotalSize = () => {\n      var _table$getRightHeader, _table$getRightHeader2;\n      return (_table$getRightHeader = (_table$getRightHeader2 = table.getRightHeaderGroups()[0]) == null ? void 0 : _table$getRightHeader2.headers.reduce((sum, header) => {\n        return sum + header.getSize();\n      }, 0)) != null ? _table$getRightHeader : 0;\n    };\n  }\n};\nlet passiveSupported = null;\nfunction passiveEventSupported() {\n  if (typeof passiveSupported === 'boolean') return passiveSupported;\n  let supported = false;\n  try {\n    const options = {\n      get passive() {\n        supported = true;\n        return false;\n      }\n    };\n    const noop = () => {};\n    window.addEventListener('test', noop, options);\n    window.removeEventListener('test', noop);\n  } catch (err) {\n    supported = false;\n  }\n  passiveSupported = supported;\n  return passiveSupported;\n}\nfunction isTouchStartEvent(e) {\n  return e.type === 'touchstart';\n}\n\n//\n\nconst ColumnVisibility = {\n  getInitialState: state => {\n    return {\n      columnVisibility: {},\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onColumnVisibilityChange: makeStateUpdater('columnVisibility', table)\n    };\n  },\n  createColumn: (column, table) => {\n    column.toggleVisibility = value => {\n      if (column.getCanHide()) {\n        table.setColumnVisibility(old => ({\n          ...old,\n          [column.id]: value != null ? value : !column.getIsVisible()\n        }));\n      }\n    };\n    column.getIsVisible = () => {\n      var _ref, _table$getState$colum;\n      const childColumns = column.columns;\n      return (_ref = childColumns.length ? childColumns.some(c => c.getIsVisible()) : (_table$getState$colum = table.getState().columnVisibility) == null ? void 0 : _table$getState$colum[column.id]) != null ? _ref : true;\n    };\n    column.getCanHide = () => {\n      var _column$columnDef$ena, _table$options$enable;\n      return ((_column$columnDef$ena = column.columnDef.enableHiding) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableHiding) != null ? _table$options$enable : true);\n    };\n    column.getToggleVisibilityHandler = () => {\n      return e => {\n        column.toggleVisibility == null || column.toggleVisibility(e.target.checked);\n      };\n    };\n  },\n  createRow: (row, table) => {\n    row._getAllVisibleCells = memo(() => [row.getAllCells(), table.getState().columnVisibility], cells => {\n      return cells.filter(cell => cell.column.getIsVisible());\n    }, getMemoOptions(table.options, 'debugRows', '_getAllVisibleCells'));\n    row.getVisibleCells = memo(() => [row.getLeftVisibleCells(), row.getCenterVisibleCells(), row.getRightVisibleCells()], (left, center, right) => [...left, ...center, ...right], getMemoOptions(table.options, 'debugRows', 'getVisibleCells'));\n  },\n  createTable: table => {\n    const makeVisibleColumnsMethod = (key, getColumns) => {\n      return memo(() => [getColumns(), getColumns().filter(d => d.getIsVisible()).map(d => d.id).join('_')], columns => {\n        return columns.filter(d => d.getIsVisible == null ? void 0 : d.getIsVisible());\n      }, getMemoOptions(table.options, 'debugColumns', key));\n    };\n    table.getVisibleFlatColumns = makeVisibleColumnsMethod('getVisibleFlatColumns', () => table.getAllFlatColumns());\n    table.getVisibleLeafColumns = makeVisibleColumnsMethod('getVisibleLeafColumns', () => table.getAllLeafColumns());\n    table.getLeftVisibleLeafColumns = makeVisibleColumnsMethod('getLeftVisibleLeafColumns', () => table.getLeftLeafColumns());\n    table.getRightVisibleLeafColumns = makeVisibleColumnsMethod('getRightVisibleLeafColumns', () => table.getRightLeafColumns());\n    table.getCenterVisibleLeafColumns = makeVisibleColumnsMethod('getCenterVisibleLeafColumns', () => table.getCenterLeafColumns());\n    table.setColumnVisibility = updater => table.options.onColumnVisibilityChange == null ? void 0 : table.options.onColumnVisibilityChange(updater);\n    table.resetColumnVisibility = defaultState => {\n      var _table$initialState$c;\n      table.setColumnVisibility(defaultState ? {} : (_table$initialState$c = table.initialState.columnVisibility) != null ? _table$initialState$c : {});\n    };\n    table.toggleAllColumnsVisible = value => {\n      var _value;\n      value = (_value = value) != null ? _value : !table.getIsAllColumnsVisible();\n      table.setColumnVisibility(table.getAllLeafColumns().reduce((obj, column) => ({\n        ...obj,\n        [column.id]: !value ? !(column.getCanHide != null && column.getCanHide()) : value\n      }), {}));\n    };\n    table.getIsAllColumnsVisible = () => !table.getAllLeafColumns().some(column => !(column.getIsVisible != null && column.getIsVisible()));\n    table.getIsSomeColumnsVisible = () => table.getAllLeafColumns().some(column => column.getIsVisible == null ? void 0 : column.getIsVisible());\n    table.getToggleAllColumnsVisibilityHandler = () => {\n      return e => {\n        var _target;\n        table.toggleAllColumnsVisible((_target = e.target) == null ? void 0 : _target.checked);\n      };\n    };\n  }\n};\nfunction _getVisibleLeafColumns(table, position) {\n  return !position ? table.getVisibleLeafColumns() : position === 'center' ? table.getCenterVisibleLeafColumns() : position === 'left' ? table.getLeftVisibleLeafColumns() : table.getRightVisibleLeafColumns();\n}\n\n//\n\nconst GlobalFaceting = {\n  createTable: table => {\n    table._getGlobalFacetedRowModel = table.options.getFacetedRowModel && table.options.getFacetedRowModel(table, '__global__');\n    table.getGlobalFacetedRowModel = () => {\n      if (table.options.manualFiltering || !table._getGlobalFacetedRowModel) {\n        return table.getPreFilteredRowModel();\n      }\n      return table._getGlobalFacetedRowModel();\n    };\n    table._getGlobalFacetedUniqueValues = table.options.getFacetedUniqueValues && table.options.getFacetedUniqueValues(table, '__global__');\n    table.getGlobalFacetedUniqueValues = () => {\n      if (!table._getGlobalFacetedUniqueValues) {\n        return new Map();\n      }\n      return table._getGlobalFacetedUniqueValues();\n    };\n    table._getGlobalFacetedMinMaxValues = table.options.getFacetedMinMaxValues && table.options.getFacetedMinMaxValues(table, '__global__');\n    table.getGlobalFacetedMinMaxValues = () => {\n      if (!table._getGlobalFacetedMinMaxValues) {\n        return;\n      }\n      return table._getGlobalFacetedMinMaxValues();\n    };\n  }\n};\n\n//\n\nconst GlobalFiltering = {\n  getInitialState: state => {\n    return {\n      globalFilter: undefined,\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onGlobalFilterChange: makeStateUpdater('globalFilter', table),\n      globalFilterFn: 'auto',\n      getColumnCanGlobalFilter: column => {\n        var _table$getCoreRowMode;\n        const value = (_table$getCoreRowMode = table.getCoreRowModel().flatRows[0]) == null || (_table$getCoreRowMode = _table$getCoreRowMode._getAllCellsByColumnId()[column.id]) == null ? void 0 : _table$getCoreRowMode.getValue();\n        return typeof value === 'string' || typeof value === 'number';\n      }\n    };\n  },\n  createColumn: (column, table) => {\n    column.getCanGlobalFilter = () => {\n      var _column$columnDef$ena, _table$options$enable, _table$options$enable2, _table$options$getCol;\n      return ((_column$columnDef$ena = column.columnDef.enableGlobalFilter) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableGlobalFilter) != null ? _table$options$enable : true) && ((_table$options$enable2 = table.options.enableFilters) != null ? _table$options$enable2 : true) && ((_table$options$getCol = table.options.getColumnCanGlobalFilter == null ? void 0 : table.options.getColumnCanGlobalFilter(column)) != null ? _table$options$getCol : true) && !!column.accessorFn;\n    };\n  },\n  createTable: table => {\n    table.getGlobalAutoFilterFn = () => {\n      return filterFns.includesString;\n    };\n    table.getGlobalFilterFn = () => {\n      var _table$options$filter, _table$options$filter2;\n      const {\n        globalFilterFn: globalFilterFn\n      } = table.options;\n      return isFunction(globalFilterFn) ? globalFilterFn : globalFilterFn === 'auto' ? table.getGlobalAutoFilterFn() : (_table$options$filter = (_table$options$filter2 = table.options.filterFns) == null ? void 0 : _table$options$filter2[globalFilterFn]) != null ? _table$options$filter : filterFns[globalFilterFn];\n    };\n    table.setGlobalFilter = updater => {\n      table.options.onGlobalFilterChange == null || table.options.onGlobalFilterChange(updater);\n    };\n    table.resetGlobalFilter = defaultState => {\n      table.setGlobalFilter(defaultState ? undefined : table.initialState.globalFilter);\n    };\n  }\n};\n\n//\n\nconst RowExpanding = {\n  getInitialState: state => {\n    return {\n      expanded: {},\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onExpandedChange: makeStateUpdater('expanded', table),\n      paginateExpandedRows: true\n    };\n  },\n  createTable: table => {\n    let registered = false;\n    let queued = false;\n    table._autoResetExpanded = () => {\n      var _ref, _table$options$autoRe;\n      if (!registered) {\n        table._queue(() => {\n          registered = true;\n        });\n        return;\n      }\n      if ((_ref = (_table$options$autoRe = table.options.autoResetAll) != null ? _table$options$autoRe : table.options.autoResetExpanded) != null ? _ref : !table.options.manualExpanding) {\n        if (queued) return;\n        queued = true;\n        table._queue(() => {\n          table.resetExpanded();\n          queued = false;\n        });\n      }\n    };\n    table.setExpanded = updater => table.options.onExpandedChange == null ? void 0 : table.options.onExpandedChange(updater);\n    table.toggleAllRowsExpanded = expanded => {\n      if (expanded != null ? expanded : !table.getIsAllRowsExpanded()) {\n        table.setExpanded(true);\n      } else {\n        table.setExpanded({});\n      }\n    };\n    table.resetExpanded = defaultState => {\n      var _table$initialState$e, _table$initialState;\n      table.setExpanded(defaultState ? {} : (_table$initialState$e = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.expanded) != null ? _table$initialState$e : {});\n    };\n    table.getCanSomeRowsExpand = () => {\n      return table.getPrePaginationRowModel().flatRows.some(row => row.getCanExpand());\n    };\n    table.getToggleAllRowsExpandedHandler = () => {\n      return e => {\n        e.persist == null || e.persist();\n        table.toggleAllRowsExpanded();\n      };\n    };\n    table.getIsSomeRowsExpanded = () => {\n      const expanded = table.getState().expanded;\n      return expanded === true || Object.values(expanded).some(Boolean);\n    };\n    table.getIsAllRowsExpanded = () => {\n      const expanded = table.getState().expanded;\n\n      // If expanded is true, save some cycles and return true\n      if (typeof expanded === 'boolean') {\n        return expanded === true;\n      }\n      if (!Object.keys(expanded).length) {\n        return false;\n      }\n\n      // If any row is not expanded, return false\n      if (table.getRowModel().flatRows.some(row => !row.getIsExpanded())) {\n        return false;\n      }\n\n      // They must all be expanded :shrug:\n      return true;\n    };\n    table.getExpandedDepth = () => {\n      let maxDepth = 0;\n      const rowIds = table.getState().expanded === true ? Object.keys(table.getRowModel().rowsById) : Object.keys(table.getState().expanded);\n      rowIds.forEach(id => {\n        const splitId = id.split('.');\n        maxDepth = Math.max(maxDepth, splitId.length);\n      });\n      return maxDepth;\n    };\n    table.getPreExpandedRowModel = () => table.getSortedRowModel();\n    table.getExpandedRowModel = () => {\n      if (!table._getExpandedRowModel && table.options.getExpandedRowModel) {\n        table._getExpandedRowModel = table.options.getExpandedRowModel(table);\n      }\n      if (table.options.manualExpanding || !table._getExpandedRowModel) {\n        return table.getPreExpandedRowModel();\n      }\n      return table._getExpandedRowModel();\n    };\n  },\n  createRow: (row, table) => {\n    row.toggleExpanded = expanded => {\n      table.setExpanded(old => {\n        var _expanded;\n        const exists = old === true ? true : !!(old != null && old[row.id]);\n        let oldExpanded = {};\n        if (old === true) {\n          Object.keys(table.getRowModel().rowsById).forEach(rowId => {\n            oldExpanded[rowId] = true;\n          });\n        } else {\n          oldExpanded = old;\n        }\n        expanded = (_expanded = expanded) != null ? _expanded : !exists;\n        if (!exists && expanded) {\n          return {\n            ...oldExpanded,\n            [row.id]: true\n          };\n        }\n        if (exists && !expanded) {\n          const {\n            [row.id]: _,\n            ...rest\n          } = oldExpanded;\n          return rest;\n        }\n        return old;\n      });\n    };\n    row.getIsExpanded = () => {\n      var _table$options$getIsR;\n      const expanded = table.getState().expanded;\n      return !!((_table$options$getIsR = table.options.getIsRowExpanded == null ? void 0 : table.options.getIsRowExpanded(row)) != null ? _table$options$getIsR : expanded === true || (expanded == null ? void 0 : expanded[row.id]));\n    };\n    row.getCanExpand = () => {\n      var _table$options$getRow, _table$options$enable, _row$subRows;\n      return (_table$options$getRow = table.options.getRowCanExpand == null ? void 0 : table.options.getRowCanExpand(row)) != null ? _table$options$getRow : ((_table$options$enable = table.options.enableExpanding) != null ? _table$options$enable : true) && !!((_row$subRows = row.subRows) != null && _row$subRows.length);\n    };\n    row.getIsAllParentsExpanded = () => {\n      let isFullyExpanded = true;\n      let currentRow = row;\n      while (isFullyExpanded && currentRow.parentId) {\n        currentRow = table.getRow(currentRow.parentId, true);\n        isFullyExpanded = currentRow.getIsExpanded();\n      }\n      return isFullyExpanded;\n    };\n    row.getToggleExpandedHandler = () => {\n      const canExpand = row.getCanExpand();\n      return () => {\n        if (!canExpand) return;\n        row.toggleExpanded();\n      };\n    };\n  }\n};\n\n//\n\nconst defaultPageIndex = 0;\nconst defaultPageSize = 10;\nconst getDefaultPaginationState = () => ({\n  pageIndex: defaultPageIndex,\n  pageSize: defaultPageSize\n});\nconst RowPagination = {\n  getInitialState: state => {\n    return {\n      ...state,\n      pagination: {\n        ...getDefaultPaginationState(),\n        ...(state == null ? void 0 : state.pagination)\n      }\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onPaginationChange: makeStateUpdater('pagination', table)\n    };\n  },\n  createTable: table => {\n    let registered = false;\n    let queued = false;\n    table._autoResetPageIndex = () => {\n      var _ref, _table$options$autoRe;\n      if (!registered) {\n        table._queue(() => {\n          registered = true;\n        });\n        return;\n      }\n      if ((_ref = (_table$options$autoRe = table.options.autoResetAll) != null ? _table$options$autoRe : table.options.autoResetPageIndex) != null ? _ref : !table.options.manualPagination) {\n        if (queued) return;\n        queued = true;\n        table._queue(() => {\n          table.resetPageIndex();\n          queued = false;\n        });\n      }\n    };\n    table.setPagination = updater => {\n      const safeUpdater = old => {\n        let newState = functionalUpdate(updater, old);\n        return newState;\n      };\n      return table.options.onPaginationChange == null ? void 0 : table.options.onPaginationChange(safeUpdater);\n    };\n    table.resetPagination = defaultState => {\n      var _table$initialState$p;\n      table.setPagination(defaultState ? getDefaultPaginationState() : (_table$initialState$p = table.initialState.pagination) != null ? _table$initialState$p : getDefaultPaginationState());\n    };\n    table.setPageIndex = updater => {\n      table.setPagination(old => {\n        let pageIndex = functionalUpdate(updater, old.pageIndex);\n        const maxPageIndex = typeof table.options.pageCount === 'undefined' || table.options.pageCount === -1 ? Number.MAX_SAFE_INTEGER : table.options.pageCount - 1;\n        pageIndex = Math.max(0, Math.min(pageIndex, maxPageIndex));\n        return {\n          ...old,\n          pageIndex\n        };\n      });\n    };\n    table.resetPageIndex = defaultState => {\n      var _table$initialState$p2, _table$initialState;\n      table.setPageIndex(defaultState ? defaultPageIndex : (_table$initialState$p2 = (_table$initialState = table.initialState) == null || (_table$initialState = _table$initialState.pagination) == null ? void 0 : _table$initialState.pageIndex) != null ? _table$initialState$p2 : defaultPageIndex);\n    };\n    table.resetPageSize = defaultState => {\n      var _table$initialState$p3, _table$initialState2;\n      table.setPageSize(defaultState ? defaultPageSize : (_table$initialState$p3 = (_table$initialState2 = table.initialState) == null || (_table$initialState2 = _table$initialState2.pagination) == null ? void 0 : _table$initialState2.pageSize) != null ? _table$initialState$p3 : defaultPageSize);\n    };\n    table.setPageSize = updater => {\n      table.setPagination(old => {\n        const pageSize = Math.max(1, functionalUpdate(updater, old.pageSize));\n        const topRowIndex = old.pageSize * old.pageIndex;\n        const pageIndex = Math.floor(topRowIndex / pageSize);\n        return {\n          ...old,\n          pageIndex,\n          pageSize\n        };\n      });\n    };\n    //deprecated\n    table.setPageCount = updater => table.setPagination(old => {\n      var _table$options$pageCo;\n      let newPageCount = functionalUpdate(updater, (_table$options$pageCo = table.options.pageCount) != null ? _table$options$pageCo : -1);\n      if (typeof newPageCount === 'number') {\n        newPageCount = Math.max(-1, newPageCount);\n      }\n      return {\n        ...old,\n        pageCount: newPageCount\n      };\n    });\n    table.getPageOptions = memo(() => [table.getPageCount()], pageCount => {\n      let pageOptions = [];\n      if (pageCount && pageCount > 0) {\n        pageOptions = [...new Array(pageCount)].fill(null).map((_, i) => i);\n      }\n      return pageOptions;\n    }, getMemoOptions(table.options, 'debugTable', 'getPageOptions'));\n    table.getCanPreviousPage = () => table.getState().pagination.pageIndex > 0;\n    table.getCanNextPage = () => {\n      const {\n        pageIndex\n      } = table.getState().pagination;\n      const pageCount = table.getPageCount();\n      if (pageCount === -1) {\n        return true;\n      }\n      if (pageCount === 0) {\n        return false;\n      }\n      return pageIndex < pageCount - 1;\n    };\n    table.previousPage = () => {\n      return table.setPageIndex(old => old - 1);\n    };\n    table.nextPage = () => {\n      return table.setPageIndex(old => {\n        return old + 1;\n      });\n    };\n    table.firstPage = () => {\n      return table.setPageIndex(0);\n    };\n    table.lastPage = () => {\n      return table.setPageIndex(table.getPageCount() - 1);\n    };\n    table.getPrePaginationRowModel = () => table.getExpandedRowModel();\n    table.getPaginationRowModel = () => {\n      if (!table._getPaginationRowModel && table.options.getPaginationRowModel) {\n        table._getPaginationRowModel = table.options.getPaginationRowModel(table);\n      }\n      if (table.options.manualPagination || !table._getPaginationRowModel) {\n        return table.getPrePaginationRowModel();\n      }\n      return table._getPaginationRowModel();\n    };\n    table.getPageCount = () => {\n      var _table$options$pageCo2;\n      return (_table$options$pageCo2 = table.options.pageCount) != null ? _table$options$pageCo2 : Math.ceil(table.getRowCount() / table.getState().pagination.pageSize);\n    };\n    table.getRowCount = () => {\n      var _table$options$rowCou;\n      return (_table$options$rowCou = table.options.rowCount) != null ? _table$options$rowCou : table.getPrePaginationRowModel().rows.length;\n    };\n  }\n};\n\n//\n\nconst getDefaultRowPinningState = () => ({\n  top: [],\n  bottom: []\n});\nconst RowPinning = {\n  getInitialState: state => {\n    return {\n      rowPinning: getDefaultRowPinningState(),\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onRowPinningChange: makeStateUpdater('rowPinning', table)\n    };\n  },\n  createRow: (row, table) => {\n    row.pin = (position, includeLeafRows, includeParentRows) => {\n      const leafRowIds = includeLeafRows ? row.getLeafRows().map(_ref => {\n        let {\n          id\n        } = _ref;\n        return id;\n      }) : [];\n      const parentRowIds = includeParentRows ? row.getParentRows().map(_ref2 => {\n        let {\n          id\n        } = _ref2;\n        return id;\n      }) : [];\n      const rowIds = new Set([...parentRowIds, row.id, ...leafRowIds]);\n      table.setRowPinning(old => {\n        var _old$top3, _old$bottom3;\n        if (position === 'bottom') {\n          var _old$top, _old$bottom;\n          return {\n            top: ((_old$top = old == null ? void 0 : old.top) != null ? _old$top : []).filter(d => !(rowIds != null && rowIds.has(d))),\n            bottom: [...((_old$bottom = old == null ? void 0 : old.bottom) != null ? _old$bottom : []).filter(d => !(rowIds != null && rowIds.has(d))), ...Array.from(rowIds)]\n          };\n        }\n        if (position === 'top') {\n          var _old$top2, _old$bottom2;\n          return {\n            top: [...((_old$top2 = old == null ? void 0 : old.top) != null ? _old$top2 : []).filter(d => !(rowIds != null && rowIds.has(d))), ...Array.from(rowIds)],\n            bottom: ((_old$bottom2 = old == null ? void 0 : old.bottom) != null ? _old$bottom2 : []).filter(d => !(rowIds != null && rowIds.has(d)))\n          };\n        }\n        return {\n          top: ((_old$top3 = old == null ? void 0 : old.top) != null ? _old$top3 : []).filter(d => !(rowIds != null && rowIds.has(d))),\n          bottom: ((_old$bottom3 = old == null ? void 0 : old.bottom) != null ? _old$bottom3 : []).filter(d => !(rowIds != null && rowIds.has(d)))\n        };\n      });\n    };\n    row.getCanPin = () => {\n      var _ref3;\n      const {\n        enableRowPinning,\n        enablePinning\n      } = table.options;\n      if (typeof enableRowPinning === 'function') {\n        return enableRowPinning(row);\n      }\n      return (_ref3 = enableRowPinning != null ? enableRowPinning : enablePinning) != null ? _ref3 : true;\n    };\n    row.getIsPinned = () => {\n      const rowIds = [row.id];\n      const {\n        top,\n        bottom\n      } = table.getState().rowPinning;\n      const isTop = rowIds.some(d => top == null ? void 0 : top.includes(d));\n      const isBottom = rowIds.some(d => bottom == null ? void 0 : bottom.includes(d));\n      return isTop ? 'top' : isBottom ? 'bottom' : false;\n    };\n    row.getPinnedIndex = () => {\n      var _ref4, _visiblePinnedRowIds$;\n      const position = row.getIsPinned();\n      if (!position) return -1;\n      const visiblePinnedRowIds = (_ref4 = position === 'top' ? table.getTopRows() : table.getBottomRows()) == null ? void 0 : _ref4.map(_ref5 => {\n        let {\n          id\n        } = _ref5;\n        return id;\n      });\n      return (_visiblePinnedRowIds$ = visiblePinnedRowIds == null ? void 0 : visiblePinnedRowIds.indexOf(row.id)) != null ? _visiblePinnedRowIds$ : -1;\n    };\n  },\n  createTable: table => {\n    table.setRowPinning = updater => table.options.onRowPinningChange == null ? void 0 : table.options.onRowPinningChange(updater);\n    table.resetRowPinning = defaultState => {\n      var _table$initialState$r, _table$initialState;\n      return table.setRowPinning(defaultState ? getDefaultRowPinningState() : (_table$initialState$r = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.rowPinning) != null ? _table$initialState$r : getDefaultRowPinningState());\n    };\n    table.getIsSomeRowsPinned = position => {\n      var _pinningState$positio;\n      const pinningState = table.getState().rowPinning;\n      if (!position) {\n        var _pinningState$top, _pinningState$bottom;\n        return Boolean(((_pinningState$top = pinningState.top) == null ? void 0 : _pinningState$top.length) || ((_pinningState$bottom = pinningState.bottom) == null ? void 0 : _pinningState$bottom.length));\n      }\n      return Boolean((_pinningState$positio = pinningState[position]) == null ? void 0 : _pinningState$positio.length);\n    };\n    table._getPinnedRows = (visibleRows, pinnedRowIds, position) => {\n      var _table$options$keepPi;\n      const rows = ((_table$options$keepPi = table.options.keepPinnedRows) != null ? _table$options$keepPi : true) ?\n      //get all rows that are pinned even if they would not be otherwise visible\n      //account for expanded parent rows, but not pagination or filtering\n      (pinnedRowIds != null ? pinnedRowIds : []).map(rowId => {\n        const row = table.getRow(rowId, true);\n        return row.getIsAllParentsExpanded() ? row : null;\n      }) :\n      //else get only visible rows that are pinned\n      (pinnedRowIds != null ? pinnedRowIds : []).map(rowId => visibleRows.find(row => row.id === rowId));\n      return rows.filter(Boolean).map(d => ({\n        ...d,\n        position\n      }));\n    };\n    table.getTopRows = memo(() => [table.getRowModel().rows, table.getState().rowPinning.top], (allRows, topPinnedRowIds) => table._getPinnedRows(allRows, topPinnedRowIds, 'top'), getMemoOptions(table.options, 'debugRows', 'getTopRows'));\n    table.getBottomRows = memo(() => [table.getRowModel().rows, table.getState().rowPinning.bottom], (allRows, bottomPinnedRowIds) => table._getPinnedRows(allRows, bottomPinnedRowIds, 'bottom'), getMemoOptions(table.options, 'debugRows', 'getBottomRows'));\n    table.getCenterRows = memo(() => [table.getRowModel().rows, table.getState().rowPinning.top, table.getState().rowPinning.bottom], (allRows, top, bottom) => {\n      const topAndBottom = new Set([...(top != null ? top : []), ...(bottom != null ? bottom : [])]);\n      return allRows.filter(d => !topAndBottom.has(d.id));\n    }, getMemoOptions(table.options, 'debugRows', 'getCenterRows'));\n  }\n};\n\n//\n\nconst RowSelection = {\n  getInitialState: state => {\n    return {\n      rowSelection: {},\n      ...state\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onRowSelectionChange: makeStateUpdater('rowSelection', table),\n      enableRowSelection: true,\n      enableMultiRowSelection: true,\n      enableSubRowSelection: true\n      // enableGroupingRowSelection: false,\n      // isAdditiveSelectEvent: (e: unknown) => !!e.metaKey,\n      // isInclusiveSelectEvent: (e: unknown) => !!e.shiftKey,\n    };\n  },\n  createTable: table => {\n    table.setRowSelection = updater => table.options.onRowSelectionChange == null ? void 0 : table.options.onRowSelectionChange(updater);\n    table.resetRowSelection = defaultState => {\n      var _table$initialState$r;\n      return table.setRowSelection(defaultState ? {} : (_table$initialState$r = table.initialState.rowSelection) != null ? _table$initialState$r : {});\n    };\n    table.toggleAllRowsSelected = value => {\n      table.setRowSelection(old => {\n        value = typeof value !== 'undefined' ? value : !table.getIsAllRowsSelected();\n        const rowSelection = {\n          ...old\n        };\n        const preGroupedFlatRows = table.getPreGroupedRowModel().flatRows;\n\n        // We don't use `mutateRowIsSelected` here for performance reasons.\n        // All of the rows are flat already, so it wouldn't be worth it\n        if (value) {\n          preGroupedFlatRows.forEach(row => {\n            if (!row.getCanSelect()) {\n              return;\n            }\n            rowSelection[row.id] = true;\n          });\n        } else {\n          preGroupedFlatRows.forEach(row => {\n            delete rowSelection[row.id];\n          });\n        }\n        return rowSelection;\n      });\n    };\n    table.toggleAllPageRowsSelected = value => table.setRowSelection(old => {\n      const resolvedValue = typeof value !== 'undefined' ? value : !table.getIsAllPageRowsSelected();\n      const rowSelection = {\n        ...old\n      };\n      table.getRowModel().rows.forEach(row => {\n        mutateRowIsSelected(rowSelection, row.id, resolvedValue, true, table);\n      });\n      return rowSelection;\n    });\n\n    // addRowSelectionRange: rowId => {\n    //   const {\n    //     rows,\n    //     rowsById,\n    //     options: { selectGroupingRows, selectSubRows },\n    //   } = table\n\n    //   const findSelectedRow = (rows: Row[]) => {\n    //     let found\n    //     rows.find(d => {\n    //       if (d.getIsSelected()) {\n    //         found = d\n    //         return true\n    //       }\n    //       const subFound = findSelectedRow(d.subRows || [])\n    //       if (subFound) {\n    //         found = subFound\n    //         return true\n    //       }\n    //       return false\n    //     })\n    //     return found\n    //   }\n\n    //   const firstRow = findSelectedRow(rows) || rows[0]\n    //   const lastRow = rowsById[rowId]\n\n    //   let include = false\n    //   const selectedRowIds = {}\n\n    //   const addRow = (row: Row) => {\n    //     mutateRowIsSelected(selectedRowIds, row.id, true, {\n    //       rowsById,\n    //       selectGroupingRows: selectGroupingRows!,\n    //       selectSubRows: selectSubRows!,\n    //     })\n    //   }\n\n    //   table.rows.forEach(row => {\n    //     const isFirstRow = row.id === firstRow.id\n    //     const isLastRow = row.id === lastRow.id\n\n    //     if (isFirstRow || isLastRow) {\n    //       if (!include) {\n    //         include = true\n    //       } else if (include) {\n    //         addRow(row)\n    //         include = false\n    //       }\n    //     }\n\n    //     if (include) {\n    //       addRow(row)\n    //     }\n    //   })\n\n    //   table.setRowSelection(selectedRowIds)\n    // },\n    table.getPreSelectedRowModel = () => table.getCoreRowModel();\n    table.getSelectedRowModel = memo(() => [table.getState().rowSelection, table.getCoreRowModel()], (rowSelection, rowModel) => {\n      if (!Object.keys(rowSelection).length) {\n        return {\n          rows: [],\n          flatRows: [],\n          rowsById: {}\n        };\n      }\n      return selectRowsFn(table, rowModel);\n    }, getMemoOptions(table.options, 'debugTable', 'getSelectedRowModel'));\n    table.getFilteredSelectedRowModel = memo(() => [table.getState().rowSelection, table.getFilteredRowModel()], (rowSelection, rowModel) => {\n      if (!Object.keys(rowSelection).length) {\n        return {\n          rows: [],\n          flatRows: [],\n          rowsById: {}\n        };\n      }\n      return selectRowsFn(table, rowModel);\n    }, getMemoOptions(table.options, 'debugTable', 'getFilteredSelectedRowModel'));\n    table.getGroupedSelectedRowModel = memo(() => [table.getState().rowSelection, table.getSortedRowModel()], (rowSelection, rowModel) => {\n      if (!Object.keys(rowSelection).length) {\n        return {\n          rows: [],\n          flatRows: [],\n          rowsById: {}\n        };\n      }\n      return selectRowsFn(table, rowModel);\n    }, getMemoOptions(table.options, 'debugTable', 'getGroupedSelectedRowModel'));\n\n    ///\n\n    // getGroupingRowCanSelect: rowId => {\n    //   const row = table.getRow(rowId)\n\n    //   if (!row) {\n    //     throw new Error()\n    //   }\n\n    //   if (typeof table.options.enableGroupingRowSelection === 'function') {\n    //     return table.options.enableGroupingRowSelection(row)\n    //   }\n\n    //   return table.options.enableGroupingRowSelection ?? false\n    // },\n\n    table.getIsAllRowsSelected = () => {\n      const preGroupedFlatRows = table.getFilteredRowModel().flatRows;\n      const {\n        rowSelection\n      } = table.getState();\n      let isAllRowsSelected = Boolean(preGroupedFlatRows.length && Object.keys(rowSelection).length);\n      if (isAllRowsSelected) {\n        if (preGroupedFlatRows.some(row => row.getCanSelect() && !rowSelection[row.id])) {\n          isAllRowsSelected = false;\n        }\n      }\n      return isAllRowsSelected;\n    };\n    table.getIsAllPageRowsSelected = () => {\n      const paginationFlatRows = table.getPaginationRowModel().flatRows.filter(row => row.getCanSelect());\n      const {\n        rowSelection\n      } = table.getState();\n      let isAllPageRowsSelected = !!paginationFlatRows.length;\n      if (isAllPageRowsSelected && paginationFlatRows.some(row => !rowSelection[row.id])) {\n        isAllPageRowsSelected = false;\n      }\n      return isAllPageRowsSelected;\n    };\n    table.getIsSomeRowsSelected = () => {\n      var _table$getState$rowSe;\n      const totalSelected = Object.keys((_table$getState$rowSe = table.getState().rowSelection) != null ? _table$getState$rowSe : {}).length;\n      return totalSelected > 0 && totalSelected < table.getFilteredRowModel().flatRows.length;\n    };\n    table.getIsSomePageRowsSelected = () => {\n      const paginationFlatRows = table.getPaginationRowModel().flatRows;\n      return table.getIsAllPageRowsSelected() ? false : paginationFlatRows.filter(row => row.getCanSelect()).some(d => d.getIsSelected() || d.getIsSomeSelected());\n    };\n    table.getToggleAllRowsSelectedHandler = () => {\n      return e => {\n        table.toggleAllRowsSelected(e.target.checked);\n      };\n    };\n    table.getToggleAllPageRowsSelectedHandler = () => {\n      return e => {\n        table.toggleAllPageRowsSelected(e.target.checked);\n      };\n    };\n  },\n  createRow: (row, table) => {\n    row.toggleSelected = (value, opts) => {\n      const isSelected = row.getIsSelected();\n      table.setRowSelection(old => {\n        var _opts$selectChildren;\n        value = typeof value !== 'undefined' ? value : !isSelected;\n        if (row.getCanSelect() && isSelected === value) {\n          return old;\n        }\n        const selectedRowIds = {\n          ...old\n        };\n        mutateRowIsSelected(selectedRowIds, row.id, value, (_opts$selectChildren = opts == null ? void 0 : opts.selectChildren) != null ? _opts$selectChildren : true, table);\n        return selectedRowIds;\n      });\n    };\n    row.getIsSelected = () => {\n      const {\n        rowSelection\n      } = table.getState();\n      return isRowSelected(row, rowSelection);\n    };\n    row.getIsSomeSelected = () => {\n      const {\n        rowSelection\n      } = table.getState();\n      return isSubRowSelected(row, rowSelection) === 'some';\n    };\n    row.getIsAllSubRowsSelected = () => {\n      const {\n        rowSelection\n      } = table.getState();\n      return isSubRowSelected(row, rowSelection) === 'all';\n    };\n    row.getCanSelect = () => {\n      var _table$options$enable;\n      if (typeof table.options.enableRowSelection === 'function') {\n        return table.options.enableRowSelection(row);\n      }\n      return (_table$options$enable = table.options.enableRowSelection) != null ? _table$options$enable : true;\n    };\n    row.getCanSelectSubRows = () => {\n      var _table$options$enable2;\n      if (typeof table.options.enableSubRowSelection === 'function') {\n        return table.options.enableSubRowSelection(row);\n      }\n      return (_table$options$enable2 = table.options.enableSubRowSelection) != null ? _table$options$enable2 : true;\n    };\n    row.getCanMultiSelect = () => {\n      var _table$options$enable3;\n      if (typeof table.options.enableMultiRowSelection === 'function') {\n        return table.options.enableMultiRowSelection(row);\n      }\n      return (_table$options$enable3 = table.options.enableMultiRowSelection) != null ? _table$options$enable3 : true;\n    };\n    row.getToggleSelectedHandler = () => {\n      const canSelect = row.getCanSelect();\n      return e => {\n        var _target;\n        if (!canSelect) return;\n        row.toggleSelected((_target = e.target) == null ? void 0 : _target.checked);\n      };\n    };\n  }\n};\nconst mutateRowIsSelected = (selectedRowIds, id, value, includeChildren, table) => {\n  var _row$subRows;\n  const row = table.getRow(id, true);\n\n  // const isGrouped = row.getIsGrouped()\n\n  // if ( // TODO: enforce grouping row selection rules\n  //   !isGrouped ||\n  //   (isGrouped && table.options.enableGroupingRowSelection)\n  // ) {\n  if (value) {\n    if (!row.getCanMultiSelect()) {\n      Object.keys(selectedRowIds).forEach(key => delete selectedRowIds[key]);\n    }\n    if (row.getCanSelect()) {\n      selectedRowIds[id] = true;\n    }\n  } else {\n    delete selectedRowIds[id];\n  }\n  // }\n\n  if (includeChildren && (_row$subRows = row.subRows) != null && _row$subRows.length && row.getCanSelectSubRows()) {\n    row.subRows.forEach(row => mutateRowIsSelected(selectedRowIds, row.id, value, includeChildren, table));\n  }\n};\nfunction selectRowsFn(table, rowModel) {\n  const rowSelection = table.getState().rowSelection;\n  const newSelectedFlatRows = [];\n  const newSelectedRowsById = {};\n\n  // Filters top level and nested rows\n  const recurseRows = function (rows, depth) {\n    return rows.map(row => {\n      var _row$subRows2;\n      const isSelected = isRowSelected(row, rowSelection);\n      if (isSelected) {\n        newSelectedFlatRows.push(row);\n        newSelectedRowsById[row.id] = row;\n      }\n      if ((_row$subRows2 = row.subRows) != null && _row$subRows2.length) {\n        row = {\n          ...row,\n          subRows: recurseRows(row.subRows)\n        };\n      }\n      if (isSelected) {\n        return row;\n      }\n    }).filter(Boolean);\n  };\n  return {\n    rows: recurseRows(rowModel.rows),\n    flatRows: newSelectedFlatRows,\n    rowsById: newSelectedRowsById\n  };\n}\nfunction isRowSelected(row, selection) {\n  var _selection$row$id;\n  return (_selection$row$id = selection[row.id]) != null ? _selection$row$id : false;\n}\nfunction isSubRowSelected(row, selection, table) {\n  var _row$subRows3;\n  if (!((_row$subRows3 = row.subRows) != null && _row$subRows3.length)) return false;\n  let allChildrenSelected = true;\n  let someSelected = false;\n  row.subRows.forEach(subRow => {\n    // Bail out early if we know both of these\n    if (someSelected && !allChildrenSelected) {\n      return;\n    }\n    if (subRow.getCanSelect()) {\n      if (isRowSelected(subRow, selection)) {\n        someSelected = true;\n      } else {\n        allChildrenSelected = false;\n      }\n    }\n\n    // Check row selection of nested subrows\n    if (subRow.subRows && subRow.subRows.length) {\n      const subRowChildrenSelected = isSubRowSelected(subRow, selection);\n      if (subRowChildrenSelected === 'all') {\n        someSelected = true;\n      } else if (subRowChildrenSelected === 'some') {\n        someSelected = true;\n        allChildrenSelected = false;\n      } else {\n        allChildrenSelected = false;\n      }\n    }\n  });\n  return allChildrenSelected ? 'all' : someSelected ? 'some' : false;\n}\n\nconst reSplitAlphaNumeric = /([0-9]+)/gm;\nconst alphanumeric = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(toString(rowA.getValue(columnId)).toLowerCase(), toString(rowB.getValue(columnId)).toLowerCase());\n};\nconst alphanumericCaseSensitive = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(toString(rowA.getValue(columnId)), toString(rowB.getValue(columnId)));\n};\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst text = (rowA, rowB, columnId) => {\n  return compareBasic(toString(rowA.getValue(columnId)).toLowerCase(), toString(rowB.getValue(columnId)).toLowerCase());\n};\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst textCaseSensitive = (rowA, rowB, columnId) => {\n  return compareBasic(toString(rowA.getValue(columnId)), toString(rowB.getValue(columnId)));\n};\nconst datetime = (rowA, rowB, columnId) => {\n  const a = rowA.getValue(columnId);\n  const b = rowB.getValue(columnId);\n\n  // Can handle nullish values\n  // Use > and < because == (and ===) doesn't work with\n  // Date objects (would require calling getTime()).\n  return a > b ? 1 : a < b ? -1 : 0;\n};\nconst basic = (rowA, rowB, columnId) => {\n  return compareBasic(rowA.getValue(columnId), rowB.getValue(columnId));\n};\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1;\n}\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return '';\n    }\n    return String(a);\n  }\n  if (typeof a === 'string') {\n    return a;\n  }\n  return '';\n}\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nfunction compareAlphanumeric(aStr, bStr) {\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  const a = aStr.split(reSplitAlphaNumeric).filter(Boolean);\n  const b = bStr.split(reSplitAlphaNumeric).filter(Boolean);\n\n  // While\n  while (a.length && b.length) {\n    const aa = a.shift();\n    const bb = b.shift();\n    const an = parseInt(aa, 10);\n    const bn = parseInt(bb, 10);\n    const combo = [an, bn].sort();\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1;\n      }\n      if (bb > aa) {\n        return -1;\n      }\n      continue;\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1;\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1;\n    }\n    if (bn > an) {\n      return -1;\n    }\n  }\n  return a.length - b.length;\n}\n\n// Exports\n\nconst sortingFns = {\n  alphanumeric,\n  alphanumericCaseSensitive,\n  text,\n  textCaseSensitive,\n  datetime,\n  basic\n};\n\n//\n\nconst RowSorting = {\n  getInitialState: state => {\n    return {\n      sorting: [],\n      ...state\n    };\n  },\n  getDefaultColumnDef: () => {\n    return {\n      sortingFn: 'auto',\n      sortUndefined: 1\n    };\n  },\n  getDefaultOptions: table => {\n    return {\n      onSortingChange: makeStateUpdater('sorting', table),\n      isMultiSortEvent: e => {\n        return e.shiftKey;\n      }\n    };\n  },\n  createColumn: (column, table) => {\n    column.getAutoSortingFn = () => {\n      const firstRows = table.getFilteredRowModel().flatRows.slice(10);\n      let isString = false;\n      for (const row of firstRows) {\n        const value = row == null ? void 0 : row.getValue(column.id);\n        if (Object.prototype.toString.call(value) === '[object Date]') {\n          return sortingFns.datetime;\n        }\n        if (typeof value === 'string') {\n          isString = true;\n          if (value.split(reSplitAlphaNumeric).length > 1) {\n            return sortingFns.alphanumeric;\n          }\n        }\n      }\n      if (isString) {\n        return sortingFns.text;\n      }\n      return sortingFns.basic;\n    };\n    column.getAutoSortDir = () => {\n      const firstRow = table.getFilteredRowModel().flatRows[0];\n      const value = firstRow == null ? void 0 : firstRow.getValue(column.id);\n      if (typeof value === 'string') {\n        return 'asc';\n      }\n      return 'desc';\n    };\n    column.getSortingFn = () => {\n      var _table$options$sortin, _table$options$sortin2;\n      if (!column) {\n        throw new Error();\n      }\n      return isFunction(column.columnDef.sortingFn) ? column.columnDef.sortingFn : column.columnDef.sortingFn === 'auto' ? column.getAutoSortingFn() : (_table$options$sortin = (_table$options$sortin2 = table.options.sortingFns) == null ? void 0 : _table$options$sortin2[column.columnDef.sortingFn]) != null ? _table$options$sortin : sortingFns[column.columnDef.sortingFn];\n    };\n    column.toggleSorting = (desc, multi) => {\n      // if (column.columns.length) {\n      //   column.columns.forEach((c, i) => {\n      //     if (c.id) {\n      //       table.toggleColumnSorting(c.id, undefined, multi || !!i)\n      //     }\n      //   })\n      //   return\n      // }\n\n      // this needs to be outside of table.setSorting to be in sync with rerender\n      const nextSortingOrder = column.getNextSortingOrder();\n      const hasManualValue = typeof desc !== 'undefined' && desc !== null;\n      table.setSorting(old => {\n        // Find any existing sorting for this column\n        const existingSorting = old == null ? void 0 : old.find(d => d.id === column.id);\n        const existingIndex = old == null ? void 0 : old.findIndex(d => d.id === column.id);\n        let newSorting = [];\n\n        // What should we do with this sort action?\n        let sortAction;\n        let nextDesc = hasManualValue ? desc : nextSortingOrder === 'desc';\n\n        // Multi-mode\n        if (old != null && old.length && column.getCanMultiSort() && multi) {\n          if (existingSorting) {\n            sortAction = 'toggle';\n          } else {\n            sortAction = 'add';\n          }\n        } else {\n          // Normal mode\n          if (old != null && old.length && existingIndex !== old.length - 1) {\n            sortAction = 'replace';\n          } else if (existingSorting) {\n            sortAction = 'toggle';\n          } else {\n            sortAction = 'replace';\n          }\n        }\n\n        // Handle toggle states that will remove the sorting\n        if (sortAction === 'toggle') {\n          // If we are \"actually\" toggling (not a manual set value), should we remove the sorting?\n          if (!hasManualValue) {\n            // Is our intention to remove?\n            if (!nextSortingOrder) {\n              sortAction = 'remove';\n            }\n          }\n        }\n        if (sortAction === 'add') {\n          var _table$options$maxMul;\n          newSorting = [...old, {\n            id: column.id,\n            desc: nextDesc\n          }];\n          // Take latest n columns\n          newSorting.splice(0, newSorting.length - ((_table$options$maxMul = table.options.maxMultiSortColCount) != null ? _table$options$maxMul : Number.MAX_SAFE_INTEGER));\n        } else if (sortAction === 'toggle') {\n          // This flips (or sets) the\n          newSorting = old.map(d => {\n            if (d.id === column.id) {\n              return {\n                ...d,\n                desc: nextDesc\n              };\n            }\n            return d;\n          });\n        } else if (sortAction === 'remove') {\n          newSorting = old.filter(d => d.id !== column.id);\n        } else {\n          newSorting = [{\n            id: column.id,\n            desc: nextDesc\n          }];\n        }\n        return newSorting;\n      });\n    };\n    column.getFirstSortDir = () => {\n      var _ref, _column$columnDef$sor;\n      const sortDescFirst = (_ref = (_column$columnDef$sor = column.columnDef.sortDescFirst) != null ? _column$columnDef$sor : table.options.sortDescFirst) != null ? _ref : column.getAutoSortDir() === 'desc';\n      return sortDescFirst ? 'desc' : 'asc';\n    };\n    column.getNextSortingOrder = multi => {\n      var _table$options$enable, _table$options$enable2;\n      const firstSortDirection = column.getFirstSortDir();\n      const isSorted = column.getIsSorted();\n      if (!isSorted) {\n        return firstSortDirection;\n      }\n      if (isSorted !== firstSortDirection && ((_table$options$enable = table.options.enableSortingRemoval) != null ? _table$options$enable : true) && (\n      // If enableSortRemove, enable in general\n      multi ? (_table$options$enable2 = table.options.enableMultiRemove) != null ? _table$options$enable2 : true : true) // If multi, don't allow if enableMultiRemove))\n      ) {\n        return false;\n      }\n      return isSorted === 'desc' ? 'asc' : 'desc';\n    };\n    column.getCanSort = () => {\n      var _column$columnDef$ena, _table$options$enable3;\n      return ((_column$columnDef$ena = column.columnDef.enableSorting) != null ? _column$columnDef$ena : true) && ((_table$options$enable3 = table.options.enableSorting) != null ? _table$options$enable3 : true) && !!column.accessorFn;\n    };\n    column.getCanMultiSort = () => {\n      var _ref2, _column$columnDef$ena2;\n      return (_ref2 = (_column$columnDef$ena2 = column.columnDef.enableMultiSort) != null ? _column$columnDef$ena2 : table.options.enableMultiSort) != null ? _ref2 : !!column.accessorFn;\n    };\n    column.getIsSorted = () => {\n      var _table$getState$sorti;\n      const columnSort = (_table$getState$sorti = table.getState().sorting) == null ? void 0 : _table$getState$sorti.find(d => d.id === column.id);\n      return !columnSort ? false : columnSort.desc ? 'desc' : 'asc';\n    };\n    column.getSortIndex = () => {\n      var _table$getState$sorti2, _table$getState$sorti3;\n      return (_table$getState$sorti2 = (_table$getState$sorti3 = table.getState().sorting) == null ? void 0 : _table$getState$sorti3.findIndex(d => d.id === column.id)) != null ? _table$getState$sorti2 : -1;\n    };\n    column.clearSorting = () => {\n      //clear sorting for just 1 column\n      table.setSorting(old => old != null && old.length ? old.filter(d => d.id !== column.id) : []);\n    };\n    column.getToggleSortingHandler = () => {\n      const canSort = column.getCanSort();\n      return e => {\n        if (!canSort) return;\n        e.persist == null || e.persist();\n        column.toggleSorting == null || column.toggleSorting(undefined, column.getCanMultiSort() ? table.options.isMultiSortEvent == null ? void 0 : table.options.isMultiSortEvent(e) : false);\n      };\n    };\n  },\n  createTable: table => {\n    table.setSorting = updater => table.options.onSortingChange == null ? void 0 : table.options.onSortingChange(updater);\n    table.resetSorting = defaultState => {\n      var _table$initialState$s, _table$initialState;\n      table.setSorting(defaultState ? [] : (_table$initialState$s = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.sorting) != null ? _table$initialState$s : []);\n    };\n    table.getPreSortedRowModel = () => table.getGroupedRowModel();\n    table.getSortedRowModel = () => {\n      if (!table._getSortedRowModel && table.options.getSortedRowModel) {\n        table._getSortedRowModel = table.options.getSortedRowModel(table);\n      }\n      if (table.options.manualSorting || !table._getSortedRowModel) {\n        return table.getPreSortedRowModel();\n      }\n      return table._getSortedRowModel();\n    };\n  }\n};\n\nconst builtInFeatures = [Headers, ColumnVisibility, ColumnOrdering, ColumnPinning, ColumnFaceting, ColumnFiltering, GlobalFaceting,\n//depends on ColumnFaceting\nGlobalFiltering,\n//depends on ColumnFiltering\nRowSorting, ColumnGrouping,\n//depends on RowSorting\nRowExpanding, RowPagination, RowPinning, RowSelection, ColumnSizing];\n\n//\n\nfunction createTable(options) {\n  var _options$_features, _options$initialState;\n  if (process.env.NODE_ENV !== 'production' && (options.debugAll || options.debugTable)) {\n    console.info('Creating Table Instance...');\n  }\n  const _features = [...builtInFeatures, ...((_options$_features = options._features) != null ? _options$_features : [])];\n  let table = {\n    _features\n  };\n  const defaultOptions = table._features.reduce((obj, feature) => {\n    return Object.assign(obj, feature.getDefaultOptions == null ? void 0 : feature.getDefaultOptions(table));\n  }, {});\n  const mergeOptions = options => {\n    if (table.options.mergeOptions) {\n      return table.options.mergeOptions(defaultOptions, options);\n    }\n    return {\n      ...defaultOptions,\n      ...options\n    };\n  };\n  const coreInitialState = {};\n  let initialState = {\n    ...coreInitialState,\n    ...((_options$initialState = options.initialState) != null ? _options$initialState : {})\n  };\n  table._features.forEach(feature => {\n    var _feature$getInitialSt;\n    initialState = (_feature$getInitialSt = feature.getInitialState == null ? void 0 : feature.getInitialState(initialState)) != null ? _feature$getInitialSt : initialState;\n  });\n  const queued = [];\n  let queuedTimeout = false;\n  const coreInstance = {\n    _features,\n    options: {\n      ...defaultOptions,\n      ...options\n    },\n    initialState,\n    _queue: cb => {\n      queued.push(cb);\n      if (!queuedTimeout) {\n        queuedTimeout = true;\n\n        // Schedule a microtask to run the queued callbacks after\n        // the current call stack (render, etc) has finished.\n        Promise.resolve().then(() => {\n          while (queued.length) {\n            queued.shift()();\n          }\n          queuedTimeout = false;\n        }).catch(error => setTimeout(() => {\n          throw error;\n        }));\n      }\n    },\n    reset: () => {\n      table.setState(table.initialState);\n    },\n    setOptions: updater => {\n      const newOptions = functionalUpdate(updater, table.options);\n      table.options = mergeOptions(newOptions);\n    },\n    getState: () => {\n      return table.options.state;\n    },\n    setState: updater => {\n      table.options.onStateChange == null || table.options.onStateChange(updater);\n    },\n    _getRowId: (row, index, parent) => {\n      var _table$options$getRow;\n      return (_table$options$getRow = table.options.getRowId == null ? void 0 : table.options.getRowId(row, index, parent)) != null ? _table$options$getRow : `${parent ? [parent.id, index].join('.') : index}`;\n    },\n    getCoreRowModel: () => {\n      if (!table._getCoreRowModel) {\n        table._getCoreRowModel = table.options.getCoreRowModel(table);\n      }\n      return table._getCoreRowModel();\n    },\n    // The final calls start at the bottom of the model,\n    // expanded rows, which then work their way up\n\n    getRowModel: () => {\n      return table.getPaginationRowModel();\n    },\n    //in next version, we should just pass in the row model as the optional 2nd arg\n    getRow: (id, searchAll) => {\n      let row = (searchAll ? table.getPrePaginationRowModel() : table.getRowModel()).rowsById[id];\n      if (!row) {\n        row = table.getCoreRowModel().rowsById[id];\n        if (!row) {\n          if (process.env.NODE_ENV !== 'production') {\n            throw new Error(`getRow could not find row with ID: ${id}`);\n          }\n          throw new Error();\n        }\n      }\n      return row;\n    },\n    _getDefaultColumnDef: memo(() => [table.options.defaultColumn], defaultColumn => {\n      var _defaultColumn;\n      defaultColumn = (_defaultColumn = defaultColumn) != null ? _defaultColumn : {};\n      return {\n        header: props => {\n          const resolvedColumnDef = props.header.column.columnDef;\n          if (resolvedColumnDef.accessorKey) {\n            return resolvedColumnDef.accessorKey;\n          }\n          if (resolvedColumnDef.accessorFn) {\n            return resolvedColumnDef.id;\n          }\n          return null;\n        },\n        // footer: props => props.header.column.id,\n        cell: props => {\n          var _props$renderValue$to, _props$renderValue;\n          return (_props$renderValue$to = (_props$renderValue = props.renderValue()) == null || _props$renderValue.toString == null ? void 0 : _props$renderValue.toString()) != null ? _props$renderValue$to : null;\n        },\n        ...table._features.reduce((obj, feature) => {\n          return Object.assign(obj, feature.getDefaultColumnDef == null ? void 0 : feature.getDefaultColumnDef());\n        }, {}),\n        ...defaultColumn\n      };\n    }, getMemoOptions(options, 'debugColumns', '_getDefaultColumnDef')),\n    _getColumnDefs: () => table.options.columns,\n    getAllColumns: memo(() => [table._getColumnDefs()], columnDefs => {\n      const recurseColumns = function (columnDefs, parent, depth) {\n        if (depth === void 0) {\n          depth = 0;\n        }\n        return columnDefs.map(columnDef => {\n          const column = createColumn(table, columnDef, depth, parent);\n          const groupingColumnDef = columnDef;\n          column.columns = groupingColumnDef.columns ? recurseColumns(groupingColumnDef.columns, column, depth + 1) : [];\n          return column;\n        });\n      };\n      return recurseColumns(columnDefs);\n    }, getMemoOptions(options, 'debugColumns', 'getAllColumns')),\n    getAllFlatColumns: memo(() => [table.getAllColumns()], allColumns => {\n      return allColumns.flatMap(column => {\n        return column.getFlatColumns();\n      });\n    }, getMemoOptions(options, 'debugColumns', 'getAllFlatColumns')),\n    _getAllFlatColumnsById: memo(() => [table.getAllFlatColumns()], flatColumns => {\n      return flatColumns.reduce((acc, column) => {\n        acc[column.id] = column;\n        return acc;\n      }, {});\n    }, getMemoOptions(options, 'debugColumns', 'getAllFlatColumnsById')),\n    getAllLeafColumns: memo(() => [table.getAllColumns(), table._getOrderColumnsFn()], (allColumns, orderColumns) => {\n      let leafColumns = allColumns.flatMap(column => column.getLeafColumns());\n      return orderColumns(leafColumns);\n    }, getMemoOptions(options, 'debugColumns', 'getAllLeafColumns')),\n    getColumn: columnId => {\n      const column = table._getAllFlatColumnsById()[columnId];\n      if (process.env.NODE_ENV !== 'production' && !column) {\n        console.error(`[Table] Column with id '${columnId}' does not exist.`);\n      }\n      return column;\n    }\n  };\n  Object.assign(table, coreInstance);\n  for (let index = 0; index < table._features.length; index++) {\n    const feature = table._features[index];\n    feature == null || feature.createTable == null || feature.createTable(table);\n  }\n  return table;\n}\n\nfunction getCoreRowModel() {\n  return table => memo(() => [table.options.data], data => {\n    const rowModel = {\n      rows: [],\n      flatRows: [],\n      rowsById: {}\n    };\n    const accessRows = function (originalRows, depth, parentRow) {\n      if (depth === void 0) {\n        depth = 0;\n      }\n      const rows = [];\n      for (let i = 0; i < originalRows.length; i++) {\n        // This could be an expensive check at scale, so we should move it somewhere else, but where?\n        // if (!id) {\n        //   if (process.env.NODE_ENV !== 'production') {\n        //     throw new Error(`getRowId expected an ID, but got ${id}`)\n        //   }\n        // }\n\n        // Make the row\n        const row = createRow(table, table._getRowId(originalRows[i], i, parentRow), originalRows[i], i, depth, undefined, parentRow == null ? void 0 : parentRow.id);\n\n        // Keep track of every row in a flat array\n        rowModel.flatRows.push(row);\n        // Also keep track of every row by its ID\n        rowModel.rowsById[row.id] = row;\n        // Push table row into parent\n        rows.push(row);\n\n        // Get the original subrows\n        if (table.options.getSubRows) {\n          var _row$originalSubRows;\n          row.originalSubRows = table.options.getSubRows(originalRows[i], i);\n\n          // Then recursively access them\n          if ((_row$originalSubRows = row.originalSubRows) != null && _row$originalSubRows.length) {\n            row.subRows = accessRows(row.originalSubRows, depth + 1, row);\n          }\n        }\n      }\n      return rows;\n    };\n    rowModel.rows = accessRows(data);\n    return rowModel;\n  }, getMemoOptions(table.options, 'debugTable', 'getRowModel', () => table._autoResetPageIndex()));\n}\n\nfunction getExpandedRowModel() {\n  return table => memo(() => [table.getState().expanded, table.getPreExpandedRowModel(), table.options.paginateExpandedRows], (expanded, rowModel, paginateExpandedRows) => {\n    if (!rowModel.rows.length || expanded !== true && !Object.keys(expanded != null ? expanded : {}).length) {\n      return rowModel;\n    }\n    if (!paginateExpandedRows) {\n      // Only expand rows at this point if they are being paginated\n      return rowModel;\n    }\n    return expandRows(rowModel);\n  }, getMemoOptions(table.options, 'debugTable', 'getExpandedRowModel'));\n}\nfunction expandRows(rowModel) {\n  const expandedRows = [];\n  const handleRow = row => {\n    var _row$subRows;\n    expandedRows.push(row);\n    if ((_row$subRows = row.subRows) != null && _row$subRows.length && row.getIsExpanded()) {\n      row.subRows.forEach(handleRow);\n    }\n  };\n  rowModel.rows.forEach(handleRow);\n  return {\n    rows: expandedRows,\n    flatRows: rowModel.flatRows,\n    rowsById: rowModel.rowsById\n  };\n}\n\nfunction getFacetedMinMaxValues() {\n  return (table, columnId) => memo(() => {\n    var _table$getColumn;\n    return [(_table$getColumn = table.getColumn(columnId)) == null ? void 0 : _table$getColumn.getFacetedRowModel()];\n  }, facetedRowModel => {\n    if (!facetedRowModel) return undefined;\n    const uniqueValues = facetedRowModel.flatRows.flatMap(flatRow => {\n      var _flatRow$getUniqueVal;\n      return (_flatRow$getUniqueVal = flatRow.getUniqueValues(columnId)) != null ? _flatRow$getUniqueVal : [];\n    }).map(Number).filter(value => !Number.isNaN(value));\n    if (!uniqueValues.length) return;\n    let facetedMinValue = uniqueValues[0];\n    let facetedMaxValue = uniqueValues[uniqueValues.length - 1];\n    for (const value of uniqueValues) {\n      if (value < facetedMinValue) facetedMinValue = value;else if (value > facetedMaxValue) facetedMaxValue = value;\n    }\n    return [facetedMinValue, facetedMaxValue];\n  }, getMemoOptions(table.options, 'debugTable', 'getFacetedMinMaxValues'));\n}\n\nfunction filterRows(rows, filterRowImpl, table) {\n  if (table.options.filterFromLeafRows) {\n    return filterRowModelFromLeafs(rows, filterRowImpl, table);\n  }\n  return filterRowModelFromRoot(rows, filterRowImpl, table);\n}\nfunction filterRowModelFromLeafs(rowsToFilter, filterRow, table) {\n  var _table$options$maxLea;\n  const newFilteredFlatRows = [];\n  const newFilteredRowsById = {};\n  const maxDepth = (_table$options$maxLea = table.options.maxLeafRowFilterDepth) != null ? _table$options$maxLea : 100;\n  const recurseFilterRows = function (rowsToFilter, depth) {\n    if (depth === void 0) {\n      depth = 0;\n    }\n    const rows = [];\n\n    // Filter from children up first\n    for (let i = 0; i < rowsToFilter.length; i++) {\n      var _row$subRows;\n      let row = rowsToFilter[i];\n      const newRow = createRow(table, row.id, row.original, row.index, row.depth, undefined, row.parentId);\n      newRow.columnFilters = row.columnFilters;\n      if ((_row$subRows = row.subRows) != null && _row$subRows.length && depth < maxDepth) {\n        newRow.subRows = recurseFilterRows(row.subRows, depth + 1);\n        row = newRow;\n        if (filterRow(row) && !newRow.subRows.length) {\n          rows.push(row);\n          newFilteredRowsById[row.id] = row;\n          newFilteredFlatRows.push(row);\n          continue;\n        }\n        if (filterRow(row) || newRow.subRows.length) {\n          rows.push(row);\n          newFilteredRowsById[row.id] = row;\n          newFilteredFlatRows.push(row);\n          continue;\n        }\n      } else {\n        row = newRow;\n        if (filterRow(row)) {\n          rows.push(row);\n          newFilteredRowsById[row.id] = row;\n          newFilteredFlatRows.push(row);\n        }\n      }\n    }\n    return rows;\n  };\n  return {\n    rows: recurseFilterRows(rowsToFilter),\n    flatRows: newFilteredFlatRows,\n    rowsById: newFilteredRowsById\n  };\n}\nfunction filterRowModelFromRoot(rowsToFilter, filterRow, table) {\n  var _table$options$maxLea2;\n  const newFilteredFlatRows = [];\n  const newFilteredRowsById = {};\n  const maxDepth = (_table$options$maxLea2 = table.options.maxLeafRowFilterDepth) != null ? _table$options$maxLea2 : 100;\n\n  // Filters top level and nested rows\n  const recurseFilterRows = function (rowsToFilter, depth) {\n    if (depth === void 0) {\n      depth = 0;\n    }\n    // Filter from parents downward first\n\n    const rows = [];\n\n    // Apply the filter to any subRows\n    for (let i = 0; i < rowsToFilter.length; i++) {\n      let row = rowsToFilter[i];\n      const pass = filterRow(row);\n      if (pass) {\n        var _row$subRows2;\n        if ((_row$subRows2 = row.subRows) != null && _row$subRows2.length && depth < maxDepth) {\n          const newRow = createRow(table, row.id, row.original, row.index, row.depth, undefined, row.parentId);\n          newRow.subRows = recurseFilterRows(row.subRows, depth + 1);\n          row = newRow;\n        }\n        rows.push(row);\n        newFilteredFlatRows.push(row);\n        newFilteredRowsById[row.id] = row;\n      }\n    }\n    return rows;\n  };\n  return {\n    rows: recurseFilterRows(rowsToFilter),\n    flatRows: newFilteredFlatRows,\n    rowsById: newFilteredRowsById\n  };\n}\n\nfunction getFacetedRowModel() {\n  return (table, columnId) => memo(() => [table.getPreFilteredRowModel(), table.getState().columnFilters, table.getState().globalFilter, table.getFilteredRowModel()], (preRowModel, columnFilters, globalFilter) => {\n    if (!preRowModel.rows.length || !(columnFilters != null && columnFilters.length) && !globalFilter) {\n      return preRowModel;\n    }\n    const filterableIds = [...columnFilters.map(d => d.id).filter(d => d !== columnId), globalFilter ? '__global__' : undefined].filter(Boolean);\n    const filterRowsImpl = row => {\n      // Horizontally filter rows through each column\n      for (let i = 0; i < filterableIds.length; i++) {\n        if (row.columnFilters[filterableIds[i]] === false) {\n          return false;\n        }\n      }\n      return true;\n    };\n    return filterRows(preRowModel.rows, filterRowsImpl, table);\n  }, getMemoOptions(table.options, 'debugTable', 'getFacetedRowModel'));\n}\n\nfunction getFacetedUniqueValues() {\n  return (table, columnId) => memo(() => {\n    var _table$getColumn;\n    return [(_table$getColumn = table.getColumn(columnId)) == null ? void 0 : _table$getColumn.getFacetedRowModel()];\n  }, facetedRowModel => {\n    if (!facetedRowModel) return new Map();\n    let facetedUniqueValues = new Map();\n    for (let i = 0; i < facetedRowModel.flatRows.length; i++) {\n      const values = facetedRowModel.flatRows[i].getUniqueValues(columnId);\n      for (let j = 0; j < values.length; j++) {\n        const value = values[j];\n        if (facetedUniqueValues.has(value)) {\n          var _facetedUniqueValues$;\n          facetedUniqueValues.set(value, ((_facetedUniqueValues$ = facetedUniqueValues.get(value)) != null ? _facetedUniqueValues$ : 0) + 1);\n        } else {\n          facetedUniqueValues.set(value, 1);\n        }\n      }\n    }\n    return facetedUniqueValues;\n  }, getMemoOptions(table.options, 'debugTable', `getFacetedUniqueValues_${columnId}`));\n}\n\nfunction getFilteredRowModel() {\n  return table => memo(() => [table.getPreFilteredRowModel(), table.getState().columnFilters, table.getState().globalFilter], (rowModel, columnFilters, globalFilter) => {\n    if (!rowModel.rows.length || !(columnFilters != null && columnFilters.length) && !globalFilter) {\n      for (let i = 0; i < rowModel.flatRows.length; i++) {\n        rowModel.flatRows[i].columnFilters = {};\n        rowModel.flatRows[i].columnFiltersMeta = {};\n      }\n      return rowModel;\n    }\n    const resolvedColumnFilters = [];\n    const resolvedGlobalFilters = [];\n    (columnFilters != null ? columnFilters : []).forEach(d => {\n      var _filterFn$resolveFilt;\n      const column = table.getColumn(d.id);\n      if (!column) {\n        return;\n      }\n      const filterFn = column.getFilterFn();\n      if (!filterFn) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(`Could not find a valid 'column.filterFn' for column with the ID: ${column.id}.`);\n        }\n        return;\n      }\n      resolvedColumnFilters.push({\n        id: d.id,\n        filterFn,\n        resolvedValue: (_filterFn$resolveFilt = filterFn.resolveFilterValue == null ? void 0 : filterFn.resolveFilterValue(d.value)) != null ? _filterFn$resolveFilt : d.value\n      });\n    });\n    const filterableIds = (columnFilters != null ? columnFilters : []).map(d => d.id);\n    const globalFilterFn = table.getGlobalFilterFn();\n    const globallyFilterableColumns = table.getAllLeafColumns().filter(column => column.getCanGlobalFilter());\n    if (globalFilter && globalFilterFn && globallyFilterableColumns.length) {\n      filterableIds.push('__global__');\n      globallyFilterableColumns.forEach(column => {\n        var _globalFilterFn$resol;\n        resolvedGlobalFilters.push({\n          id: column.id,\n          filterFn: globalFilterFn,\n          resolvedValue: (_globalFilterFn$resol = globalFilterFn.resolveFilterValue == null ? void 0 : globalFilterFn.resolveFilterValue(globalFilter)) != null ? _globalFilterFn$resol : globalFilter\n        });\n      });\n    }\n    let currentColumnFilter;\n    let currentGlobalFilter;\n\n    // Flag the prefiltered row model with each filter state\n    for (let j = 0; j < rowModel.flatRows.length; j++) {\n      const row = rowModel.flatRows[j];\n      row.columnFilters = {};\n      if (resolvedColumnFilters.length) {\n        for (let i = 0; i < resolvedColumnFilters.length; i++) {\n          currentColumnFilter = resolvedColumnFilters[i];\n          const id = currentColumnFilter.id;\n\n          // Tag the row with the column filter state\n          row.columnFilters[id] = currentColumnFilter.filterFn(row, id, currentColumnFilter.resolvedValue, filterMeta => {\n            row.columnFiltersMeta[id] = filterMeta;\n          });\n        }\n      }\n      if (resolvedGlobalFilters.length) {\n        for (let i = 0; i < resolvedGlobalFilters.length; i++) {\n          currentGlobalFilter = resolvedGlobalFilters[i];\n          const id = currentGlobalFilter.id;\n          // Tag the row with the first truthy global filter state\n          if (currentGlobalFilter.filterFn(row, id, currentGlobalFilter.resolvedValue, filterMeta => {\n            row.columnFiltersMeta[id] = filterMeta;\n          })) {\n            row.columnFilters.__global__ = true;\n            break;\n          }\n        }\n        if (row.columnFilters.__global__ !== true) {\n          row.columnFilters.__global__ = false;\n        }\n      }\n    }\n    const filterRowsImpl = row => {\n      // Horizontally filter rows through each column\n      for (let i = 0; i < filterableIds.length; i++) {\n        if (row.columnFilters[filterableIds[i]] === false) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    // Filter final rows using all of the active filters\n    return filterRows(rowModel.rows, filterRowsImpl, table);\n  }, getMemoOptions(table.options, 'debugTable', 'getFilteredRowModel', () => table._autoResetPageIndex()));\n}\n\nfunction getGroupedRowModel() {\n  return table => memo(() => [table.getState().grouping, table.getPreGroupedRowModel()], (grouping, rowModel) => {\n    if (!rowModel.rows.length || !grouping.length) {\n      rowModel.rows.forEach(row => {\n        row.depth = 0;\n        row.parentId = undefined;\n      });\n      return rowModel;\n    }\n\n    // Filter the grouping list down to columns that exist\n    const existingGrouping = grouping.filter(columnId => table.getColumn(columnId));\n    const groupedFlatRows = [];\n    const groupedRowsById = {};\n    // const onlyGroupedFlatRows: Row[] = [];\n    // const onlyGroupedRowsById: Record<RowId, Row> = {};\n    // const nonGroupedFlatRows: Row[] = [];\n    // const nonGroupedRowsById: Record<RowId, Row> = {};\n\n    // Recursively group the data\n    const groupUpRecursively = function (rows, depth, parentId) {\n      if (depth === void 0) {\n        depth = 0;\n      }\n      // Grouping depth has been been met\n      // Stop grouping and simply rewrite thd depth and row relationships\n      if (depth >= existingGrouping.length) {\n        return rows.map(row => {\n          row.depth = depth;\n          groupedFlatRows.push(row);\n          groupedRowsById[row.id] = row;\n          if (row.subRows) {\n            row.subRows = groupUpRecursively(row.subRows, depth + 1, row.id);\n          }\n          return row;\n        });\n      }\n      const columnId = existingGrouping[depth];\n\n      // Group the rows together for this level\n      const rowGroupsMap = groupBy(rows, columnId);\n\n      // Perform aggregations for each group\n      const aggregatedGroupedRows = Array.from(rowGroupsMap.entries()).map((_ref, index) => {\n        let [groupingValue, groupedRows] = _ref;\n        let id = `${columnId}:${groupingValue}`;\n        id = parentId ? `${parentId}>${id}` : id;\n\n        // First, Recurse to group sub rows before aggregation\n        const subRows = groupUpRecursively(groupedRows, depth + 1, id);\n        subRows.forEach(subRow => {\n          subRow.parentId = id;\n        });\n\n        // Flatten the leaf rows of the rows in this group\n        const leafRows = depth ? flattenBy(groupedRows, row => row.subRows) : groupedRows;\n        const row = createRow(table, id, leafRows[0].original, index, depth, undefined, parentId);\n        Object.assign(row, {\n          groupingColumnId: columnId,\n          groupingValue,\n          subRows,\n          leafRows,\n          getValue: columnId => {\n            // Don't aggregate columns that are in the grouping\n            if (existingGrouping.includes(columnId)) {\n              if (row._valuesCache.hasOwnProperty(columnId)) {\n                return row._valuesCache[columnId];\n              }\n              if (groupedRows[0]) {\n                var _groupedRows$0$getVal;\n                row._valuesCache[columnId] = (_groupedRows$0$getVal = groupedRows[0].getValue(columnId)) != null ? _groupedRows$0$getVal : undefined;\n              }\n              return row._valuesCache[columnId];\n            }\n            if (row._groupingValuesCache.hasOwnProperty(columnId)) {\n              return row._groupingValuesCache[columnId];\n            }\n\n            // Aggregate the values\n            const column = table.getColumn(columnId);\n            const aggregateFn = column == null ? void 0 : column.getAggregationFn();\n            if (aggregateFn) {\n              row._groupingValuesCache[columnId] = aggregateFn(columnId, leafRows, groupedRows);\n              return row._groupingValuesCache[columnId];\n            }\n          }\n        });\n        subRows.forEach(subRow => {\n          groupedFlatRows.push(subRow);\n          groupedRowsById[subRow.id] = subRow;\n          // if (subRow.getIsGrouped?.()) {\n          //   onlyGroupedFlatRows.push(subRow);\n          //   onlyGroupedRowsById[subRow.id] = subRow;\n          // } else {\n          //   nonGroupedFlatRows.push(subRow);\n          //   nonGroupedRowsById[subRow.id] = subRow;\n          // }\n        });\n        return row;\n      });\n      return aggregatedGroupedRows;\n    };\n    const groupedRows = groupUpRecursively(rowModel.rows, 0);\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow);\n      groupedRowsById[subRow.id] = subRow;\n      // if (subRow.getIsGrouped?.()) {\n      //   onlyGroupedFlatRows.push(subRow);\n      //   onlyGroupedRowsById[subRow.id] = subRow;\n      // } else {\n      //   nonGroupedFlatRows.push(subRow);\n      //   nonGroupedRowsById[subRow.id] = subRow;\n      // }\n    });\n    return {\n      rows: groupedRows,\n      flatRows: groupedFlatRows,\n      rowsById: groupedRowsById\n    };\n  }, getMemoOptions(table.options, 'debugTable', 'getGroupedRowModel', () => {\n    table._queue(() => {\n      table._autoResetExpanded();\n      table._autoResetPageIndex();\n    });\n  }));\n}\nfunction groupBy(rows, columnId) {\n  const groupMap = new Map();\n  return rows.reduce((map, row) => {\n    const resKey = `${row.getGroupingValue(columnId)}`;\n    const previous = map.get(resKey);\n    if (!previous) {\n      map.set(resKey, [row]);\n    } else {\n      previous.push(row);\n    }\n    return map;\n  }, groupMap);\n}\n\nfunction getPaginationRowModel(opts) {\n  return table => memo(() => [table.getState().pagination, table.getPrePaginationRowModel(), table.options.paginateExpandedRows ? undefined : table.getState().expanded], (pagination, rowModel) => {\n    if (!rowModel.rows.length) {\n      return rowModel;\n    }\n    const {\n      pageSize,\n      pageIndex\n    } = pagination;\n    let {\n      rows,\n      flatRows,\n      rowsById\n    } = rowModel;\n    const pageStart = pageSize * pageIndex;\n    const pageEnd = pageStart + pageSize;\n    rows = rows.slice(pageStart, pageEnd);\n    let paginatedRowModel;\n    if (!table.options.paginateExpandedRows) {\n      paginatedRowModel = expandRows({\n        rows,\n        flatRows,\n        rowsById\n      });\n    } else {\n      paginatedRowModel = {\n        rows,\n        flatRows,\n        rowsById\n      };\n    }\n    paginatedRowModel.flatRows = [];\n    const handleRow = row => {\n      paginatedRowModel.flatRows.push(row);\n      if (row.subRows.length) {\n        row.subRows.forEach(handleRow);\n      }\n    };\n    paginatedRowModel.rows.forEach(handleRow);\n    return paginatedRowModel;\n  }, getMemoOptions(table.options, 'debugTable', 'getPaginationRowModel'));\n}\n\nfunction getSortedRowModel() {\n  return table => memo(() => [table.getState().sorting, table.getPreSortedRowModel()], (sorting, rowModel) => {\n    if (!rowModel.rows.length || !(sorting != null && sorting.length)) {\n      return rowModel;\n    }\n    const sortingState = table.getState().sorting;\n    const sortedFlatRows = [];\n\n    // Filter out sortings that correspond to non existing columns\n    const availableSorting = sortingState.filter(sort => {\n      var _table$getColumn;\n      return (_table$getColumn = table.getColumn(sort.id)) == null ? void 0 : _table$getColumn.getCanSort();\n    });\n    const columnInfoById = {};\n    availableSorting.forEach(sortEntry => {\n      const column = table.getColumn(sortEntry.id);\n      if (!column) return;\n      columnInfoById[sortEntry.id] = {\n        sortUndefined: column.columnDef.sortUndefined,\n        invertSorting: column.columnDef.invertSorting,\n        sortingFn: column.getSortingFn()\n      };\n    });\n    const sortData = rows => {\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = rows.map(row => ({\n        ...row\n      }));\n      sortedData.sort((rowA, rowB) => {\n        for (let i = 0; i < availableSorting.length; i += 1) {\n          var _sortEntry$desc;\n          const sortEntry = availableSorting[i];\n          const columnInfo = columnInfoById[sortEntry.id];\n          const sortUndefined = columnInfo.sortUndefined;\n          const isDesc = (_sortEntry$desc = sortEntry == null ? void 0 : sortEntry.desc) != null ? _sortEntry$desc : false;\n          let sortInt = 0;\n\n          // All sorting ints should always return in ascending order\n          if (sortUndefined) {\n            const aValue = rowA.getValue(sortEntry.id);\n            const bValue = rowB.getValue(sortEntry.id);\n            const aUndefined = aValue === undefined;\n            const bUndefined = bValue === undefined;\n            if (aUndefined || bUndefined) {\n              if (sortUndefined === 'first') return aUndefined ? -1 : 1;\n              if (sortUndefined === 'last') return aUndefined ? 1 : -1;\n              sortInt = aUndefined && bUndefined ? 0 : aUndefined ? sortUndefined : -sortUndefined;\n            }\n          }\n          if (sortInt === 0) {\n            sortInt = columnInfo.sortingFn(rowA, rowB, sortEntry.id);\n          }\n\n          // If sorting is non-zero, take care of desc and inversion\n          if (sortInt !== 0) {\n            if (isDesc) {\n              sortInt *= -1;\n            }\n            if (columnInfo.invertSorting) {\n              sortInt *= -1;\n            }\n            return sortInt;\n          }\n        }\n        return rowA.index - rowB.index;\n      });\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        var _row$subRows;\n        sortedFlatRows.push(row);\n        if ((_row$subRows = row.subRows) != null && _row$subRows.length) {\n          row.subRows = sortData(row.subRows);\n        }\n      });\n      return sortedData;\n    };\n    return {\n      rows: sortData(rowModel.rows),\n      flatRows: sortedFlatRows,\n      rowsById: rowModel.rowsById\n    };\n  }, getMemoOptions(table.options, 'debugTable', 'getSortedRowModel', () => table._autoResetPageIndex()));\n}\n\nexport { ColumnFaceting, ColumnFiltering, ColumnGrouping, ColumnOrdering, ColumnPinning, ColumnSizing, ColumnVisibility, GlobalFaceting, GlobalFiltering, Headers, RowExpanding, RowPagination, RowPinning, RowSelection, RowSorting, _getVisibleLeafColumns, aggregationFns, buildHeaderGroups, createCell, createColumn, createColumnHelper, createRow, createTable, defaultColumnSizing, expandRows, filterFns, flattenBy, functionalUpdate, getCoreRowModel, getExpandedRowModel, getFacetedMinMaxValues, getFacetedRowModel, getFacetedUniqueValues, getFilteredRowModel, getGroupedRowModel, getMemoOptions, getPaginationRowModel, getSortedRowModel, isFunction, isNumberArray, isRowSelected, isSubRowSelected, makeStateUpdater, memo, noop, orderColumns, passiveEventSupported, reSplitAlphaNumeric, selectRowsFn, shouldAutoRemoveFilter, sortingFns };\n//# sourceMappingURL=index.mjs.map\n","/**\n   * lit-table\n   *\n   * Copyright (c) TanStack\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE.md file in the root directory of this source tree.\n   *\n   * @license MIT\n   */\nimport { createTable } from '@tanstack/table-core';\nexport * from '@tanstack/table-core';\n\nfunction flexRender(Comp, props) {\n  if (!Comp) return null;\n  if (typeof Comp === 'function') {\n    return Comp(props);\n  }\n  return Comp;\n}\nclass TableController {\n  tableInstance = null;\n  _tableState = null;\n  constructor(host) {\n    (this.host = host).addController(this);\n  }\n  table(options) {\n    if (!this.tableInstance) {\n      const resolvedOptions = {\n        state: {},\n        onStateChange: () => {},\n        // noop\n        renderFallbackValue: null,\n        ...options\n      };\n      this.tableInstance = createTable(resolvedOptions);\n      this._tableState = {\n        ...this.tableInstance.initialState,\n        ...options.state\n      };\n    }\n    this.tableInstance.setOptions(prev => ({\n      ...prev,\n      ...options,\n      state: {\n        ...this._tableState,\n        ...options.state\n      },\n      onStateChange: updater => {\n        this._tableState = updater(this._tableState);\n        this.host.requestUpdate();\n        options.onStateChange == null || options.onStateChange(updater);\n      }\n    }));\n    return this.tableInstance;\n  }\n  hostDisconnected() {}\n}\n\nexport { TableController, flexRender };\n//# sourceMappingURL=index.mjs.map\n","import{noChange as e}from\"../lit-html.js\";import{directive as s,Directive as t,PartType as r}from\"../directive.js\";import{getCommittedValue as l,setChildPartValue as o,insertPart as i,removePart as n,setCommittedValue as f}from\"../directive-helpers.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst u=(e,s,t)=>{const r=new Map;for(let l=s;l<=t;l++)r.set(e[l],l);return r},c=s(class extends t{constructor(e){if(super(e),e.type!==r.CHILD)throw Error(\"repeat() can only be used in text expressions\")}dt(e,s,t){let r;void 0===t?t=s:void 0!==s&&(r=s);const l=[],o=[];let i=0;for(const s of e)l[i]=r?r(s,i):i,o[i]=t(s,i),i++;return{values:o,keys:l}}render(e,s,t){return this.dt(e,s,t).values}update(s,[t,r,c]){const d=l(s),{values:p,keys:a}=this.dt(t,r,c);if(!Array.isArray(d))return this.ut=a,p;const h=this.ut??=[],v=[];let m,y,x=0,j=d.length-1,k=0,w=p.length-1;for(;x<=j&&k<=w;)if(null===d[x])x++;else if(null===d[j])j--;else if(h[x]===a[k])v[k]=o(d[x],p[k]),x++,k++;else if(h[j]===a[w])v[w]=o(d[j],p[w]),j--,w--;else if(h[x]===a[w])v[w]=o(d[x],p[w]),i(s,v[w+1],d[x]),x++,w--;else if(h[j]===a[k])v[k]=o(d[j],p[k]),i(s,d[x],d[j]),j--,k++;else if(void 0===m&&(m=u(a,k,w),y=u(h,x,j)),m.has(h[x]))if(m.has(h[j])){const e=y.get(a[k]),t=void 0!==e?d[e]:null;if(null===t){const e=i(s,d[x]);o(e,p[k]),v[k]=e}else v[k]=o(t,p[k]),i(s,d[x],t),d[e]=null;k++}else n(d[j]),j--;else n(d[x]),x++;for(;k<=w;){const e=i(s,v[w+1]);o(e,p[k]),v[k++]=e}for(;x<=j;){const e=d[x++];null!==e&&n(e)}return this.ut=a,f(s,v),e}});export{c as repeat};\n//# sourceMappingURL=repeat.js.map\n","import {\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  Header,\n  PaginationState,\n  Row,\n  RowData,\n  RowSelectionState,\n  SortingState,\n  Table,\n  TableController,\n} from '@tanstack/lit-table'\n// Extended column definition with textAlign property\nexport type ExtendedColumnDef<T> = ColumnDef<T, unknown> & {\n  textAlign?: string\n  headerTextAlign?: string\n  disableDefaultSorting?: boolean\n}\n\nimport clsx from 'clsx'\nimport { nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { repeat } from 'lit/directives/repeat.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { t } from '@/localization/localization'\n\nimport { IconSize } from '../icon/icon.component'\nimport { SpinnerVariant } from '../spinner/spinner.component'\nimport styles from './datatable.scss?inline'\n\nconst MULTISELECT_COLUMN_ID = '__multiSelect__'\n\n// Type alias for sort state\ntype SortState = false | 'asc' | 'desc'\ntype LoadingType = 'spinner' | 'skeleton'\n\n/**\n * `dap-ds-datatable`\n * @summary A data table is a component that displays data in a tabular format.\n * @element dap-ds-datatable\n * @title - Data table\n * @generic T\n *\n * @event {{ sorting: SortingState }} dds-sorting-change - Fired when the sorting of the table changes.\n * @event {{ selection: RowSelectionState }} dds-selection-change - Fired when the selection of the table changes.\n * @event {{ pagination: PaginationState }} dds-pagination-change - Fired when the pagination of the table changes.\n * @event {{ row: Row<T> }} dds-row-click - Fired when a row is clicked.\n *\n * @slot loading - The loading content of the table.\n * @slot empty - The empty content of the table.\n *\n * @csspart base - The main table container.\n * @csspart header - The header of the table.\n * @csspart header-row - The header row of the table.\n * @csspart header-cell - All cells of the header.\n * @csspart body - The body of the table.\n * @csspart row - All rows of the table.\n * @csspart cell - All cells of the table.\n * @csspart pager - The pager of the table.\n *\n * @cssproperty --dds-datatable-bg-color - Background color of the table\n * @cssproperty --dds-datatable-border-color - Border color of the table cells\n * @cssproperty --dds-datatable-header-bg-color - Background color of the table header\n * @cssproperty --dds-datatable-header-text-color - Text color of the table header\n * @cssproperty --dds-datatable-row-hover-bg-color - Background color of hovered rows\n * @cssproperty --dds-datatable-row-selected-bg-color - Background color of selected rows\n * @cssproperty --dds-datatable-cell-padding - Padding of table cells\n * @cssproperty --dds-datatable-header-padding - Padding of header cells\n * @cssproperty --dds-datatable-border-width - Width of table borders\n * @cssproperty --dds-datatable-font-size - Font size of the table\n * @cssproperty --dds-datatable-line-height - Line height of the table\n * @cssproperty --dds-datatable-header-font-weight - Font weight of the header\n * @cssproperty --dds-datatable-stripe-color - Background color for striped rows\n * @cssproperty --dds-datatable-stripe-enabled - Whether to enable striped rows\n * @cssproperty --dds-datatable-border-radius - Border radius of the table\n * @cssproperty --dds-datatable-shadow - Box shadow of the table\n * @cssproperty --dds-datatable-transition-duration - Duration of hover/selection transitions\n * @cssproperty --dds-datatable-z-index - Z-index of the table\n * @cssproperty --dds-datatable-min-height - Minimum height of the table\n * @cssproperty --dds-datatable-max-height - Maximum height of the table\n * @cssproperty --dds-datatable-overflow-x - Horizontal overflow behavior\n * @cssproperty --dds-datatable-overflow-y - Vertical overflow behavior\n */\n@customElement('dap-ds-datatable')\nexport default class DapDSDataTable<T> extends DdsElement {\n  static readonly styles = unsafeCSS(styles)\n\n  private readonly tableController = new TableController<T>(this)\n\n  /** Data to display in the table */\n  @property({ attribute: false }) data: RowData[] = []\n  /** Columns to display in the table */\n  @property({ attribute: false }) columns: ExtendedColumnDef<T>[] = []\n\n  /** Row key to use for row selection, this should be a unique key for each row */\n  @property() rowKey: string = 'id'\n\n  /** Enable row selection on the table, can be a boolean or a function that returns a boolean\n   * @type {boolean | ((row: Row<T>) => boolean)}\n   */\n  @property({ type: Boolean }) enableRowSelection:\n    | boolean\n    | ((row: Row<T>) => boolean) = false\n  /** Enable sorting on the table */\n  @property({ type: Boolean }) enableSorting: boolean = false\n  /** Enable manual sorting on the table */\n  @property({ type: Boolean }) manualSorting: boolean = false\n  /** Enables manual pagination. If this option is set to true, the table will not automatically paginate rows and instead will expect you to manually paginate the rows before passing them to the table. This is useful if you are doing server-side pagination and aggregation. */\n  @property({ type: Boolean }) manualPagination: boolean = false\n  /** If set to true, pagination will be reset to the first page when page-altering state changes eg. data is updated, filters change, grouping changes, etc. This behavior is automatically disabled when manualPagination is true but it can be overridden by explicitly assigning a boolean value to the autoResetPageIndex table option. */\n  @property({ type: Boolean }) autoResetPageIndex: boolean = false\n\n  /** Enable row click on the table */\n  @property({ type: Boolean }) enableRowClick: boolean = false\n\n  /** Loading state of the table */\n  @property({ type: Boolean }) loading: boolean = false\n\n  /** Whether to enable striped rows */\n  @property({ type: Boolean }) enableStripedRows: boolean = false\n\n  /** Number of rows in the table */\n  @property({ type: Number }) rowCount?: number\n\n  /** ID of element describing the table */\n  @property({ type: String }) ariaDescribedBy?: string\n  /** Caption text for the table */\n  @property({ type: String }) caption?: string\n\n  /** The type of loading to use\n   * @type {'spinner' | 'skeleton'}\n   */\n  @property({ type: String }) loadingType: LoadingType = 'spinner'\n\n  /**\n   * The variant of the spinner. Only used if loadingType is 'spinner'.\n   * @type {\"neutral\" | \"brand\" | \"negative\" | \"positive\" | \"inverted\"}\n   */\n  @property({ type: String, reflect: true }) loadingVariant: SpinnerVariant =\n    'neutral'\n\n  /**\n   * The size of the spinner. Only used if loadingType is 'spinner'.\n   * @type {\"xxl\" | \"xl\" | \"lg\" | \"md\" | \"sm\" | \"xs\"}\n   */\n  @property({ type: String, reflect: true }) loadingSize: IconSize = 'lg'\n  /** The size of the spinner in pixels. This overrides the size attribute. Only used if loadingType is 'spinner'. */\n  @property({ type: Number }) loadingStaticSize?: number\n  /** The loading text. Only used if loadingType is 'spinner'. */\n  @property({ type: String }) loadingText: string\n\n  /** The text to display when the table is empty. */\n  @property({ type: String }) emptyText: string\n\n  /** Whether to disable the header when the table is empty.\n   * @type {'true' | 'false'}\n   */\n  @property({ type: String }) disableHeaderOnEmpty: string = 'true'\n\n  /** Whether to show the pager component when the table is empty. */\n  @property({ type: Boolean }) showPagerOnEmpty: boolean = false\n\n  /** Whether to show the pager component */\n  @property({ type: Boolean }) pager: boolean = false\n\n  /** Show the page size options. */\n  @property({ type: String }) showPageSizeOptions = 'true'\n  /** Show the page index. */\n  @property({ type: String }) showPageIndex = 'true'\n  /** Show the page count. */\n  @property({ type: String }) showPageCount = 'true'\n  /** Show the first button. */\n  @property({ type: String }) showFirstButton = 'true'\n  /** Show the previous button. */\n  @property({ type: String }) showPreviousButton = 'true'\n  /** Show the next button. */\n  @property({ type: String }) showNextButton = 'true'\n  /** Show the last button. */\n  @property({ type: String }) showLastButton = 'true'\n\n  /** The label of the first button */\n  @property({ type: String }) firstButtonLabel: string\n\n  /** The label of the previous button */\n  @property({ type: String }) previousButtonLabel: string\n\n  /** The label of the next button */\n  @property({ type: String }) nextButtonLabel: string\n\n  /** The label of the last button */\n  @property({ type: String }) lastButtonLabel: string\n\n  /** The function to determine the pager text\n   * @type {(pageIndex: number, pageSize: number, totalRows: number) => string}\n   */\n  @property({ attribute: false }) pageStateText: (\n    pageIndex: number,\n    pageSize: number,\n    totalRows: number,\n  ) => string\n\n  /** Available page size options for the pager\n   * @type {number[]}\n   */\n  @property({ type: Array }) pageSizeOptions: number[] = [10, 25, 50, 100]\n\n  /** Sorting state of the table */\n  @property({ type: Array }) sorting: SortingState\n  /** @ignore */\n  @state() private _sorting: SortingState = []\n\n  /** Selection state of the table */\n  @property({ type: Object }) rowSelection: RowSelectionState\n  /** @ignore */\n  @state() private _rowSelection: RowSelectionState = {}\n\n  /** Pagination state of the table */\n  @property({ type: Object }) pagination: PaginationState\n  /** @ignore */\n  @state() private _pagination: PaginationState = {\n    pageIndex: 0,\n    pageSize: 10,\n  }\n\n  /** @ignore */\n  private get isTableEmpty(): boolean {\n    return !this.data || this.data.length === 0\n  }\n\n  /** @ignore */\n  private get shouldDisableHeaderActions(): boolean {\n    return this.disableHeaderOnEmpty === 'true' && this.isTableEmpty\n  }\n\n  /** @ignore */\n  @state() private readonly _statusMessage: string = ''\n\n  /** @ignore */\n  @property({ type: Boolean }) debug = false\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n\n    if (this.sorting) {\n      this._sorting = this.sorting\n    }\n\n    if (this.rowSelection) {\n      this._rowSelection = this.rowSelection\n    }\n\n    if (this.pagination) {\n      this._pagination = this.pagination\n    } else if (this.pageSizeOptions && this.pageSizeOptions.length > 0) {\n      // If pagination is not explicitly set, use the first item in pageSizeOptions as default\n      this._pagination = {\n        ...this._pagination,\n        pageSize: this.pageSizeOptions[0],\n      }\n    }\n  }\n\n  protected updated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.updated(_changedProperties)\n\n    if (_changedProperties.has('pagination')) {\n      this._pagination = this.pagination\n    }\n\n    if (_changedProperties.has('sorting')) {\n      this._sorting = this.sorting\n    }\n\n    if (\n      _changedProperties.has('rowSelection') ||\n      _changedProperties.has('rowselection')\n    ) {\n      this._rowSelection = this.rowSelection\n    }\n\n    if (_changedProperties.has('data')) {\n      this.requestUpdate()\n    }\n  }\n\n  private readonly columnsMemo = () => [\n    ...(this.enableRowSelection &&\n    this.columns[0] &&\n    this.columns[0].id !== MULTISELECT_COLUMN_ID\n      ? [\n          {\n            id: MULTISELECT_COLUMN_ID,\n            accessorKey: MULTISELECT_COLUMN_ID,\n            enableSorting: false,\n            size: 12,\n            maxSize: 12,\n            header: ({ table }: { table: Table<T> }) =>\n              html`<dap-ds-checkbox\n                isIndeterminate=${table.getIsSomeRowsSelected()}\n                @dds-change=${table.getToggleAllRowsSelectedHandler()}\n                .checked=\"${table.getIsAllRowsSelected()}\"\n                .indeterminate=\"${table.getIsSomeRowsSelected()}\"\n                ?disabled=\"${this.disableHeaderOnEmpty === 'true' &&\n                this.isTableEmpty}\"></dap-ds-checkbox>`,\n            cell: ({ row }: { row: any }) =>\n              html`<dap-ds-checkbox\n                @dds-change=\"${row.getToggleSelectedHandler()}\"\n                .checked=\"${row.getIsSelected()}\"\n                ?disabled=\"${!row.getCanSelect()}\"\n                .indeterminate=\"${row.getIsSomeSelected()}\"></dap-ds-checkbox>`,\n          },\n        ]\n      : []),\n    ...this.columns,\n  ]\n\n  private renderHeaderCell(header: Header<T, unknown>) {\n    const columnDef = header.column.columnDef as ExtendedColumnDef<T>\n    const canSort = header.column.getCanSort()\n    const isSorted = header.column.getIsSorted()\n    const nextSortOrder = header.column.getNextSortingOrder()\n    const disableDefaultSorting = columnDef.disableDefaultSorting ?? false\n\n    const headerStyle = this.getHeaderCellStyle(header)\n    const contentStyle = columnDef.headerTextAlign\n      ? `justify-content: ${columnDef.headerTextAlign};`\n      : undefined\n\n    const sortIcon = this.getSortIcon(isSorted)\n    const sortTitle = this.getSortTitle(canSort, nextSortOrder)\n\n    return html`\n      <th\n        colspan=\"${header.colSpan}\"\n        rowspan=\"${header.rowSpan}\"\n        part=\"header-cell\"\n        class=\"data-table-header-cell\"\n        scope=\"col\"\n        aria-sort=${canSort && !this.shouldDisableHeaderActions\n          ? this.getAriaSortValue(isSorted)\n          : 'none'}\n        style=\"${ifDefined(headerStyle)}\">\n        ${this.renderHeaderCellContent(\n          header,\n          columnDef,\n          canSort,\n          disableDefaultSorting,\n          sortTitle,\n          contentStyle,\n          sortIcon,\n        )}\n      </th>\n    `\n  }\n\n  private renderHeaderCellContent(\n    header: Header<T, unknown>,\n    columnDef: ExtendedColumnDef<T>,\n    canSort: boolean,\n    disableDefaultSorting: boolean,\n    sortTitle: string | undefined,\n    contentStyle: string | undefined,\n    sortIcon: any,\n  ) {\n    if (!canSort) {\n      return flexRender(columnDef.header, header.getContext())\n    }\n\n    // Disable sorting if disableHeaderOnEmpty is true and table is empty\n    const elementTag =\n      disableDefaultSorting || this.shouldDisableHeaderActions\n        ? 'div'\n        : 'dap-ds-button'\n    const clickHandler =\n      !disableDefaultSorting && !this.shouldDisableHeaderActions\n        ? header.column.getToggleSortingHandler()\n        : null\n    const cursorStyle =\n      canSort && !this.shouldDisableHeaderActions ? 'pointer' : 'not-allowed'\n\n    return html`<${unsafeStatic(elementTag)}\n      class=\"data-table-header-cell__controller\"\n      variant=\"clean\"\n      title=${ifDefined(sortTitle)}\n      @click=\"${clickHandler}\"\n      style=\"cursor: ${cursorStyle}\">\n      <span \n        part=\"content\" \n        class=\"data-table-header-cell__content\"\n        style=\"${ifDefined(contentStyle)}\">\n        ${flexRender(columnDef.header, header.getContext())}\n        ${sortIcon}\n      </span>\n    </${unsafeStatic(elementTag)}>`\n  }\n\n  private getHeaderCellStyle(header: Header<T, unknown>): string | undefined {\n    const columnDef = header.column.columnDef as ExtendedColumnDef<T>\n    if (!columnDef.size && !columnDef.maxSize && !columnDef.headerTextAlign) {\n      return undefined\n    }\n\n    return `\n      ${columnDef.size ? `width: ${columnDef.size}px;` : ''}\n      ${columnDef.maxSize ? `max-width: ${columnDef.maxSize}px;` : ''}\n      ${columnDef.headerTextAlign ? `text-align: ${columnDef.headerTextAlign};` : ''}\n    `\n  }\n\n  // Replace this union type with a type alias.\n  private getSortIcon(isSorted: SortState) {\n    if (isSorted === 'asc') {\n      return html`<dap-ds-icon-arrow-up-s-line\n        size=\"16\"></dap-ds-icon-arrow-up-s-line>`\n    }\n    if (isSorted === 'desc') {\n      return html`<dap-ds-icon-arrow-down-s-line\n        size=\"16\"></dap-ds-icon-arrow-down-s-line>`\n    }\n    return null\n  }\n\n  private getSortTitle(\n    canSort: boolean,\n    nextSortOrder: false | 'asc' | 'desc',\n  ): string | undefined {\n    if (!canSort) return undefined\n\n    if (nextSortOrder === 'asc') return t('datatable.sortAscending')\n    if (nextSortOrder === 'desc') return t('datatable.sortDescending')\n    return t('datatable.clearSort')\n  }\n\n  private getAriaSortValue(\n    isSorted: SortState,\n  ): 'ascending' | 'descending' | 'none' {\n    if (isSorted === 'asc') return 'ascending'\n    if (isSorted === 'desc') return 'descending'\n    return 'none'\n  }\n\n  private handleRowClick(row: Row<T>): void {\n    if (this.enableRowClick) {\n      this.emit('dds-row-click', { row })\n    }\n  }\n\n  private handleRowKeydown(e: KeyboardEvent, row: Row<T>): void {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault()\n      this.handleRowClick(row)\n    }\n  }\n\n  private readonly renderHeader = (table: Table<T>) => {\n    return html`\n      <thead part=\"header\">\n        ${repeat(\n          table.getHeaderGroups(),\n          headerGroup => headerGroup.id,\n          headerGroup => html`\n            <tr\n              part=\"header-row\"\n              class=${clsx('data-table-header-row', {\n                'data-table-header-row--striped': this.enableStripedRows,\n              })}>\n              ${repeat(\n                headerGroup.headers,\n                header => header.id,\n                header => this.renderHeaderCell(header),\n              )}\n            </tr>\n          `,\n        )}\n      </thead>\n    `\n  }\n\n  private readonly renderSkeletonRows = (\n    rowCount: number,\n    cellCount: number,\n  ) => {\n    return html`\n      ${repeat(\n        Array.from({ length: rowCount }, (_, index) => index),\n        index => index,\n        _index => html`\n          <tr class=\"data-table-row\">\n            ${repeat(\n              Array.from({ length: cellCount }, (_, index) => index),\n              index => index,\n              _index =>\n                html`<td class=\"data-table-cell\">\n                  <dap-ds-skeleton></dap-ds-skeleton>\n                </td>`,\n            )}\n          </tr>\n        `,\n      )}\n    `\n  }\n\n  private readonly renderBody = (table: Table<T>) => {\n    return html`\n      ${this.loading\n        ? html`<tbody part=\"body\">\n            ${this.loadingType === 'spinner'\n              ? html`\n                  <tr>\n                    <td\n                      colspan=\"${this.columnsMemo().length}\"\n                      class=\"data-table-cell\">\n                      <div part=\"loading\" class=\"data-table-placeholder\">\n                        <slot name=\"loading\">\n                          <dap-ds-spinner\n                            size=${this.loadingSize}\n                            variant=${this.loadingVariant}\n                            .staticSize=${this.loadingStaticSize}\n                            .text=${this.loadingText}></dap-ds-spinner>\n                        </slot>\n                      </div>\n                    </td>\n                  </tr>\n                `\n              : html`\n                  ${this.renderSkeletonRows(\n                    this._pagination.pageSize ?? 10,\n                    this.columnsMemo().length,\n                  )}\n                `}\n          </tbody>`\n        : html`\n            <tbody part=\"body\">\n              ${this.isTableEmpty\n                ? html`<tr class=\"data-table-row\">\n                    <td\n                      colspan=\"${this.columnsMemo().length}\"\n                      class=\"data-table-cell\">\n                      <div part=\"loading\" class=\"data-table-placeholder\">\n                        <slot name=\"empty\">\n                          <span\n                            >${this.emptyText ?? t('datatable.noData')}</span\n                          >\n                        </slot>\n                      </div>\n                    </td>\n                  </tr>`\n                : table.getRowModel().rows.map(\n                    (row, index) => html`\n                      <tr\n                        part=\"row\"\n                        role=${this.enableRowClick ? 'button' : 'row'}\n                        tabindex=${this.enableRowClick ? 0 : -1}\n                        aria-selected=${row.getIsSelected()}\n                        aria-rowindex=${index + 2}\n                        class=${clsx('data-table-row', {\n                          'data-table-row--selected': row.getIsSelected(),\n                          'data-table-row--clickable': this.enableRowClick,\n                          'data-table-row--striped': this.enableStripedRows,\n                        })}\n                        @click=${() => this.handleRowClick(row)}\n                        @keydown=${(e: KeyboardEvent) =>\n                          this.handleRowKeydown(e, row)}>\n                        ${row.getVisibleCells().map(\n                          cell => html`\n                            <td\n                              part=\"cell\"\n                              class=${clsx('data-table-cell')}\n                              style=\"${ifDefined(\n                                (() => {\n                                  const columnDef = cell.column\n                                    .columnDef as ExtendedColumnDef<T>\n                                  return (\n                                    columnDef.textAlign &&\n                                    `text-align: ${columnDef.textAlign};`\n                                  )\n                                })(),\n                              )}\">\n                              ${flexRender(\n                                cell.column.columnDef.cell,\n                                cell.getContext(),\n                              )}\n                            </td>\n                          `,\n                        )}\n                      </tr>\n                    `,\n                  )}\n            </tbody>\n          `}\n    `\n  }\n\n  protected render() {\n    const table = this.tableController.table({\n      data: this.data as T[],\n      columns: this.columnsMemo(),\n      filterFns: {},\n      state: {\n        sorting: this._sorting,\n        rowSelection: this._rowSelection,\n        pagination: this._pagination,\n      },\n      manualSorting: this.manualSorting,\n      enableSorting: this.enableSorting,\n      enableRowSelection: this.enableRowSelection,\n      manualPagination: this.manualPagination,\n      autoResetPageIndex: this.autoResetPageIndex,\n      onSortingChange: updaterOrValue => {\n        if (typeof updaterOrValue === 'function') {\n          this._sorting = updaterOrValue(this._sorting)\n        } else {\n          this._sorting = updaterOrValue\n        }\n\n        this.emit('dds-sorting-change', { sorting: this._sorting })\n      },\n      getCoreRowModel: getCoreRowModel(),\n      ...(!this.manualSorting && {\n        getSortedRowModel: getSortedRowModel(),\n      }),\n      getPaginationRowModel: getPaginationRowModel(),\n      onPaginationChange: updaterOrValue => {\n        if (typeof updaterOrValue === 'function') {\n          this._pagination = updaterOrValue(this._pagination)\n        } else {\n          this._pagination = updaterOrValue\n        }\n\n        this.emit('dds-pagination-change', {\n          pagination: {\n            pageIndex: this._pagination.pageIndex,\n            pageSize: this._pagination.pageSize,\n          },\n        })\n      },\n      onRowSelectionChange: updaterOrValue => {\n        if (typeof updaterOrValue === 'function') {\n          this._rowSelection = updaterOrValue(this._rowSelection)\n        } else {\n          this._rowSelection = updaterOrValue\n        }\n\n        this.emit('dds-selection-change', { selection: this._rowSelection })\n      },\n      getRowId: originalRow => {\n        return (originalRow as Record<string, any>)[this.rowKey]\n      },\n      rowCount: this.rowCount ?? (this.data ? this.data.length : 0),\n      debugTable: this.debug,\n      debugHeaders: this.debug,\n      debugColumns: this.debug,\n    })\n\n    return html`\n      <table\n        part=\"base\"\n        role=\"table\"\n        aria-label=${ifDefined(\n          this.ariaLabel ?? t('datatable.tableDescription'),\n        )}\n        aria-describedby=${ifDefined(this.ariaDescribedBy)}\n        aria-rowcount=${this.rowCount ?? (this.data ? this.data.length : 0)}\n        class=${clsx('data-table', {\n          'data-table--loading': this.loading,\n        })}>\n        ${this.caption\n          ? html`<caption class=\"visually-hidden\">\n              ${this.caption}\n            </caption>`\n          : nothing}\n        ${this.renderHeader(table)} ${this.renderBody(table)}\n      </table>\n      ${this._statusMessage\n        ? html`<div\n            aria-live=\"polite\"\n            aria-atomic=\"true\"\n            class=\"visually-hidden\"\n            id=\"table-status\">\n            ${this._statusMessage}\n          </div>`\n        : nothing}\n      ${(this.pager && !this.isTableEmpty) ||\n      (this.pager && this.showPagerOnEmpty && this.isTableEmpty)\n        ? html`<dap-ds-pager\n            class=\"data-table-pager\"\n            part=\"pager\"\n            .disabled=${this.isTableEmpty}\n            .manualPagination=${this.manualPagination}\n            .pageIndex=${table.getState().pagination.pageIndex}\n            .pageSize=${table.getState().pagination.pageSize}\n            .totalRows=${this.rowCount ?? (this.data ? this.data.length : 0)}\n            .pageSizeOptions=${this.pageSizeOptions}\n            .showPageSizeOptions=${this.showPageSizeOptions}\n            .showPageIndex=${this.showPageIndex}\n            .showPageCount=${this.showPageCount}\n            .showFirstButton=${this.showFirstButton}\n            .showPreviousButton=${this.showPreviousButton}\n            .showNextButton=${this.showNextButton}\n            .showLastButton=${this.showLastButton}\n            .firstButtonLabel=${this.firstButtonLabel}\n            .previousButtonLabel=${this.previousButtonLabel}\n            .nextButtonLabel=${this.nextButtonLabel}\n            .lastButtonLabel=${this.lastButtonLabel}\n            pageStateText=${ifDefined(this.pageStateText)}\n            exportparts=\"pager:base, first:base, previous:base, next:base, last:base, page-size\"\n            @dds-pagination-change=${(e: any) => {\n              e.preventDefault()\n              e.stopPropagation()\n\n              if (e.detail.action === 'pageSize') {\n                table.setPageSize(e.detail.pagination.pageSize)\n              } else {\n                table.setPageIndex(e.detail.pagination.pageIndex)\n              }\n            }}>\n            <slot name=\"first-button-label\" slot=\"first-button-label\">\n              ${this.firstButtonLabel || t('pager.first')}\n            </slot>\n            <slot name=\"previous-button-label\" slot=\"previous-button-label\">\n              ${this.previousButtonLabel || t('pager.previous')}\n            </slot>\n            <slot name=\"next-button-label\" slot=\"next-button-label\">\n              ${this.nextButtonLabel || t('pager.next')}\n            </slot>\n            <slot name=\"last-button-label\" slot=\"last-button-label\">\n              ${this.lastButtonLabel || t('pager.last')}\n            </slot>\n          </dap-ds-pager>`\n        : nothing}\n    `\n  }\n}\n","import clsx from 'clsx'\nimport dayjs, { Dayjs } from 'dayjs'\nimport { nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property, query, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport {\n  CommonFormElementSize,\n  FloatingStrategy,\n  PopupPlacement,\n} from '@/common/types'\nimport { getValidityStateObject } from '@/common/utils'\nimport { GenericFormElement } from '@/internal/mixin/genericFormElement'\nimport { translate } from '@/localization/localization'\n\nimport DapDSCalendar from '../calendar/calendar.component'\nimport styles from './datepicker.scss?inline'\n\n/**\n * `dap-ds-datepicker`\n * @summary A datepicker is a graphical user interface widget that allows the user to select a date from a calendar and/or time from a time range.\n * @element dap-ds-datepicker\n * @title - Datepicker\n *\n * @property {Dayjs} value - The value of the datepicker.\n * @property {string} label - The label of the datepicker.\n * @property {string} description - The description of the datepicker.\n * @property {'xs' | 'sm' | 'sm'} size - The size of the datepicker.\n * @property {boolean} disabled - The disabled state of the datepicker.\n * @property {boolean} required - The required state of the datepicker.\n * @property {boolean} readonly - The readonly state of the datepicker.\n * @property {boolean} autofocus - The autofocus state of the datepicker.\n * @property {string} tooltip - The tooltip of the datepicker.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The tooltip placement of the datepicker.\n * @property {string} feedback - The feedback of the datepicker.\n * @property {'negative' | 'positive' | 'warning'} feedbackType - The feedback type of the datepicker.\n * @property {boolean} optional - The optional state of the datepicker.\n * @property {string} optionalLabel - The optional label of the datepicker.\n * @property {boolean} subtle - The weight of the label. Default is `false`\n * @property {string} autocomplete - The autocomplete of the datepicker.\n * @property {boolean} autofocus - The autofocus of the datepicker.\n *\n * @event {{ value: string }} dds-change - Fired when the datepicker value changes.\n * @event {{ value: string }} dds-input - Fired when the datepicker input value changes.\n * @event {{ value: string }} dds-valid-date - Fired when the datepicker input value is valid. Happens on manual input typing.\n * @event {{ value: string, type: 'invalid' | 'out-of-range' }} dds-invalid-date - Fired when the datepicker input value is invalid. Happens on manual input typing.\n * @event {{ void }} dds-clear - Fired when the datepicker is cleared.\n * @event {{ void }} dds-focus - Emitted when the datepicker gains focus.\n * @event {{ void }} dds-blur - Emitted when the datepicker loses focus.\n *\n * @csspart base - The main datepicker container.\n * @csspart calendar - The calendar of the datepicker.\n * @csspart trigger - The trigger button of the datepicker.\n * @csspart label - The label of the datepicker.\n * @csspart description - The description of the datepicker.\n * @csspart feedback - The feedback of the datepicker.\n * @csspart tooltip - The tooltip of the datepicker.\n * @csspart input - The input of the datepicker.\n * @csspart clear-button - The clear button of the datepicker.\n *\n * @cssproperty --dds-combobox-background - The background color of the combobox. Defaults to var(--dds-fields-background-default).\n * @cssproperty --dds-combobox-border-color - The border color of the combobox. Defaults to var(--dds-border-neutral-base).\n * @cssproperty --dds-combobox-border-width - The border width of the combobox. Defaults to var(--dds-border-width-base, 1px).\n * @cssproperty --dds-combobox-border-radius - The border radius of the combobox. Defaults to var(--dds-radius-base).\n * @cssproperty --dds-combobox-text-color - The text color of the combobox. Defaults to var(--dds-text-neutral-base).\n * @cssproperty --dds-combobox-placeholder-color - The placeholder text color. Defaults to var(--dds-text-neutral-subtle).\n * @cssproperty --dds-combobox-disabled-background - The background color when disabled. Defaults to var(--dds-background-neutral-stronger).\n * @cssproperty --dds-combobox-disabled-text - The text color when disabled. Defaults to var(--dds-text-neutral-disabled).\n * @cssproperty --dds-combobox-error-border - The border color for error state. Defaults to var(--dds-border-negative-base).\n * @cssproperty --dds-combobox-success-border - The border color for success state. Defaults to var(--dds-border-positive-base).\n * @cssproperty --dds-combobox-icon-color - The color of the icons. Defaults to var(--dds-text-icon-neutral-subtle).\n * @cssproperty --dds-combobox-clear-icon-color - The color of the clear icon. Defaults to var(--dds-button-subtle-icon-neutral-enabled).\n * @cssproperty --dds-combobox-popup-background - The background color of the popup. Defaults to var(--dds-background-neutral-subtle).\n * @cssproperty --dds-combobox-popup-shadow - The box shadow of the popup. Defaults to 0 4px 6px -1px rgb(0 0 0 / 8%), 0 2px 4px -1px rgb(0 0 0 / 6%).\n *\n * @cssproperty --dds-combobox-padding-xs - The padding for extra small size. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-padding-sm - The padding for small size. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-padding-lg - The padding for large size. Defaults to var(--dds-spacing-300).\n * @cssproperty --dds-combobox-padding-horizontal - The horizontal padding. Defaults to var(--dds-spacing-300).\n * @cssproperty --dds-combobox-padding-vertical - The vertical padding. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-gap - The gap between elements. Defaults to var(--dds-spacing-100).\n * @cssproperty --dds-combobox-icon-gap - The gap between icons. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-action-gap - The gap between action elements. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-action-padding - The padding for action elements. Defaults to var(--dds-spacing-300).\n * @cssproperty --dds-combobox-clear-icon-width - The width of the clear icon. Defaults to var(--dds-spacing-800).\n * @cssproperty --dds-combobox-dropdown-icon-right - The right position of the dropdown icon. Defaults to var(--dds-spacing-600).\n * @cssproperty --dds-combobox-min-width - The minimum width of the combobox. Defaults to 7.5rem.\n *\n */\n@customElement('dap-ds-datepicker')\nexport default class DapDSDatePicker extends GenericFormElement {\n  @query('#input') private readonly triggerInput!: HTMLInputElement\n  @query('#calendar') private readonly calendar!: DapDSCalendar\n\n  /** The current visible date of the calendar. Only the month and year are considered.\n   * @type {Dayjs}\n   * @default dayjs()\n   */\n  @property({ attribute: false }) currentDate = dayjs()\n\n  /** The minimum date of the datepicker. This date will be the minimum selectable date.\n   * @type {Dayjs}\n   * @default dayjs('1901-01-01')\n   */\n  @property({ attribute: false }) minDate = dayjs('1901-01-01')\n\n  /** The maximum date of the datepicker. This date will be the maximum selectable date.\n   * @type {Dayjs}\n   * @default dayjs('2099-12-31')\n   */\n  @property({ attribute: false }) maxDate = dayjs('2099-12-31')\n\n  /** The disabled date of the datepicker. This function will be called for each date to determine if it is disabled.\n   * @type {(date: Dayjs) => boolean}\n   * @default (date: Dayjs) => false\n   */\n  @property() disabledDate = (date: Dayjs) => {\n    return !date\n  }\n\n  /** The placement of the dropdown of the datepicker.\n   * @type {'top-start' | 'top' | 'top-end' | 'right-start' | 'right' | 'right-end' | 'bottom-start' | 'bottom' | 'bottom-end' | 'left-start' | 'left' | 'left-end'}\n   */\n  @property({ reflect: true }) placement: PopupPlacement = 'bottom-start'\n\n  /** The open state of the datepicker. */\n  @property({ type: Boolean, reflect: true }) opened = false\n\n  /** Wheter the calendar should open on typing. */\n  @property({ type: Boolean }) openCalendarOnInput = false\n\n  /** Wheter the calendar should send an empty event on typing. */\n  @property({ type: Boolean }) sendEmptyEventOnInput = false\n\n  /** The placeholder of the datepicker. */\n  @property() placeholder: string | null\n\n  /** The loading state of the datepicker. */\n  @property({ type: Boolean }) loading?: boolean = false\n\n  /** The format of the datepicker. This is a comma separated list of [formats](https://day.js.org/docs/en/display/format). */\n  @property({ type: String }) format?: string\n\n  /** The format separator character in the format attribute. */\n  @property({ type: String }) formatSeparator: string = '|'\n\n  /** Whether the clear button should be shown. */\n  @property({ type: String }) clearButton?: string = 'true'\n\n  /** The aria label of the clear button. */\n  @property({ type: String }) clearButtonAriaLabel?: string\n\n  /** The floating strategy of the datepicker. */\n  @property({ type: String }) floatingStrategy: FloatingStrategy = 'fixed'\n\n  /** The locale of the datepicker. By default it uses the global locale from dayjs. It is determined from the browser language.\n   * @type {'hu' | 'en'}\n   */\n  @property({ type: String }) locale: string = dayjs.locale()\n\n  @state() private formatOptions: string[] = []\n  @state() private setValueState: boolean = true\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n\n    if (this.value) {\n      this.calendar.value = dayjs(this.value).locale(this.locale)\n    }\n    this.calendar.currentDate = this.currentDate\n    this.calendar.minDate = this.minDate\n    this.calendar.maxDate = this.maxDate\n    this.calendar.disabledDate = this.disabledDate\n\n    this.formatOptions = this.format?.split(this.formatSeparator) || []\n  }\n\n  protected updated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.updated(_changedProperties)\n\n    if (_changedProperties.has('value')) {\n      this.calendar.value = this.value\n      if (this.setValueState) {\n        this.triggerInput.value = this.getFormattedValue()\n      }\n      this.setValidity()\n    }\n\n    if (_changedProperties.has('currentDate')) {\n      this.calendar.currentDate = this.currentDate\n    }\n  }\n\n  getFormattedValue() {\n    if (!this.value) {\n      return ''\n    }\n\n    return dayjs(this.value)\n      .locale(this.locale)\n      .format(this.formatOptions[0] || 'L')\n  }\n\n  isValidFormat(value: string) {\n    if (!this.formatOptions.length) {\n      // For the default 'L' format, we need to be more strict to prevent partial dates\n      // Get the actual format pattern for the current locale\n      const trimmedValue = value.trim()\n\n      // Get the actual 'L' format pattern for the current locale\n      const localeFormat = dayjs()\n        .locale(this.locale)\n        .localeData()\n        .longDateFormat('L')\n\n      // Now validate that the input actually matches the expected format pattern\n      // Use the robust string comparison approach: parse and format back to compare\n      // The localeFormat already contains the correct format for the current locale\n      const parsedDate = dayjs(trimmedValue, localeFormat)\n      if (!parsedDate.isValid()) {\n        return false\n      }\n      // Format back and compare - if they differ, the input was incomplete\n      // Handle optional trailing separators by normalizing both strings\n      const formattedDate = parsedDate.format(localeFormat)\n      const normalizedInput = trimmedValue.replace(/[.,\\s]+$/, '') // Remove trailing separators\n      const normalizedFormatted = formattedDate.replace(/[.,\\s]+$/, '') // Remove trailing separators\n      if (normalizedFormatted !== normalizedInput) {\n        return false\n      }\n\n      return true\n    }\n\n    return this.formatOptions.some(format => {\n      // Use the same robust string comparison approach for custom formats\n      // Parse with the custom format and compare the result\n      const parsedDate = dayjs(value, format)\n      if (!parsedDate.isValid()) {\n        return false\n      }\n      // Format back and compare - if they differ, the input was incomplete\n      // Handle optional trailing separators by normalizing both strings\n      const formattedDate = parsedDate.format(format)\n      const normalizedInput = value.replace(/[.,\\s]+$/, '') // Remove trailing separators\n      const normalizedFormatted = formattedDate.replace(/[.,\\s]+$/, '') // Remove trailing separators\n      return normalizedFormatted === normalizedInput\n    })\n  }\n\n  isValueValid() {\n    if (!this.value) {\n      return true\n    }\n\n    return this.isInputValid()\n  }\n\n  isInputValid() {\n    return this.isValidFormat(this.triggerInput.value)\n  }\n\n  setValue(\n    value?: Dayjs,\n    setInputValue: boolean = true,\n    sendEmptyEventOnInput: boolean = true,\n  ) {\n    this.value = value\n\n    if (setInputValue) {\n      this.setValueState = true\n      this.triggerInput.value = this.getFormattedValue()\n    } else {\n      this.setValueState = false\n    }\n\n    this.setValidity()\n    this.hideCalendar()\n\n    if (sendEmptyEventOnInput) {\n      this.emit('dds-change', { value: this.value })\n      this.emit('dds-valid-date', { value: this.triggerInput.value })\n    }\n  }\n\n  async clearSelection() {\n    this.setValue(undefined, true, true)\n  }\n\n  private readonly handleDocumentMouseDown = (event: MouseEvent) => {\n    const path = event.composedPath()\n    if (this && !path.includes(this)) {\n      this.hideCalendar()\n    }\n  }\n\n  private readonly handleInput = (event: InputEvent) => {\n    const input = event.target as HTMLInputElement\n\n    if (!input.value) {\n      this.setValue(undefined, false, true)\n    } else {\n      if (this.isInputValid()) {\n        const date = dayjs(input.value).locale(this.locale)\n\n        if (\n          date.isBefore(this.minDate, 'day') ||\n          date.isAfter(this.maxDate, 'day')\n        ) {\n          this.setValue(undefined, false, this.sendEmptyEventOnInput)\n          this.emit('dds-invalid-date', {\n            value: input.value,\n            type: 'out-of-range',\n          })\n        } else {\n          this.setValue(date, false)\n          this.currentDate = date\n          this.emit('dds-valid-date', { value: input.value })\n        }\n      } else {\n        this.setValue(undefined, false, this.sendEmptyEventOnInput)\n        this.emit('dds-invalid-date', { value: input.value, type: 'invalid' })\n      }\n    }\n\n    if (this.openCalendarOnInput && !this.opened) {\n      this.showCalendar()\n    }\n\n    this.emit('dds-input', { value: input.value })\n  }\n\n  private readonly handleKeyDown = async (event: KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      return\n    }\n\n    if (\n      event.key === 'Enter' ||\n      event.key === 'ArrowDown' ||\n      event.key === 'ArrowUp'\n    ) {\n      event.preventDefault()\n      event.stopPropagation()\n\n      if (!this.opened) {\n        this.showCalendar()\n        await this.updateComplete\n        this.calendar.captureFocus()\n      } else {\n        this.hideCalendar()\n      }\n    }\n  }\n\n  public get focusElement() {\n    return this.triggerInput\n  }\n\n  private readonly handleClick = () => {\n    if (!this.opened) {\n      this.showCalendar()\n    } else {\n      this.hideCalendar()\n    }\n  }\n\n  private readonly handleClearClick = () => {\n    if (!this.disabled) {\n      this.clearSelection()\n\n      this.triggerInput.focus()\n      this.setValidity()\n\n      this.hideCalendar()\n\n      this.emit('dds-clear')\n    }\n  }\n\n  async showCalendar() {\n    if (this.disabled || this.readonly || this.opened) {\n      return\n    }\n\n    this.opened = true\n\n    document.addEventListener('mousedown', this.handleDocumentMouseDown)\n  }\n\n  async hideCalendar() {\n    if (!this.opened) {\n      return\n    }\n\n    this.opened = false\n\n    document.removeEventListener('mousedown', this.handleDocumentMouseDown)\n\n    await this.updateComplete\n    this.focus()\n  }\n\n  private readonly handleFocus = () => {\n    this.emit('dds-focus')\n  }\n\n  private readonly handleBlur = () => {\n    this.emit('dds-blur')\n  }\n\n  // custom validation\n  getValidity() {\n    return !!this.value\n  }\n\n  get validity(): ValidityState {\n    if (this.internals.validity) {\n      return this.internals.validity\n    } else {\n      return getValidityStateObject({\n        valueMissing: this.required && !this.getValidity(),\n        patternMismatch: !this.isValueValid(),\n      })\n    }\n  }\n\n  checkValidity() {\n    return this.required && this.getValidity() && this.isValueValid()\n  }\n\n  reportValidity() {\n    return this.required && this.getValidity() && this.isValueValid()\n  }\n\n  setValidity() {\n    if (!this.checkValidity()) {\n      this.internals.setValidity(\n        {\n          valueMissing: this.required && !this.getValidity(),\n          patternMismatch: !this.isValueValid(),\n        },\n        this.validationMessage,\n        this.triggerInput,\n      )\n    } else {\n      this.internals.setValidity({})\n    }\n  }\n\n  handleInvalid(event: Event) {\n    event.preventDefault()\n  }\n\n  render() {\n    return html` <div class=\"label-container\">\n        ${this.label &&\n        html`<dap-ds-form-label\n          part=\"label\"\n          id=\"label\"\n          .size=${this.size}\n          .required=${this.required}\n          .optional=${this.optional}\n          .disabled=${this.disabled}\n          class=${clsx('label')}\n          for=\"input\"\n          label=${ifDefined(this.label)}>\n        </dap-ds-form-label>`}\n        ${this.tooltip &&\n        html` <dap-ds-tooltip\n          part=\"tooltip\"\n          content=${this.tooltip}\n          mode=\"toggle\"\n          placement=${this.tooltipPlacement}>\n          <dap-ds-icon-button\n            slot=\"trigger\"\n            size=${this.size as 'xs' | 'sm' | 'md' | 'lg'}\n            iconSize=${this.size === 'xs' ? '16' : '22'}\n            class=\"info-button\"\n            clean>\n            <dap-ds-icon\n              name=\"information-line\"\n              aria-label=${this.tooltipAriaLabel}\n              class=\"info-button\"></dap-ds-icon>\n          </dap-ds-icon-button>\n        </dap-ds-tooltip>`}\n      </div>\n      ${this.description &&\n      html`\n        <dap-ds-typography\n          part=\"description\"\n          variant=\"description\"\n          size=${ifDefined(this.size as CommonFormElementSize)}\n          id=\"description\">\n          ${this.description}\n        </dap-ds-typography>\n      `}\n      <div>\n        <dap-ds-popup\n          part=\"base\"\n          class=\"select-popup\"\n          overflow\n          ?opened=${this.opened}\n          ?hasArrow=${false}\n          placement=${this.placement}\n          floatingStrategy=${this.floatingStrategy}\n          maxHeight=\"auto\"\n          offset=\"4\">\n          <div\n            slot=\"trigger\"\n            part=\"trigger\"\n            class=\"${clsx('select', `select--${this.size}`, {\n              'select--disabled': this.disabled,\n              'select--readonly': this.readonly,\n              'select--opened': this.opened,\n              'select--loading': this.loading,\n              'select--success': this.status === 'success',\n              'select--error': this.status === 'error',\n            })}\">\n            <input\n              part=\"input\"\n              role=\"combobox\"\n              class=\"${clsx('input', `input--${this.size}`, {\n                'input--disabled': this.disabled,\n                'input--readonly': this.readonly,\n              })}\"\n              id=\"input\"\n              value=${this.getFormattedValue()}\n              aria-expanded=${this.opened}\n              aria-haspopup=\"dialog\"\n              aria-labelledby=${ifDefined(this.label ? 'label' : nothing)}\n              aria-describedby=\"${ifDefined(\n                this.description ? 'description' : nothing,\n              )} ${ifDefined(this.feedback ? 'feedback' : nothing)}\"\n              aria-disabled=${this.disabled}\n              aria-controls=\"calendar\"\n              aria-autocomplete=\"none\"\n              ?required=${this.required}\n              ?readonly=${this.readonly}\n              ?autofocus=${this.autofocus}\n              ?disabled=${this.disabled}\n              autocomplete=${this.autocomplete as any}\n              placeholder=${ifDefined(this.placeholder ?? '')}\n              @blur=${this.handleBlur}\n              @focus=${this.handleFocus}\n              @input=${this.handleInput}\n              @keydown=${this.handleKeyDown}\n              @invalid=${this.handleInvalid}\n              @click=${this.handleClick} />\n            <div\n              class=\"${clsx('select-action', `select-action--${this.size}`, {\n                'select-action--disabled': this.disabled,\n                'select-action--readonly': this.readonly,\n                'select-action--opened': this.opened,\n              })}\">\n              ${this.clearButton === 'true' && !this.readonly\n                ? html`<div class=\"${clsx('clear-icon')}\">\n                    <dap-ds-icon-button\n                      icon=\"close-line\"\n                      part=\"clear-button\"\n                      aria-label=${ifDefined(\n                        this.clearButtonAriaLabel ?? translate('clear'),\n                      )}\n                      ?disabled=${this.disabled}\n                      @click=${this.handleClearClick}></dap-ds-icon-button>\n                  </div>`\n                : nothing}\n              <div\n                class=\"${clsx('indicator-icon', {\n                  'indicator-icon--loading': this.loading,\n                })}\">\n                ${this.loading\n                  ? html`<dap-ds-icon-loading-spinner></dap-ds-icon-loading-spinner>`\n                  : html`<dap-ds-icon-calendar-line\n                      aria-hidden=\"true\"\n                      part=\"calendar-button\"\n                      class=${clsx('calendar-icon')}\n                      @click=${this.handleClick}></dap-ds-icon-calendar-line>`}\n              </div>\n            </div>\n          </div>\n          <dap-ds-calendar\n            id=\"calendar\"\n            part=\"calendar\"\n            locale=${this.locale}\n            @dds-close=${this.hideCalendar}\n            @dds-change=${(event: CustomEvent) => {\n              event.preventDefault()\n              event.stopPropagation()\n              this.setValue(event.detail.value)\n            }}>\n          </dap-ds-calendar>\n        </dap-ds-popup>\n        ${this.feedback &&\n        html`<dap-ds-feedback\n          part=\"feedback\"\n          feedbackType=${ifDefined(this.feedbackType)}\n          feedbackSize=\"${ifDefined(this.size as 'lg' | 'sm' | 'xs')}\"\n          id=\"feedback\">\n          ${this.feedback}\n        </dap-ds-feedback>`}\n      </div>`\n  }\n}\n","import { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\n\nimport { Spacing } from '@/common/types'\nimport { DdsElement } from '@/internal/dds-hu-element'\n\nimport styles from './_styles/divider.scss?inline'\n\n/**\n * `dap-ds-divider`\n * @summary A divider is a visual separator between elements.\n * @element dap-ds-divider\n * @title - Divider\n *\n * @cssproperty --dds-divider-border-width - The width of the divider border. Defaults to var(--dds-border-width-base)\n * @cssproperty --dds-divider-border-style - The style of the divider border. Defaults to solid\n * @cssproperty --dds-divider-border-color - The color of the divider border. Defaults to var(--dds-border-neutral-divider)\n * @cssproperty --dds-divider-border-color-inverted - The color of the divider border when inverted. Defaults to var(--dds-border-neutral-divider-inverted)\n */\n@customElement('dap-ds-divider')\nexport default class DapDSDivider extends DdsElement {\n  /** Whether the divider is vertical */\n  @property({ type: Boolean, reflect: true }) vertical = false\n\n  /** The spacing of the divider\n   * @type { 0 | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 1000 | 1200 | 1400 | 1600 | 1800 | 2000 | 2400 | 3000 | 4000 | 5000 | 6000 }\n   */\n  @property({ type: Number }) spacing: Spacing = 0\n\n  /** The variant of the divider\n   * @type {'normal' | 'inverted'}\n   */\n  @property({ type: String, reflect: true }) variant: string = 'normal'\n\n  static readonly styles = unsafeCSS(styles)\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.setAttribute('role', 'separator')\n    this.setAttribute(\n      'aria-orientation',\n      this.vertical ? 'vertical' : 'horizontal',\n    )\n    this.setAttribute('variant', this.variant)\n    this.setAttribute('aria-hidden', 'true')\n    this.setAttribute('class', `divider-spacing-${this.spacing}`)\n  }\n}\n","import { unsafeCSS } from 'lit'\nimport { customElement } from 'lit/decorators.js'\n\nimport { CommonSize } from '@/common/types'\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { FeedbackMixin } from '@/internal/mixin/feedbackMixin'\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\n\nimport styles from './_styles/feedback.scss?inline'\n\nexport type FeedbackType = 'negative' | 'positive' | 'warning'\n\nexport type FeedbackProps = {\n  size?: CommonSize\n  type: FeedbackType\n}\n\n/**\n * `dap-ds-feedback`\n * @summary A feedback is a container for feedback messages.\n * @element dap-ds-feedback\n * @title - Feedback\n *\n * @property {string} feedback - The feedback message.\n * @property {'xs' | 'sm' | 'lg'} feedbackSize - The size of the feedback. Default is `sm`.\n * @property {'negative' | 'positive' | 'warning'} feedbackSize - The type of the feedback.\n * @property {boolean} feedbackSubtle - The weight of the feedback.\n * @property {boolean} feedbackNoMargin - Removes the margins around the feedback.\n * @property {string} feedbackId - The id of the feedback.\n *\n * @slot icon - The custom icon of the feedback.\n * @slot - The text of the feedback.\n *\n * @csspart base - The main feedback container.\n * @csspart icon - The icon of the feedback.\n * @csspart text - The text of the feedback.\n *\n * @cssproperty --dds-feedback-spacing - The spacing around the feedback component. Default is `var(--dds-spacing-200)`.\n * @cssproperty --dds-feedback-color - The text color of the feedback. Default is `var(--dds-text-positive-subtle)`.\n * @cssproperty --dds-feedback-font-size - The font size of the feedback. Default is `var(--dds-font-sm)`.\n * @cssproperty --dds-feedback-font-weight - The font weight of the feedback. Default is `var(--dds-font-weight-bold)`.\n * @cssproperty --dds-feedback-icon-fill - The fill color of the feedback icon. Default is `var(--dds-icon-positive-subtle)`.\n * @cssproperty --dds-feedback-icon-spacing - The spacing between the icon and text. Default is `var(--dds-spacing-100)`.\n *\n * @cssproperty --dds-feedback-color-warning - The text color for warning feedback. Default is `var(--dds-text-neutral-base)`.\n * @cssproperty --dds-feedback-color-positive - The text color for positive feedback. Default is `var(--dds-text-positive-subtle)`.\n * @cssproperty --dds-feedback-color-negative - The text color for negative feedback. Default is `var(--dds-text-negative-subtle)`.\n * @cssproperty --dds-feedback-icon-fill-warning - The icon fill color for warning feedback. Default is `var(--dds-icon-informative-subtle)`.\n * @cssproperty --dds-feedback-icon-fill-positive - The icon fill color for positive feedback. Default is `var(--dds-icon-positive-subtle)`.\n * @cssproperty --dds-feedback-icon-fill-negative - The icon fill color for negative feedback. Default is `var(--dds-icon-negative-subtle)`.\n */\n@customElement('dap-ds-feedback')\nexport default class DapDSFeedback extends FeedbackMixin(\n  SizedMixin(DdsElement),\n) {\n  static readonly styles = unsafeCSS(styles)\n\n  render() {\n    return this.renderFeedback()\n  }\n}\n","export class HttpError extends Error {\n  response: any\n  status: number\n\n  constructor(message: string, response: any, status: number) {\n    super(message)\n    this.response = response\n    this.status = status\n  }\n}\n\nexport class FileError extends Error {\n  file: File\n  type: string\n  meta?: Record<string, any>\n\n  constructor(\n    message: string,\n    file: File,\n    type: string,\n    meta?: Record<string, any>,\n  ) {\n    super(message)\n    this.file = file\n    this.type = type\n    this.meta = meta\n  }\n}\n","import clsx from 'clsx'\nimport { css, html, nothing, unsafeCSS } from 'lit'\nimport { customElement, property, query, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\n\nimport { FileError, HttpError } from '@/common/errors'\nimport { CommonFormElementSize } from '@/common/types'\nimport { FileListElement } from '@/components/file-input/file-input-list-item.component'\nimport { GenericFormElement } from '@/internal/mixin/genericFormElement'\nimport { t } from '@/localization/localization'\n\nimport style from './file-input.scss?inline'\nimport DapDSFileInputList from './file-input-list.component'\nimport DapDSFileInputListItem from './file-input-list-item.component'\n\n/**\n * `dap-ds-file-input`\n * @summary A file input is a control that allows users to select files to upload.\n * @element dap-ds-file-input\n * @title - File input\n *\n * @property {string} name - The name of the file input.\n * @property {string} value - The value of the file input.\n * @property {'success' | 'error'} status - The status of the file input.\n * @property {string} label - The label for the file input.\n * @property {string} description - The description for the file input.\n * @property {string} tooltip - The tooltip for the file input.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The tooltip placement of the input.\n * @property {boolean} disabled - Whether the file input is disabled.\n * @property { 'xs' | 'sm' | 'lg' } size - The size of the file input.\n * @property {string} feedback - The feedback for the file input.\n * @property {'negative' | 'positive' | 'warning'} feedbackType - The type of feedback for the file input.\n * @property {boolean} required - Whether the file input is required.\n * @property {boolean} optional - Whether the file input is optional.\n * @property {boolean} subtle - Font weight of the feedback label. Default is `false` which is bold.\n * @property {string} uploadButtonLabel - The label for the upload button.\n * @property {string} browseButtonLabel - The label for the browse button.\n * @property {string} accept - The file types that the file input accepts.\n * @property {boolean} multiple - Whether the file input accepts multiple files.\n * @property {boolean} keepValue - Whether to keep the value when new files are selected.\n * @property {string} uploadUrl - A remote URL to upload files to.\n * @property {string} deleteUrl - A remote URL to delete uploaded files from. Supports placeholders: `{fileName}`, `{id}`, `{key}`, `{location}`.\n * @property {string} uploadHeaders - Custom headers for upload requests (JSON string).\n * @property {string} deleteHeaders - Custom headers for delete requests (JSON string).\n * @property {boolean} autoupload - Whether to automatically upload files after selection.\n * @property {number} maxFiles - The maximum number of files that can be uploaded.\n * @property {number} maxFileSize - The maximum size of files that can be uploaded (in bytes).\n * @property {string} maxFileSizeErrorText - Text for the max file size error.\n * @property {string} maxFileAmountErrorText - Text for the max file amount error.\n * @property {string} fileTypeErrorText - Text for the file type error.\n * @property {boolean} showDropzone - Whether to show a separate dropzone area.\n * @property {string} dropzoneText - Text to display in the dropzone.\n * @property {boolean} showFileList - Whether to show the built-in file list.\n * @property {boolean} confirmRemove - Whether to show confirmation dialog before removing files.\n * @property {string} showUploadButton - Whether to show the upload button. Default is `true`.\n * @property {string} removeButtonLabel - The label for the remove button.\n * @property {string} cancelButtonLabel - The label for the cancel button.\n *\n * @event {{ file: File }} dds-upload-start - Fired when a file upload starts.\n * @event {{ file: File, progress: number }} dds-upload-progress - Fired during file upload progress.\n * @event {{ file: File, item: DapDSFileInputListItem, result: any }} dds-upload-complete - Fired when a file upload completes successfully.\n * @event {{ file: File, item: DapDSFileInputListItem, error: Error } | { errors: Error[] }} dds-upload-error - Fired when a file upload encounters an error. Can contain a single error or an array of validation errors.\n * @event {{ void }} dds-all-uploads-complete - Fired when all file uploads are complete.\n * @event {{ file: FileListElement }} dds-file-removed - Fired when a file is removed from the file input.\n * @event {{ file: FileListElement, error: Error }} dds-file-delete-error - Fired when a file deletion from server encounters an error.\n * @event {{ files: File[] }} dds-file-change - Fired when the file input value changes.\n *\n * @slot dropzone-content - The content to display in the dropzone.\n *\n * @csspart base - The main file input container.\n * @csspart input - The file input control.\n * @csspart label - The file input label.\n * @csspart description - The file input description.\n * @csspart feedback - The file input feedback.\n * @csspart tooltip - The file input tooltip.\n * @csspart upload-progress - The upload progress container.\n * @csspart browse-button - The browse button.\n * @csspart upload-button - The upload button.\n * @csspart dropzone - The dropzone area.\n * @csspart file-list - The file list container.\n * @csspart file-list-item - Individual file list items.\n */\n@customElement('dap-ds-file-input')\nexport default class DapDSFileInput extends GenericFormElement {\n  @query('#input') private readonly input!: HTMLInputElement\n\n  /** Label for the upload button */\n  @property() uploadButtonLabel: string\n\n  /** Label for the browse button */\n  @property() browseButtonLabel: string\n\n  /** Whether to show a separate dropzone area */\n  @property({ type: Boolean }) showDropzone = false\n\n  /** Text to display in the dropzone */\n  @property() dropzoneText: string\n\n  /** Whether to show the built-in file list */\n  @property({ type: Boolean }) showFileList = false\n\n  /** Whether to show confirmation dialog before removing files */\n  @property({ type: Boolean }) confirmRemove = true\n\n  /** Whether to show the upload button */\n  @property({ type: String }) showUploadButton = 'true'\n\n  /** Whether to show the browse button */\n  @property({ type: String }) showBrowseButton = 'true'\n\n  /** The file types that the file input accepts */\n  @property() accept: string\n\n  /** Whether the file input accepts multiple files. */\n  @property({ type: Boolean }) multiple = false\n\n  /** Whether to keep the value of the file input when new files are selected. */\n  @property({ type: Boolean }) keepValue = false\n\n  /** A remote URL to upload files to */\n  @property() uploadUrl: string\n\n  /** Whether to automatically upload files after selection */\n  @property({ type: Boolean }) autoupload: boolean\n\n  /** The property to use when uploading files */\n  @property() uploadProperty = 'file'\n\n  /** The HTTP method to use when uploading files */\n  @property() uploadMethod = 'POST'\n\n  /** A remote URL to delete uploaded files from */\n  @property() deleteUrl: string\n\n  /** The HTTP method to use when deleting files */\n  @property() deleteMethod = 'DELETE'\n\n  /** Whether to send credentials with the file upload request */\n  @property({ type: Boolean }) withCredentials = false\n\n  /** Custom headers to send with upload requests (JSON string) */\n  @property() uploadHeaders: string\n\n  /** Custom headers to send with delete requests (JSON string) */\n  @property() deleteHeaders: string\n\n  /** The file list component to bind to */\n  @property({ attribute: false }) fileList: DapDSFileInputList | null = null\n\n  /** The maximum number of files that can be uploaded */\n  @property({ type: Number }) maxFiles?: number\n\n  /** The maximum size of files that can be uploaded (in bytes) */\n  @property({ type: Number }) maxFileSize?: number\n\n  /** Text for the max file size error */\n  @property({ type: String }) maxFileSizeErrorText?: string\n\n  /** Text for the max file amount error */\n  @property({ type: String }) maxFileAmountErrorText?: string\n\n  /** Text for the file type error */\n  @property({ type: String }) fileTypeErrorText?: string\n\n  /** The label for the remove button */\n  @property() removeButtonLabel: string\n\n  /** The label for the cancel button */\n  @property() cancelButtonLabel: string\n\n  /** Whether the remove button is dangerous */\n  @property({ type: String }) removeButtonDanger = 'true'\n\n  /** Whether to show thumbnail preview for supported file types in the built-in file list */\n  @property({ type: String }) showThumbnail = 'true'\n\n  /** Size of the thumbnail preview in the built-in file list */\n  @property({ type: String })\n  thumbnailSize: 'xxs' | 'xs' | 'sm' | 'md' | 'lg' = 'sm'\n\n  @property({ type: Array, attribute: false })\n  get files() {\n    return this._files\n  }\n\n  @state() private _files: File[] = []\n  @state() private _uploadProgress: Record<string, number> = {}\n  @state() private readonly _uploadingFiles: Set<string> = new Set()\n  @state() private readonly _activeUploads: Map<string, XMLHttpRequest> =\n    new Map()\n  @state() private readonly _uploadedFiles: Map<string, any> = new Map() // Track uploaded files with their server response\n  @state() private _isDragOver = false\n  @state() private _showRemoveDialog = false\n  @state() private _fileToRemove: File | null = null\n  private _removeResolve: ((value: unknown) => void) | null = null\n  private _removeReject: ((reason?: any) => void) | null = null\n\n  static readonly styles = css`\n    ${unsafeCSS(style)}\n  `\n\n  checkFileEquality(\n    file1: File | FileListElement,\n    file2: File | FileListElement,\n  ) {\n    return (\n      file1.name === file2.name &&\n      file1.size === file2.size &&\n      file1.type === file2.type &&\n      file1.lastModified === file2.lastModified\n    )\n  }\n\n  /**\n   * Validates if a file type is accepted based on the accept attribute\n   */\n  private validateFileType(file: File): boolean {\n    if (!this.accept) return true\n\n    const acceptedTypes = this.accept.split(',').map(type => type.trim())\n\n    return acceptedTypes.some(acceptedType => {\n      // Handle MIME types (e.g., \"image/jpeg\", \"text/*\")\n      if (acceptedType.includes('/')) {\n        if (acceptedType.endsWith('/*')) {\n          const baseType = acceptedType.slice(0, -2)\n          return file.type.startsWith(baseType)\n        }\n        return file.type === acceptedType\n      }\n\n      // Handle file extensions (e.g., \".jpg\", \".pdf\")\n      if (acceptedType.startsWith('.')) {\n        return file.name.toLowerCase().endsWith(acceptedType.toLowerCase())\n      }\n\n      return false\n    })\n  }\n\n  public get focusElement() {\n    return this.input\n  }\n  /**\n   * Validates a file list against all constraints (count, size, type)\n   */\n  private validateFiles(fileList: FileList): {\n    isValid: boolean\n    errors?: Array<{\n      file?: File\n      message: string\n      type: string\n      meta?: Record<string, any>\n    }>\n  } {\n    const errors: Array<{\n      file?: File\n      message: string\n      type: string\n      meta?: Record<string, any>\n    }> = []\n\n    // Check file count\n    if (this.maxFiles && fileList.length + this._files.length > this.maxFiles) {\n      for (const file of fileList) {\n        errors.push({\n          file: file,\n          meta: {\n            maxFiles: this.maxFiles,\n            totalFiles: fileList.length + this._files.length,\n          },\n          message:\n            this.maxFileAmountErrorText ||\n            t('fileInput.error.fileAmount', {\n              count: this.maxFiles,\n            }),\n          type: 'maxFiles',\n        })\n      }\n    }\n\n    // Check file types and sizes\n    let totalSize = 0\n    for (const file of fileList) {\n      // Validate file type\n      if (!this.validateFileType(file)) {\n        errors.push({\n          file,\n          meta: {\n            type: this.accept,\n            fileType: file.type,\n          },\n          message:\n            this.fileTypeErrorText ||\n            t('fileInput.error.fileType', {\n              type: this.accept,\n            }),\n          type: 'fileType',\n        })\n      }\n\n      // Validate file size\n      totalSize += file.size\n      if (this.maxFileSize && totalSize > this.maxFileSize) {\n        errors.push({\n          file,\n          meta: {\n            maxFileSize: this.maxFileSize,\n            totalSize: totalSize,\n            fileSize: file.size,\n          },\n          message:\n            this.maxFileSizeErrorText ||\n            t('fileInput.error.fileSize', {\n              size: Math.round(this.maxFileSize / 1024 / 1024),\n            }),\n          type: 'maxFileSize',\n        })\n      }\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors: errors.length > 0 ? errors : undefined,\n    }\n  }\n\n  public removeFile(fileData: FileListElement | File): Promise<void> | void {\n    if (this.confirmRemove) {\n      return new Promise((resolve, reject) => {\n        this._removeResolve = resolve\n        this._removeReject = reject\n        this._showRemoveDialog = true\n        this._fileToRemove = fileData as File\n      })\n        .then(() => {\n          return this.performFileRemoval(fileData)\n        })\n        .catch(() => {\n          // User cancelled - no action needed\n        })\n    } else {\n      return this.performFileRemoval(fileData)\n    }\n  }\n\n  private async performFileRemoval(fileData: FileListElement | File) {\n    const fileName = fileData.name\n\n    // Check if this file was uploaded and needs to be deleted from server\n    if (this._uploadedFiles.has(fileName)) {\n      try {\n        const uploadResult = this._uploadedFiles.get(fileName)\n        await this.deleteUploadedFile(fileName, uploadResult)\n        this._uploadedFiles.delete(fileName)\n      } catch (error) {\n        // Emit delete error event but still remove from local list\n        this.emit('dds-file-delete-error', { file: fileData, error })\n      }\n    }\n\n    this._files = this._files.filter(\n      (file: File) => !this.checkFileEquality(file, fileData),\n    )\n\n    if (this._files.length === 0 && this.required) {\n      this.value = undefined\n      this.input.value = ''\n    }\n\n    this.emit('dds-file-removed', { file: fileData })\n    this.emit('dds-file-change', { files: this.files })\n    this.setValidity()\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n\n    this.addEventListener('dds-file-remove', event => {\n      const customEvent = event as CustomEvent\n      this.removeFile(customEvent.detail.file)\n    })\n  }\n\n  async onConfirmDelete() {\n    if (this._removeResolve) {\n      this._removeResolve(true)\n    }\n    this._showRemoveDialog = false\n    this._fileToRemove = null\n    this._removeResolve = null\n    this._removeReject = null\n  }\n\n  onCancelDelete() {\n    if (this._removeReject) {\n      this._removeReject(new Error('User cancelled'))\n    }\n    this._showRemoveDialog = false\n    this._fileToRemove = null\n    this._removeResolve = null\n    this._removeReject = null\n  }\n\n  onCancel() {\n    this.emit('dds-cancel')\n    this.setValidity()\n  }\n\n  onClick() {\n    if (this.disabled) return\n    this.input.click()\n  }\n\n  onDropzoneKeydown(event: KeyboardEvent) {\n    if (this.disabled) return\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      this.input.click()\n    }\n  }\n\n  setFileLoadingState(file: File, loading: boolean) {\n    if (!this.fileList) {\n      return\n    }\n\n    const fileComponent = this.fileList.getFileByName(\n      file.name,\n    )! as DapDSFileInputListItem\n\n    fileComponent.loading = loading\n\n    return fileComponent\n  }\n\n  /**\n   * Aborts upload for a specific file\n   */\n  abortUpload(fileName: string) {\n    const xhr = this._activeUploads.get(fileName)\n    if (xhr) {\n      xhr.abort()\n      this._uploadingFiles.delete(fileName)\n      this._activeUploads.delete(fileName)\n      const newProgress = { ...this._uploadProgress }\n      delete newProgress[fileName]\n      this._uploadProgress = newProgress\n    }\n  }\n\n  /**\n   * Aborts all active uploads\n   */\n  abortAllUploads() {\n    this._activeUploads.forEach(xhr => {\n      xhr.abort()\n    })\n    this._uploadingFiles.clear()\n    this._activeUploads.clear()\n    this._uploadProgress = {}\n  }\n\n  /**\n   * Manually start upload of all selected files\n   */\n  startUpload() {\n    if (this._files.length > 0 && this.uploadUrl) {\n      this.uploadFiles(this._files)\n    }\n  }\n\n  /**\n   * Delete an uploaded file from the server\n   */\n  private async deleteUploadedFile(\n    fileName: string,\n    uploadResult: any,\n  ): Promise<void> {\n    if (!this.deleteUrl) {\n      console.error('Delete URL is not configured')\n      return\n    }\n\n    const xhr = new XMLHttpRequest()\n    xhr.withCredentials = this.withCredentials\n\n    return new Promise((resolve, reject) => {\n      xhr.onload = () => {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve()\n        } else {\n          reject(\n            new HttpError(\n              `HTTP error! status: ${xhr.status}`,\n              xhr.response,\n              xhr.status,\n            ),\n          )\n        }\n      }\n      xhr.onerror = () => {\n        reject(new Error('Network error during file deletion'))\n      }\n\n      // Construct delete URL with multiple placeholder support\n      let deleteEndpoint = this.deleteUrl\n\n      // Replace common placeholders\n      deleteEndpoint = deleteEndpoint.replace(\n        '{fileName}',\n        encodeURIComponent(fileName),\n      )\n      deleteEndpoint = deleteEndpoint.replace(\n        '{filename}',\n        encodeURIComponent(fileName),\n      )\n\n      // If uploadResult contains an ID or key, use that for deletion\n      if (uploadResult && typeof uploadResult === 'object') {\n        if (uploadResult.id) {\n          deleteEndpoint = deleteEndpoint.replace(\n            '{id}',\n            encodeURIComponent(uploadResult.id),\n          )\n        }\n        if (uploadResult.key) {\n          deleteEndpoint = deleteEndpoint.replace(\n            '{key}',\n            encodeURIComponent(uploadResult.key),\n          )\n        }\n        if (uploadResult.location) {\n          deleteEndpoint = deleteEndpoint.replace(\n            '{location}',\n            encodeURIComponent(uploadResult.location),\n          )\n        }\n      }\n\n      xhr.open(this.deleteMethod, deleteEndpoint)\n\n      // Add custom headers for delete\n      if (this.deleteHeaders) {\n        try {\n          const headers = JSON.parse(this.deleteHeaders)\n          Object.entries(headers).forEach(([key, value]) => {\n            xhr.setRequestHeader(key, value as string)\n          })\n        } catch (error) {\n          console.warn('Invalid deleteHeaders JSON:', this.deleteHeaders)\n        }\n      }\n\n      // For S3 and most APIs, send minimal data for DELETE requests\n      if (this.deleteMethod === 'DELETE') {\n        // Some S3-compatible APIs might need the upload result for context\n        if (uploadResult && (uploadResult.ETag || uploadResult.VersionId)) {\n          xhr.setRequestHeader('Content-Type', 'application/json')\n          xhr.send(\n            JSON.stringify({\n              ETag: uploadResult.ETag,\n              VersionId: uploadResult.VersionId,\n            }),\n          )\n        } else {\n          xhr.send()\n        }\n      } else {\n        // For other HTTP methods, send the full upload result\n        xhr.setRequestHeader('Content-Type', 'application/json')\n        xhr.send(JSON.stringify(uploadResult))\n      }\n    })\n  }\n\n  private async uploadFiles(files: File[]) {\n    if (!this.uploadUrl) {\n      console.error('Upload URL is not configured')\n      return\n    }\n\n    const totalFiles = files.length\n    let completedUploads = 0\n\n    for (const file of files) {\n      const formData = new FormData()\n      formData.append(this.uploadProperty, file)\n\n      try {\n        let fileComponent: DapDSFileInputListItem | undefined = undefined\n\n        // Track upload start\n        this._uploadingFiles.add(file.name)\n        this._uploadProgress = { ...this._uploadProgress, [file.name]: 0 }\n\n        this.emit('dds-upload-start', { file })\n\n        const xhr = new XMLHttpRequest()\n        xhr.withCredentials = this.withCredentials\n\n        // Store active upload for potential abortion\n        this._activeUploads.set(file.name, xhr)\n\n        xhr.open(this.uploadMethod, this.uploadUrl)\n\n        // Add custom headers for upload\n        if (this.uploadHeaders) {\n          try {\n            const headers = JSON.parse(this.uploadHeaders)\n            Object.entries(headers).forEach(([key, value]) => {\n              xhr.setRequestHeader(key, value as string)\n            })\n          } catch (error) {\n            console.warn('Invalid uploadHeaders JSON:', this.uploadHeaders)\n          }\n        }\n\n        xhr.upload.onprogress = event => {\n          if (event.lengthComputable) {\n            const progress = (event.loaded / event.total) * 100\n            this._uploadProgress = {\n              ...this._uploadProgress,\n              [file.name]: progress,\n            }\n\n            if (this.fileList) {\n              fileComponent = this.setFileLoadingState(file, true)\n            }\n\n            this.emit('dds-upload-progress', {\n              file,\n              item: fileComponent,\n              progress,\n            })\n          }\n        }\n\n        const response = await new Promise((resolve, reject) => {\n          xhr.onload = () => {\n            if (xhr.status >= 200 && xhr.status < 300) {\n              resolve(xhr.response)\n            } else {\n              const error = new HttpError(\n                `HTTP error! status: ${xhr.status}`,\n                xhr.response,\n                xhr.status,\n              )\n              reject(error)\n            }\n          }\n          xhr.onerror = () => {\n            if (this.fileList) {\n              fileComponent = this.setFileLoadingState(file, false)\n            }\n\n            reject(new Error('Network error'))\n          }\n          xhr.send(formData)\n        })\n\n        const result = JSON.parse(response as string)\n\n        if (this.fileList) {\n          fileComponent = this.setFileLoadingState(file, false)\n        }\n\n        // Remove from uploading tracking\n        this._uploadingFiles.delete(file.name)\n        this._activeUploads.delete(file.name)\n        const newProgress = { ...this._uploadProgress }\n        delete newProgress[file.name]\n        this._uploadProgress = newProgress\n\n        // Track uploaded file with its server response\n        this._uploadedFiles.set(file.name, result)\n\n        this.emit('dds-upload-complete', { file, item: fileComponent, result })\n\n        completedUploads++\n        if (completedUploads === totalFiles) {\n          this.emit('dds-all-uploads-complete')\n        }\n      } catch (error) {\n        // Remove from uploading tracking on error\n        this._uploadingFiles.delete(file.name)\n        this._activeUploads.delete(file.name)\n        const newProgress = { ...this._uploadProgress }\n        delete newProgress[file.name]\n        this._uploadProgress = newProgress\n\n        if (this.fileList) {\n          const fileComponent = this.setFileLoadingState(file, false)\n          this.emit('dds-upload-error', { file, item: fileComponent, error })\n        } else {\n          this.emit('dds-upload-error', { file, error })\n        }\n      }\n    }\n  }\n\n  private handleFileList(fileList: FileList | null) {\n    const files = [...this._files]\n\n    if (this.keepValue && this._files?.length) {\n      Object.values(fileList!).forEach((file: File) => {\n        const isFileInList = !!this._files.find((f: File) =>\n          this.checkFileEquality(f, file),\n        )\n\n        if (!isFileInList) {\n          files.push(file)\n        }\n      })\n\n      this._files = files\n    } else {\n      this._files = fileList ? Object.values(fileList) : []\n    }\n\n    const dataTransfer = new DataTransfer()\n\n    this._files.forEach(file => {\n      dataTransfer.items.add(file)\n    })\n    this.input.files = dataTransfer.files\n\n    if (this.autoupload) {\n      this.uploadFiles(this._files)\n    }\n  }\n\n  override onChange(event: InputEvent) {\n    const target = event?.target as HTMLInputElement\n    const targetFiles = target.files\n\n    if (targetFiles) {\n      const validation = this.validateFiles(targetFiles)\n      if (!validation.isValid && validation.errors) {\n        // Collect all validation errors into an array\n        const errors = validation.errors.map(error => {\n          if (error.file) {\n            return new FileError(\n              error.message,\n              error.file,\n              error.type,\n              error.meta,\n            )\n          } else {\n            return new Error(error.message)\n          }\n        })\n\n        // Emit all errors as a single array\n        this.emit('dds-upload-error', { errors })\n        return\n      }\n    }\n\n    this.value = this.input.value\n\n    this.handleFileList(targetFiles)\n\n    this.emit('dds-file-change', { files: this._files })\n    this.setValidity()\n  }\n\n  onDragenter(event: DragEvent) {\n    if (this.disabled) return\n    event.preventDefault()\n    this._isDragOver = true\n  }\n\n  onDragover(event: DragEvent) {\n    if (this.disabled) return\n    event.preventDefault()\n  }\n\n  onDragleave(event: DragEvent) {\n    if (this.disabled) return\n    event.preventDefault()\n\n    if (!this.contains(event.relatedTarget as Node)) {\n      this._isDragOver = false\n    }\n  }\n\n  onDrop(event: DragEvent) {\n    if (this.disabled) return\n    event.preventDefault()\n    this._isDragOver = false\n\n    const droppedFiles = event.dataTransfer?.files\n    if (droppedFiles) {\n      const validation = this.validateFiles(droppedFiles)\n      if (!validation.isValid && validation.errors) {\n        // Collect all validation errors into an array\n        const errors = validation.errors.map(error => {\n          if (error.file) {\n            return new FileError(\n              error.message,\n              error.file,\n              error.type,\n              error.meta,\n            )\n          } else {\n            return new Error(error.message)\n          }\n        })\n\n        // Emit all errors as a single array\n        this.emit('dds-upload-error', { errors })\n        return\n      }\n    }\n\n    this.handleFileList(droppedFiles ?? null)\n\n    this.emit('dds-file-change', { files: this._files })\n    this.setValidity()\n  }\n\n  render() {\n    return html`\n      <div class=\"label-container\">\n        ${this.label &&\n        html`<dap-ds-form-label\n          part=\"label\"\n          id=\"label\"\n          for=\"input\"\n          .size=${this.size}\n          .required=${this.required}\n          .optional=${this.optional}\n          .disabled=${this.disabled}\n          class=${clsx('label')}\n          label=${ifDefined(this.label)}>\n        </dap-ds-form-label>`}\n        ${this.tooltip &&\n        html` <dap-ds-tooltip\n          part=\"tooltip\"\n          content=${this.tooltip}\n          mode=\"toggle\"\n          floatingStrategy=\"fixed\"\n          placement=${this.tooltipPlacement}>\n          <dap-ds-icon-button\n            clean\n            class=\"info-button\"\n            slot=\"trigger\"\n            aria-label=${this.tooltipAriaLabel}\n            size=${this.size as 'xs' | 'sm' | 'md' | 'lg'}\n            iconSize=${this.size === 'xs' ? '16' : '22'}>\n            <dap-ds-icon\n              name=\"information-line\"\n              class=\"info-button\"></dap-ds-icon>\n          </dap-ds-icon-button>\n        </dap-ds-tooltip>`}\n      </div>\n      ${this.description &&\n      html`\n        <dap-ds-typography\n          part=\"description\"\n          variant=\"description\"\n          size=${ifDefined(this.size as CommonFormElementSize)}\n          id=\"description\">\n          ${this.description}\n        </dap-ds-typography>\n      `}\n      ${this.showDropzone\n        ? html`\n            <div\n              class=${clsx(\n                'dropzone',\n                { 'dropzone--dragover': this._isDragOver },\n                { 'dropzone--disabled': this.disabled },\n              )}\n              part=\"dropzone\"\n              @dragenter=${this.onDragenter}\n              @dragover=${this.onDragover}\n              @dragleave=${this.onDragleave}\n              @drop=${this.onDrop}\n              @keydown=${this.onDropzoneKeydown}\n              @click=${this.onClick}\n              role=\"button\"\n              aria-label=\"${t('fileInput.dropzone.label')}\"\n              tabindex=\"0\">\n              <slot name=\"dropzone-content\">\n                <div class=\"dropzone__content\">\n                  <dap-ds-icon name=\"upload-2-line\" size=\"lg\"></dap-ds-icon>\n                  <dap-ds-typography variant=\"caption\">\n                    ${this.dropzoneText || t('fileInput.dropzone.text')}\n                  </dap-ds-typography>\n                  ${this.accept &&\n                  html`\n                    <dap-ds-typography\n                      variant=\"caption\"\n                      class=\"dropzone__accept\">\n                      ${t('fileInput.dropzone.acceptedTypes')}: ${this.accept}\n                    </dap-ds-typography>\n                  `}\n                </div>\n              </slot>\n            </div>\n          `\n        : nothing}\n      <span\n        part=\"base\"\n        class=${clsx(\n          'input',\n          { 'input--success': this.status === 'success' },\n          { 'input--error': this.status === 'error' },\n          { 'input--disabled': this.disabled },\n        )}\n        role=\"region\"\n        aria-label=\"File upload area\">\n        <div class=\"input__holder\" aria-describedby=\"drop-instructions\">\n          <input\n            id=\"input\"\n            class=\"input__control sr-only\"\n            part=\"input\"\n            name=${this.name}\n            type=\"file\"\n            accept=${ifDefined(this.accept)}\n            ?disabled=${this.disabled}\n            ?multiple=${this.multiple}\n            ?required=${this.required}\n            aria-labelledby=\"label\"\n            aria-describedby=\"description ${this.feedback\n              ? 'feedback'\n              : nothing}\"\n            @change=${this.onChange}\n            @cancel=${this.onCancel}\n            @invalid=${this.handleInvalid}\n            @blur=${this.onBlur}\n            @focus=${this.onFocus} />\n          ${this.showBrowseButton === 'true' && !this.autoupload\n            ? html` <dap-ds-button\n                class=\"input__button\"\n                part=\"browse-button\"\n                tabindex=\"-1\"\n                variant=\"outline\"\n                ?disabled=${this.disabled}\n                size=${ifDefined(this.size) as CommonFormElementSize}\n                @click=${this.onClick}\n                @dragenter=${this.showDropzone ? nothing : this.onDragenter}\n                @dragover=${this.showDropzone ? nothing : this.onDragover}\n                @drop=${this.showDropzone ? nothing : this.onDrop}\n                aria-label=\"${this.browseButtonLabel ||\n                t('fileInput.browse')}${this.showDropzone\n                  ? ''\n                  : ` - ${t('fileInput.dragDropArea')}`}\"\n                role=\"button\"\n                >${this.browseButtonLabel ||\n                t('fileInput.browse')}</dap-ds-button\n              >`\n            : nothing}\n          ${this.showUploadButton === 'true' && !this.autoupload\n            ? html`\n                <dap-ds-button\n                  class=\"upload-button\"\n                  part=\"upload-button\"\n                  variant=\"primary\"\n                  size=${ifDefined(this.size) as CommonFormElementSize}\n                  ?disabled=${this._files.length === 0 ||\n                  !this.uploadUrl ||\n                  this._uploadingFiles.size > 0}\n                  @click=${this.startUpload}\n                  >${this.uploadButtonLabel ||\n                  t('fileInput.upload')}</dap-ds-button\n                >\n              `\n            : nothing}\n          <div id=\"drop-instructions\" class=\"sr-only\">\n            ${t('fileInput.dragDropInstructions')}\n          </div>\n        </div>\n      </span>\n      ${!this.fileList && this._uploadingFiles.size > 0\n        ? html`\n            <div class=\"upload-progress\" part=\"upload-progress\">\n              ${Array.from(this._uploadingFiles).map(fileName => {\n                const progress = this._uploadProgress[fileName] || 0\n                return html`\n                  <div class=\"upload-progress__item\">\n                    <dap-ds-typography variant=\"caption\">\n                      ${fileName} - ${Math.round(progress)}%\n                    </dap-ds-typography>\n                    <div class=\"upload-progress__bar\">\n                      <div\n                        class=\"upload-progress__fill\"\n                        style=\"width: ${progress}%\"></div>\n                    </div>\n                  </div>\n                `\n              })}\n            </div>\n          `\n        : nothing}\n      <dap-ds-modal\n        .open=${this._showRemoveDialog}\n        title=\"${t('fileInput.removeDialog.title')}\"\n        okButtonLabel=${this.removeButtonLabel ||\n        t('fileInput.removeDialog.confirm')}\n        cancelButtonLabel=${this.cancelButtonLabel ||\n        t('fileInput.removeDialog.cancel')}\n        .okButtonDanger=${this.removeButtonDanger === 'true'}\n        @dds-cancel=${this.onCancelDelete}\n        @dds-close=${this.onCancelDelete}\n        @dds-ok=${this.onConfirmDelete}>\n        <div>\n          <dap-ds-typography variant=\"body\">\n            ${t('fileInput.removeDialog.message', {\n              fileName: this._fileToRemove?.name ?? '',\n            })}\n          </dap-ds-typography>\n        </div>\n      </dap-ds-modal>\n\n      ${this.feedback\n        ? html`\n            <dap-ds-feedback\n              part=\"feedback\"\n              feedbackType=${ifDefined(this.feedbackType)}\n              feedbackSize=${ifDefined(this.size) as 'lg' | 'sm' | 'xs'}\n              id=\"feedback\"\n              .feedbackSubtle=${this.subtle}>\n              ${this.feedback}\n            </dap-ds-feedback>\n          `\n        : nothing}\n    `\n  }\n}\n","import { html, nothing, PropertyValueMap, TemplateResult, unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\n\nimport { FileItemTemplate } from '@/common/types'\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\nimport { t } from '@/localization/localization'\n\nimport DapDSFileInput from './file-input.component'\nimport styles from './file-input-list.scss?inline'\nimport DapDSFileInputListItem from './file-input-list-item.component'\n\n/**\n * `dap-ds-file-input-list`\n * @summary A file input list is a container for file input items.\n * @element dap-ds-file-input-list\n * @title - File input list\n * @group file-input\n *\n * @slot delete-button - The delete button.\n *\n * @csspart base - The main file input list container.\n *\n * @cssproperty --dds-file-list-display - Controls the display property (default: flex)\n * @cssproperty --dds-file-list-flex-direction - Controls the flex-direction property (default: column)\n * @cssproperty --dds-file-list-padding - Controls the padding property (default: 0)\n * @cssproperty --dds-file-list-list-style - Controls the list-style-type property (default: none)\n * @cssproperty --dds-file-list-gap - Controls the row-gap property (default: var(--dds-spacing-200))\n */\n@customElement('dap-ds-file-input-list')\nexport default class DapDSFileInputList extends SizedMixin(DdsElement) {\n  /** The aria label for the file input list. */\n  /** The id of the file input element to bind to. */\n  @property({ type: String }) for: string\n\n  /** Disables the file input list. */\n  @property({ type: Boolean, reflect: true }) disabled = false\n\n  /** The label for the file input list. */\n  @property() label?: string\n\n  /** Whether to show the delete button in the file input list item. */\n  @property({ type: String }) showDeleteButton = 'true'\n\n  /** Whether to show the file link in the file input list item. */\n  @property({ type: String }) showFileLink = 'true'\n\n  /** File item template function\n   * @type {(fileItemTemplate: FileItemTemplate) => TemplateResult}\n   */\n  @property({ attribute: false }) fileItemTemplate?: (\n    fileItemTemplate: FileItemTemplate,\n  ) => TemplateResult\n\n  /** The label of the file link. */\n  @property({ type: String }) fileLinkLabel: string\n\n  /** Whether to show the file size in the file input list item */\n  @property({ type: String }) showFileSize = 'true'\n\n  /** Whether to show thumbnail preview for supported file types\n   * @ignore\n   */\n  @property({ type: String }) showThumbnail = 'false'\n\n  /** Size of the thumbnail preview\n   * @ignore\n   */\n  @property({ type: String })\n  thumbnailSize: 'xxs' | 'xs' | 'sm' | 'md' | 'lg' = 'sm'\n\n  @state()\n  private _files: DapDSFileInputListItem[] = []\n\n  static readonly styles = unsafeCSS(styles)\n\n  private fileInputElement: DapDSFileInput | null = null\n\n  get files() {\n    return this.querySelectorAll('dap-ds-file-input-list-item')\n  }\n\n  getFileByName(name: string) {\n    return this.shadowRoot!.querySelector(\n      `dap-ds-file-input-list-item[filename=\"${name}\"]`,\n    )\n  }\n\n  private _handleFileChange(event: Event) {\n    const fileComponents = (event as CustomEvent).detail.files.map(\n      (file: File) => {\n        const linkSlot = this.querySelector('[slot=\"link\"]')\n        const hasLinkSlot = linkSlot && linkSlot.innerHTML.trim() !== ''\n\n        return html`<dap-ds-file-input-list-item\n          size=${this.size}\n          .fileData=${file}\n          fileName=${file.name}\n          showDeleteButton=${this.showDeleteButton}\n          showFileLink=${this.showFileLink}\n          fileLinkLabel=${this.fileLinkLabel}\n          showSize=${this.showFileSize}\n          showThumbnail=${this.showThumbnail}\n          thumbnailSize=${this.thumbnailSize}\n          .fileItemTemplate=${this.fileItemTemplate}\n          ?disabled=${this.disabled}>\n          <slot name=\"delete-button\" slot=\"delete-button\">\n            <dap-ds-icon\n              class=\"content__remove-button-icon\"\n              name=\"delete-bin-line\"></dap-ds-icon>\n          </slot>\n          ${hasLinkSlot ? html`<slot name=\"link\" slot=\"link\"></slot>` : nothing}\n        </dap-ds-file-input-list-item>`\n      },\n    )\n\n    this._files = fileComponents\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n    if (this.for) {\n      this.fileInputElement = document.querySelector(`#${this.for}`)\n      if (this.fileInputElement) {\n        this.fileInputElement.fileList = this\n        this.fileInputElement?.addEventListener(\n          'dds-file-change',\n          this._handleFileChange.bind(this),\n        )\n      }\n    }\n  }\n\n  removeFile(event: CustomEvent) {\n    this.fileInputElement?.dispatchEvent(\n      new CustomEvent('dds-file-remove', {\n        bubbles: false,\n        composed: true,\n        detail: event.detail,\n      }),\n    )\n  }\n\n  render() {\n    return html`${this._files.length > 0\n        ? html`<dap-ds-form-label\n            part=\"label\"\n            id=\"label\"\n            .size=${this.size}\n            label=${ifDefined(this.label)}>\n          </dap-ds-form-label>`\n        : nothing}\n      <ul\n        class=\"file-input-list\"\n        part=\"base\"\n        role=\"list\"\n        aria-label=${this.ariaLabel ?? t('fileInput.fileList')}\n        @dds-file-remove=${this.removeFile}>\n        ${this._files}\n      </ul>`\n  }\n}\n","import clsx from 'clsx'\nimport { css, html, nothing, TemplateResult, unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\n\nimport { FileItemTemplate, FileType, LinkTarget } from '@/common/types'\nimport { JSONAttributeParser } from '@/common/utils'\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\nimport { t } from '@/localization/localization'\n\nimport { FeedbackType } from '../feedback/feedback.component'\nimport styles from './file-input-list-item.scss?inline'\n\nexport type FileListElement = {\n  name: string\n  type: string\n  size: number\n  lastModified: number\n}\n\n/**\n * `dap-ds-file-input-list-item`\n * @summary A file input list item is a container for file input list items.\n * @element dap-ds-file-input-list-item\n * @title - File input list item\n * @group file-input\n *\n * @event {{ file: FileListElement }} dds-file-remove - Dispatched when a file is removed from the list.\n *\n * @slot delete-button - The delete button.\n *\n * @csspart base - The main file input list item container.\n * @csspart feedback - The feedback container.\n * @csspart link - The link text of the item component.\n * @csspart filename - The filename text of the item component.\n * @csspart filesize - The filesize text of the item component.\n * @csspart spinner - The spinner of the item component.\n * @csspart remove-button - The remove button of the item component.\n * @csspart thumbnail - The thumbnail of the item component.\n *\n * @cssproperty --dds-file-list-item-padding - The padding of the file list item.\n * @cssproperty --dds-file-list-item-border-width - The border width of the file list item.\n * @cssproperty --dds-file-list-item-border-color - The border color of the file list item.\n * @cssproperty --dds-file-list-item-border-radius - The border radius of the file list item.\n * @cssproperty --dds-file-list-item-bg-color - The background color of the file list item.\n * @cssproperty --dds-file-list-item-font-weight - The font weight of the file list item.\n * @cssproperty --dds-file-list-item-disabled-bg-color - The background color of the disabled file list item.\n * @cssproperty --dds-file-list-item-disabled-color - The text color of the disabled file list item.\n * @cssproperty --dds-file-list-item-content-margin - The margin of the content within the file list item.\n * @cssproperty --dds-file-list-item-content-gap - The gap between content elements in the file list item.\n * @cssproperty --dds-file-list-item-filename-color - The color of the filename text.\n * @cssproperty --dds-file-list-item-filesize-color - The color of the filesize text.\n * @cssproperty --dds-file-list-item-feedback-padding - The padding of the feedback section.\n * @cssproperty --dds-file-list-item-feedback-border-color - The border color of the feedback section.\n * @cssproperty --dds-file-list-item-feedback-font-size - The font size of the feedback text.\n */\n@customElement('dap-ds-file-input-list-item')\nexport default class DapDSFileInputListItem extends SizedMixin(DdsElement) {\n  /** Disables the file input list item. */\n  @property({ type: Boolean, reflect: true }) disabled = false\n\n  /** The name of the file input. */\n  @property({ type: String }) inputName: string\n\n  /** The feedback message. */\n  @property({ type: String }) feedback: string\n\n  /** Feedback type.\n   * @type {'negative' | 'positive' | 'warning' | 'info'}\n   */\n  @property({ type: String }) feedbackType: FeedbackType\n\n  /** Loading state of the file input list item. */\n  @property({ type: Boolean, reflect: true }) loading? = false\n\n  /** Show delete button. */\n  @property({ type: String }) showDeleteButton: string = 'true'\n\n  /** Show file size. */\n  @property({ type: String }) showSize? = 'true'\n\n  /** Show file link. */\n  @property({ type: String }) showFileLink? = 'true'\n\n  /** File item template function\n   * @type {(fileItemTemplate: FileItemTemplate) => TemplateResult}\n   */\n  @property({ attribute: false }) fileItemTemplate?: (\n    fileItemTemplate: FileItemTemplate,\n  ) => TemplateResult\n\n  /** The label of the file link. */\n  @property({ type: String }) fileLinkLabel: string\n\n  /** The file data. */\n  @property({ type: Object, converter: JSONAttributeParser })\n  fileData: FileListElement | File\n\n  /** Subtle style. */\n  @property({ type: Boolean }) subtle = false\n\n  /** The progress of the file upload. */\n  @property({ type: String }) progress = '0'\n\n  /** The url of the item link. If present, the item title will rendered as a link. */\n  @property({ type: String }) href: string\n\n  /** The rel of the item link. Only used if href is present. */\n  @property({ type: String }) rel: string\n\n  /** The target of the item link. Only used if href is present. */\n  @property({ type: String }) target: LinkTarget\n\n  /** Whether the file should be downloaded when clicked. */\n  @property({ type: String }) download: string = 'true'\n\n  /** Whether to show thumbnail preview for supported file types. */\n  @property({ type: String }) showThumbnail: string = 'false'\n\n  /** Size of the thumbnail preview. */\n  @property({ type: String }) thumbnailSize: 'xxs' | 'xs' | 'sm' | 'md' | 'lg' =\n    'sm'\n\n  @state() private _fileObjectUrl: string | null = null\n  @state() private _thumbnailUrl: string | null = null\n  @state()\n  private _fileType: FileType = 'unknown'\n\n  static readonly styles = css`\n    ${unsafeCSS(styles)}\n  `\n\n  delete(file?: FileListElement | File) {\n    this.emit('dds-file-remove', { file: file || this.fileData })\n  }\n\n  private detectFileType(file: File | FileListElement): FileType {\n    const type = file.type.toLowerCase()\n\n    if (type.startsWith('image/')) return 'image'\n    if (type.startsWith('video/')) return 'video'\n    if (type.startsWith('audio/')) return 'audio'\n    if (\n      type.startsWith('text/') ||\n      type.includes('document') ||\n      type.includes('word') ||\n      type.includes('excel') ||\n      type.includes('powerpoint') ||\n      type.includes('presentation') ||\n      type.includes('spreadsheet')\n    )\n      return 'document'\n\n    if (type.includes('pdf')) return 'pdf'\n\n    return 'unknown'\n  }\n\n  private getFileTypeIcon(): TemplateResult<1> {\n    let icon = 'file-text-line'\n    switch (this._fileType) {\n      case 'image':\n        icon = 'image-line'\n        break\n      case 'video':\n        icon = 'video-line'\n        break\n      case 'audio':\n        icon = 'music-line'\n        break\n      case 'document':\n        icon = 'file-text-line'\n        break\n      case 'pdf':\n        return html`<svg\n          class=${clsx(\n            'content__file-icon',\n            `content__file-icon--${this.thumbnailSize}`,\n            'content__file-icon--custom',\n          )}\n          viewBox=\"0 0 40 56\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <mask\n            id=\"mask0_705_82583\"\n            style=\"mask-type:alpha\"\n            maskUnits=\"userSpaceOnUse\"\n            x=\"0\"\n            y=\"0\"\n            width=\"40\"\n            height=\"56\">\n            <path\n              d=\"M0 0L25.7574 0C26.553 0 27.3161 0.316071 27.8787 0.87868L39.1213 12.1213C39.6839 12.6839 40 13.447 40 14.2426L40 56L3 56C1.34315 56 0 54.6569 0 53L0 0Z\"\n              fill=\"#9F9F9F\" />\n          </mask>\n          <g mask=\"url(#mask0_705_82583)\">\n            <path\n              d=\"M0 2C0 0.89543 0.895431 0 2 0H27L40 13V54C40 55.1046 39.1046 56 38 56H2C0.895431 56 0 55.1046 0 54V2Z\"\n              fill=\"white\" />\n            <path\n              d=\"M7.46234 29.3892V28.0122H10.3481C11.061 28.0122 11.6127 27.8291 12.0034 27.4629C12.3989 27.0918 12.5966 26.5791 12.5966 25.9248V25.9102C12.5966 25.2461 12.3989 24.731 12.0034 24.3647C11.6127 23.9985 11.061 23.8154 10.3481 23.8154H7.46234V22.4312H10.7582C11.4516 22.4312 12.0595 22.5776 12.582 22.8706C13.1093 23.1587 13.5219 23.564 13.8198 24.0864C14.1176 24.604 14.2665 25.207 14.2665 25.8955V25.9102C14.2665 26.5986 14.1176 27.2065 13.8198 27.7339C13.5219 28.2563 13.1093 28.6641 12.582 28.957C12.0595 29.2451 11.4516 29.3892 10.7582 29.3892H7.46234ZM6.64203 33V22.4312H8.28266V33H6.64203ZM16.3232 33V22.4312H20.1392C21.189 22.4312 22.085 22.6387 22.8271 23.0537C23.5693 23.4688 24.1357 24.0669 24.5264 24.8481C24.9219 25.6294 25.1196 26.5742 25.1196 27.6826V27.6973C25.1196 28.8154 24.9219 29.77 24.5264 30.561C24.1357 31.3521 23.5693 31.9575 22.8271 32.3774C22.0898 32.7925 21.1938 33 20.1392 33H16.3232ZM17.9639 31.5791H19.9561C20.6934 31.5791 21.3208 31.4277 21.8384 31.125C22.3608 30.8223 22.7563 30.3828 23.0249 29.8066C23.2983 29.2305 23.4351 28.5347 23.4351 27.7192V27.7046C23.4351 26.894 23.2959 26.2007 23.0176 25.6245C22.7441 25.0483 22.3486 24.6089 21.8311 24.3062C21.3135 24.0034 20.6885 23.8521 19.9561 23.8521H17.9639V31.5791ZM27.2789 33V22.4312H33.878V23.8521H28.9195V27.1919H33.4605V28.5762H28.9195V33H27.2789Z\"\n              fill=\"#EE442A\" />\n            <path\n              d=\"M42.5938 13.125H29.5C28.0503 13.125 26.875 11.9497 26.875 10.5V-2.59375L42.5938 13.125Z\"\n              fill=\"white\"\n              stroke=\"#E0E0E0\"\n              stroke-width=\"0.75\" />\n          </g>\n          <path\n            d=\"M2 0.375H25.7578C26.4537 0.37512 27.1211 0.651542 27.6133 1.14355L38.8564 12.3867C39.3485 12.8789 39.6249 13.5463 39.625 14.2422V54C39.625 54.8975 38.8975 55.625 38 55.625H2C1.10254 55.625 0.375 54.8975 0.375 54V2C0.375 1.10254 1.10254 0.375 2 0.375Z\"\n            stroke=\"#E0E0E0\"\n            stroke-width=\"0.75\" />\n        </svg> `\n      default:\n        icon = 'file-text-line'\n        break\n    }\n\n    return html`<dap-ds-icon\n      class=${clsx(\n        'content__file-icon',\n        `content__file-icon--${this.thumbnailSize}`,\n      )}\n      name=${icon}></dap-ds-icon>`\n  }\n\n  private async generateThumbnail(file: File): Promise<string | null> {\n    if (this._fileType === 'image') {\n      return new Promise(resolve => {\n        const canvas = document.createElement('canvas')\n        const ctx = canvas.getContext('2d')\n        const img = new Image()\n\n        img.onload = () => {\n          const maxSize =\n            this.thumbnailSize === 'xxs'\n              ? 24\n              : this.thumbnailSize === 'xs'\n                ? 32\n                : this.thumbnailSize === 'sm'\n                  ? 48\n                  : this.thumbnailSize === 'md'\n                    ? 64\n                    : 80\n\n          const ratio = Math.min(maxSize / img.width, maxSize / img.height)\n          canvas.width = img.width * ratio\n          canvas.height = img.height * ratio\n\n          ctx?.drawImage(img, 0, 0, canvas.width, canvas.height)\n          resolve(canvas.toDataURL('image/jpeg', 0.8))\n        }\n\n        img.onerror = () => resolve(null)\n        img.src = URL.createObjectURL(file)\n      })\n    }\n\n    return null\n  }\n\n  private async createFileObjectUrl() {\n    if (this.fileData) {\n      this._fileType = this.detectFileType(this.fileData)\n\n      if (this.fileData instanceof File) {\n        // Clean up any existing object URL first\n        if (this._fileObjectUrl && typeof URL.revokeObjectURL === 'function') {\n          URL.revokeObjectURL(this._fileObjectUrl)\n        }\n\n        // Check if URL.createObjectURL is available (not available in test environments)\n        if (typeof URL.createObjectURL === 'function') {\n          this._fileObjectUrl = URL.createObjectURL(this.fileData)\n        } else {\n          console.warn('URL.createObjectURL not available in this environment')\n        }\n\n        // Generate thumbnail if enabled and file is an image\n        if (this.showThumbnail === 'true' && this._fileType === 'image') {\n          try {\n            this._thumbnailUrl = await this.generateThumbnail(this.fileData)\n            // Force re-render after thumbnail is generated\n            this.requestUpdate()\n          } catch (error) {\n            console.warn('Failed to generate thumbnail:', error)\n          }\n        }\n      } else if (typeof this.fileData === 'object' && 'type' in this.fileData) {\n        // If it's metadata, we can't create a preview without the actual file content\n        console.warn(\n          'Cannot create file preview: fileData contains only metadata, not file content',\n        )\n      }\n    }\n  }\n\n  cleanupFileObjectUrl() {\n    if (this._fileObjectUrl && typeof URL.revokeObjectURL === 'function') {\n      URL.revokeObjectURL(this._fileObjectUrl)\n      this._fileObjectUrl = null\n    }\n    if (this._thumbnailUrl) {\n      // Thumbnail URLs are data URLs, so no need to revoke them\n      this._thumbnailUrl = null\n    }\n  }\n\n  private handleFileClick(event: Event) {\n    event.preventDefault()\n\n    if (this._fileObjectUrl) {\n      // Open the file in a new tab for preview\n      window.open(this._fileObjectUrl, '_blank')\n    } else if (this.href) {\n      // Fallback to href if no object URL available\n      window.open(this.href, this.target || '_blank')\n    } else {\n      console.warn('No object URL or href available for file preview')\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.createFileObjectUrl()\n  }\n\n  updated(changedProperties: Map<string, any>) {\n    super.updated(changedProperties)\n\n    // Regenerate object URL and thumbnail when fileData changes\n    if (changedProperties.has('fileData')) {\n      this.cleanupFileObjectUrl()\n      this.createFileObjectUrl()\n    }\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback()\n    this.cleanupFileObjectUrl()\n  }\n\n  get formattedSize() {\n    const exponent = 1024\n    const sizes = ['B', 'KB', 'MB', 'GB']\n    const fractionDigits = 0\n    const size = this.fileData?.size || 0\n\n    if (!+size) {\n      return `0 ${sizes[0]}`\n    }\n\n    const i = Math.floor(Math.log(size) / Math.log(exponent))\n\n    return `${parseFloat((size / Math.pow(exponent, i)).toFixed(fractionDigits))} ${sizes[i]}`\n  }\n\n  render() {\n    return (\n      this.fileData &&\n      html`\n        <li\n          part=\"base\"\n          class=${clsx('file-list-item', `file-list-item--${this.size}`, {\n            'file-list-item--disabled': this.disabled,\n          })}\n          role=\"status\"\n          aria-live=\"polite\"\n          aria-label=${`${this.fileData?.name || ''} ${this.loading ? t('fileInput.uploading') : ''} ${this.feedback ? this.feedback : ''}`}>\n          ${this.fileItemTemplate\n            ? html`<div class=\"content\" part=\"content\">\n                ${this.fileItemTemplate({\n                  file: this.fileData as File,\n                  fileObjectUrl: this._fileObjectUrl || '',\n                  href: this.href,\n                  target: this.target,\n                  rel: this.rel,\n                  download: this.download,\n                  showFileLink: this.showFileLink || '',\n                  showSize: this.showSize || '',\n                  showDeleteButton: this.showDeleteButton || '',\n                  formattedSize: this.formattedSize,\n                  feedback: this.feedback,\n                  feedbackType: this.feedbackType,\n                  loading: this.loading || false,\n                  showThumbnail: this.showThumbnail,\n                  fileType: this._fileType,\n                  fileLinkLabel: this.fileLinkLabel,\n                  thumbnailUrl: this._thumbnailUrl,\n                  thumbnailSize: this.thumbnailSize,\n                  handleFileClick: this.handleFileClick,\n                  handleDelete: this.delete,\n                })}\n              </div>`\n            : html`<div class=\"content\" part=\"content\">\n                  ${this.showThumbnail === 'true' && this._thumbnailUrl\n                    ? html`<img\n                        part=\"thumbnail\"\n                        class=${clsx(\n                          'content__thumbnail',\n                          `content__thumbnail--${this.thumbnailSize}`,\n                        )}\n                        src=${this._thumbnailUrl}\n                        alt=${`${this.fileData?.name || ''} thumbnail`}\n                        loading=\"lazy\" />`\n                    : this.showThumbnail === 'true' &&\n                        this._fileType !== 'unknown'\n                      ? this.getFileTypeIcon()\n                      : nothing}\n                  <dap-ds-stack spacing=\"200\">\n                    <span part=\"filename\">${this.fileData?.name || ''}</span>\n                    ${this.showFileLink === 'true' &&\n                    (this._fileObjectUrl || this.href)\n                      ? html`<slot name=\"link\">\n                          <dap-ds-link\n                            part=\"link\"\n                            href=\"${this._fileObjectUrl || this.href}\"\n                            target=${ifDefined(this.target)}\n                            rel=${ifDefined(this.rel)}\n                            ?download=${this.download === 'true'\n                              ? true\n                              : undefined}\n                            @click=${this.handleFileClick}\n                            >${this.fileLinkLabel\n                              ? this.fileLinkLabel\n                              : t('fileInput.view')}</dap-ds-link\n                          ></slot\n                        >`\n                      : nothing}\n                  </dap-ds-stack>\n                  <span class=\"content__markers\">\n                    ${this.showSize\n                      ? html`<span\n                          part=\"filesize\"\n                          class=${clsx(\n                            'content__filesize',\n                            `content__filesize--${this.size}`,\n                          )}\n                          aria-label=${t('fileInput.fileSize', {\n                            size: this.formattedSize,\n                          })}\n                          >${this.formattedSize}</span\n                        >`\n                      : nothing}\n                    ${this.loading\n                      ? html`<dap-ds-spinner\n                          part=\"spinner\"\n                          size=\"sm\"\n                          type=\"neutral\"\n                          aria-label=${t(\n                            'fileInput.uploading',\n                          )}></dap-ds-spinner>`\n                      : nothing}\n                    ${this.showDeleteButton === 'true'\n                      ? html` <dap-ds-icon-button\n                          part=\"remove-button\"\n                          class=\"content__remove-button\"\n                          ?disabled=\"${this.disabled}\"\n                          size=${this.size as 'xs' | 'sm' | 'md' | 'lg'}\n                          arial-label=${`${t('fileInput.delete')} ${this.fileData?.name || ''}`}\n                          clean\n                          @click=${() => this.delete(this.fileData)}>\n                          <slot name=\"delete-button\">\n                            <dap-ds-icon\n                              class=\"content__remove-button-icon\"\n                              name=\"delete-bin-line\"></dap-ds-icon>\n                          </slot>\n                        </dap-ds-icon-button>`\n                      : nothing}\n                  </span>\n                </div>\n                ${this.feedback &&\n                html`\n                  <dap-ds-feedback\n                    part=\"feedback\"\n                    class=\"feedback\"\n                    feedbackSize=\"sm\"\n                    feedbackType=${ifDefined(this.feedbackType)}\n                    .subtle=${this.subtle}\n                    role=\"alert\"\n                    aria-live=\"assertive\">\n                    <span class=\"feedback__text\">${this.feedback}</span>\n                  </dap-ds-feedback>\n                `}`}\n        </li>\n      `\n    )\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\n\nimport { adoptLightStyles } from '@/internal/adopt-light-styles'\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { LabelableMixin } from '@/internal/mixin/labelableMixin'\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\n\nimport styles from './_styles/form-label.scss?inline'\n\n/**\n * `dap-ds-form-label`\n * @summary A form label is a container for labels in a form.\n * @element dap-ds-form-label\n * @title - Form label\n * @group form\n *\n * @property {string} optionalLabel - Label of optional text\n * @property {boolean} subtle - Text weight of the label.\n * @property {boolean} optional - If the label is optional.\n * @property {boolean} required - If the label is required.\n * @property {string} label - The label text.\n *\n * @csspart base - The main form label container.\n * @csspart required - The required indicator of the form label.\n * @csspart optional - The optional indicator of the form label.\n *\n * @cssproperty --dds-form-label-font-weight - Font weight of the label. Defaults to var(--dds-font-weight-bold).\n * @cssproperty --dds-form-label-line-height - Line height of the label. Defaults to var(--dds-font-line-height-xlarge).\n * @cssproperty --dds-form-label-color - Text color of the label. Defaults to var(--dds-text-neutral-enabled).\n * @cssproperty --dds-form-label-disabled-color - Text color when the label is disabled. Defaults to var(--dds-text-neutral-disabled).\n * @cssproperty --dds-form-label-required-color - Color of the required indicator. Defaults to var(--dds-text-negative-subtle).\n * @cssproperty --dds-form-label-optional-color - Color of the optional indicator. Defaults to var(--dds-text-neutral-subtle).\n * @cssproperty --dds-form-label-margin-bottom - Bottom margin of the label. Defaults to var(--dds-spacing-200).\n */\n@customElement('dap-ds-form-label')\nexport default class DapDSFormLabel extends SizedMixin(\n  LabelableMixin(DdsElement),\n) {\n  /** The id of the form element that the label is associated with. */\n  @property() for?: string\n  /** Whether the label should be rendered as text or a <label> tag. Default is label. */\n  @property({ type: String }) renderAs: string = 'label'\n\n  static readonly styles = unsafeCSS(styles)\n\n  createRenderRoot() {\n    adoptLightStyles(this)\n    return this\n  }\n\n  render() {\n    return html`\n    \n    <${unsafeStatic(this.renderAs)}\n          part=\"label-base\"\n          class=${clsx('dds-label', `dds-label--${this.size}`, {\n            'dds-label--disabled': this.disabled,\n            'dds-label--required': this.required,\n            'dds-label--optional': this.optional,\n            'dds-label--subtle': this.subtle,\n          })}\n          for=${ifDefined(this.for)}>\n          ${this.label}\n          ${\n            this.required\n              ? html`<span\n                  part=\"required\"\n                  aria-hidden=\"true\"\n                  class=\"dds-label__required-indicator\"\n                  >*</span\n                >`\n              : null\n          }\n          ${\n            this.optional\n              ? html`<span\n                  part=\"optional\"\n                  class=${clsx('dds-label__optional-indicator', {\n                    [`dds-label__optional-indicator--${this.size}`]: this.size,\n                  })}>\n                  ${this.optionalLabel}\n                </span>`\n              : null\n          }\n        </${unsafeStatic(this.renderAs)}>`\n  }\n}\n","import { unsafeCSS } from 'lit'\nimport { customElement, queryAssignedElements } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { CommonFormElementSize } from '@/common/types'\nimport DapDSCheckbox from '@/components/checkbox/checkbox.component'\nimport DapDSSwitch from '@/components/switch/switch.component'\nimport { GenericFormElement } from '@/internal/mixin/genericFormElement'\n\nimport styles from './input-group.scss?inline'\n\n/**\n * `dap-ds-input-group`\n * @summary An input group is a container for inputs.\n * @element dap-ds-input-group\n * @title - Input group\n * @group form\n *\n * @property {string} label - The label of the input group.\n * @property {string} description - The description of the input group.\n * @property {string} tooltip - The tooltip of the input group.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The tooltip placement of the input group.\n * @property {string} tooltipAriaLabel - The aria label of the tooltip.\n * @property {string} optionalLabel - The label of the input group when it is optional.\n * @property {boolean} disabled - Whether the input group is disabled.\n * @property {'xs' | 'sm' | 'lg'} size - The size of the input group. Default is `sm`. Can be `sm` or `lg`.\n * @property {boolean} required - Whether the input group is required.\n * @property {boolean} optional - Whether the input group is optional.\n * @property {string} feedback - The feedback of the input.\n * @property {string} feedbackType - The type of the feedback.\n * @property {boolean} subtle - Whether the input group label is subtle.\n *\n * @slot - The content of the input group items.\n * @slot feedback-icon - The custom icon of the feedback.\n *\n * @csspart base - The main input group container.\n * @csspart label - The label of the input group.\n * @csspart description - The description of the input group.\n * @csspart tooltip - The tooltip of the input group.\n * @csspart container - The container of the input group items.\n */\n@customElement('dap-ds-input-group')\nexport default class DapDSInputGroup extends GenericFormElement {\n  static readonly styles = unsafeCSS(styles)\n\n  @queryAssignedElements() allInputs: DapDSCheckbox[] | DapDSSwitch[]\n\n  handleLabelClick() {\n    const checkedInput =\n      this.allInputs.find(input => input.checked) ?? this.allInputs[0]\n\n    checkedInput?.focus()\n  }\n\n  private getItems() {\n    return [\n      ...this.querySelectorAll<DapDSSwitch | DapDSCheckbox>(\n        'dap-ds-switch, dap-ds-checkbox',\n      ),\n    ]\n  }\n\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null,\n  ) {\n    super.attributeChangedCallback(name, _old, value)\n    if (name === 'disabled' || name === 'invalid') {\n      this.getItems().forEach(item => {\n        item[name] = value !== null\n      })\n    }\n  }\n\n  render() {\n    return html`\n      <fieldset\n        id=\"input\"\n        class=\"input-group\"\n        part=\"base\"\n        .disabled=${this.disabled}\n        aria-labelledby=\"label\"\n        aria-describedby=${`description ${this.feedbackId}`}\n        aria-errormessage=${ifDefined(this.feedbackId)}>\n        <legend class=\"input-group__legend\">\n          <div class=\"label-container\">\n            ${this.label &&\n            html`<dap-ds-form-label\n              part=\"label\"\n              id=\"label\"\n              .size=${this.size}\n              .required=${this.required}\n              .optional=${this.optional}\n              .optionalLabel=${this.optionalLabel}\n              .disabled=${this.disabled}\n              .subtle=${this.subtle}\n              label=${ifDefined(this.label)}\n              @click=${this.handleLabelClick}>\n            </dap-ds-form-label>`}\n            ${this.tooltip &&\n            html` <dap-ds-tooltip\n              part=\"tooltip\"\n              content=${this.tooltip}\n              mode=\"toggle\"\n              placement=${this.tooltipPlacement}>\n              <dap-ds-icon-button\n                clean\n                class=\"input-group__toggle-button\"\n                slot=\"trigger\"\n                aria-label=${this.tooltipAriaLabel}\n                size=${this.size as 'xs' | 'sm' | 'md' | 'lg'}\n                iconSize=${this.size === 'xs' ? '16' : '22'}>\n                <dap-ds-icon\n                  name=\"information-line\"\n                  class=\"info-button\"></dap-ds-icon>\n              </dap-ds-icon-button>\n            </dap-ds-tooltip>`}\n          </div>\n          ${this.description &&\n          html`\n            <dap-ds-typography\n              part=\"description\"\n              variant=\"description\"\n              size=${ifDefined(this.size as CommonFormElementSize)}\n              id=\"description\">\n              ${this.description}\n            </dap-ds-typography>\n          `}\n        </legend>\n        <div part=\"container\" class=\"input-group__items\">\n          <slot></slot>\n        </div>\n        ${this.feedback && this._renderFeedback()}\n      </fieldset>\n    `\n  }\n\n  private _handleSlotChange(event: Event) {\n    const target = event?.target as HTMLInputElement\n    target.setAttribute('slot', 'icon')\n  }\n\n  private _renderFeedback() {\n    return html`\n      <dap-ds-feedback\n        part=\"feedback\"\n        feedbackType=${ifDefined(this.feedbackType)}\n        feedbackSize=\"${ifDefined(this.size as 'lg' | 'sm' | 'xs')}\"\n        id=\"feedback\"\n        .subtle=${this.subtle}>\n        <slot\n          name=\"feedback-icon\"\n          @slotchange=\"${this._handleSlotChange}\"></slot>\n        ${this.feedback}\n      </dap-ds-feedback>\n    `\n  }\n}\n","import { unsafeCSS } from 'lit'\nimport { customElement, property, query } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { CommonFormElementSize, PopupPlacement } from '@/common/types'\nimport DapDSRadioButton from '@/components/radio-button/radio-button.component'\nimport { GenericFormElement } from '@/internal/mixin/genericFormElement'\n\nimport styles from '../input-group/input-group.scss?inline'\n\nconst KEY_CODES = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', ' ']\n\n/**\n * `dap-ds-radio-group`\n * @summary A radio group is a form element that allows the user to select one option from a set.\n * @element dap-ds-radio-group\n * @title - Radio group\n * @group radio-button\n *\n * @event dds-change - Fired when the radio group is checked.\n * @event dds-blur - Emitted when the radio group loses focus.\n * @event dds-focus - Emitted when the radio group gains focus.\n *\n * @property {string} name - The name of the radio group.\n * @property {string} value - The value of the radio group.\n * @property {boolean} disabled - Whether the radio group is disabled.\n * @property {boolean} required - Whether the radio group is required.\n * @property {string} label - The label of the radio group.\n * @property {string} description - The description of the radio group.\n * @property {string} tooltip - The tooltip of the radio group.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The tooltip placement of the radio group.\n * @property {string} feedback - The feedback of the radio group.\n * @property {'negative' | 'positive' | 'warning'} feedbackType - The feedback type of the radio group. Can be `negative`, `positive`, or `warning`.\n * @property {boolean} optional - The optional state of the radio group.\n * @property {string} optionalLabel - Text of optional label.\n * @property {boolean} subtle - The weight of the label. Default is `false`\n * @property {'xs' | 'sm' | 'lg'} size - The size of the radio group. Default is `sm`.\n * @property {boolean} subtle - Font weight of the feedback label. Default is `false` which is bold.\n *\n * @slot - The content of the radio group.\n * @slot feedback-icon - The custom icon of the feedback.\n *\n * @csspart base - The main radio group container.\n * @csspart label - The label of the radio group.\n * @csspart tooltip - The tooltip of the radio group.\n * @csspart container - The container of the radio group items.\n */\n@customElement('dap-ds-radio-group')\nexport default class DapDSRadioGroup extends GenericFormElement {\n  /** The placement of the tooltip.\n   * @type { 'top' | 'right' | 'bottom' | 'left' }\n   */\n  @property() tooltipPlacement: PopupPlacement = 'bottom'\n\n  @query('#hidden') hiddenInput!: HTMLInputElement\n  @property() optionalLabel = ''\n\n  private _previousValue?: string\n\n  static readonly styles = unsafeCSS(styles)\n\n  willUpdate(changedProperties: Map<string, unknown>) {\n    super.willUpdate(changedProperties)\n\n    // Handle external value changes\n    if (changedProperties.has('value')) {\n      this._previousValue = changedProperties.get('value') as string\n    }\n  }\n\n  updated(changedProperties: Map<string, unknown>) {\n    super.updated(changedProperties)\n\n    // Update radio button states when value changes from outside\n    if (changedProperties.has('value') && this._previousValue !== this.value) {\n      this.updateRadioStates()\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null,\n  ) {\n    super.attributeChangedCallback(name, _old, value)\n    if (name === 'disabled' || name === 'invalid') {\n      this.getAllRadios().forEach(item => {\n        item[name] = value !== null\n      })\n    }\n  }\n\n  private _handleSlotChange(event: Event) {\n    const target = event?.target as HTMLInputElement\n    target.setAttribute('slot', 'icon')\n  }\n\n  private getAllRadios() {\n    return [...this.querySelectorAll<DapDSRadioButton>('dap-ds-radio-button')]\n  }\n\n  private updateRadioStates() {\n    const radios = this.getAllRadios()\n\n    radios.forEach(radio => {\n      radio.checked = radio.value === this.value\n      radio.size = this.size\n    })\n\n    // Update focusable state\n    if (!this.value) {\n      const firstFocusable = radios.find(radio => !radio.disabled)\n      if (firstFocusable) {\n        firstFocusable.focusable = true\n      }\n    }\n\n    this.internals.setFormValue(this.value)\n    this.setValidity()\n  }\n\n  private async syncRadioElements() {\n    const radios = this.getAllRadios()\n\n    await Promise.all(\n      radios.map(async radio => {\n        await radio.updateComplete\n        radio.checked = radio.value === this.value\n        radio.size = this.size\n      }),\n    )\n\n    if (!this.value) {\n      const firstFocusable = radios.find(radio => !radio.disabled)\n      if (firstFocusable) {\n        firstFocusable.focusable = true\n      }\n    }\n\n    this.internals.setFormValue(this.value)\n    this.setValidity()\n  }\n\n  private handleRadioClick(event: MouseEvent) {\n    const target = (event.target as HTMLElement).closest<DapDSRadioButton>(\n      'dap-ds-radio-button',\n    )\n    const radios = this.getAllRadios()\n    const oldValue = this.value\n\n    if (target!.disabled) {\n      return\n    }\n\n    this.value = target!.value\n    radios.forEach(radio => (radio.checked = radio === target))\n\n    if (this.value !== oldValue) {\n      this.emit('dds-change', { value: target!.value, checked: true })\n\n      this.internals.setFormValue(this.value)\n      this.setValidity()\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent) {\n    if (!KEY_CODES.includes(event.key)) {\n      return\n    }\n\n    const radios = this.getAllRadios().filter(radio => !radio.disabled)\n    const checkedRadio = radios.find(radio => radio.checked) ?? radios[0]\n    const step =\n      event.key === ' '\n        ? 0\n        : ['ArrowUp', 'ArrowLeft'].includes(event.key)\n          ? -1\n          : 1\n    const oldValue = this.value\n    let index = radios.indexOf(checkedRadio) + step\n\n    if (index < 0) {\n      index = radios.length - 1\n    }\n\n    if (index > radios.length - 1) {\n      index = 0\n    }\n\n    this.getAllRadios().forEach(radio => {\n      radio.checked = false\n      radio.tabIndex = -1\n    })\n\n    this.value = radios[index].value\n    radios[index].checked = true\n\n    radios[index].tabIndex = 0\n    radios[index].focus()\n\n    if (this.value !== oldValue) {\n      this.emit('dds-change', { value: radios[index].value, checked: true })\n\n      this.internals.setFormValue(this.value)\n      this.setValidity()\n    }\n\n    event.preventDefault()\n  }\n\n  setValidity(): void {\n    const radios = this.getAllRadios()\n    const isValid = radios.some(radio => radio.checked)\n\n    if (this.required && !isValid) {\n      this.internals.setValidity(\n        { valueMissing: true },\n        this.validationMessage,\n        this.innerInput,\n      )\n    } else {\n      this.internals.setValidity({})\n    }\n  }\n\n  get validationMessage(): string {\n    return ' '\n  }\n\n  checkValidity() {\n    return !this.required || Boolean(this.required && this.value)\n  }\n\n  get validity() {\n    return {\n      ...this.internals.validity,\n      valid: this.checkValidity(),\n      valueMissing: this.required && !this.value,\n    }\n  }\n\n  reportValidity() {\n    return this.required ? this.checkValidity() : true\n  }\n\n  handleLabelClick() {\n    const radios = this.getAllRadios()\n    const checkedRadio = radios.find(radio => radio.checked) ?? radios[0]\n\n    checkedRadio.focus()\n  }\n\n  handleInvalid(event: Event) {\n    event.preventDefault()\n  }\n\n  render() {\n    return html`\n      <fieldset\n        id=\"input\"\n        part=\"base\"\n        class=\"input-group\"\n        .disabled=${this.disabled}\n        form=${ifDefined(this.form)}\n        name=${this.name}\n        role=\"radiogroup\"\n        tabindex=\"0\"\n        aria-labelledby=\"label\"\n        aria-required=${this.required}\n        aria-describedby=${`description ${this.feedbackId}`}\n        aria-errormessage=${ifDefined(this.feedbackId)}\n        @invalid=${this.handleInvalid}>\n        <legend class=\"input-group__legend\">\n          <div class=\"label-container\">\n            ${this.label &&\n            html`<dap-ds-form-label\n              part=\"label\"\n              id=\"label\"\n              .size=${this.size}\n              .required=${this.required}\n              .optionalLabel=${this.optionalLabel}\n              .optional=${this.optional}\n              .subtle=${this.subtle}\n              .disabled=${this.disabled}\n              label=${ifDefined(this.label)}\n              @click=${this.handleLabelClick}>\n            </dap-ds-form-label>`}\n            ${this.tooltip &&\n            html` <dap-ds-tooltip\n              part=\"tooltip\"\n              content=${this.tooltip}\n              mode=\"toggle\"\n              placement=${this.tooltipPlacement}>\n              <dap-ds-icon-button\n                clean\n                slot=\"trigger\"\n                class=\"info-button\"\n                aria-label=${this.tooltipAriaLabel}\n                size=${this.size as 'xs' | 'sm' | 'md' | 'lg'}\n                iconSize=${this.size === 'xs' ? '16' : '22'}>\n                <dap-ds-icon\n                  name=\"information-line\"\n                  class=\"info-button\"></dap-ds-icon>\n              </dap-ds-icon-button>\n            </dap-ds-tooltip>`}\n          </div>\n          ${this.description &&\n          html`\n            <dap-ds-typography\n              part=\"description\"\n              variant=\"description\"\n              size=${ifDefined(this.size as CommonFormElementSize)}\n              id=\"description\">\n              ${this.description}\n            </dap-ds-typography>\n          `}\n        </legend>\n        <div part=\"container\" class=\"input-group__items\">\n          <input id=\"hidden\" hidden @invalid=${this.handleInvalid} />\n          <slot\n            @click=${this.handleRadioClick}\n            @keydown=${this.handleKeyDown}\n            @blur=${this.onBlur}\n            @focus=${this.onFocus}\n            @slotchange=${this.syncRadioElements}></slot>\n        </div>\n        ${this.feedback && this._renderFeedback()}\n      </fieldset>\n    `\n  }\n\n  private _renderFeedback() {\n    return html`\n      <dap-ds-feedback\n        part=\"feedback\"\n        feedbackType=${ifDefined(this.feedbackType)}\n        feedbackSize=\"${ifDefined(this.size as 'lg' | 'sm')}\"\n        id=\"feedback\"\n        .subtle=${this.subtle}>\n        <slot\n          name=\"feedback-icon\"\n          @slotchange=\"${this._handleSlotChange}\"></slot>\n        ${this.feedback}\n      </dap-ds-feedback>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './_styles/icon.scss?inline'\n\nexport type IconSize = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs'\n\n/**\n * `dap-ds-icon`\n * @summary An icon is a graphical symbol that represents an object or action.\n * @element dap-ds-icon\n * @title - Icon\n *\n * @property {boolean} ariaHidden - Whether the icon is hidden from the accessibility tree. Default is true.\n * @property {string} ariaLabel - The aria label of the icon.\n *\n * @slot - The content of the icon for custom svg icons.\n *\n * @csspart base - The main icon container.\n * @csspart icon - The icon of the icon.\n *\n * @cssproperty --dds-icon-size-xs - The size of extra small icons (default: 12px)\n * @cssproperty --dds-icon-size-sm - The size of small icons (default: 16px)\n * @cssproperty --dds-icon-size-md - The size of medium icons (default: 20px)\n * @cssproperty --dds-icon-size-lg - The size of large icons (default: 24px)\n * @cssproperty --dds-icon-size-xl - The size of extra large icons (default: 32px)\n * @cssproperty --dds-icon-size-xxl - The size of extra extra large icons (default: 40px)\n */\n@customElement('dap-ds-icon')\nexport default class DapDSIcon extends DdsElement {\n  /** The name of the icon */\n  @property() name: string\n  /** The size of the icon\n   * @type {'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs'}\n   */\n  @property() size: 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs' = 'md'\n  /** The size of the icon in pixels. This overrides the size attribute. */\n  @property({ type: Number }) staticSize?: number\n  /** Whether the icon is focusable. Default is false. */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <span class=${clsx('icon', {})} part=\"base\" tabindex=\"-1\">\n        ${this.name ? this._getNamedIcon() : this._getSlotIcon()}\n      </span>\n    `\n  }\n\n  private _getNamedIcon() {\n    const IconTag = `dap-ds-icon-${this.name}`\n\n    return html`\n     <${unsafeStatic(IconTag)}\n        part=\"icon\"\n        size=${this.staticSize ?? this._getIconSizePx(this.size)}\n        viewBox=\"0 0 24 24\"\n        role=\"img\"\n        aria-hidden=${this.ariaHidden ?? 'true'}\n        aria-label=${this.ariaLabel ?? ''}\n        tabindex=${this.focusable ? 0 : -1}\n      >\n      </${unsafeStatic(IconTag)}\n    `\n  }\n\n  private _getSlotIcon() {\n    return html`\n      <span\n        part=\"icon\"\n        class=${clsx('icon--custom-icon', { [this.size]: true })}>\n        <slot></slot>\n      </span>\n    `\n  }\n\n  private _getIconSizePx(size: IconSize): number {\n    const defaultSize = 20\n    switch (size) {\n      case 'xxl':\n        return 40\n      case 'xl':\n        return 32\n      case 'lg':\n        return 24\n      case 'md':\n        return defaultSize\n      case 'sm':\n        return 16\n      case 'xs':\n        return 12\n      default:\n        return defaultSize\n    }\n  }\n}\n","import clsx from 'clsx'\nimport { PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { Size } from '../../common/types'\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './icon-button.scss?inline'\n\nexport type ButtonVariant = 'neutral' | 'brand' | 'inverted' | 'inverted-brand'\nexport type HtmlButtonType = 'button' | 'submit' | 'reset'\nexport type ButtonSize = Extract<Size, 'lg' | 'md' | 'sm' | 'xs'>\n\n/**\n * `dap-ds-icon-button`\n * @summary An icon button is a button with an icon.\n * @element dap-ds-icon-button\n * @title - Icon button\n *\n * @property {string} ariaLabel - The aria label of the button.\n *\n * @slot - The icon of the button.\n *\n * @csspart base - The main button container.\n * @csspart content - The icon of the button.\n *\n * @cssproperty --dds-icon-button-border-width - The width of the button's border. Defaults to var(--dds-border-width-base).\n * @cssproperty --dds-icon-button-border-color - The color of the button's border. Defaults to var(--dds-border-neutral-transparent-interactive).\n * @cssproperty --dds-icon-button-border-radius - The border radius of the button. Defaults to var(--dds-radius-rounded).\n * @cssproperty --dds-icon-button-hover-border-width - The width of the button's border on hover. Defaults to var(--dds-border-width-large).\n * @cssproperty --dds-icon-button-active-border-width - The width of the button's border when active. Defaults to var(--dds-border-width-xlarge).\n * @cssproperty --dds-icon-button-transition - The transition property for the button. Defaults to var(--dds-transition-all).\n * @cssproperty --dds-icon-button-cursor - The cursor style for the button. Defaults to pointer.\n * @cssproperty --dds-icon-button-disabled-cursor - The cursor style for the disabled button. Defaults to not-allowed.\n *\n * @cssproperty --dds-icon-button-column-gap - The gap between icon and text. Defaults to var(--dds-spacing-100).\n * @cssproperty --dds-icon-button-padding-lg - Padding for large size. Defaults to var(--dds-spacing-0).\n * @cssproperty --dds-icon-button-padding-md - Padding for medium size. Defaults to var(--dds-spacing-100).\n * @cssproperty --dds-icon-button-padding-sm - Padding for small size. Defaults to var(--dds-spacing-50).\n * @cssproperty --dds-icon-button-padding-xs - Padding for extra small size. Defaults to var(--dds-spacing-25).\n *\n * @cssproperty --dds-icon-button-size-lg - Size for large button. Defaults to var(--dds-spacing-800).\n * @cssproperty --dds-icon-button-size-md - Size for medium button. Defaults to var(--dds-spacing-600).\n * @cssproperty --dds-icon-button-size-sm - Size for small button. Defaults to var(--dds-spacing-400).\n * @cssproperty --dds-icon-button-size-xs - Size for extra small button. Defaults to var(--dds-spacing-300).\n *\n * @cssproperty --dds-icon-button-neutral-bg - Background color for neutral variant. Defaults to var(--dds-transparent-black-subtle).\n * @cssproperty --dds-icon-button-neutral-color - Text color for neutral variant. Defaults to var(--dds-icon-neutral-base).\n * @cssproperty --dds-icon-button-neutral-hover-bg - Hover background color for neutral variant. Defaults to var(--dds-transparent-black-base).\n * @cssproperty --dds-icon-button-neutral-active-bg - Active background color for neutral variant. Defaults to var(--dds-transparent-black-medium).\n *\n * @cssproperty --dds-icon-button-brand-bg - Background color for brand variant. Defaults to var(--dds-button-subtle-background-enabled).\n * @cssproperty --dds-icon-button-brand-color - Text color for brand variant. Defaults to var(--dds-button-subtle-icon-enabled).\n * @cssproperty --dds-icon-button-brand-hover-bg - Hover background color for brand variant. Defaults to var(--dds-button-subtle-background-hover).\n * @cssproperty --dds-icon-button-brand-active-bg - Active background color for brand variant. Defaults to var(--dds-button-subtle-background-pressed).\n *\n * @cssproperty --dds-icon-button-inverted-bg - Background color for inverted variant. Defaults to var(--dds-transparent-white-subtle).\n * @cssproperty --dds-icon-button-inverted-color - Text color for inverted variant. Defaults to var(--dds-button-primary-icon-enabled).\n * @cssproperty --dds-icon-button-inverted-hover-bg - Hover background color for inverted variant. Defaults to var(--dds-transparent-white-base).\n * @cssproperty --dds-icon-button-inverted-active-bg - Active background color for inverted variant. Defaults to var(--dds-transparent-white-medium).\n *\n * @cssproperty --dds-icon-button-inverted-brand-bg - Background color for inverted brand variant. Defaults to var(--dds-button-primary-background-enabled).\n * @cssproperty --dds-icon-button-inverted-brand-color - Text color for inverted brand variant. Defaults to var(--dds-button-primary-icon-enabled).\n * @cssproperty --dds-icon-button-inverted-brand-hover-bg - Hover background color for inverted brand variant. Defaults to var(--dds-button-primary-background-enabled).\n * @cssproperty --dds-icon-button-inverted-brand-active-bg - Active background color for inverted brand variant. Defaults to var(--dds-button-primary-background-enabled).\n *\n * @cssproperty --dds-icon-button-disabled-color - Color for disabled state. Defaults to var(--dds-icon-neutral-disabled).\n */\n@customElement('dap-ds-icon-button')\nexport default class DapDSIconButton extends DdsElement {\n  /** The type of the button.\n   * @type {'neutral' | 'brand' | 'inverted' | 'inverted-brand'}\n   */\n  @property({ reflect: true }) variant?: ButtonVariant = 'neutral'\n\n  /** Adds a transparent background to the button */\n  @property({ type: Boolean, reflect: true }) clean? = false\n\n  /** The size of the icon\n   * @type {'lg' | 'md' | 'sm' | 'xs'}\n   */\n  @property({ reflect: true }) size: ButtonSize = 'md'\n\n  /**\n   * The size of the icon in pixels. By default the icon gets the size of the button. This property overwrites the size of the icon.\n   */\n  @property({ type: Number }) iconSize: number\n\n  /** The disabled state of the button. */\n  @property({ type: Boolean, reflect: true }) disabled = false\n\n  /**\n   * The type of the button.\n   * @type {'button' | 'submit' | 'reset'}\n   */\n  @property() htmlType: HtmlButtonType = 'button'\n\n  /** The icon of the button. You can use the icon names from the icon component */\n  @property() icon: string\n\n  /** The name of the button */\n  @property() name: string\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n\n    if (this.shadowRoot) {\n      const iconSlot = this.shadowRoot.querySelector('slot') as HTMLSlotElement\n      if (iconSlot) {\n        if (\n          iconSlot.assignedElements().length === 1 &&\n          this.iconSize === undefined\n        ) {\n          iconSlot.assignedElements()[0].setAttribute('size', this.size)\n        }\n\n        if (\n          iconSlot.assignedElements().length === 1 &&\n          this.iconSize !== undefined\n        ) {\n          iconSlot\n            .assignedElements()[0]\n            .setAttribute('staticSize', this.iconSize.toString())\n          iconSlot\n            .assignedElements()[0]\n            .setAttribute('size', this.iconSize.toString())\n        }\n      }\n    }\n  }\n\n  focus() {\n    this.shadowRoot?.querySelector('button')?.focus()\n  }\n\n  render() {\n    return html`\n      <button\n        part=\"base\"\n        .disabled=${this.disabled}\n        aria-label=${ifDefined(this.ariaLabel) || ''}\n        type=${this.htmlType}\n        class=${clsx(\n          'icon-button',\n          {\n            [`icon-button--${this.size}`]:\n              this.size && this.iconSize === undefined,\n          },\n          { 'icon-button--disabled': this.disabled },\n          { 'icon-button--clean': this.clean },\n          `icon-button--${this.variant}`,\n        )}>\n        <div part=\"high-contrast\" class=\"button__highcontrast\"></div>\n        ${this.icon\n          ? html` <dap-ds-icon\n              part=\"content\"\n              exportparts=\"icon: icon-base\"\n              name=\"${this.icon}\"\n              aria-hidden=\"true\"\n              aria-label=${ifDefined(this.ariaLabel) || ''}\n              staticSize=${ifDefined(this.iconSize)}\n              size=${this.size}>\n            </dap-ds-icon>`\n          : html` <slot></slot> `}\n      </button>\n    `\n  }\n}\n","import { customElement } from 'lit/decorators.js'\n\nimport { InputBaseElement } from './input-base-element'\n\n/**\n * `dap-ds-input`\n * @summary An input is a field used to collect user input.\n * @element dap-ds-input\n * @title - Input\n *\n * @property {string} label - The label of the input.\n * @property {string} description - The description of the input.\n * @property {string} optionalLabel - Text of optional label.\n * @property {boolean} subtle - Text weight of label. If true the label is subtle. Default value is false.\n * @property {string} value - The value of the input.\n * @property {string} placeholder - The placeholder of the input.\n * @property {boolean} loading - The loading state of the input. Default is false.\n * @property {string} tooltip - The tooltip of the input.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The tooltip placement of the input.\n * @property {string} tooltipAriaLabel - The aria label of the tooltip.\n * @property {string} feedback - The feedback of the input.\n * @property {'negative' | 'positive' | 'warning'} feedbackType - The feedback type of the input. Can be `negative`, `positive`, or `warning`.\n * @property {'succes' | 'error'} status - The status of the input. Can be `success` or `error`.\n * @property {'xs' | 'sm' | 'lg'} size - The size of the input. Default is `sm`.\n * @property {string} name - The name of the input.\n * @property {'text' | 'number' | 'button' | 'color' | 'email' | 'hidden' | 'reset' | 'submit' | 'url' | 'password'| 'file' | 'time'} type - The type of the input. Default is 'text'.\n * @property {boolean} disabled - The disabled state of the input. Default is false.\n * @property {boolean} required - The required state of the input. Default is false.\n * @property {boolean} readonly - The readonly state of the input. Default is false.\n * @property {boolean} autofocus - The autofocus state of the input. Default is false.\n * @property {boolean} autocapitalize - The autocapitalize state of the input. Default is false.\n * @property {number} minlength - The minimum length of the input.\n * @property {number} maxlength - The maximum length of the input.\n * @property {number} min - The minimum value of the number input.\n * @property {number} max - The maximum value of the number input.\n * @property {number} step - The step value of the number input.\n * @property {string} inputmode - The inputmode of the input.\n * @property {string} pattern - The regex pattern of the input.\n *\n * @cssproperty --dds-input-height - The height of the input. Default is var(--dds-spacing-1000).\n * @cssproperty --dds-input-padding - The padding of the input. Default is var(--dds-spacing-300).\n * @cssproperty --dds-input-font-size - The font size of the input. Default is var(--dds-font-base).\n * @cssproperty --dds-input-border-color - The border color of the input. Default is var(--dds-border-neutral-base).\n * @cssproperty --dds-input-background-color - The background color of the input. Default is var(--dds-fields-background-default).\n * @cssproperty --dds-input-text-color - The text color of the input. Default is var(--dds-text-neutral-base).\n * @cssproperty --dds-input-border-radius - The border radius of the input. Default is var(--dds-radius-base).\n * @cssproperty --dds-input-border-width - The border width of the input. Default is var(--dds-border-width-base).\n * @cssproperty --dds-input-disabled-background - The background color of the disabled input. Default is var(--dds-fields-background-disabled).\n * @cssproperty --dds-input-disabled-text - The text color of the disabled input. Default is var(--dds-text-neutral-disabled).\n * @cssproperty --dds-input-readonly-background - The background color of the readonly input. Default is var(--dds-fields-background-read-only).\n * @cssproperty --dds-input-readonly-text - The text color of the readonly input. Default is var(--dds-text-neutral-subtle).\n * @cssproperty --dds-input-success-border - The border color of the success input. Default is var(--dds-border-positive-base).\n * @cssproperty --dds-input-error-border - The border color of the error input. Default is var(--dds-border-negative-base).\n * @cssproperty --dds-input-addon-background - The background color of the input addon. Default is var(--dds-background-ui-neutral-enabled).\n * @cssproperty --dds-input-addon-success-background - The background color of the success input addon. Default is var(--dds-background-ui-positive-enabled).\n * @cssproperty --dds-input-addon-error-background - The background color of the error input addon. Default is var(--dds-background-ui-negative-enabled).\n *\n * @event {{ value: string }} dds-change - Fired when the input value changes.\n * @event {{ value: string }} dds-input - Fired when the input value changes.\n * @event {{ value: string, originalEvent: Event }} dds-keydown - Fired when a key is pressed down.\n * @event {{ void }} dds-blur - Fired when the input loses focus.\n * @event {{ void }} dds-focus - Emitted when the input gains focus.\n *\n * @slot postfix - The postfix of the input.\n * @slot prefix - The prefix of the input.\n * @slot addon-before - The addon before the input.\n * @slot addon-after - The addon after the input.\n * @slot feedback-icon - The custom icon of the feedback.\n *\n * @csspart base - The main input container.\n * @csspart input - The input element.\n * @csspart label - The label of the input.\n * @csspart description - The description of the input.\n * @csspart feedback - The feedback of the input.\n * @csspart tooltip - The tooltip of the input.\n * @csspart addon-before - The addon before the input.\n * @csspart addon-after - The addon after the input.\n * @csspart prefix - The prefix of the input.\n * @csspart postfix - The postfix of the input.\n *\n */\n@customElement('dap-ds-input')\nexport default class DapDSInput extends InputBaseElement {\n  render() {\n    return this.renderInput()\n  }\n}\n","import { unsafeCSS } from 'lit'\nimport { customElement } from 'lit/decorators.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { LabelableMixin } from '@/internal/mixin/labelableMixin'\n\nimport styles from './_styles/label.scss?inline'\n\n/**\n * `dap-ds-label`\n * @summary A label is a container for labels intended for general use. It contains a label text, description, and tooltip.\n * @element dap-ds-label\n * @title - Label\n *\n * @property {string} label - The label text\n * @property {string} description - The description of the label\n * @property {string} tooltip - The tooltip text\n * @property {'xs' | 'sm' | 'lg'} size - The size of the input. Default is `sm`.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The tooltip placement of the label.\n * @property {boolean} optional - If the label is optional. Default value is `false`.\n * @property {string} optionalLabel - Label of optional text\n * @property {boolean} subtle - Text weight of label. If true the label is subtle. Default value is `false`.\n * @property {boolean} disabled - The disabled state of the label. Default is `false`.\n * @property {boolean} required - The required state of the label. Default is `false`.\n *\n * @csspart base - The main label container.\n * @csspart label - Tha main label container. dap-ds-form-label element.\n * @csspart label-base - The label text.\n * @csspart label-required - The required indicator of the label.\n * @csspart label-optional - The optional indicator of the label.\n * @csspart tooltip - The tooltip of the label. dap-ds-tooltip element.\n * @csspart description - The description of the label.\n *\n * @cssproperty {string} --dds-label-background - The background color of the label container. Default is `var(--dds-background-neutral-subtle)`.\n * @cssproperty {string} --dds-label-border-color - The border color of the label container. Default is `var(--dds-border-neutral-subtle)`.\n * @cssproperty {string} --dds-label-border-width - The border width of the label container. Default is `var(--dds-border-width-base)`.\n * @cssproperty {string} --dds-label-border-radius - The border radius of the label container. Default is `var(--dds-radius-base)`.\n * @cssproperty {string} --dds-label-padding - The padding of the label container. Default is `var(--dds-spacing-400)`.\n * @cssproperty {string} --dds-label-disabled-background - The background color of the label container when disabled. Default is `var(--dds-background-neutral-disabled-inverted)`.\n * @cssproperty {string} --dds-label-checked-border-color - The border color of the label container when checked. Default is `var(--dds-background-brand-base-inverted)`.\n */\n@customElement('dap-ds-label')\nexport default class DapDSLabel extends LabelableMixin(DdsElement) {\n  static readonly styles = unsafeCSS(styles)\n\n  render() {\n    return this.renderLabel()\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { LinkTarget, Size } from '../../common/types'\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './_styles/link.scss?inline'\n\nexport type LinkSize = Extract<Size, 'lg' | 'md' | 'sm' | 'xs'>\nexport type LinkVariant = 'neutral' | 'brand' | 'inverted' | 'warning'\n\n/**\n * `dap-ds-link`\n * @summary A link is a reference to a web resource.\n * @element dap-ds-link\n * @title - Link\n *\n * @event {{ event: Event }} dds-click - Emitted when the link is clicked.\n *\n * @slot - The text of the link.\n *\n * @csspart base - The main link container.\n * @csspart text - The text of the link.\n *\n * @cssproperty --dds-link-color - The color of the link text\n * @cssproperty --dds-link-hover-color - The color of the link text on hover\n * @cssproperty --dds-link-active-color - The color of the link text when active\n * @cssproperty --dds-link-visited-color - The color of the visited link text\n * @cssproperty --dds-link-font-size - The font size of the link text\n * @cssproperty --dds-link-line-height - The line height of the link text\n * @cssproperty --dds-link-font-weight - The font weight of the link text\n * @cssproperty --dds-link-text-decoration - The text decoration of the link\n *\n * @cssproperty --dds-link-neutral-color - The color of the neutral variant link\n * @cssproperty --dds-link-neutral-hover-color - The hover color of the neutral variant link\n * @cssproperty --dds-link-neutral-active-color - The active color of the neutral variant link\n * @cssproperty --dds-link-neutral-visited-color - The visited color of the neutral variant link\n *\n * @cssproperty --dds-link-brand-color - The color of the brand variant link\n * @cssproperty --dds-link-brand-hover-color - The hover color of the brand variant link\n * @cssproperty --dds-link-brand-active-color - The active color of the brand variant link\n * @cssproperty --dds-link-brand-visited-color - The visited color of the brand variant link\n *\n * @cssproperty --dds-link-inverted-color - The color of the inverted variant link\n * @cssproperty --dds-link-inverted-hover-color - The hover color of the inverted variant link\n * @cssproperty --dds-link-inverted-active-color - The active color of the inverted variant link\n * @cssproperty --dds-link-inverted-visited-color - The visited color of the inverted variant link\n *\n * @cssproperty --dds-link-warning-color - The color of the warning variant link\n * @cssproperty --dds-link-warning-hover-color - The hover color of the warning variant link\n * @cssproperty --dds-link-warning-active-color - The active color of the warning variant link\n * @cssproperty --dds-link-warning-visited-color - The visited color of the warning variant link\n *\n * @cssproperty --dds-link-disabled-color - The color of the disabled link\n * @cssproperty --dds-link-disabled-hover-color - The hover color of the disabled link\n * @cssproperty --dds-link-disabled-active-color - The active color of the disabled link\n * @cssproperty --dds-link-disabled-visited-color - The visited color of the disabled link\n *\n * @cssproperty --dds-link-lg-font-size - The font size of the large link\n * @cssproperty --dds-link-lg-line-height - The line height of the large link\n * @cssproperty --dds-link-md-font-size - The font size of the medium link\n * @cssproperty --dds-link-md-line-height - The line height of the medium link\n * @cssproperty --dds-link-sm-font-size - The font size of the small link\n * @cssproperty --dds-link-sm-line-height - The line height of the small link\n * @cssproperty --dds-link-xs-font-size - The font size of the extra small link\n * @cssproperty --dds-link-xs-line-height - The line height of the extra small link\n *\n * @cssproperty --dds-link-normal-font-weight - The font weight of the normal link\n * @cssproperty --dds-link-bold-font-weight - The font weight of the bold link\n *\n * @cssproperty --dds-link-no-underline-text-decoration - The text decoration when underline is removed\n */\n@customElement('dap-ds-link')\nexport default class DapDSLink extends DdsElement {\n  /** The size of the link\n   * @type {'lg' | 'md' | 'sm' | 'xs'}\n   */\n  @property({ reflect: true }) size?: LinkSize\n\n  /** The theme of the link\n   * @type {'neutral' | 'brand' | 'inverted' | 'warning'}\n   */\n  @property() variant: LinkVariant = 'brand'\n\n  /** The target of the link.\n   * @type {'_blank' | '_self' | '_parent' | '_top'}\n   */\n  @property() target: LinkTarget = '_self'\n\n  /** Bold link style */\n  @property({ type: Boolean }) bold: boolean\n\n  /** Removes underline style */\n  @property({ type: Boolean }) noUnderline: boolean\n\n  /** The href / URL of the link */\n  @property() href: string = '#'\n\n  /** Disabled state of the link */\n  @property({ type: Boolean, reflect: true }) disabled = false\n\n  /** The rel of the link */\n  @property({ type: String }) rel = 'noreferrer noopener'\n\n  /** The download attribute of the link */\n  @property({ type: Boolean }) download = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  private handleClick(event: Event) {\n    if (this.disabled) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n\n    if (!this.disabled && !this.href) {\n      this.emit('dds-click', event)\n    }\n  }\n\n  override focus() {\n    if (!this.disabled) {\n      ;(this.shadowRoot?.querySelector('[part=\"base\"]') as HTMLElement)?.focus()\n    }\n  }\n\n  render() {\n    return html`\n      <a\n        part=\"base\"\n        .disabled=${this.disabled}\n        aria-label=${ifDefined(this.ariaLabel ?? '')}\n        target=${this.target}\n        href=${this.href}\n        ?download=${this.download}\n        rel=${ifDefined(this.target ? this.rel : undefined)}\n        class=${clsx(\n          'link',\n          `link--${this.size}`,\n          { 'link--bold': this.bold },\n          { 'link--no-under-line': this.noUnderline },\n          { 'link--disabled': this.disabled },\n          `link--${this.variant}`,\n        )}\n        @click=${this.handleClick}>\n        <span part=\"text\" class=\"link__text\">\n          <slot></slot>\n        </span>\n      </a>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport {\n  customElement,\n  property,\n  query,\n  queryAssignedElements,\n} from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { Alignment, BackgroundShade, LinkTarget } from '@/common/types'\nimport { DdsElement } from '@/internal/dds-hu-element'\n\nimport styles from './list-item.scss?inline'\n\nexport type ListItemVariant =\n  | 'info'\n  | 'pass'\n  | 'fail'\n  | 'notapplicable'\n  | 'empty'\n  | 'number'\n\nexport type ListItemStatus = 'brand' | 'neutral' | 'positive' | 'negative'\n\n/**\n * `dap-ds-list-item` is a custom banner component.\n * @element dap-ds-list-item\n * @summary A list\n * @title - List item\n *\n * @slot - The content of the list item.\n * @slot icon - The icon of the list item.\n * @slot title - The title of the list item.\n * @slot actions - The actions of the list item.\n *\n * @csspart base - The main list item container.\n * @csspart icon - The icon of the list item.\n * @csspart title - The title of the list item.\n * @csspart description - The description of the list item.\n * @csspart container - The container of the list item.\n * @csspart list-item-base - The base list item container.\n * @csspart icon-container - The container of the icon.\n * @csspart title-container - The container of the title.\n * @csspart description-container - The container of the description.\n * @csspart actions-container - The container of the actions.\n * @csspart iteractive-indicator-container - The container of the interactive indicator.\n *\n * @cssproperty --dds-list-item-gap - Gap between list item elements (default: var(--dds-spacing-200))\n * @cssproperty --dds-list-item-content-gap - Gap between content elements (default: var(--dds-spacing-200))\n * @cssproperty --dds-list-item-horizontal-gap - Gap for horizontal alignment (default: var(--dds-spacing-300))\n * @cssproperty --dds-list-item-vertical-gap - Gap for vertical alignment (default: var(--dds-spacing-200))\n * @cssproperty --dds-list-item-icon-size - Size of the icon (default: var(--dds-spacing-600))\n * @cssproperty --dds-list-item-number-size - Size of the number icon (default: 20px)\n * @cssproperty --dds-list-item-actions-gap - Gap between action elements (default: var(--dds-spacing-400))\n * @cssproperty --dds-list-item-actions-padding - Padding for the actions container (default: var(--dds-spacing-100))\n *\n * @cssproperty --dds-list-item-background-base - Background color for base shade (default: var(--dds-background-neutral-base))\n * @cssproperty --dds-list-item-background-subtle - Background color for subtle shade (default: var(--dds-background-neutral-subtle))\n * @cssproperty --dds-list-item-background-medium - Background color for medium shade (default: var(--dds-background-neutral-medium))\n * @cssproperty --dds-list-item-background-strong - Background color for strong shade (default: var(--dds-background-neutral-strong))\n *\n * @cssproperty --dds-list-item-icon-brand - Color for brand icon (default: var(--dds-icon-brand-subtle))\n * @cssproperty --dds-list-item-icon-neutral - Color for neutral icon (default: var(--dds-icon-neutral-base))\n * @cssproperty --dds-list-item-icon-positive - Color for positive icon (default: var(--dds-icon-positive-subtle))\n * @cssproperty --dds-list-item-icon-negative - Color for negative icon (default: var(--dds-icon-negative-subtle))\n *\n * @cssproperty --dds-list-item-title-color - Title text color (default: var(--dds-text-neutral-strong))\n * @cssproperty --dds-list-item-description-color - Description text color (default: var(--dds-text-neutral-base))\n * @cssproperty --dds-list-item-number-text-color - Number text color (default: var(--dds-text-neutral-inverted))\n *\n */\n@customElement('dap-ds-list-item')\nexport default class DapDSListItem extends DdsElement {\n  @queryAssignedElements({ slot: 'actions' })\n  private readonly actionSlot: HTMLElement[]\n  @query('.list-item__actions') private readonly actionContainer: HTMLElement\n\n  /**\n   * The variant of the list item.\n   * @type {'info' | 'pass' | 'fail' | 'notapplicable' | 'empty' | 'number'}\n   */\n  @property() variant: ListItemVariant = 'info'\n\n  /**\n   * The background strongness of the list item.\n   * @type {'none' | 'subtle' | 'base' | 'medium' | 'strong'}\n   */\n  @property() shade: BackgroundShade = 'base'\n\n  /**\n   * The status of the list item.\n   * @type {'transparent' | 'brand' | 'neutral' | 'positive' | 'negative'}\n   */\n  @property() status: ListItemStatus = 'neutral'\n\n  /**\n   * The alignment of the list item.\n   * @type {'horizontal' | 'vertical'}\n   */\n  @property() alignment: Alignment = 'horizontal'\n\n  /**\n   * The title of the list item.\n   */\n  @property() title: string\n\n  /**\n   * The icon of the list item. This is an icon name from the built in icons.\n   */\n  @property() icon: string\n\n  /**\n   * The number of the list item. Only used when variant is 'number'.\n   */\n  @property({ type: Number }) number: number\n\n  /**\n   * Whether the list item is interactive. Generates an anchor tag.\n   */\n  @property({ type: Boolean }) interactive: boolean\n\n  /** The link target of the list item when interactive.\n   * @type { '_blank' | '_self' | '_parent' | '_top' }\n   */\n  @property() target: LinkTarget = '_self'\n\n  /** The href of the list item when interactive */\n  @property() href: string\n\n  /** The rel of the list item when interactive */\n  @property() rel = 'noreferrer noopener'\n\n  /**\n   * Whether the list item has an icon.\n   */\n  @property({ type: Boolean }) noIcon: boolean\n\n  /**\n   * Whether the list item has no padding.\n   */\n  @property({ type: Boolean }) noPadding: boolean\n\n  /**\n   * The render as type of the list item, only applicable when interactive.\n   * @type {'a' | 'button'}\n   */\n  @property({ type: String }) renderAs: 'a' | 'button' = 'a'\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    if (this.actionSlot && !this.actionSlot.length && this.actionContainer) {\n      this.actionContainer.style.display = 'none'\n    }\n  }\n\n  private readonly getIcon = (\n    icon: string,\n    variant: ListItemVariant,\n    status: ListItemStatus,\n    number?: number,\n  ) => {\n    let staticIcon: string\n\n    if (icon) {\n      return html`\n        <dap-ds-icon\n          class=${clsx('list-item__icon', {\n            [`list-item__icon--${status}`]: status,\n          })}\n          name=\"${icon}\"></dap-ds-icon>\n      `\n    }\n\n    if (variant === 'number') {\n      return html`\n        <div\n          class=${clsx('list-item__icon', {\n            [`list-item__icon--${status}`]: status,\n          })}>\n          ${number}\n        </div>\n      `\n    }\n\n    switch (variant) {\n      case 'info':\n        staticIcon = 'lightbulb-fill'\n        break\n      case 'pass':\n        staticIcon = 'checkbox-circle-fill'\n        break\n      case 'fail':\n        staticIcon = 'close-circle-fill'\n        break\n      case 'notapplicable':\n        staticIcon = 'forbid-fill'\n        break\n      case 'empty':\n        staticIcon = 'checkbox-blank-circle-line'\n        break\n      default:\n        staticIcon = 'lightbulb-fill'\n        break\n    }\n\n    return html`\n      <dap-ds-icon\n        class=${clsx('list-item__icon', {\n          [`list-item__icon--${status}`]: status,\n        })}\n        name=\"${staticIcon}\"></dap-ds-icon>\n    `\n  }\n\n  render() {\n    return html`\n      <dap-ds-card\n        noBorder\n        ?interactive=${this.interactive}\n        renderAs=${this.renderAs}\n        target=${this.target}\n        href=${ifDefined(this.href)}\n        rel=${this.target}\n        ?noPadding=${this.noPadding}\n        part=\"base\"\n        exportparts=\"base:list-item-base\"\n        class=${clsx(\n          'list-item',\n          `list-item--${this.variant}`,\n          `list-item--${this.status}`,\n          `list-item--${this.shade}`,\n          `list-item--${this.alignment}`,\n        )}>\n        <dap-ds-card-content spacing=\"none\" exportparts=\"base:card-base\">\n          <div class=${clsx('list-item__container')} part=\"container\">\n            ${!this.noIcon\n              ? html`<div class=\"list-item__icon\" part=\"icon-container\">\n                  <slot part=\"icon\" name=\"icon\">\n                    ${this.getIcon(\n                      this.icon,\n                      this.variant,\n                      this.status,\n                      this.number,\n                    )}\n                  </slot>\n                </div>`\n              : nothing}\n            <div class=${clsx('list-item__content')}>\n              ${this.title\n                ? html`<span\n                    part=\"title\"\n                    class=\"list-item__title\"\n                    part=\"title-container\">\n                    <slot name=\"title\">${this.title}</slot>\n                  </span>`\n                : nothing}\n              <span\n                part=\"description\"\n                class=\"list-item__description\"\n                part=\"description-container\">\n                <slot></slot>\n              </span>\n              <span\n                part=\"actions\"\n                class=\"list-item__actions\"\n                part=\"actions-container\">\n                <slot name=\"actions\" part=\"actions\"></slot>\n              </span>\n            </div>\n            ${this.interactive\n              ? html`<div\n                  class=\"list-item__iteractive-indicator\"\n                  part=\"iteractive-indicator-container\">\n                  <dap-ds-icon name=\"arrow-right-l-line\"></dap-ds-icon>\n                </div>`\n              : nothing}\n          </div>\n        </dap-ds-card-content>\n      </dap-ds-card>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { html, nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport { property, query } from 'lit/decorators.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { translate } from '@/localization/localization'\n\nimport { ButtonVariant } from '../button/button.component'\nimport styles from './modal.scss?inline'\n\ntype CloseSource =\n  | 'ok-button'\n  | 'cancel-button'\n  | 'close-button'\n  | 'esc'\n  | 'overlay'\n\nexport default class ModalBaseElement extends DdsElement {\n  @query('.modal') dialog!: HTMLDialogElement\n  @query('.modal__box') modalBox!: HTMLElement\n  @property({ type: Boolean, reflect: true }) open?: boolean = false\n  @property({ type: Boolean, reflect: true }) fullScreen?: boolean = false\n  @property({ type: String, reflect: true })\n  closeOnEsc = 'true'\n  @property({\n    type: String,\n    reflect: true,\n  })\n  closeOnOverlayClick = 'true'\n  @property({ type: String, reflect: true }) closeButton = 'true'\n  @property() title: string\n  @property() description: string\n  @property() okButtonLabel: string\n  @property() cancelButtonLabel: string\n  @property() closeButtonLabel: string\n  @property() okButtonVariant: ButtonVariant = 'primary'\n  @property() cancelButtonVariant: ButtonVariant = 'outline'\n  @property({ type: Boolean }) okButtonDisabled = false\n  @property({ type: Boolean }) cancelButtonDisabled = false\n  @property({ type: Boolean }) cancelButtonDanger = false\n  @property({ type: Boolean }) okButtonDanger = false\n  @property({ type: Boolean }) hideOkButton = false\n  @property({ type: Boolean }) hideCancelButton = false\n  @property({ type: String }) footer = 'true'\n  @property({ type: String }) header = 'true'\n  @property({ type: Boolean }) wideFooter = false\n  @property({ type: Boolean }) bottomFooter = false\n  @property({ type: Boolean }) useNativeFocus = false\n  private previouslyFocusedElement: Element | null = null\n  private focusableElements: HTMLElement[] = []\n\n  private canceled = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null,\n  ): void {\n    if (name === 'title') {\n      this.header = value ? 'true' : 'false'\n    }\n    super.attributeChangedCallback(name, _old, value)\n  }\n\n  protected updated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.updated(_changedProperties)\n    if (\n      _changedProperties.has('open') &&\n      _changedProperties.get('open') !== undefined\n    ) {\n      if (this.open) {\n        this.handleOpen()\n      } else {\n        this.handleCloseAction()\n      }\n    }\n  }\n\n  private handleOpen(): void {\n    const beforeOpenEvent = this.emit('dds-before-open', undefined, {\n      cancelable: true,\n    })\n\n    if (beforeOpenEvent.defaultPrevented) {\n      return\n    }\n\n    this.scrollLock(true)\n    this.previouslyFocusedElement = this.getActiveElement()\n    this.dialog.showModal()\n    this.dialog.addEventListener(\n      'transitionend',\n      () => {\n        const openedEvent = this.emit('dds-opened', undefined, {\n          cancelable: true,\n        })\n\n        if (openedEvent.defaultPrevented) {\n          return\n        }\n\n        this.focusableElements = this.getFocusableElements()\n        if (this.focusableElements.length > 0) {\n          this.focusableElements[0].focus()\n        }\n      },\n      { once: true },\n    )\n    this.setAttribute('aria-hidden', 'false')\n  }\n\n  private handleCloseAction(): void {\n    const beforeCloseEvent = this.emit('dds-before-close', undefined, {\n      cancelable: true,\n    })\n\n    if (beforeCloseEvent.defaultPrevented) {\n      return\n    }\n\n    this.dialog.close()\n    this.scrollLock(false)\n    this.dialog.addEventListener(\n      'transitionend',\n      () => {\n        const closedEvent = this.emit('dds-closed', undefined, {\n          cancelable: true,\n        })\n\n        if (closedEvent.defaultPrevented) {\n          return\n        }\n\n        if (this.previouslyFocusedElement instanceof HTMLElement) {\n          this.previouslyFocusedElement.focus()\n        }\n      },\n      { once: true },\n    )\n    this.setAttribute('aria-hidden', 'true')\n  }\n\n  scrollLock = (open: boolean) => {\n    if (open) {\n      document.body.style.overflow = 'hidden'\n      document.body.dataset.modalOpen = 'true'\n    } else {\n      document.body.style.overflow = ''\n      delete document.body.dataset.modalOpen\n    }\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n    if (this.open) {\n      this.setAttribute('aria-hidden', 'false')\n\n      this.dialog.showModal()\n    } else {\n      this.setAttribute('aria-hidden', 'true')\n    }\n  }\n\n  public show(): void {\n    this.open = true\n  }\n\n  public hide(): void {\n    this.open = false\n  }\n\n  private handleClose(source: CloseSource) {\n    const handleCloseEvent = this.emit(\n      'dds-close',\n      {\n        source,\n      },\n      {\n        cancelable: true,\n      },\n    )\n\n    if (handleCloseEvent.defaultPrevented) {\n      return\n    }\n\n    this.hide()\n  }\n\n  private handleCancel(event: Event): void {\n    // This method is called when the dialog's cancel event fires (Escape key)\n    // We only want to handle it when closeOnEsc is false\n    if (this.closeOnEsc !== 'true') {\n      event.preventDefault()\n      this.canceled = true\n      return\n    }\n\n    // If closeOnEsc is true, let the keydown handler deal with it\n    event.preventDefault()\n  }\n\n  private handleEscClose(event: Event): void {\n    // This method is called when the dialog's close event fires\n    // We only want to handle it when it's not from an escape key press\n    // or when closeOnEsc is false\n    if (this.canceled || this.closeOnEsc !== 'true') {\n      event.preventDefault()\n      return\n    }\n\n    // If it's from escape key and closeOnEsc is true, let the keydown handler deal with it\n    event.preventDefault()\n  }\n\n  private handleOkButton(): void {\n    const handleCloseEvent = this.emit(\n      'dds-ok',\n      {\n        source: 'ok-button',\n      },\n      {\n        cancelable: true,\n      },\n    )\n\n    if (handleCloseEvent.defaultPrevented) {\n      return\n    }\n\n    this.handleClose('ok-button')\n  }\n\n  private handleCancelButton(): void {\n    const handleCloseEvent = this.emit(\n      'dds-cancel',\n      {\n        source: 'cancel-button',\n      },\n      {\n        cancelable: true,\n      },\n    )\n\n    if (handleCloseEvent.defaultPrevented) {\n      return\n    }\n\n    this.handleClose('cancel-button')\n  }\n\n  private handleClick(event: MouseEvent): void {\n    if (this.closeOnOverlayClick === 'true' && event.target === this.dialog) {\n      this.handleClose('overlay')\n    }\n  }\n\n  private handleKeDown(event: KeyboardEvent): void {\n    if (event.key === 'Tab' && !this.useNativeFocus) {\n      this.handleFocusTrap(event)\n      return\n    }\n\n    if (event.key === 'Escape') {\n      if (this.closeOnEsc === 'true') {\n        // Only handle escape if closeOnEsc is true\n        this.handleClose('esc')\n      } else {\n        // Prevent default behavior when closeOnEsc is false\n        event.preventDefault()\n        event.stopImmediatePropagation()\n      }\n    }\n  }\n\n  private getFocusableElements(): HTMLElement[] {\n    const focusableSelectors = [\n      'button',\n      '[href]',\n      'input',\n      'select',\n      'textarea',\n      '[tabindex]:not([tabindex=\"-1\"])',\n      '[role=\"button\"]',\n      '[role=\"link\"]',\n      '[role=\"menuitem\"]',\n      '[role=\"tab\"]',\n      '[role=\"option\"]',\n      '[role=\"radio\"]',\n      '[role=\"checkbox\"]',\n      '[role=\"switch\"]',\n      '[role=\"combobox\"]',\n      '[role=\"listbox\"]',\n      '[role=\"textbox\"]',\n      '[contenteditable=\"true\"]',\n      'dap-ds-input',\n      'dap-ds-textarea',\n      'dap-ds-select',\n      'dap-ds-button',\n      'dap-ds-icon-button',\n      'dap-ds-search-input',\n      'dap-ds-combobox',\n      'dap-ds-checkbox',\n      'dap-ds-radio',\n      'dap-ds-switch',\n      'dap-ds-slider',\n      'dap-ds-file-input',\n      'dap-ds-calendar',\n      'dap-ds-date-picker',\n      'slot',\n    ]\n\n    const getAllFocusableElements = (\n      root: Element | ShadowRoot,\n    ): HTMLElement[] => {\n      const elements: HTMLElement[] = []\n\n      // Get all elements matching the selectors in the current root\n      const matches = root.querySelectorAll(focusableSelectors.join(','))\n      matches.forEach(element => {\n        if (element instanceof HTMLSlotElement) {\n          const assignedElements = element.assignedElements()\n          assignedElements.forEach(assignedElement => {\n            if (assignedElement instanceof HTMLElement) {\n              elements.push(assignedElement)\n            }\n          })\n        } else if (element instanceof HTMLElement) {\n          elements.push(element)\n        }\n      })\n\n      return elements\n    }\n\n    return getAllFocusableElements(this.modalBox)\n  }\n\n  private getActiveElement(): Element | null {\n    const activeElement = document.activeElement\n    if (!activeElement) return null\n\n    // If the active element is a web component, try to get the focused element inside its shadow root\n    if (activeElement.shadowRoot) {\n      const focusedElement = activeElement.shadowRoot.activeElement\n      if (focusedElement) {\n        return focusedElement\n      }\n    }\n\n    return activeElement\n  }\n\n  private getElementFromElement(element: Element): HTMLElement {\n    if (element.shadowRoot) {\n      return element.shadowRoot.activeElement as HTMLElement\n    }\n    return element as HTMLElement\n  }\n\n  private handleFocusTrap(event: KeyboardEvent): void {\n    if (event.key !== 'Tab' || this.useNativeFocus) return\n\n    if (this.focusableElements.length === 0) {\n      this.focusableElements = this.getFocusableElements()\n    }\n\n    const firstFocusableElement = this.focusableElements[0]\n    const lastFocusableElement = this.getElementFromElement(\n      this.focusableElements[this.focusableElements.length - 1],\n    )\n\n    const activeElement = this.getActiveElement()\n\n    if (!activeElement) return\n\n    if (event.shiftKey) {\n      if (activeElement === firstFocusableElement) {\n        event.preventDefault()\n        if (lastFocusableElement) {\n          lastFocusableElement.focus()\n        }\n      }\n    } else {\n      if (activeElement === lastFocusableElement) {\n        event.preventDefault()\n        if (firstFocusableElement) {\n          firstFocusableElement.focus()\n        }\n      }\n    }\n  }\n\n  renderModal() {\n    return html`<dialog\n      part=\"base\"\n      class=${clsx('modal', {\n        'modal--open': this.open,\n        'modal--full': this.fullScreen,\n      })}\n      aria-label=${`${this.title ?? ''} ${this.description ?? ''}`}\n      role=\"dialog\"\n      @close=${this.handleEscClose}\n      @cancel=${this.handleCancel}\n      @click=${this.handleClick}\n      @keydown=${this.handleKeDown}>\n      <div\n        part=\"panel\"\n        class=\"modal__box\"\n        aria-modal=\"true\"\n        aria-hidden=${this.open ? 'false' : 'true'}>\n        <div class=\"modal__header-container\" part=\"header-container\">\n          ${this.header === 'true'\n            ? html`<header class=\"modal__header\" part=\"header\" id=\"header\">\n                <slot name=\"title\">\n                  <dap-ds-typography variant=\"h3\" part=\"title\"\n                    >${this.title}</dap-ds-typography\n                  >\n                </slot>\n                <slot name=\"description\">\n                  <span\n                    class=\"modal__description\"\n                    part=\"description\"\n                    id=\"description\">\n                    ${this.description}\n                  </span>\n                </slot>\n              </header>`\n            : html`<span></span>`}\n          ${this.closeButton === 'true'\n            ? html`<dap-ds-icon-button\n                part=\"closebutton\"\n                class=\"modal__close\"\n                aria-label=${this.closeButtonLabel\n                  ? this.closeButtonLabel\n                  : translate('close')}\n                @click=${() => this.handleClose('close-button')}>\n                <dap-ds-icon name=\"close-line\"></dap-ds-icon>\n              </dap-ds-icon-button>`\n            : nothing}\n        </div>\n        <div\n          class=${clsx('modal__content', {\n            'modal__content--bottom': this.bottomFooter,\n          })}\n          part=\"content\">\n          <slot></slot>\n        </div>\n        ${this.footer === 'true'\n          ? html`<footer\n              class=${clsx('modal__footer', {\n                'modal__footer--wide': this.wideFooter,\n              })}\n              part=\"footer\">\n              <slot name=\"footer\">\n                ${this.hideOkButton\n                  ? nothing\n                  : html`<dap-ds-button\n                      @click=${this.handleOkButton}\n                      variant=${this.okButtonVariant}\n                      ?danger=${this.okButtonDanger}\n                      ?disabled=${this.okButtonDisabled}\n                      ?hidden=${this.hideOkButton}\n                      >${this.okButtonLabel ?? translate('ok')}</dap-ds-button\n                    >`}\n                ${this.hideCancelButton\n                  ? nothing\n                  : html`<dap-ds-button\n                      variant=${this.cancelButtonVariant}\n                      ?danger=${this.cancelButtonDanger}\n                      ?disabled=${this.cancelButtonDisabled}\n                      ?hidden=${this.hideCancelButton}\n                      @click=${this.handleCancelButton}\n                      >${this.cancelButtonLabel ??\n                      translate('cancel')}</dap-ds-button\n                    >`}\n              </slot>\n            </footer>`\n          : nothing}\n      </div>\n    </dialog>`\n  }\n}\n","import { customElement } from 'lit/decorators.js'\n\nimport ModalBaseElement from './modal-base-element'\n\n/**\n * `dap-ds-modal`\n * @summary A modal is a container for modal content.\n * @element dap-ds-modal\n * @title - Modal\n *\n * @property {boolean} open - The open state of the modal.\n * @property {boolean} fullScreen - The full screen version of the modal.\n * @property {boolean} wideFooter - Wide layout mode for footer.\n * @property {boolean} bottomFooter - Pushes the footer to bottom.\n * @property {boolean} closeOnEsc - Whether the modal should close on pressing the escape key. Default is true.\n * @property {boolean} closeOnOverlayClick - Whether the modal should close on clicking the overlay. Default is true.\n * @property {string} closeButton - Whether the modal should have a close button. Default is true.\n * @property {string} title - The title of the modal.\n * @property {string} description - The description of the modal.\n * @property {string} okButtonLabel - The label of the OK button.\n * @property {string} cancelButtonLabel - The label of the Cancel button.\n * @property {boolean} okButtonDisabled - Whether the OK button should be disabled.\n * @property {boolean} cancelButtonDisabled - Whether the Cancel button should be disabled.\n * @property {boolean} cancelButtonDanger - Whether the Cancel button should be a danger button.\n * @property {boolean} okButtonDanger - Whether the OK button should be a danger button.\n * @property {boolean} hideOkButton - Whether the OK button should be hidden.\n * @property {boolean} hideCancelButton - Whether the Cancel button should be hidden.\n * @property {string} footer - Whether the modal should have a footer. Default is true.\n * @property {string} header - Whether the modal should have a header. Default is true.\n * @property {boolean} useNativeFocus - Whether the modal should use native focus. Default is false.\n *\n * @event {{ void }} dds-before-open - Fires before the modal opens.\n * @event {{ void }} dds-opened - Fires after the modal opens.\n * @event {{ void }} dds-before-close - Fires before the modal closes.\n * @event {{ void }} dds-closed - Fires after the modal closed.\n * @event {{ void }} dds-close - Fires when the modal is closes. You can prevent the modal from closing by calling `event.preventDefault()`.\n * @event {{ void }} dds-ok - Fires when the OK button is clicked. You can prevent the modal from closing by calling `event.preventDefault()`.\n * @event {{ void }} dds-cancel - Fires when the Cancel button is clicked. You can prevent the modal from closing by calling `event.preventDefault()`.\n *\n * @slot - The content of the modal.\n * @slot title - The title of the modal.\n * @slot description - The description of the modal.\n * @slot footer - The footer of the modal.\n *\n * @csspart base - The main modal container.\n * @csspart panel - The panel of the modal.\n * @csspart header - The header of the modal.\n * @csspart title - The title of the modal.\n * @csspart description - The description of the modal.\n * @csspart footer - The footer of the modal.\n * @csspart content - The body of the modal.\n * @csspart closebutton - The close button of the modal.\n *\n * @cssproperty --dds-modal-max-block-size - Maximum height of the modal. Default: 80vh.\n * @cssproperty --dds-modal-max-inline-size - Maximum width of the modal. Default: 600px.\n * @cssproperty --dds-modal-padding - Padding inside the modal. Default: var(--dds-spacing-800).\n * @cssproperty --dds-modal-transform-amount - Amount to transform for entrance animation. Default: 2rem.\n * @cssproperty --dds-modal-transition-speed - Speed of transition animations. Default: var(--dds-transition-fast).\n * @cssproperty --dds-modal-transition-timing - Timing function for transitions. Default: var(--dds-easing-ease-in-out).\n * @cssproperty --dds-modal-border-width - Border width of the modal. Default: var(--dds-border-width-base).\n * @cssproperty --dds-modal-border-color - Border color of the modal. Default: var(--dds-border-neutral-divider).\n * @cssproperty --dds-modal-border-radius - Border radius of the modal. Default: var(--dds-radius-large, 16px).\n * @cssproperty --dds-modal-background - Background color of the modal. Default: var(--dds-background-neutral-subtle).\n * @cssproperty --dds-modal-header-margin - Margin below the header. Default: var(--dds-spacing-800).\n * @cssproperty --dds-modal-footer-margin - Margin above the footer. Default: var(--dds-spacing-400).\n * @cssproperty --dds-modal-footer-gap - Gap between footer elements. Default: var(--dds-spacing-400).\n * @cssproperty --dds-modal-close-margin - Margin for the close button. Default: var(--dds-spacing-300).\n *\n */\n@customElement('dap-ds-modal')\nexport default class DapDSModal extends ModalBaseElement {\n  constructor() {\n    super()\n    this.bottomFooter = true\n  }\n\n  render() {\n    return this.renderModal()\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './navigation-menu.scss?inline'\nimport DapDSNavigationMenuItem from './navigation-menu-item.component'\n\n/**\n * `dap-ds-navigation-menu`\n * @summary A horizontal navigation menu container that can contain multiple navigation items.\n * @element dap-ds-navigation-menu\n * @title - Navigation Menu\n *\n * @property {string} activeHref - The currently active href for highlighting active navigation items.\n * @property {'horizontal' | 'vertical'} orientation - The orientation of the navigation menu.\n *\n * @event {{ href: string, event: Event }} dds-navigation-item-click - Fired when a navigation item is clicked.\n *\n * @slot - The navigation menu list and items.\n *\n * @csspart base - The main navigation menu container.\n */\n@customElement('dap-ds-navigation-menu')\nexport default class DapDSNavigationMenu extends DdsElement {\n  static readonly styles = unsafeCSS(styles)\n\n  /** The currently active href for highlighting active navigation items. */\n  @property({ type: String }) activeHref?: string\n\n  /** The orientation of the navigation menu.\n   * @type {'horizontal' | 'vertical'}\n   */\n  @property({ reflect: true }) orientation: 'horizontal' | 'vertical' =\n    'horizontal'\n\n  /** Whether the navigation menu should take full width of the screen. */\n  @property({ type: Boolean }) fullWidth = false\n\n  connectedCallback() {\n    super.connectedCallback()\n    if (!this.activeHref) {\n      this.activeHref = window.location.pathname\n    }\n\n    this.addEventListener(\n      'dds-navigation-item-click',\n      this._handleNavigationItemClick,\n    )\n\n    // Listen for dropdown open events to close others\n    this.addEventListener(\n      'dds-navigation-dropdown-open',\n      this._handleDropdownOpen,\n    )\n  }\n\n  updated(changedProperties: Map<string, unknown>) {\n    super.updated(changedProperties)\n\n    if (changedProperties.has('activeHref')) {\n      this._updateActiveHref()\n    }\n\n    if (changedProperties.has('fullWidth')) {\n      this._updateChildFullWidth()\n    }\n  }\n\n  firstUpdated(changedProperties: Map<string, unknown>) {\n    super.firstUpdated(changedProperties)\n    this._updateChildFullWidth()\n  }\n\n  private _updateChildFullWidth() {\n    const navigationItems = this.querySelectorAll('dap-ds-navigation-menu-item')\n    navigationItems.forEach(item => {\n      ;(item as DapDSNavigationMenuItem).fullWidth = this.fullWidth\n    })\n  }\n\n  private _updateActiveHref() {\n    const navigationItems = this.querySelectorAll('dap-ds-navigation-menu-item')\n    navigationItems.forEach(item => {\n      ;(item as DapDSNavigationMenuItem).activeHref = this.activeHref\n    })\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback()\n    this.removeEventListener(\n      'dds-navigation-item-click',\n      this._handleNavigationItemClick,\n    )\n    this.removeEventListener(\n      'dds-navigation-dropdown-open',\n      this._handleDropdownOpen,\n    )\n  }\n\n  private _handleNavigationItemClick = (event: Event) => {\n    const customEvent = event as CustomEvent\n    // Re-emit the event to parent components if needed\n    this.emit('dds-navigation-item-click', customEvent.detail)\n  }\n\n  private _handleDropdownOpen = (event: Event) => {\n    const openingItem = event.target as DapDSNavigationMenuItem\n\n    const allItems = this.querySelectorAll('dap-ds-navigation-menu-item')\n    allItems.forEach(item => {\n      if (item !== openingItem && (item as DapDSNavigationMenuItem).opened) {\n        ;(item as DapDSNavigationMenuItem).hideDropDown()\n      }\n    })\n  }\n\n  render() {\n    return html`\n      <nav\n        part=\"base\"\n        class=${clsx('navigation-menu', {\n          'navigation-menu--vertical': this.orientation === 'vertical',\n        })}\n        role=\"navigation\"\n        aria-label=${ifDefined(this.ariaLabel || '')}>\n        <slot></slot>\n      </nav>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport {\n  customElement,\n  property,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { createKeyboardNavigationHandler } from '../../internal/keyboard-navigation.js'\nimport DapDSPopup from '../popup/popup.component.js'\nimport popupStyles from '../popup/popup.scss?inline'\nimport styles from './navigation-menu-item.scss?inline'\n\n/**\n * `dap-ds-navigation-menu-item`\n * @summary A navigation menu item that can contain either a simple link or dropdown content.\n * @element dap-ds-navigation-menu-item\n * @title - Navigation Menu Item\n * @group navigation-menu\n *\n * @property {'xs' | 'sm' | 'lg'} size - The size of the popup.\n * @property {boolean} disabled - The disabled state of the popup.\n * @property {boolean} opened - The open state of the popup.\n * @property {'top' | 'right' | 'bottom' | 'left' | 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end' | 'left-start' | 'left-end' | 'right-start' | 'right-end'} placement - The placement of the popup.\n * @property {'absolute' | 'fixed'} floatingStrategy - The floating strategy of the popup.\n * @property {number} offset - The offset of the popup.\n * @property {boolean} sync - Whether the popup should sync its width with the trigger.\n * @property {number | 'auto'} maxHeight - The maximum height of the popup.\n * @property {number | 'auto'} maxWidth - The maximum width of the popup.\n * @property {boolean} hasArrow - Whether the popup has an arrow.\n * @property {boolean} overflow - Whether the popup should overflow.\n * @property {boolean} fullWidth - Whether the popup should take full width of the screen.\n * @property {boolean} exactHref - Whether the navigation item should be active if the href is exactly the same as the activeHref.\n * @property {string} icon - The name of the icon to display in the trigger.\n * @property {string} ariaLabelledBy - The name of the element that labels the navigation dropdown.\n * @property {string} activeHref - The href of the navigation item that is active.\n * @property {string} baseHref - The href of the navigation item. If provided, the navigation item will be active if the href is a substring of the activeHref. It is useful for dropdowns that are not direct children of the navigation menu.\n * @property {boolean} exactHref - Whether the navigation item should be active if the href is exactly the same as the activeHref.\n *\n * @event {{ href: string, event: Event }} dds-navigation-item-click - Fired when a navigation item is clicked.\n * @event {{ item: DapDSNavigationMenuItem }} dds-navigation-dropdown-open - Fired when a navigation dropdown is opened.\n *\n * @slot trigger - The trigger element (link, button, etc.) for this navigation item.\n * @slot title - The title of the navigation item.\n * @slot - The dropdown content (only used if trigger slot is provided).\n *\n * @csspart base - The base part of the navigation item.\n * @csspart trigger - The trigger element part.\n * @csspart content - The dropdown content part.\n */\n@customElement('dap-ds-navigation-menu-item')\nexport default class DapDSNavigationMenuItem extends DapDSPopup {\n  constructor() {\n    super()\n    this.placement = 'bottom-start'\n    this.overflow = true\n    this.floatingStrategy = 'fixed'\n  }\n\n  static readonly styles = unsafeCSS(`${styles}${popupStyles}`)\n\n  @queryAssignedElements({ slot: 'trigger' })\n  private readonly _assignedTrigger!: HTMLElement[]\n\n  /** The name of the icon to display in the trigger. */\n  @property({ type: String, reflect: true }) icon?: string\n\n  /** ID of element that labels the navigation dropdown. */\n  @property({ type: String, attribute: 'aria-labelledby' })\n  ariaLabelledBy?: string\n\n  /** The href of the navigation item that is active. */\n  @property({ type: String, reflect: true }) activeHref?: string\n\n  /** The href of the navigation item. If provided, the navigation item will be active if the href is a substring of the activeHref. It is useful for dropdowns that are not direct children of the navigation menu. */\n  @property({ type: String, reflect: true }) baseHref?: string\n\n  /** Whether the navigation item should be active if the href is exactly the same as the activeHref. */\n  @property({ type: Boolean, reflect: true }) exactHref = false\n\n  @state() private hasContent = false\n  @state() private _lastClickedItem: HTMLElement | null = null\n  @state() private active = false\n\n  private _keyboardNavigation: ReturnType<\n    typeof createKeyboardNavigationHandler\n  > | null = null\n\n  private get _trigger(): HTMLElement[] {\n    // If there are assigned elements in the trigger slot, use those\n    if (this._assignedTrigger && this._assignedTrigger.length > 0) {\n      return this._assignedTrigger\n    }\n    // Otherwise, find the default button in the shadow DOM\n    const defaultButton = this.shadowRoot?.querySelector(\n      'slot[name=\"trigger\"] dap-ds-button',\n    )\n    return defaultButton ? [defaultButton as HTMLElement] : []\n  }\n\n  async connectedCallback() {\n    await super.connectedCallback()\n    this.addEventListener('click', this._handleClick)\n    this.addEventListener('keydown', this._handleKeyDown)\n    this.handleDocumentMouseDown = this.handleDocumentMouseDown.bind(this)\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback()\n    this.removeEventListener('click', this._handleClick)\n    this.removeEventListener('keydown', this._handleKeyDown)\n    document.removeEventListener('mousedown', this.handleDocumentMouseDown)\n  }\n\n  async updated(changedProperties: Map<string, unknown>) {\n    super.updated(changedProperties)\n\n    if (changedProperties.has('opened') && this.opened && this.hasContent) {\n      this._initializeKeyboardNavigation()\n    }\n\n    if (changedProperties.has('activeHref')) {\n      this._updateActiveState()\n    }\n  }\n\n  private _handleClick = (event: Event) => {\n    if (this.hasContent) {\n      const target = event.target as HTMLElement\n      const triggerElements = this._trigger\n      const isClickOnTrigger =\n        target === this ||\n        triggerElements.some(\n          trigger => trigger === target || trigger.contains(target),\n        )\n\n      if (isClickOnTrigger) {\n        event.preventDefault()\n        event.stopPropagation()\n        this.opened ? this.hideDropDown() : this.showDropDown()\n      }\n    } else {\n      const triggerElements = this._trigger\n      const href = triggerElements[0]?.getAttribute('href')\n      if (href) {\n        this.emit('dds-navigation-item-click', {\n          href,\n          event,\n        })\n      }\n    }\n  }\n\n  private _handleKeyDown = (event: KeyboardEvent) => {\n    if (!this.hasContent) {\n      // For simple navigation items, handle Enter/Space\n      if (event.key === 'Enter' || event.key === ' ') {\n        event.preventDefault()\n        const triggerElements = this._trigger\n        triggerElements[0]?.click()\n      }\n      return\n    }\n\n    // Handle dropdown keyboard navigation\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'ArrowUp':\n      case 'Home':\n      case 'End':\n      case 'Enter':\n      case ' ':\n        if (!this.opened) {\n          if (\n            event.key === 'ArrowDown' ||\n            event.key === 'ArrowUp' ||\n            event.key === 'Enter' ||\n            event.key === ' '\n          ) {\n            event.preventDefault()\n            this.showDropDown()\n          }\n          return\n        }\n\n        if (this._keyboardNavigation?.handleKeyDown(event)) {\n          // Key was handled by navigation manager\n          if (event.key === 'Enter' || event.key === ' ') {\n            this._handleFocusOut()\n          }\n        }\n        break\n\n      case 'Tab':\n        if (this.opened) {\n          // Handle Tab navigation when dropdown is open\n          if (this._keyboardNavigation?.handleKeyDown(event)) {\n            // Tab navigation was handled by the keyboard navigation manager\n            // No need to close the dropdown, just let navigation continue\n          }\n        }\n        break\n\n      case 'Escape':\n        event.preventDefault()\n        this._handleFocusOut()\n        break\n    }\n  }\n\n  private handleDocumentMouseDown = (event: MouseEvent) => {\n    const path = event.composedPath()\n    if (this && !path.includes(this)) {\n      this.hideDropDown()\n    }\n  }\n\n  private _initializeKeyboardNavigation() {\n    if (!this.hasContent) return\n\n    this._keyboardNavigation = createKeyboardNavigationHandler(this, {\n      enabledSelector:\n        'dap-ds-button:not([disabled]), dap-ds-link:not([disabled]), dap-ds-navigation-menu-item:not([disabled]), a:not([disabled]), button:not([disabled]), input:not([disabled]), select:not([disabled]), textarea:not([disabled]), [role=\"menuitem\"]:not([disabled]), dap-ds-command-item:not([disabled])',\n      onItemClick: item => {\n        this._lastClickedItem = item\n      },\n    })\n\n    // Initialize focus after next update\n    this.updateComplete.then(() => {\n      this._keyboardNavigation?.initializeFocus(\n        this._lastClickedItem || undefined,\n      )\n    })\n  }\n\n  private _handleFocusOut() {\n    this.hideDropDown()\n    this.focus()\n  }\n\n  public focus() {\n    const triggerElements = this._trigger\n    if (triggerElements && triggerElements.length > 0) {\n      triggerElements[0].focus()\n    }\n  }\n\n  async showDropDown() {\n    if (this.opened || !this.hasContent) {\n      return\n    }\n\n    this.emit('dds-navigation-dropdown-open', { item: this })\n\n    this.opened = true\n    const triggerElements = this._trigger\n    triggerElements[0]?.setAttribute('aria-expanded', 'true')\n\n    document.addEventListener('mousedown', this.handleDocumentMouseDown)\n\n    await this.updateComplete\n  }\n\n  async hideDropDown() {\n    if (!this.opened) {\n      return\n    }\n\n    this.opened = false\n    const triggerElements = this._trigger\n    triggerElements[0]?.setAttribute('aria-expanded', 'false')\n\n    document.removeEventListener('mousedown', this.handleDocumentMouseDown)\n\n    this._keyboardNavigation?.reset()\n\n    await this.updateComplete\n  }\n\n  public _handleTriggerSlotChangeCallback() {\n    this.updateComplete.then(() => {\n      const triggerElements = this._trigger\n      if (triggerElements && triggerElements.length > 0) {\n        triggerElements[0].setAttribute('aria-controls', 'dropdown')\n        triggerElements[0].setAttribute('aria-expanded', 'false')\n        triggerElements[0].setAttribute(\n          'aria-haspopup',\n          this.hasContent ? 'menu' : 'false',\n        )\n        triggerElements[0].style.display = 'flex'\n        this._updateActiveState()\n      }\n    })\n  }\n\n  private _updateActiveState() {\n    const triggerElements = this._trigger\n    if (\n      (!triggerElements || triggerElements.length === 0 || !this.activeHref) &&\n      !this.baseHref\n    ) {\n      this.active = false\n    } else if (this.baseHref) {\n      if (this.exactHref) {\n        this.active = this.baseHref === this.activeHref\n      } else {\n        this.active = this.activeHref?.startsWith(this.baseHref) || false\n      }\n    } else {\n      const triggerHref = triggerElements[0].getAttribute('href')\n      this.active = triggerHref === this.activeHref\n      ;(triggerElements[0] as any).active = this.active\n    }\n  }\n\n  public _handleContentSlotChange(e: Event) {\n    const slot = e.target as HTMLSlotElement\n    if (slot) {\n      const childNodes = slot.assignedElements()\n      this.hasContent = childNodes.length > 0\n    }\n\n    this._keyboardNavigation?.invalidateCache()\n  }\n\n  renderTrigger() {\n    return html`\n      <dap-ds-button\n        variant=\"subtle-menu\"\n        ?active=${this.active}\n        aria-expanded=${this.opened ? 'true' : 'false'}\n        part=\"trigger\">\n        <dap-ds-stack direction=\"row\">\n          <slot name=\"title\"></slot>\n          <dap-ds-icon\n            name=${this.icon || 'arrow-down-s-line'}\n            aria-hidden=\"true\"></dap-ds-icon>\n        </dap-ds-stack>\n      </dap-ds-button>\n    `\n  }\n\n  render() {\n    return html`\n      <li\n        part=\"base\"\n        class=${clsx('navigation-item', {\n          'navigation-item--has-content': this.hasContent,\n          'navigation-item--opened': this.opened,\n        })}>\n        ${this.renderPopup()}\n      </li>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { BadgeType, PopupPlacement } from '@/dap-design-system'\nimport { DdsElement } from '@/internal/dds-hu-element'\n\nimport styles from './notification-badge.scss?inline'\n\ntype BadgeVariant = 'round' | 'dot'\n\n/**\n * `dap-ds-notification-badge`\n * @summary A notification badge component is a user interface element that visually indicates the presence of new information or updates, often displaying a numeric count of unread notifications, messages, or items requiring attention.\n * @element dap-ds-notification-badge\n * @title - Notification badge\n *\n * @slot - The content of the notification badge.\n *\n * @csspart base - The main container of the notification badge.\n * @csspart noty - The notification badge container.\n *\n * @cssproperty --dds-notification-badge-size - Controls the overall size of the notification badge\n * @cssproperty --dds-notification-badge-min-width - Minimum width of the notification badge\n * @cssproperty --dds-notification-badge-height - Height of the notification badge\n * @cssproperty --dds-notification-badge-padding - Padding inside the notification badge\n * @cssproperty --dds-notification-badge-border-radius - Border radius of the notification badge\n * @cssproperty --dds-notification-badge-font-size - Font size of the notification badge text\n * @cssproperty --dds-notification-badge-dot-size - Size of the dot variant\n * @cssproperty --dds-notification-badge-color - Text color of the notification badge\n * @cssproperty --dds-notification-badge-neutral-bg - Background color for neutral type\n * @cssproperty --dds-notification-badge-brand-bg - Background color for brand type\n * @cssproperty --dds-notification-badge-info-bg - Background color for info type\n * @cssproperty --dds-notification-badge-positive-bg - Background color for positive type\n * @cssproperty --dds-notification-badge-warning-bg - Background color for warning type\n * @cssproperty --dds-notification-badge-negative-bg - Background color for negative type\n * @cssproperty --dds-notification-badge-circular-offset-x - Horizontal offset for circular positioning\n * @cssproperty --dds-notification-badge-circular-offset-y - Vertical offset for circular positioning\n */\n@customElement('dap-ds-notification-badge')\nexport default class DapDSNotificationBadge extends DdsElement {\n  /** The content of the badge, it can be a number or a string. Content tried to be parsed as a number, if it's not a number, it will be displayed as a string. */\n  @property({ type: String }) badgeContent: string\n\n  /** This switch decides the visibility of the badge. This property overrides the badge content visibility. Use it for explicit control. */\n  @property({ type: Boolean }) visible: boolean = false\n\n  /** This switch decides whether to show a zero value or not. */\n  @property({ type: Boolean }) showZero: boolean = false\n\n  /** The color scheme of the badge\n   * @type { 'neutral' | 'brand' | 'info' | 'positive' | 'warning' | 'negative' }\n   */\n  @property() type: BadgeType = 'negative'\n\n  /** The variant of the badge.\n   * @type { 'round' | 'dot' }\n   */\n  @property() variant: BadgeVariant = 'round'\n\n  /** The cap value of badge content, if the badge content is greater than the max value, it will be displayed as `[number]+`. Zero means no cap. */\n  @property({ type: Number }) max: number = 0\n\n  /** The position of the badge content around the slot content.\n   * @type { 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end' }\n   */\n  @property({ reflect: true }) placement: PopupPlacement = 'top-end'\n\n  /** Whether to automatically detect circular elements and adjust positioning accordingly */\n  @property({ type: Boolean, attribute: 'circular-auto' })\n  circularAuto: boolean = true\n\n  /** Override circular positioning detection - forces circular positioning calculation */\n  @property({ type: Boolean, attribute: 'force-circular' })\n  forceCircular: boolean = false\n\n  @state() private isCircularElement: boolean = false\n  @state() private circularOffset: { x: number; y: number } = { x: 0, y: 0 }\n\n  static readonly styles = unsafeCSS(styles)\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.updateComplete.then(() => {\n      this.detectCircularElement()\n    })\n  }\n\n  private detectCircularElement(): void {\n    if (!this.circularAuto && !this.forceCircular) {\n      return\n    }\n\n    if (this.forceCircular) {\n      this.isCircularElement = true\n      this.calculateCircularOffset()\n      return\n    }\n\n    const slotElement = this.shadowRoot?.querySelector('slot')\n    const slottedElements = slotElement?.assignedElements()\n\n    if (!slottedElements?.length) {\n      return\n    }\n\n    const element = slottedElements[0] as HTMLElement\n\n    // Check if element is likely circular based on various indicators\n    const isCircular = this.isElementCircular(element)\n\n    if (isCircular !== this.isCircularElement) {\n      this.isCircularElement = isCircular\n      if (isCircular) {\n        this.calculateCircularOffset()\n      }\n    }\n  }\n\n  private isElementCircular(element: HTMLElement): boolean {\n    // Check for avatar component\n    if (element.tagName.toLowerCase().includes('avatar')) {\n      return true\n    }\n\n    // Check computed styles for circular indicators\n    const computedStyle = getComputedStyle(element)\n    const borderRadius = computedStyle.borderRadius\n\n    // If border-radius is 50% or close to half the width/height, it's likely circular\n    if (borderRadius === '50%' || borderRadius.includes('50%')) {\n      return true\n    }\n\n    // Check if border-radius value is close to half the element size\n    const rect = element.getBoundingClientRect()\n    const minDimension = Math.min(rect.width, rect.height)\n    const radiusValue = parseInt(borderRadius, 10)\n\n    if (radiusValue >= minDimension * 0.4) {\n      return true\n    }\n\n    // Check CSS custom properties that might indicate circular shape\n    const customProps = Array.from(document.styleSheets)\n      .flatMap(sheet => {\n        try {\n          return Array.from(sheet.cssRules)\n        } catch {\n          return []\n        }\n      })\n      .filter(rule => rule instanceof CSSStyleRule)\n      .some(rule => {\n        const selectorText = (rule as CSSStyleRule).selectorText\n        return (\n          selectorText?.includes('circle') || selectorText?.includes('rounded')\n        )\n      })\n\n    return customProps\n  }\n\n  private calculateCircularOffset(): void {\n    const slotElement = this.shadowRoot?.querySelector('slot')\n    const slottedElements = slotElement?.assignedElements()\n\n    if (!slottedElements?.length) {\n      return\n    }\n\n    const element = slottedElements[0] as HTMLElement\n    const rect = element.getBoundingClientRect()\n    const radius = Math.min(rect.width, rect.height) / 2\n\n    // Calculate offset based on placement for circular positioning\n    // This positions the badge on the circular border rather than the rectangular corner\n    const angle = this.getAngleForPlacement(this.placement)\n    const offsetDistance = radius * 0.65 // Slightly inside the border for better visual alignment\n\n    this.circularOffset = {\n      x: Math.cos(angle) * offsetDistance,\n      y: Math.sin(angle) * offsetDistance,\n    }\n\n    // Update CSS custom properties for positioning\n    this.style.setProperty(\n      '--dds-notification-badge-circular-offset-x',\n      `${this.circularOffset.x}px`,\n    )\n    this.style.setProperty(\n      '--dds-notification-badge-circular-offset-y',\n      `${this.circularOffset.y}px`,\n    )\n  }\n\n  private getAngleForPlacement(placement: PopupPlacement): number {\n    // Convert placement to angle in radians for circular positioning\n    switch (placement) {\n      case 'top-end':\n        return -Math.PI / 4 // -45 degrees (top-right)\n      case 'top-start':\n        return (-3 * Math.PI) / 4 // -135 degrees (top-left)\n      case 'bottom-end':\n        return Math.PI / 4 // 45 degrees (bottom-right)\n      case 'bottom-start':\n        return (3 * Math.PI) / 4 // 135 degrees (bottom-left)\n      default:\n        return -Math.PI / 4 // Default to top-end\n    }\n  }\n\n  updated(changedProperties: Map<string | number | symbol, unknown>) {\n    super.updated(changedProperties)\n\n    if (\n      changedProperties.has('placement') ||\n      changedProperties.has('forceCircular') ||\n      changedProperties.has('circularAuto')\n    ) {\n      this.detectCircularElement()\n    }\n  }\n\n  private parseBadgeContent(str: string): string | number {\n    if (!str?.trim()) {\n      return ''\n    }\n    const parsed = parseInt(str, 10)\n    if (isNaN(parsed)) {\n      return str\n    }\n    return parsed\n  }\n\n  private handleMax(value: number, max: number): string {\n    return value > max ? `${max}+` : value.toString()\n  }\n\n  private renderContent(): string {\n    const parsedContent = this.parseBadgeContent(this.badgeContent)\n    if (parsedContent === 0 && !this.showZero) {\n      return ''\n    }\n    if (this.max > 0 && typeof parsedContent === 'number') {\n      return this.handleMax(parsedContent, this.max).toString()\n    }\n    return parsedContent.toString()\n  }\n\n  private get hide(): boolean {\n    return !this.visible && !!this.renderContent() === false\n  }\n\n  render() {\n    return html`<div part=\"base\" class=${clsx('notification-badge')}>\n      <slot></slot>\n      <div\n        part=\"noty\"\n        class=${clsx(\n          'notification-badge__info',\n          `notification-badge__info--${this.type}`,\n          `notification-badge__info--${this.placement}`,\n          `notification-badge__info--${this.variant}`,\n          {\n            'notification-badge__info--hidden': this.hide,\n            'notification-badge__info--circular': this.isCircularElement,\n          },\n        )}>\n        ${this.renderContent()}\n      </div>\n    </div>`\n  }\n}\n","import { clsx } from 'clsx'\nimport { html, nothing, PropertyValues } from 'lit'\nimport { customElement, property, query, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\n\nimport { CommonFormElementSize } from '@/common/types'\nimport { translate } from '@/localization/localization'\n\nimport { InputBaseElement } from '../input/input-base-element'\n\n/**\n * `dap-ds-number-input`\n * @summary A number input component.\n * @element dap-ds-number-input\n * @title - Number input\n *\n * @property {string} label - The label of the input.\n * @property {string} placeholder - The placeholder of the input.\n * @property {string} description - The description of the input.\n * @property {string} tooltip - The tooltip of the input.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The tooltip placement of the input.\n * @property {'success' | 'error'} status - The status of the input. Can be `success` or `error`.\n * @property {'xs' | 'sm' | 'sm'} size - The size of the input. Default is `sm`. Can be `sm` or `lg`.\n * @property {string} name - The name of the input.\n * @property {string} value - The value of the input.\n * @property {string} thousandSeparator - The thousand separator of the input.\n * @property {string} decimalSeparator - The decimal separator of the input.\n * @property {number} decimalScale - The decimal scale of the input.\n * @property {string} allowNegative - The allow negative state of the input.\n * @property {string} allowDecimal - The allow decimal state of the input.\n * @property {boolean} disabled - The disabled state of the input. Default is false.\n * @property {boolean} required - The required state of the input. Default is false.\n * @property {boolean} readonly - The readonly state of the input. Default is false.\n * @property {boolean} autofocus - The autofocus state of the input. Default is false.\n * @property {number} min - The minimum value of the number input.\n * @property {number} max - The maximum value of the number input.\n * @property {number} step - The step value of the number input.\n * @property {string} feedback - The feedback of the input.\n * @property {'negative' | 'positive' | 'warning'} feedbackType - The feedback type of the input. Can be `negative`, `positive`, or `warning`.\n * @property {boolean} loading - The loading state of the input. Default is false.\n * @property {boolean} optional - The optional state of the input.\n * @property {string} optionalLabel - The optional label of the input.\n * @property {boolean} subtle - The weight of the label. Default is `false`\n * @property {boolean} disableEnter - Disables the enter key from being used to submit the form.\n * @property {boolean} hideControls - Hides the increment and decrement buttons.\n *\n * @event {{ value: string }} dds-change - Fired when the input value changes.\n * @event {{ value: string }} dds-input - Fired when the input value changes.\n * @event {{ value: string, originalEvent: Event }} dds-keydown - Fired when a key is pressed down.\n * @event {{ void }} dds-blur - Fired when the input loses focus.\n * @event {{ void }} dds-focus - Emitted when the input gains focus.\n *\n * @slot feedback-icon - The custom icon of the feedback.\n *\n * @cssproperty --dds-input-height - The height of the input. Default is var(--dds-spacing-1000).\n * @cssproperty --dds-input-padding - The padding of the input. Default is var(--dds-spacing-300).\n * @cssproperty --dds-input-font-size - The font size of the input. Default is var(--dds-font-base).\n * @cssproperty --dds-input-border-color - The border color of the input. Default is var(--dds-border-neutral-base).\n * @cssproperty --dds-input-background-color - The background color of the input. Default is var(--dds-fields-background-default).\n * @cssproperty --dds-input-text-color - The text color of the input. Default is var(--dds-text-neutral-base).\n * @cssproperty --dds-input-border-radius - The border radius of the input. Default is var(--dds-radius-base).\n * @cssproperty --dds-input-border-width - The border width of the input. Default is var(--dds-border-width-base).\n * @cssproperty --dds-input-disabled-background - The background color of the disabled input. Default is var(--dds-fields-background-disabled).\n * @cssproperty --dds-input-disabled-text - The text color of the disabled input. Default is var(--dds-text-neutral-disabled).\n * @cssproperty --dds-input-readonly-background - The background color of the readonly input. Default is var(--dds-fields-background-read-only).\n * @cssproperty --dds-input-readonly-text - The text color of the readonly input. Default is var(--dds-text-neutral-subtle).\n * @cssproperty --dds-input-success-border - The border color of the success input. Default is var(--dds-border-positive-base).\n * @cssproperty --dds-input-error-border - The border color of the error input. Default is var(--dds-border-negative-base).\n * @cssproperty --dds-input-addon-background - The background color of the input addon. Default is var(--dds-background-ui-neutral-enabled).\n * @cssproperty --dds-input-addon-success-background - The background color of the success input addon. Default is var(--dds-background-ui-positive-enabled).\n * @cssproperty --dds-input-addon-error-background - The background color of the error input addon. Default is var(--dds-background-ui-negative-enabled).\n *\n * @csspart postfix - The postfix of the input.\n * @csspart decrement - The decrement button of the input.\n * @csspart increment - The increment button of the input.\n */\n@customElement('dap-ds-number-input')\nexport default class DapDSNumberInput extends InputBaseElement {\n  constructor() {\n    super()\n    this.manualValueSet = true\n  }\n\n  @query('input')\n  private readonly inputElement!: HTMLInputElement\n\n  @property({ type: String }) thousandSeparator = ''\n  @property({ type: String }) decimalSeparator = ','\n  @property({ type: Number }) decimalScale?: number\n  @property({ type: String }) allowNegative = 'true'\n  @property({ type: String }) allowDecimal = 'true'\n  @property({ type: Boolean }) hideControls = false\n\n  @state() private formattedValue = ''\n\n  get _thousandSeparator() {\n    //escape regex control characters with \\\n    return this.thousandSeparator?.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n  }\n\n  firstUpdated() {\n    this.inputMode =\n      this.inputMode || (this.allowDecimal === 'true' ? 'decimal' : 'numeric')\n\n    this.inputElement.addEventListener('input', (e: Event) =>\n      this.handleInput(e as InputEvent),\n    )\n\n    this.inputElement.addEventListener('keydown', (e: KeyboardEvent) =>\n      this.handleKeydown(e),\n    )\n\n    // Handle initial value\n    if (this.value !== undefined) {\n      this.formattedValue = this.getMaskedValue(this.value)\n      this.inputElement.value = this.formattedValue\n    }\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    if (this.disabled || this.readonly) return\n\n    if (event.key === 'ArrowUp') {\n      event.preventDefault()\n      this._increment()\n    } else if (event.key === 'ArrowDown') {\n      event.preventDefault()\n      this._decrement()\n    }\n  }\n\n  private getMaskedValue(value: string | number): string {\n    if (!value && value !== 0) return ''\n\n    let result = value\n\n    // if the value is a number and it has a decimal point, convert it to a string and replace the . with the decimal separator\n    if (typeof result === 'number' && result.toString().includes('.')) {\n      result = result.toString().replace('.', this.decimalSeparator)\n    }\n\n    // Handle negative numbers\n    if (this.allowNegative === 'true' && value.toString().startsWith('-')) {\n      result = '-' + this.getMaskedValue(value.toString().substring(1))\n    } else if (\n      this.allowNegative === 'false' &&\n      value.toString().startsWith('-')\n    ) {\n      result = value.toString().substring(1)\n    }\n\n    // Apply thousand separator\n    if (this.thousandSeparator) {\n      const parts = result.toString().split(this.decimalSeparator)\n      parts[0] = parts[0].replace(\n        /\\B(?=(\\d{3})+(?!\\d))/g,\n        this.thousandSeparator,\n      )\n      result = parts.join(this.decimalSeparator)\n    }\n\n    // Apply decimal scale\n    if (this.allowDecimal === 'true' && this.decimalScale !== undefined) {\n      const parts = result.toString().split(this.decimalSeparator)\n      if (parts[1]) {\n        parts[1] = parts[1].slice(0, this.decimalScale)\n        result = parts.join(this.decimalSeparator)\n      }\n    } else if (this.allowDecimal === 'false') {\n      const parts = result.toString().split(this.decimalSeparator)\n      result = parts[0]\n    }\n\n    return result.toString()\n  }\n\n  private isBackspaceOrDelete(event: InputEvent): boolean {\n    return (\n      event.inputType === 'deleteContentBackward' ||\n      event.inputType === 'deleteContentForward'\n    )\n  }\n\n  private handleEmptyValue() {\n    this.value = ''\n    this.formattedValue = ''\n    this.inputElement.value = ''\n    this.emit('dds-change', {\n      value: '',\n      formattedValue: '',\n    })\n  }\n\n  private createNumericRegex(): RegExp {\n    if (this.allowDecimal === 'true') {\n      const escapedDecimalSeparator = this.decimalSeparator.replace(\n        /[.*+?^${}()|[\\]\\\\]/g,\n        '\\\\$&',\n      )\n      return this.allowNegative === 'true'\n        ? new RegExp(`^-?\\\\d*${escapedDecimalSeparator}?\\\\d*$`)\n        : new RegExp(`^\\\\d*${escapedDecimalSeparator}?\\\\d*$`)\n    }\n    return this.allowNegative === 'true' ? /^-?\\d*$/ : /^\\d*$/\n  }\n\n  private enforceDecimalScale(value: string): string {\n    if (this.decimalScale === undefined || this.allowDecimal !== 'true') {\n      return value\n    }\n\n    const parts = value.split(this.decimalSeparator)\n    if (parts[1] && parts[1].length > this.decimalScale) {\n      parts[1] = parts[1].slice(0, this.decimalScale)\n      return parts.join(this.decimalSeparator)\n    }\n    return value\n  }\n\n  private convertToNumericValue(value: string): number | string {\n    if (!value) return value\n\n    const normalizedValue = value.replace(this.decimalSeparator, '.')\n    const numericValue = parseFloat(normalizedValue)\n    return isNaN(numericValue) ? value : numericValue\n  }\n\n  private handleInput(event: InputEvent) {\n    const input = event.target as HTMLInputElement\n    let value = input.value\n\n    // Remove thousand separators\n    if (this.thousandSeparator) {\n      value = value.replace(new RegExp(this._thousandSeparator, 'g'), '')\n    }\n\n    // Handle empty value\n    if (value === '') {\n      this.handleEmptyValue()\n      return\n    }\n\n    // Check for negative numbers if not allowed\n    if (this.allowNegative === 'false' && value.includes('-')) {\n      input.value = value.replace('-', '')\n      this.formattedValue = value.replace('-', '')\n      return\n    }\n\n    // Validate numeric input\n    const numericRegex = this.createNumericRegex()\n    if (!numericRegex.test(value) && !this.isBackspaceOrDelete(event)) {\n      input.value = this.formattedValue\n      return\n    }\n\n    // Enforce decimal scale\n    value = this.enforceDecimalScale(value)\n\n    // Convert and update value\n    const numericValue = this.convertToNumericValue(value)\n    this.value = numericValue\n    this.formattedValue = this.getMaskedValue(value)\n    input.value = this.formattedValue\n\n    this.emit('dds-change', {\n      value: this.value,\n      formattedValue: this.formattedValue,\n    })\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    if (changedProperties.has('value')) {\n      this.inputElement.value = this.formattedValue\n    }\n  }\n\n  formResetCallback() {\n    super.formResetCallback()\n    // Reset the formatted value to match the reset value\n    this.formattedValue = this.getMaskedValue(this.value || '')\n    this.inputElement.value = this.formattedValue\n  }\n\n  private _decrement() {\n    if (this.disabled || this.readonly) return\n\n    const currentValue = this.value\n      ? parseFloat(this.value.toString().replace(this._thousandSeparator, ''))\n      : 0\n    const step =\n      typeof this.step === 'number'\n        ? this.step\n        : parseFloat(this.step?.toString() ?? '1')\n\n    // Calculate new value\n    let newValue = currentValue - step\n\n    // Apply min constraint if defined\n    if (this.min !== undefined && newValue < this.min) {\n      newValue = this.min\n    }\n\n    // Update the value\n    this.value = newValue\n    this.formattedValue = this.getMaskedValue(newValue)\n    this.inputElement.value = this.formattedValue\n\n    this.emit('dds-change', {\n      value: this.value,\n      formattedValue: this.formattedValue,\n    })\n  }\n\n  private _increment() {\n    if (this.disabled || this.readonly) return\n\n    const currentValue = this.value\n      ? parseFloat(this.value.toString().replace(this.thousandSeparator, ''))\n      : 0\n    const step =\n      typeof this.step === 'number'\n        ? this.step\n        : parseFloat(this.step?.toString() ?? '1')\n\n    // Calculate new value\n    let newValue = currentValue + step\n\n    // Apply max constraint if defined\n    if (this.max !== undefined && newValue > this.max) {\n      newValue = this.max\n    }\n\n    // Update the value\n    this.value = newValue\n    this.formattedValue = this.getMaskedValue(newValue)\n    this.inputElement.value = this.formattedValue\n\n    this.emit('dds-change', {\n      value: this.value,\n      formattedValue: this.formattedValue,\n    })\n  }\n\n  render() {\n    return this.renderInput(\n      html` <span\n        part=\"postfix\"\n        class=${clsx('input__addon-postfix number-input')}>\n        ${!(this.disabled || this.readonly) && !this.hideControls\n          ? html` <dap-ds-stack direction=\"row\" tabindex=\"-1\" spacing=\"300\">\n              ${this.loading\n                ? html`<dap-ds-spinner size=\"lg\"></dap-ds-spinner>`\n                : nothing}\n              <dap-ds-icon-button\n                part=\"decrement\"\n                size=${ifDefined(this.size as CommonFormElementSize)}\n                @click=${this._decrement}\n                aria-label=\"${translate('decrease')}\"\n                .disabled=${this.disabled}>\n                <dap-ds-icon size=\"lg\" name=\"subtract-line\"></dap-ds-icon>\n              </dap-ds-icon-button>\n              <dap-ds-icon-button\n                part=\"increment\"\n                size=${ifDefined(this.size as CommonFormElementSize)}\n                @click=${this._increment}\n                aria-label=\"${translate('increase')}\"\n                .disabled=${this.disabled}>\n                <dap-ds-icon size=\"lg\" name=\"add-line\"></dap-ds-icon>\n              </dap-ds-icon-button>\n            </dap-ds-stack>`\n          : ``}\n      </span>`,\n    )\n  }\n}\n","import { html, unsafeCSS } from 'lit'\nimport { customElement } from 'lit/decorators.js'\n\nimport { translate } from '@/localization/localization'\n\nimport accordionStyles from '../accordion/accordion.scss?inline'\nimport { AccordionBaseElement } from '../accordion/accordion-base-element'\nimport officialStyles from './official-website-banner.scss?inline'\n\n/**\n * `dap-ds-official-website-banner`\n * @element dap-ds-official-website-banner\n * @summary An official website banner is a banner that displays that the website is an official website.\n * @title - Official website-banner\n *\n * @property { 'sm' | 'lg' } size - The size of the official website banner. Default is `sm`.\n * @property {string} heading - The heading text of the accordion, this will be used as the aria label of the heading also if ariaLabel is not provided\n * @property { 1 | 2 | 3 | 4 | 5 | 6 } headingLevel - The heading level of the accordion. Default is `4`.\n * @property {boolean} opened - Whether the accordion is opened. Default is `false`.\n * @property { 'left' | 'right' } iconLocation - The location of the icon. Default is `right`.\n * @property { 'default' | 'collapsed' | 'clean' | 'clean-collapsed' } variant - The variant of the accordion.\n * @property {boolean} lastItem - Whether the accordion is the last item.\n *\n * @event {{ void }} dds-opened - Event fired when the accordion is opened.\n * @event {{ void }} dds-closed - Event fired when the accordion is closed.\n *\n * @slot default - The content of the accordion.\n * @slot heading - The heading of the accordion.\n * @slot icon-opened - The icon when the accordion is opened.\n * @slot icon-closed - The icon when the accordion is closed.\n *\n * @csspart base - The main accordion container.\n * @csspart heading - The heading of the accordion.\n * @csspart button - The button of the accordion.\n * @csspart content - The content of the accordion.\n * @csspart content-container - The container of the accordion content.\n * @csspart icon-wrapper - The icon wrapper of the accordion.\n * @csspart open-icon - The icon when the accordion is opened.\n * @csspart open-icon-base - The base of the icon when the accordion is opened.\n * @csspart close-icon - The icon when the accordion is closed.\n * @csspart close-icon-base - The base of the icon when the accordion is closed.\n *\n * @cssproperty --dds-official-banner-background-color - The background color of the official website banner.\n * @cssproperty --dds-official-banner-text-color - The text color of the official website banner.\n * @cssproperty --dds-official-banner-heading-hover-color - The heading hover color of the official website banner.\n * @cssproperty --dds-official-banner-border-radius - The border radius of the official website banner.\n * @cssproperty --dds-official-banner-icon-color - The icon color of the official website banner.\n * @cssproperty --dds-official-banner-icon-color-hover - The icon hover color of the opener icon official website banner.\n */\n@customElement('dap-ds-official-website-banner')\nexport default class DapDSOfficialWebsiteBanner extends AccordionBaseElement {\n  static readonly styles = unsafeCSS(`${accordionStyles}${officialStyles}`)\n\n  headingRender() {\n    return html` <span>\n      <dap-ds-stack direction=\"row\" spacing=\"100\">\n        <dap-ds-icon\n          size=\"xs\"\n          name=\"shield-check-fill\"\n          aria-hidden=\"true\"></dap-ds-icon>\n        ${this.heading ?? translate('official-website-banner.heading')}\n      </dap-ds-stack>\n    </span>`\n  }\n\n  contentRender() {\n    return html` <div\n      style=\"display: flex; flex-direction: column; gap: 1rem; margin-bottom: 1rem;\">\n      <dap-ds-stack direction=\"row\" spacing=\"200\">\n        <dap-ds-icon name=\"lock-fill\" aria-hidden=\"true\"></dap-ds-icon>\n        <span style=\"font-weight: bold\"\n          >${translate('official-website-banner.heading-2')}</span\n        >\n      </dap-ds-stack>\n      <div style=\"font-size: var(--dds-font-sm)\">\n        ${translate('official-website-banner.content')}\n      </div>\n    </div>`\n  }\n\n  render() {\n    return html` ${this.renderAccordion()} `\n  }\n}\n","import clsx from 'clsx'\nimport { html, nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport {\n  customElement,\n  property,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\n\nimport styles from './option-item.scss?inline'\n\n/**\n * `dap-ds-option-item`\n * @summary An option item is a selectable item in a list of options.\n * @element dap-ds-option-item\n * @title - Option item\n * @group select,combobox\n * *\n * @csspart base - The main option item container.\n * @csspart prefix - The prefix of the option item.\n * @csspart label - The label of the option item.\n * @csspart suffix - The suffix of the option item.\n *\n * @slot prefix - The prefix of the option item.\n * @slot - The label of the option item.\n * @slot suffix - The suffix of the option item.\n *\n * @cssproperty --dds-option-item-padding-vertical - The vertical padding of the option item.\n * @cssproperty --dds-option-item-padding-horizontal - The horizontal padding of the option item.\n * @cssproperty --dds-option-item-border-radius - The border radius of the option item.\n * @cssproperty --dds-option-item-color - The text color of the option item.\n * @cssproperty --dds-option-item-hover-bg - The background color of the option item when hovered.\n * @cssproperty --dds-option-item-active-bg - The background color of the option item when active.\n * @cssproperty --dds-option-item-disabled-color - The text color of the option item when disabled.\n * @cssproperty --dds-option-item-high-contrast-border - The border color of the option item in high contrast mode.\n * @cssproperty --dds-option-item-selected-font-weight - The font weight of the option item when selected.\n * @cssproperty --dds-option-item-xs-font-size - The font size of the option item in extra small size.\n * @cssproperty --dds-option-item-lg-font-size - The font size of the option item in large size.\n * @cssproperty --dds-option-item-selected-icon-width - The width of the selected icon.\n */\n@customElement('dap-ds-option-item')\nexport default class DapDSOptionItem extends SizedMixin(DdsElement) {\n  /** The selected state of the option item */\n  @property({ type: Boolean, reflect: true }) selected?: boolean\n\n  /** Wheteher the item is selectable, whether it shows the selected icon */\n  @property({ type: String }) selectable? = 'true'\n\n  /** The position of the selected icon */\n  @property({ type: String }) selectedIconPosition? = 'suffix'\n\n  /** The value of the option item */\n  @property({ reflect: true }) value?: any\n\n  /** The disabled state of the option item */\n  @property({ type: Boolean, reflect: true }) disabled?: boolean\n\n  /** The focused state of the option item */\n  @property({ type: Boolean }) focused?: boolean\n\n  /** The label of the option item, it can be a simplier version of an item */\n  @property() label?: string\n  @queryAssignedElements({ slot: 'prefix' })\n  private readonly _prefixNode!: NodeListOf<HTMLElement>\n  @queryAssignedElements({ slot: 'suffix' })\n  private readonly _postfixNode!: NodeListOf<HTMLElement>\n\n  @state() private _hasPrefix = false\n  @state() private _hasSuffix = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n\n    this._hasPrefix = !!this._prefixNode.length\n    this._hasSuffix = !!this._postfixNode.length\n\n    this.addEventListener('click', this.handleClick)\n    this.setAttribute('role', 'option')\n  }\n\n  protected updated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.updated(_changedProperties)\n\n    if (_changedProperties.has('disabled')) {\n      this.setAttribute('tabindex', this.disabled ? '-1' : '0')\n      this.setAttribute('aria-disabled', this.disabled ? 'true' : 'false')\n    }\n\n    if (_changedProperties.has('selected')) {\n      this.setAttribute('aria-selected', this.selected ? 'true' : 'false')\n    }\n  }\n\n  private handleClick(event: MouseEvent): void {\n    if (this.disabled) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  public get optionText(): string {\n    return this.label ?? this.textContent?.trim() ?? ''\n  }\n\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        class=${clsx('option-item', `option-item--${this.size}`, {\n          'option-item--selected': this.selected,\n          'option-item--disabled': this.disabled,\n          'option-item--focused': this.focused,\n        })}>\n        <dap-ds-stack direction=\"row\" class=\"option-item__stack\">\n          ${this.selectable === 'true' && this.selectedIconPosition === 'prefix'\n            ? html`<div class=${'selected-icon'}>\n                ${this.selected\n                  ? html`<dap-ds-icon-check-line\n                      size=\"16\"></dap-ds-icon-check-line>`\n                  : nothing}\n              </div>`\n            : nothing}\n          <div\n            part=\"prefix\"\n            class=${clsx('option-item__prefix', {\n              'option-item__prefix--visible': !!this._hasPrefix,\n            })}>\n            <slot name=\"prefix\"></slot>\n          </div>\n          <div part=\"label\" class=\"label\">\n            <slot></slot>\n          </div>\n          <div\n            part=\"suffix\"\n            class=${clsx('option-item__suffix', {\n              'option-item__suffix--visible': !!this._hasSuffix,\n            })}>\n            <slot name=\"suffix\"></slot>\n          </div>\n        </dap-ds-stack>\n        ${this.selectable === 'true' && this.selectedIconPosition === 'suffix'\n          ? html`<div class=${'selected-icon-suffix'}>\n              ${this.selected\n                ? html`<dap-ds-icon-check-line\n                    size=\"16\"></dap-ds-icon-check-line>`\n                : nothing}\n            </div>`\n          : nothing}\n        <span\n          part=\"high-contrast\"\n          class=${clsx('option-item__high-contrast', {\n            'option-item__high-contrast--disabled': this.disabled,\n          })}></span>\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\n\nimport DapDSOptionItem from '../option-item/option-item.component'\nimport styles from './option-list.scss?inline'\n\n/**\n * `dap-ds-option-list`\n * @summary An option list is a list of selectable options.\n * @element dap-ds-option-list\n * @title - Option list\n *\n * @event {{ void }} dds-cancel - Fired when the escape key is pressed.\n * @event {{ option: DapDSOptionItem, value: string, index: number, text: string }} dds-option-change - Fired when the option list value changes.\n * @event {{ void }} dds-keydown - Fired when a key is pressed down.\n * @event {{ elements: DapDSOptionItem[] }} dds-list-changed - Fired when the available options list changes.\n *\n * @csspart base - The main option list container.\n *\n * @slot - The default slot for the options.\n */\n@customElement('dap-ds-option-list')\nexport default class DapDSOptionList extends SizedMixin(DdsElement) {\n  /** The filter text of the option list */\n  @property() filterText = ''\n\n  /** The value of the option list */\n  @property({ type: String, reflect: true }) value?: string\n\n  /** The focused state of the option list. */\n  @property({ type: Boolean }) focused = false\n\n  /** Whether the option list is searchable */\n  @property({ type: Boolean }) search = false\n\n  /** The search mode of the option list. Default is `none` */\n  @property() searchMode: 'none' | 'typehead' | 'autocomplete' | 'manual' =\n    'none'\n\n  /**\n   * @ignore\n   */\n  @property({ type: String }) searchOnValueSet = 'true'\n\n  /** Whether the option list items are selectable, whether it shows the selected icon */\n  @property({ type: String }) selectable = 'true'\n\n  /**\n   * @ignore\n   */\n  @property({ type: Array })\n  public options?: any[]\n\n  /**\n   * @ignore\n   */\n  @property({ type: Boolean }) disableDelaySet = false\n\n  queryTimeout: number | undefined\n  queryString = ''\n  firstLoad = true\n\n  @state()\n  private currentOption: any\n\n  @state()\n  public selectedIndex: number\n\n  @state()\n  private optionEls: DapDSOptionItem[] = []\n\n  @state()\n  private availableOptions: DapDSOptionItem[] = []\n\n  get isAutoComplete() {\n    return this.searchMode === 'autocomplete' || this.searchMode === 'manual'\n  }\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n\n    this.setAttribute('role', 'listbox')\n  }\n\n  getAllOptions() {\n    const mainSlot = this.shadowRoot?.querySelector('slot')\n    const assignedElement = mainSlot?.assignedElements()[0]\n    const embeddedSlot =\n      assignedElement?.nodeName === 'SLOT'\n        ? (\n            mainSlot?.assignedElements()[0] as HTMLSlotElement\n          ).assignedElements()\n        : mainSlot?.assignedElements()\n\n    if (!embeddedSlot) {\n      return [...this.querySelectorAll<DapDSOptionItem>('dap-ds-option-item')]\n    } else {\n      return [...(embeddedSlot as DapDSOptionItem[])]\n    }\n  }\n\n  private getAllRenderedOptions(): DapDSOptionItem[] {\n    const ro =\n      this.shadowRoot?.querySelectorAll<DapDSOptionItem>('dap-ds-option-item')\n    return ro ? [...ro] : []\n  }\n\n  getAllAvailabeOptions() {\n    return this.availableOptions\n  }\n\n  getActiveOption() {\n    if (!this.currentOption) {\n      return null\n    }\n\n    const activeOption = this.getAllRenderedOptions().find(\n      el => el.value === this.currentOption.value,\n    )\n\n    return activeOption\n  }\n\n  protected updated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.updated(_changedProperties)\n\n    if (\n      _changedProperties.has('value') &&\n      !_changedProperties.has('currentOption') &&\n      this.searchOnValueSet === 'true'\n    ) {\n      const option = this.availableOptions.find(\n        option => option.value === this.value,\n      )\n\n      if (option) {\n        this.changeOption(option, _changedProperties.get('value'))\n\n        this.selectedIndex = this.findIndexByValue(\n          this.availableOptions,\n          this.value,\n        )\n\n        this.emit('dds-option-change', {\n          ...this.getEventDetails(this.currentOption),\n        })\n      }\n    }\n\n    if (\n      _changedProperties.has('options') ||\n      _changedProperties.has('optionEls')\n    ) {\n      this.availableOptions = this.options || this.optionEls\n      this.emit('dds-list-changed', { elements: this.availableOptions })\n    }\n  }\n\n  protected shouldUpdate(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): boolean {\n    if (_changedProperties.has('filterText')) {\n      if (\n        this.filterText &&\n        this.searchMode !== 'none' &&\n        this.searchMode !== 'manual'\n      ) {\n        this.filterAvailableOptions()\n        this.selectedIndex = 0\n        this.setCurrentOption(this.availableOptions[0], false)\n        this.emit('dds-list-changed', { elements: this.availableOptions })\n      } else if (this.filterText && this.searchMode === 'manual') {\n        if (this.selectedIndex === -1 && this.availableOptions.length > 0) {\n          this.selectedIndex = 0\n          this.setCurrentOption(this.availableOptions[0], false)\n        }\n      } else if (this.filterText && this.searchMode === 'none') {\n        this.filterAvailableOptions()\n        this.selectedIndex = -1\n        this.setCurrentOption(null, false)\n        this.setSelectedOption()\n        this.emit('dds-list-changed', { elements: this.availableOptions })\n      } else {\n        this.availableOptions = this.options || this.optionEls\n        this.selectedIndex = -1\n        this.setCurrentOption(null, false)\n        this.emit('dds-list-changed', { elements: this.availableOptions })\n      }\n    }\n\n    return super.shouldUpdate(_changedProperties)\n  }\n\n  public filterAvailableOptions(): void {\n    const valueLowerCase = this.filterText.toLowerCase()\n    this.availableOptions = (this.options || this.optionEls).filter(item => {\n      if (!item.disabled) {\n        const itemTextLowerCase = item.optionText.toLowerCase()\n        return itemTextLowerCase.startsWith(valueLowerCase)\n      }\n    })\n  }\n\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n    super.attributeChangedCallback(name, oldValue, newValue)\n    if (\n      name === 'value' &&\n      oldValue !== newValue &&\n      this.searchOnValueSet === 'true'\n    ) {\n      if (newValue) {\n        const option = this.availableOptions.find(el => el.value === newValue)\n\n        this.setSelectedOption(option)\n        this.selectionChanged(option)\n\n        this.emit('dds-option-change', {\n          ...this.getEventDetails(this.currentOption),\n        })\n      } else {\n        this.setSelectedOption()\n        this.selectionChanged()\n      }\n    }\n  }\n\n  public setOptionsFromSlottedItems(): void {\n    const elements = this.getAllOptions()\n    this.availableOptions = elements\n    this.optionEls = elements\n  }\n\n  private handleKeydown(event: KeyboardEvent): void {\n    event.preventDefault()\n\n    this.handleKeyCodes(event.key, event.code)\n  }\n\n  private scrollToActiveOption(): void {\n    const activeOption = this.getAllRenderedOptions().find(\n      el => el.value === this.currentOption.value,\n    )\n\n    if (activeOption) {\n      activeOption.scrollIntoView({ block: 'nearest' })\n    }\n  }\n\n  private handleNavigationKey(key: string): void {\n    if (key === 'ArrowDown') {\n      this.selectedIndex = this.findNearestEnabled(\n        this.availableOptions,\n        this.selectedIndex,\n        1,\n      )\n    } else if (key === 'ArrowUp') {\n      const nearest = this.findNearestEnabled(\n        this.availableOptions,\n        this.selectedIndex,\n        this.selectedIndex === -1 ? 1 : -1,\n      )\n      this.selectedIndex =\n        nearest === this.availableOptions.length ? -1 : nearest\n    } else if (key === 'Home') {\n      this.selectedIndex = this.availableOptions[0]?.disabled\n        ? this.findNearestEnabled(this.availableOptions, -1, 1)\n        : 0\n    } else if (key === 'End') {\n      const nearest = this.findNearestEnabled(\n        this.availableOptions,\n        this.availableOptions.length,\n        -1,\n      )\n      this.selectedIndex =\n        nearest === this.availableOptions.length ? -1 : nearest\n    }\n  }\n\n  private handleActionKey(key: string): void {\n    if (key === 'Escape') {\n      this.emit('dds-cancel')\n    } else if (key === 'Enter') {\n      this.setSelectedOption(this.availableOptions[this.selectedIndex])\n      this.selectionChanged(this.availableOptions[this.selectedIndex])\n      this.emit('dds-option-change', {\n        ...this.getEventDetails(this.currentOption),\n      })\n    }\n  }\n\n  private handleTypeheadKey(key: string): void {\n    if (\n      this.searchMode === 'typehead' &&\n      (key?.length === 1 || key === 'Backspace')\n    ) {\n      this.buildQueryString(key)\n    }\n  }\n\n  private handleKeyCodes(key: string, keyCode?: string) {\n    if (!this.focused) {\n      return\n    }\n\n    this.handleNavigationKey(key)\n    this.handleActionKey(key)\n    this.handleTypeheadKey(key)\n\n    if (this.selectedIndex >= 0) {\n      const option = this.availableOptions[this.selectedIndex]\n      this.setCurrentOption(option)\n      this.emit('dds-keydown', {\n        code: keyCode,\n        key,\n        ...this.getEventDetails(option),\n      })\n    }\n  }\n\n  private getEventDetails(option?: DapDSOptionItem) {\n    if (!option) {\n      return undefined\n    }\n\n    let opt = option\n\n    if (option.tagName !== 'DAP-DS-OPTION-ITEM') {\n      opt = option.closest('dap-ds-option-item')!\n    }\n\n    return {\n      opt,\n      value: opt?.value,\n      text: opt?.optionText,\n      index: this.selectedIndex,\n    }\n  }\n\n  private findNearestEnabled(\n    allOptions: DapDSOptionItem[],\n    current: number,\n    step: number,\n  ) {\n    let nextIndex: number = current\n    let nextOption: DapDSOptionItem\n\n    do {\n      nextIndex += step\n      nextOption = allOptions[nextIndex]\n      if (nextOption === undefined) {\n        break\n      }\n    } while (nextOption?.disabled)\n\n    return nextOption ? nextIndex : current\n  }\n\n  private findIndexByValue(\n    allOptions: DapDSOptionItem[],\n    value?: string,\n  ): number {\n    return allOptions.findIndex(option => option.value === value)\n  }\n\n  private clearItemFocusStates() {\n    this.availableOptions.forEach(el => {\n      el.focused = false\n      el.tabIndex = -1\n    })\n  }\n\n  // Only set the current option without selecting it, eg: focus\n  private setCurrentOption(option?: DapDSOptionItem | null, setFocus = true) {\n    this.clearItemFocusStates()\n\n    if (option) {\n      this.currentOption = option\n      option.focused = true\n      option.tabIndex = 0\n\n      this.emit('dds-current-change', {\n        ...this.getEventDetails(option),\n      })\n\n      if (setFocus) {\n        this.setFocusedOption(option)\n      } else {\n        this.scrollToActiveOption()\n      }\n    } else {\n      this.currentOption = null\n\n      this.emit('dds-current-change', null)\n    }\n  }\n\n  private setFocusedOption(option: DapDSOptionItem) {\n    const renderedItem = this.getAllRenderedOptions().find(\n      el => el.value === option.value,\n    )\n\n    if (renderedItem) {\n      renderedItem.focus()\n    }\n  }\n\n  private setSelectedOption(option?: DapDSOptionItem | undefined) {\n    this.availableOptions.forEach(el => (el.selected = false))\n\n    if (option) {\n      this.currentOption = option\n\n      option.selected = true\n    }\n  }\n\n  private selectionChanged(option?: DapDSOptionItem | undefined, value?: any) {\n    const oldValue = value || this.value\n\n    if (option) {\n      if (option.value !== oldValue) {\n        this.value = option.value\n      }\n    }\n  }\n\n  private changeOption(option: DapDSOptionItem, value?: any) {\n    if (option && !option.disabled) {\n      this.selectedIndex = this.findIndexByValue(\n        this.availableOptions,\n        option.value,\n      )\n\n      this.setSelectedOption(option)\n      this.setCurrentOption(option)\n      this.selectionChanged(option, value)\n    }\n  }\n\n  private readonly handleOptionClick = (event: MouseEvent) => {\n    this.focused = true\n    const option = event.target as DapDSOptionItem\n\n    if (option && !option.disabled) {\n      const isModifierKeyPressed = event.ctrlKey || event.metaKey\n      const isAlreadySelected = option.selected\n\n      if (isModifierKeyPressed && isAlreadySelected) {\n        // Find the empty item (with \"empty\" attribute) to select automatically\n        const emptyItem = this.availableOptions.find(opt =>\n          opt.hasAttribute('empty'),\n        )\n\n        if (emptyItem) {\n          // Select the empty item automatically\n          this.setSelectedOption(emptyItem)\n          this.setCurrentOption(emptyItem)\n          this.value = emptyItem.value\n          this.selectedIndex = this.findIndexByValue(\n            this.availableOptions,\n            emptyItem.value,\n          )\n\n          this.emit('dds-option-change', {\n            ...this.getEventDetails(emptyItem),\n          })\n        } else {\n          // Fallback to original behavior if no empty item found\n          this.setSelectedOption(undefined)\n          this.setCurrentOption(null)\n          this.value = undefined\n          this.selectedIndex = -1\n\n          this.emit('dds-option-deselect', {\n            option: option,\n            value: undefined,\n            index: -1,\n            text: option.optionText,\n          })\n        }\n\n        return\n      }\n\n      this.setCurrentOption(option)\n      this.setSelectedOption(option)\n      this.selectionChanged(option)\n\n      this.updateComplete.then(() => {\n        this.selectedIndex = this.findIndexByValue(\n          this.availableOptions,\n          this.value,\n        )\n\n        if (!this.disableDelaySet) {\n          this.emit('dds-option-change', {\n            ...this.getEventDetails(this.currentOption),\n          })\n        }\n      })\n    } else {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  getSearchString = (char: string) => {\n    if (typeof this.queryTimeout === 'number') {\n      window.clearTimeout(this.queryTimeout)\n    }\n\n    this.queryTimeout = window.setTimeout(() => {\n      this.queryString = ''\n    }, 500)\n\n    this.queryString += char\n    return this.queryString\n  }\n\n  buildQueryString = (char: string) => {\n    const queryString = this.getSearchString(char)\n\n    for (const option of this.availableOptions) {\n      const label = option.optionText.toLowerCase()\n\n      if (label.startsWith(queryString.toLowerCase())) {\n        this.selectedIndex = this.findIndexByValue(\n          this.availableOptions,\n          option.value,\n        )\n        this.setCurrentOption(option)\n        break\n      }\n    }\n  }\n\n  private handleInitialFocus(): void {\n    if (!this.value && this.selectedIndex < 0) {\n      this.selectedIndex = 0\n    } else {\n      const index = this.value\n        ? this.findIndexByValue(this.availableOptions, this.value)\n        : this.selectedIndex\n\n      if (index !== -1 && !this.isAutoComplete) {\n        this.selectedIndex = index\n        this.setCurrentOption(this.availableOptions[this.selectedIndex])\n        this.setSelectedOption(this.availableOptions[this.selectedIndex])\n        if (this.value) {\n          this.selectionChanged(this.availableOptions[this.selectedIndex])\n        }\n      }\n    }\n\n    if (!this.selectedIndex) {\n      this.setCurrentOption(this.availableOptions[0])\n      this.setSelectedOption(this.availableOptions[0])\n    }\n  }\n\n  private handleKeyFocus(key: string): void {\n    if (this.isAutoComplete || this.searchMode === 'none') {\n      this.handleKeyCodes(key)\n      this.setCurrentOption(this.availableOptions[this.selectedIndex], false)\n      this.setSelectedOption(this.availableOptions[this.selectedIndex])\n    }\n\n    if (this.searchMode === 'typehead') {\n      this.buildQueryString(key)\n    }\n  }\n\n  public captureFocus(key?: string): void {\n    this.focused = true\n    this.focus()\n\n    if (!key) {\n      this.handleInitialFocus()\n    } else {\n      this.handleKeyFocus(key)\n    }\n  }\n\n  public removeFocus(): void {\n    this.focused = false\n    this.clearItemFocusStates()\n  }\n\n  private handleSlotChange() {\n    const allOptions = this.getAllOptions()\n    this.setOptionsFromSlottedItems()\n\n    if (allOptions.length > 0 && this.searchOnValueSet === 'true') {\n      const option = allOptions.find(el => el.value === this.value)\n      this.setSelectedOption(option)\n      this.selectionChanged(option)\n\n      if (this.currentOption) {\n        this.selectedIndex = this.findIndexByValue(allOptions, this.value)\n        this.emit('dds-option-change', {\n          ...this.getEventDetails(this.currentOption),\n        })\n      }\n    } else if (allOptions.length > 0 && !this.search && !this.isAutoComplete) {\n      const firstOption = allOptions.find(option => !option.disabled)\n      this.selectedIndex = 0\n      this.setCurrentOption(firstOption, false)\n\n      this.emit('dds-current-change', {\n        ...this.getEventDetails(firstOption),\n      })\n    } else if (allOptions.length > 0 && (this.search || this.isAutoComplete)) {\n      const firstOption = allOptions.find(option => !option.disabled)\n\n      if (\n        !this.currentOption ||\n        this.currentOption.value !== firstOption?.value\n      ) {\n        this.selectedIndex = 0\n        this.setCurrentOption(firstOption, false)\n      }\n    }\n  }\n\n  render() {\n    return html`<div\n      part=\"base\"\n      class=${clsx('option-list', {\n        'option-list--sm': this.size === 'sm',\n        'option-list--lg': this.size === 'lg',\n      })}\n      @keydown=${this.handleKeydown}\n      @focus=${this.captureFocus}>\n      ${this.availableOptions.map(\n        (option, index) => html`\n          <dap-ds-option-item\n            size=${this.size}\n            ?disabled=${option.disabled}\n            ?selected=${this.value === option.value}\n            ?focused=${index === this.selectedIndex}\n            label=${ifDefined(option.label)}\n            role=\"option\"\n            value=${option.value}\n            tabIndex=${option.tabIndex}\n            id=${option.id || `dap-ds-option-${option.value}`}\n            selectable=${this.selectable}\n            @click=${this.handleOptionClick}>\n            ${unsafeStatic(option.innerHTML)}\n          </dap-ds-option-item>\n        `,\n      )}\n      <slot hidden @slotchange=${this.handleSlotChange}></slot>\n    </div> `\n  }\n}\n","import { html, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\n\nimport styles from './overlay.scss?inline'\n\n/**\n * `dap-ds-overlay`\n * @summary An overlay is a container for overlay content.\n * @element dap-ds-overlay\n * @title - Overlay\n *\n * @csspart overlay - The overlay element\n *\n * @cssproperty --dds-overlay-z-index - Controls the z-index of the overlay (default: 1)\n * @cssproperty --dds-overlay-background-color - Controls the background color of the overlay (default: var(--dds-black-10))\n * @cssproperty --dds-overlay-opacity-closed - Controls the opacity when overlay is closed (default: 0)\n * @cssproperty --dds-overlay-opacity-open - Controls the opacity when overlay is open (default: 1)\n */\n@customElement('dap-ds-overlay')\nexport default class DapDSOverlay extends DdsElement {\n  /** The open state of the overlay. */\n  @property({ type: Boolean, reflect: true }) open?: boolean\n\n  static readonly styles = unsafeCSS(styles)\n\n  render() {\n    return html`<slot></slot>`\n  }\n}\n","import { html, nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { t } from '@/localization/localization'\n\nimport styles from './pager.scss?inline'\n\n/**\n * `dap-ds-pager`\n * @summary A pager is a component that displays pagination controls.\n * @element dap-ds-pager\n * @title - Pager\n *\n * @event {{ action: string, pagination: { pageIndex: number, pageSize: number } }} dds-pagination-change - Event fired when the pagination changes\n *\n * @csspart base - The main pager container.\n * @csspart first - The first page button.\n * @csspart previous - The previous page button.\n * @csspart next - The next page button.\n * @csspart last - The last page button.\n *\n * @cssproperty --dds-pager-spacing-vertical - The vertical spacing of the pager.\n * @cssproperty --dds-pager-spacing-horizontal - The horizontal spacing of the pager.\n * @cssproperty --dds-pager-button-padding - The padding of the pager buttons.\n * @cssproperty --dds-pager-button-border-width - The border width of the pager buttons.\n * @cssproperty --dds-pager-button-border-color - The border color of the pager buttons.\n * @cssproperty --dds-pager-button-border-radius - The border radius of the pager buttons.\n * @cssproperty --dds-pager-button-background - The background color of the pager buttons.\n * @cssproperty --dds-pager-button-font-size - The font size of the pager buttons.\n * @cssproperty --dds-pager-button-font-weight - The font weight of the pager buttons.\n */\n@customElement('dap-ds-pager')\nexport default class DapDSPager extends DdsElement {\n  /** Whether the pager is disabled. */\n  @property({ type: Boolean }) disabled = false\n  /** Enable manual pagination. If true, the component will not automatically update the page index. */\n  @property({ type: Boolean }) manualPagination = false\n  /** The current page index. */\n  @property({ type: Number }) pageIndex = 0\n  @state() private _pageIndex = 0\n  /** The number of items per page. */\n  @property({ type: Number }) pageSize = 10\n  @state() private _pageSize = 10\n  /** The total number of rows. */\n  @property({ type: Number }) totalRows = 0\n  /** Available page size options */\n  @property({ type: Array }) pageSizeOptions = [10, 25, 50, 100]\n\n  /** Show the page size options. */\n  @property({ type: String }) showPageSizeOptions = 'true'\n  /** Show the page index. */\n  @property({ type: String }) showPageIndex = 'true'\n  /** Show the page count. */\n  @property({ type: String }) showPageCount = 'true'\n  /** Show the first button. */\n  @property({ type: String }) showFirstButton = 'true'\n  /** Show the previous button. */\n  @property({ type: String }) showPreviousButton = 'true'\n  /** Show the next button. */\n  @property({ type: String }) showNextButton = 'true'\n  /** Show the last button. */\n  @property({ type: String }) showLastButton = 'true'\n\n  /** The first button label. */\n  @property({ type: String }) firstButtonLabel: string\n  /** The previous button label. */\n  @property({ type: String }) previousButtonLabel: string\n  /** The next button label. */\n  @property({ type: String }) nextButtonLabel: string\n  /** The last button label. */\n  @property({ type: String }) lastButtonLabel: string\n\n  /** The function to determine the pager text\n   * @type {Function}\n   */\n  @property({ attribute: false }) pageStateText = (\n    pageIndex: number,\n    pageSize: number,\n    totalRows: number,\n  ) => {\n    return t('pager.pageInfo', {\n      rangeStart: pageIndex * pageSize + 1,\n      rangeEnd: (pageIndex + 1) * pageSize,\n      totalRows: totalRows,\n    })\n  }\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected updated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.updated(_changedProperties)\n\n    if (this.manualPagination) {\n      if (_changedProperties.has('pageIndex')) {\n        this._pageIndex = this.pageIndex\n      }\n\n      if (_changedProperties.has('pageSize')) {\n        this._pageSize = this.pageSize\n      }\n    }\n  }\n\n  private updatePageIndex(action: string, pageIndex: number, pageSize: number) {\n    this.manualPagination\n      ? (this._pageIndex = pageIndex)\n      : (this.pageIndex = pageIndex)\n\n    this.emit('dds-pagination-change', {\n      action,\n      pagination: {\n        pageIndex: pageIndex,\n        pageSize: pageSize,\n      },\n    })\n  }\n\n  private updatePageSize(pageSize: number) {\n    // Reset to first page when changing page size\n    const pageIndex = 0\n\n    if (this.manualPagination) {\n      this._pageSize = pageSize\n      this._pageIndex = pageIndex\n    } else {\n      this.pageSize = pageSize\n      this.pageIndex = pageIndex\n    }\n\n    this.emit('dds-pagination-change', {\n      action: 'pageSize',\n      pagination: {\n        pageIndex: pageIndex,\n        pageSize: pageSize,\n      },\n    })\n  }\n\n  private renderPageSizeSelect() {\n    if (this.showPageSizeOptions !== 'true') return nothing\n\n    return html`<dap-ds-select\n      class=\"pager__select\"\n      part=\"page-size\"\n      floatingStrategy=\"fixed\"\n      noAnimation\n      ?disabled=${this.disabled}\n      size=\"xs\"\n      .value=${this.manualPagination\n        ? this._pageSize.toString()\n        : this.pageSize.toString()}\n      @dds-change=${(e: Event) => {\n        if ((e.target as HTMLSelectElement).value) {\n          this.updatePageSize(Number((e.target as HTMLSelectElement).value))\n        }\n      }}>\n      <dap-ds-icon-arrow-down-s-fill\n        slot=\"indicator-icon\"\n        size=\"16\"></dap-ds-icon-arrow-down-s-fill>\n      ${this.pageSizeOptions && this.pageSizeOptions.length > 0\n        ? this.pageSizeOptions.map(\n            size =>\n              html`<dap-ds-option-item\n                value=${size}\n                label=${t('pager.pageSize', { count: size })}\n                >${size}</dap-ds-option-item\n              >`,\n          )\n        : nothing}\n    </dap-ds-select>`\n  }\n\n  private renderNavigationButton(\n    part: string,\n    action: string,\n    pageIndex: number,\n    disabled: boolean,\n    label: string,\n    slotName: string,\n  ) {\n    return html`<dap-ds-button\n      part=${part}\n      size=\"xs\"\n      variant=\"subtle-neutral\"\n      @click=${() => this.updatePageIndex(action, pageIndex, this.pageSize)}\n      ?disabled=${disabled || this.disabled}>\n      <slot name=${slotName}> ${label} </slot>\n    </dap-ds-button>`\n  }\n\n  private renderPageInfo() {\n    if (this.showPageIndex !== 'true') return nothing\n\n    return html`<span\n      >${this.pageStateText &&\n      this.pageStateText(\n        this.manualPagination ? this._pageIndex : this.pageIndex,\n        this.manualPagination ? this._pageSize : this.pageSize,\n        this.totalRows,\n      )}</span\n    >`\n  }\n\n  protected render() {\n    const isLastPage =\n      this.pageIndex === Math.ceil(this.totalRows / this.pageSize) - 1\n\n    return html`\n      <div part=\"base\" class=\"pager\">\n        ${this.renderPageSizeSelect()}\n        ${this.showFirstButton === 'true'\n          ? this.renderNavigationButton(\n              'first',\n              'first',\n              0,\n              this.pageIndex === 0,\n              this.firstButtonLabel || t('pager.first'),\n              'first-button-label',\n            )\n          : nothing}\n        ${this.showPreviousButton === 'true'\n          ? this.renderNavigationButton(\n              'previous',\n              'previous',\n              this.pageIndex - 1,\n              this.pageIndex === 0,\n              this.previousButtonLabel || t('pager.previous'),\n              'previous-button-label',\n            )\n          : nothing}\n        ${this.renderPageInfo()}\n        ${this.showNextButton === 'true'\n          ? this.renderNavigationButton(\n              'next',\n              'next',\n              this.pageIndex + 1,\n              isLastPage,\n              this.nextButtonLabel || t('pager.next'),\n              'next-button-label',\n            )\n          : nothing}\n        ${this.showLastButton === 'true'\n          ? this.renderNavigationButton(\n              'last',\n              'last',\n              Math.ceil(this.totalRows / this.pageSize) - 1,\n              isLastPage,\n              this.lastButtonLabel || t('pager.last'),\n              'last-button-label',\n            )\n          : nothing}\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { css, html, nothing, unsafeCSS } from 'lit'\nimport { customElement, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\n\nimport { translate } from '@/localization/localization'\n\nimport { InputBaseElement } from '../input/input-base-element'\nimport style from './password-input.scss?inline'\n\n/**\n * `dap-ds-password-input`\n * @summary A password input a field for entering a password.\n * @element dap-ds-password-input\n * @title - Password input\n *\n * @property {string} label - The label of the password input.\n * @property {string} placeholder - The placeholder of the password input.\n * @property {string} description - The description of the password input.\n * @property {string} tooltip - The tooltip of the password input.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The tooltip placement of the input.\n * @property {string} status - The status of the password input. Can be `success` or `error`.\n * @property {'xs' | 'sm' | 'sm'} size - The size of the password input. Default is `sm`.\n * @property {string} name - The name of the password input.\n * @property {string} value - The value of the password input.\n * @property {boolean} disabled - The disabled state of the password input. Default is false.\n * @property {boolean} required - The required state of the password input. Default is false.\n * @property {boolean} readonly - The readonly state of the password input. Default is false.\n * @property {boolean} autofocus - The autofocus state of the password input. Default is false.\n * @property {string} feedback - The feedback of the input.\n * @property {'negative' | 'positive' | 'warning'} feedbackType - The feedback type of the input. Can be `negative`, `positive`, or `warning`.\n * @property {boolean} loading - The loading state of the password input. Default is false.\n * @property {boolean} optional - The optional state of the password input.\n * @property {string} optionalLabel - The optional label of the password input.\n * @property {boolean} subtle - The weight of the label. Default is `false`\n *\n * @event {{ value: string }} dds-change - Fired when the input value changes.\n * @event {{ value: string }} dds-input - Fired when the input value changes.\n * @event {{ value: string, originalEvent: Event }} dds-keydown - Fired when a key is pressed down.\n * @event {{ void }} dds-blur - Fired when the input loses focus.\n * @event {{ void }} dds-focus - Emitted when the input gains focus.\n *\n * @cssproperty --dds-input-height - The height of the input. Default is var(--dds-spacing-1000).\n * @cssproperty --dds-input-padding - The padding of the input. Default is var(--dds-spacing-300).\n * @cssproperty --dds-input-font-size - The font size of the input. Default is var(--dds-font-base).\n * @cssproperty --dds-input-border-color - The border color of the input. Default is var(--dds-border-neutral-base).\n * @cssproperty --dds-input-background-color - The background color of the input. Default is var(--dds-fields-background-default).\n * @cssproperty --dds-input-text-color - The text color of the input. Default is var(--dds-text-neutral-base).\n * @cssproperty --dds-input-border-radius - The border radius of the input. Default is var(--dds-radius-base).\n * @cssproperty --dds-input-border-width - The border width of the input. Default is var(--dds-border-width-base).\n * @cssproperty --dds-input-disabled-background - The background color of the disabled input. Default is var(--dds-fields-background-disabled).\n * @cssproperty --dds-input-disabled-text - The text color of the disabled input. Default is var(--dds-text-neutral-disabled).\n * @cssproperty --dds-input-readonly-background - The background color of the readonly input. Default is var(--dds-fields-background-read-only).\n * @cssproperty --dds-input-readonly-text - The text color of the readonly input. Default is var(--dds-text-neutral-subtle).\n * @cssproperty --dds-input-success-border - The border color of the success input. Default is var(--dds-border-positive-base).\n * @cssproperty --dds-input-error-border - The border color of the error input. Default is var(--dds-border-negative-base).\n * @cssproperty --dds-input-addon-background - The background color of the input addon. Default is var(--dds-background-ui-neutral-enabled).\n * @cssproperty --dds-input-addon-success-background - The background color of the success input addon. Default is var(--dds-background-ui-positive-enabled).\n * @cssproperty --dds-input-addon-error-background - The background color of the error input addon. Default is var(--dds-background-ui-negative-enabled).\n *\n * @csspart postfix - The postfix of the password input.\n * @csspart password-input - The password input.\n * @csspart password-input--visible - The visible password input.\n * @csspart icon - The icon of the password input.\n * @csspart icon-base - The base of the icon.\n */\n@customElement('dap-ds-password-input')\nexport default class DapDSPasswordInput extends InputBaseElement {\n  @state() passwordVisibile: boolean = false\n\n  static readonly styles = css`\n    ${unsafeCSS(InputBaseElement.styles)}\n    ${unsafeCSS(style)}\n  `\n  constructor() {\n    super()\n    this.type = 'password'\n  }\n\n  private _toggleVisibility() {\n    this.passwordVisibile = !this.passwordVisibile\n    this.type = this.passwordVisibile ? 'text' : 'password'\n  }\n\n  private getIconSize(size: string) {\n    if (size === 'sm') {\n      return 'md'\n    }\n    return size\n  }\n\n  render() {\n    return this.renderInput(\n      html` <span\n        part=\"postfix\"\n        class=${clsx('input__addon-postfix password-input', {\n          'password-input--visible': this.passwordVisibile,\n        })}>\n        <dap-ds-stack direction=\"row\" slot=\"postfix\">\n          ${this.loading\n            ? html`<dap-ds-spinner size=\"lg\"></dap-ds-spinner>`\n            : nothing}\n          <dap-ds-icon-button\n            part=\"icon\"\n            exportparts=\"base:icon-base\"\n            size=${ifDefined(this.getIconSize(this.size)) as 'lg' | 'md' | 'sm'}\n            role=\"switch\"\n            arialabel=\"${this.passwordVisibile\n              ? translate('hide')\n              : translate('show')}\"\n            aria-checked=${this.passwordVisibile === true ? 'true' : 'false'}\n            .disabled=${this.disabled}\n            @click=${this._toggleVisibility}>\n            <dap-ds-icon name=\"eye-line\" class=\"input__icon-show\"></dap-ds-icon>\n            <dap-ds-icon\n              name=\"eye-off-line\"\n              class=\"input__icon-hide\"></dap-ds-icon>\n          </dap-ds-icon-button>\n        </dap-ds-stack>\n      </span>`,\n    )\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property, query } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { CommonFormElementSize, CommonSize } from '@/common/types'\nimport { LabeledChoiceElement } from '@/internal/mixin/labeledChoiceElement'\n\nimport styles from './_styles/radio-button.scss?inline'\n\n/**\n * `dap-ds-radio-button`\n * @summary A radio button is a graphical control element that allows the user to choose only one of a predefined set of mutually exclusive options.\n * @element dap-ds-radio-button\n * @title - Radio button\n *\n * @event {{ checked: boolean, value: string, disabled: boolean, readonly: boolean, type: 'radio' }} dds-change - Fired when the radio button is checked.\n * @event {{ void }} dds-blur - Emitted when the radio button loses focus.\n * @event {{ void }} dds-focus - Emitted when the radio button gains focus.\n * @event {{ checked: boolean, value: string, disabled: boolean, readonly: boolean }} dds-input - Emitted when the radio button receives input.\n *\n * @property {string} name - The name of the radio button.\n * @property {string} value - The value of the radio button.\n * @property {boolean} checked - Whether the radio button is checked.\n * @property {string} label - The label of the radio button.\n * @property {string} description - The description of the radio button.\n * @property {boolean} disabled - Whether the radio button is disabled.\n * @property {boolean} readonly - Whether the radio button is readonly (cannot be changed but value is submitted with form).\n * @property {boolean} required - Whether the radio button is required.\n * @property {'xs' | 'sm' | 'lg'} size - The size of the radio button. Default is 'sm'.\n * @property {'left' | 'right'} labelPlacement - The placement of the label.\n * @property {'top' | 'bottom'} descriptionPlacement - The placement of the description.\n * @property {boolean} subtle - The weight of the label.\n * @property {string} feedback - The feedback of the radio button.\n * @property {'negative' | 'positive' | 'warning'} feedbackType - The feedback type of the radio button.\n * @property {boolean} invalid - The invalid state of the radio button.\n * @property {boolean} optional - The optional state of the radio button.\n * @property {string} optionalLabel - The optional label of the radio button.\n * @property {boolean} preventDefault - Whether the radio button should prevent the default action.\n * @property {boolean} focusable - Whether the radio button is focusable.\n * @property {'normal' | 'background'} type - The type of the radio button.\n * @property {boolean} border - This sets up a border around the radio button, when true.\n *\n * @csspart base - The main radio button container.\n * @csspart wrapper - The wrapper of the radio button.\n * @csspart base-label - The main label container.\n * @csspart label - The label of the radio button.\n * @csspart input - The native input of the radio button.\n * @csspart control - The control of the radio button.\n * @csspart label-container - The label container of the radio button.\n * @csspart description - The description of the radio button.\n *\n * @cssproperty --dds-radio-size - Sets the size of the radio button. Default: var(--dds-spacing-600)\n * @cssproperty --dds-radio-border-width - Sets the border width of the radio button. Default: var(--dds-border-width-large)\n * @cssproperty --dds-radio-border-radius - Sets the border radius of the radio button. Default: var(--dds-radius-rounded)\n * @cssproperty --dds-radio-border-color - Sets the border color of the radio button. Default: var(--dds-border-neutral-base)\n * @cssproperty --dds-radio-background-color - Sets the background color of the radio button. Default: var(--dds-background-neutral-base)\n * @cssproperty --dds-radio-hover-border-color - Sets the border color of the radio button on hover. Default: var(--dds-border-neutral-medium)\n * @cssproperty --dds-radio-hover-background-color - Sets the background color of the radio button on hover. Default: var(--dds-background-neutral-medium)\n * @cssproperty --dds-radio-active-border-color - Sets the border color of the radio button when active. Default: var(--dds-border-neutral-strong)\n * @cssproperty --dds-radio-active-background-color - Sets the background color of the radio button when active. Default: var(--dds-background-neutral-strong)\n * @cssproperty --dds-radio-checked-background-color - Sets the background color of the checked radio button. Default: var(--dds-background-brand-base-inverted)\n * @cssproperty --dds-radio-checked-hover-background-color - Sets the background color of the checked radio button on hover. Default: var(--dds-background-brand-medium-inverted)\n * @cssproperty --dds-radio-checked-active-background-color - Sets the background color of the checked radio button when active. Default: var(--dds-background-brand-strong-inverted)\n * @cssproperty --dds-radio-disabled-background-color - Sets the background color of the disabled radio button. Default: var(--dds-background-neutral-disabled)\n * @cssproperty --dds-radio-icon-background-color - Sets the background color of the radio button icon. Default: var(--dds-transparent-white-strong-static)\n * @cssproperty --dds-radio-disabled-icon-background-color - Sets the background color of the disabled radio button icon. Default: var(--dds-background-neutral-stronger)\n * @cssproperty --dds-radio-invalid-border-color - Sets the border color of the invalid radio button. Default: var(--dds-border-negative-base)\n * @cssproperty --dds-radio-invalid-background-color - Sets the background color of the invalid radio button. Default: var(--dds-background-negative-base)\n * @cssproperty --dds-radio-invalid-hover-border-color - Sets the border color of the invalid radio button on hover. Default: var(--dds-border-negative-medium)\n * @cssproperty --dds-radio-invalid-hover-background-color - Sets the background color of the invalid radio button on hover. Default: var(--dds-background-negative-medium)\n * @cssproperty --dds-radio-invalid-active-border-color - Sets the border color of the invalid radio button when active. Default: var(--dds-border-negative-strong)\n * @cssproperty --dds-radio-invalid-active-background-color - Sets the background color of the invalid radio button when active. Default: var(--dds-background-negative-strong)\n * @cssproperty --dds-radio-invalid-checked-background-color - Sets the background color of the invalid checked radio button. Default: var(--dds-background-negative-base-inverted)\n * @cssproperty --dds-radio-invalid-checked-hover-background-color - Sets the background color of the invalid checked radio button on hover. Default: var(--dds-background-negative-medium-inverted)\n * @cssproperty --dds-radio-invalid-checked-active-background-color - Sets the background color of the invalid checked radio button when active. Default: var(--dds-background-negative-strong-inverted)\n * @cssproperty --dds-radio-icon-size - Sets the size of the radio button icon. Default: var(--dds-spacing-300)\n * @cssproperty --dds-radio-readonly-border-color - Sets the border color when the radio button is readonly. Default is `var(--dds-border-neutral-subtle)`.\n * @cssproperty --dds-radio-readonly-background-color - Sets the background color when the radio button is readonly. Default is `var(--dds-background-neutral-subtle)`.\n * @cssproperty --dds-radio-readonly-icon-color - Sets the color of the radio button icon when readonly. Default is `var(--dds-text-neutral-base)`.\n */\n@customElement('dap-ds-radio-button')\nexport default class DapDSRadioButton extends LabeledChoiceElement {\n  @query('#input') private readonly input!: HTMLInputElement\n\n  /** Whether the radio button is focusable */\n  @property({ type: Boolean }) focusable = false\n\n  /** Whether the radio button should prevent the default action */\n  @property({ type: Boolean, reflect: true }) preventDefault: boolean = false\n\n  /** Whether the radio button is readonly */\n  @property({ type: Boolean, reflect: true }) readonly: boolean = false\n\n  /** This sets up a border around the radio button, when true. */\n  @property({ type: Boolean }) border: boolean = false\n\n  /** The type of the radio button\n   * @type {'normal' | 'background'}\n   */\n  @property({ type: String }) type: 'normal' | 'background' = 'normal'\n\n  static readonly styles = unsafeCSS(styles)\n\n  /**\n   * Gets the aria-describedby attribute value by combining description and feedback IDs.\n   * @returns {string | undefined} Space-separated IDs or undefined if none exist\n   * @private\n   */\n  private getAriaDescribedBy(): string | undefined {\n    const ids: string[] = []\n\n    if (this.description) {\n      ids.push('description')\n    }\n\n    if (this.feedback) {\n      ids.push('feedback')\n    }\n\n    return ids.length > 0 ? ids.join(' ') : undefined\n  }\n\n  /**\n   * Handles click events on the radio button.\n   * Manages the checked state and emits change events.\n   * @private\n   */\n  private handleClick() {\n    // Early return if click should be prevented, component is disabled, or readonly\n    if (this.preventDefault || this.disabled || this.readonly) {\n      return\n    }\n\n    this.checked = true\n\n    const { checked, value, disabled } = this\n\n    // Emit change event with null safety\n    try {\n      this.emit('dds-change', {\n        checked,\n        value: value || '',\n        disabled,\n        readonly: this.readonly,\n        type: 'radio',\n      })\n    } catch (error) {\n      console.error('Error emitting radio button change event:', error)\n    }\n\n    // Update validity state with error handling\n    try {\n      this.setValidity()\n    } catch (error) {\n      console.error('Error setting radio button validity:', error)\n    }\n  }\n\n  formResetCallback() {\n    this.internals.setValidity({})\n    this.internals.setFormValue(this.defaultValue)\n    this.value = this.defaultValue\n    this.checked = this.defaultValue === this.value\n  }\n\n  /**\n   * Handles input events on the radio button.\n   * Emits the dds-input event with current radio button state.\n   * @private\n   */\n  private handleInput() {\n    const { checked, value, disabled } = this\n\n    const event = new CustomEvent('dds-input', {\n      bubbles: true,\n      cancelable: false,\n      composed: true,\n      detail: { checked, value, disabled, readonly: this.readonly },\n    })\n\n    this.dispatchEvent(event)\n  }\n\n  /**\n   * Handles keyboard events on the radio button.\n   * Provides enhanced keyboard navigation and accessibility.\n   * @param {KeyboardEvent} event - The keyboard event\n   * @private\n   */\n  private handleKeyDown(event: KeyboardEvent): void {\n    // Handle Space key to select radio button (in addition to default behavior)\n    if (event.code === 'Space') {\n      // Allow default Space behavior for radio input\n      // This ensures proper accessibility and form behavior\n      return\n    }\n\n    // Handle Enter key to select radio button (custom behavior)\n    if (event.code === 'Enter') {\n      event.preventDefault()\n      this.handleClick()\n    }\n  }\n\n  public get focusElement(): HTMLInputElement {\n    if (!this.input) {\n      throw new Error(\n        'Radio button input element not found. Component may not be properly initialized.',\n      )\n    }\n    return this.input\n  }\n\n  /**\n   * Programmatically focuses the radio button input element.\n   * @public\n   */\n  public focus(): void {\n    if (this.input && !this.disabled && !this.readonly) {\n      this.input.focus()\n    }\n  }\n\n  /**\n   * Programmatically blurs the radio button input element.\n   * @public\n   */\n  public blur(): void {\n    if (this.input) {\n      this.input.blur()\n    }\n  }\n\n  /**\n   * Handles invalid events on the radio button input.\n   * Prevents the default browser validation UI from showing and manages invalid state.\n   * @param {Event} event - The invalid event\n   * @private\n   */\n  handleInvalid(event: Event) {\n    event.preventDefault()\n    // Set invalid state if not already set\n    if (!this.invalid) {\n      this.invalid = true\n    }\n  }\n\n  render() {\n    return html`\n      <div part=\"base\">\n        <label\n          part=\"base-label\"\n          id=\"label\"\n          class=${clsx('radio choice', `radio--${this.size}`, {\n            'radio--checked': this.checked,\n            'radio--disabled': this.disabled,\n            'radio--readonly': this.readonly,\n            'radio--required': this.required,\n            'choice--readonly': this.readonly,\n            'choice--disabled': this.disabled,\n            'choice__label--right': this.labelPlacement === 'right',\n            'choice__label--left': this.labelPlacement === 'left',\n          })}>\n          <div\n            part=\"wrapper\"\n            class=${clsx('input__wrapper', {\n              'input__wrapper--background': this.type === 'background',\n              'input__wrapper--border': this.border,\n            })}>\n            <input\n              part=\"input\"\n              type=\"radio\"\n              class=${clsx('radio__input', {\n                'radio__input--background': this.type === 'background',\n              })}\n              name=${ifDefined(this.name ? this.name : undefined)}\n              id=\"input\"\n              value=${ifDefined(this.value)}\n              .checked=${this.checked}\n              .disabled=${this.disabled}\n              .required=${this.required}\n              ?readonly=${this.readonly}\n              tabindex=${this.checked || this.focusable ? '0' : '-1'}\n              aria-label=${ifDefined(this.ariaLabel) || ''}\n              aria-describedby=${ifDefined(this.getAriaDescribedBy())}\n              aria-checked=${this.checked ? 'true' : 'false'}\n              .aria-invalid=${this.invalid ? 'true' : null}\n              @invalid=${this.handleInvalid}\n              @click=${this.handleClick}\n              @input=${this.handleInput}\n              @keydown=${this.handleKeyDown}\n              @blur=${super.onBlur}\n              @focus=${super.onFocus} />\n            <span\n              part=\"control\"\n              class=${clsx('input__control', {\n                'input__control--disabled': this.disabled,\n                'input__control--readonly': this.readonly,\n                'input__control--invalid': this.invalid,\n                'input__control--checked': this.checked,\n              })}>\n              <slot name=\"iconcontent\">\n                <span class=\"radio__icon\"></span>\n              </slot>\n              <span\n                part=\"high-contrast\"\n                class=${clsx(\n                  'input__control-high-contrast',\n                  `input__control-high-contrast--${this.size}`,\n                  {\n                    'input__control-high-contrast--disabled': this.disabled,\n                    'input__control-high-contrast--readonly': this.readonly,\n                  },\n                )}></span>\n            </span>\n\n            <div\n              part=\"label-container\"\n              class=${clsx('choice__label-container', {\n                'choice__label-container--disabled': this.disabled,\n                'choice__label-container--readonly': this.readonly,\n                'choice__label--bottom': this.descriptionPlacement === 'top',\n                'choice__label--top': this.descriptionPlacement === 'bottom',\n              })}>\n              ${this.label &&\n              html`<dap-ds-form-label\n                id=\"label\"\n                class=\"label\"\n                part=\"label\"\n                .size=${this.size}\n                .required=${this.required}\n                .optional=${this.optional}\n                .optionalLabel=${this.optionalLabel}\n                .disabled=${this.disabled || this.readonly}\n                .readonly=${this.readonly}\n                label=${ifDefined(this.label)}\n                subtle\n                renderAs=\"span\">\n              </dap-ds-form-label>`}\n              ${this.description &&\n              html`\n                <dap-ds-typography\n                  class=\"description\"\n                  variant=\"description\"\n                  part=\"description\"\n                  size=${ifDefined(this.size as CommonFormElementSize)}\n                  id=\"description\">\n                  ${this.description}\n                </dap-ds-typography>\n              `}\n            </div>\n          </div>\n          ${this.feedback &&\n          html`\n            <dap-ds-feedback\n              part=\"feedback\"\n              feedbackType=${ifDefined(this.feedbackType)}\n              feedbackSize=${ifDefined(this.size) as CommonSize}\n              id=\"feedback\"\n              .subtle=${this.subtle}>\n              ${this.feedback}\n            </dap-ds-feedback>\n          `}\n        </label>\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property, query, state } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { GenericFormElement } from '@/internal/mixin/genericFormElement'\n\nimport styles from './_styles/rating.scss?inline'\n\n/**\n * `dap-ds-rating`\n * @summary Rating is a component that allows users to rate a product or service.\n * @element dap-ds-rating\n * @title - Rating\n *\n * @event {{ value: number }} dds-change - Event fired when the rating value changes.\n *\n * @csspart base - The main rating container.\n * @csspart star - The star element.\n * @csspart stars-container - The container of the stars.\n * @csspart icon - The icon of the star.\n */\n@customElement('dap-ds-rating')\nexport default class DapDSRating extends GenericFormElement {\n  /** Reference to the live region for screen reader announcements */\n  @query('.sr-announcement') private readonly _liveRegion: HTMLElement | null\n\n  constructor() {\n    super()\n\n    this.value = 0\n  }\n\n  static readonly styles = unsafeCSS(styles)\n\n  /** The label of the rating */\n  @property({ reflect: true }) label: string\n\n  /** The maximum number of stars */\n  @property({ type: Number }) max = 5\n\n  private _ratingContainer: HTMLElement | null = null\n  @state() private _hasFocus = false\n  @state() private _hoverValue = 0\n  @state() private readonly _uniqueId =\n    `star-rating-${window.crypto.randomUUID()}`\n\n  connectedCallback() {\n    super.connectedCallback()\n\n    // Add event listener at document level to ensure we catch all keyboard events\n    document.addEventListener('keydown', this._handleKeyDown)\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback()\n\n    document.removeEventListener('keydown', this._handleKeyDown)\n\n    if (this._ratingContainer) {\n      this._ratingContainer.removeEventListener('focus', () => {})\n    }\n  }\n\n  firstUpdated() {\n    // Set a reference to the container element for easier access\n    this._ratingContainer = this.renderRoot.querySelector('.rating-container')\n  }\n\n  _handleContainerFocus = () => {\n    this._hasFocus = true\n\n    // Announce current rating for initial focus\n    this._announceRating()\n  }\n\n  _handleContainerBlur = () => {\n    this._hasFocus = false\n  }\n\n  _handleContainerKeyDown = (event: KeyboardEvent) => {\n    if (this.disabled || this.readonly) return\n\n    switch (event.key) {\n      case 'ArrowRight':\n      case 'ArrowUp':\n        event.preventDefault()\n        this._incrementRating()\n        break\n      case 'ArrowLeft':\n      case 'ArrowDown':\n        event.preventDefault()\n        this._decrementRating()\n        break\n      case 'Home':\n        event.preventDefault()\n        this._setRating(1)\n        break\n      case 'End':\n        event.preventDefault()\n        this._setRating(this.max)\n        break\n      default:\n        return\n    }\n  }\n\n  /**\n   * Handle keyboard events for the entire component\n   * This is a backup to catch keyboard events if they bubble up\n   */\n  _handleKeyDown = (event: KeyboardEvent) => {\n    if (this.disabled || this.readonly) return\n\n    // Only process keyboard events if:\n    // 1. The event target is this component or its children\n    // 2. The component currently has focus\n    const isTargetWithin = this.contains(event.target as Node)\n\n    if (isTargetWithin && this._hasFocus) {\n      // The container's direct keydown handler should handle this,\n      // but this is a backup in case the event bubbles up\n      switch (event.key) {\n        case 'ArrowRight':\n        case 'ArrowUp':\n        case 'ArrowLeft':\n        case 'ArrowDown':\n        case 'Home':\n        case 'End':\n          // Let the container's direct keydown handler process these\n          break\n        default:\n          return\n      }\n    }\n  }\n\n  _incrementRating() {\n    const newValue = Math.min(this.value + 1, this.max)\n    this._setRating(newValue)\n  }\n\n  _decrementRating() {\n    const newValue = Math.max(this.value - 1, 0)\n    this._setRating(newValue)\n  }\n\n  _setRating(value: number) {\n    const oldValue = this.value\n    this.value = value\n\n    // Only announce if the value actually changed\n    if (oldValue !== value) {\n      this._announceRating()\n      this.emit('dds-change', { value })\n    }\n  }\n\n  /**\n   * Announce the current rating to screen readers\n   */\n  _announceRating() {\n    if (this._liveRegion) {\n      const message =\n        this.value === 0\n          ? `Rating cleared`\n          : `${this.value} of ${this.max} stars selected`\n\n      // Update the live region with the current rating\n      this._liveRegion.textContent = message\n    }\n  }\n\n  _handleStarClick(value: number) {\n    if (this.disabled || this.readonly) return\n\n    // Toggle the value if the same star is clicked twice\n    const newValue = this.value === value ? 0 : value\n    this._setRating(newValue)\n  }\n\n  _handleStarHover(value: number) {\n    if (this.disabled || this.readonly) return\n    this._hoverValue = value\n  }\n\n  _handleStarLeave() {\n    if (this.disabled || this.readonly) return\n    this._hoverValue = 0\n  }\n\n  render() {\n    const stars = []\n\n    for (let i = 1; i <= this.max; i++) {\n      const isActive = i <= this.value\n      const isHovered =\n        !this.disabled && !this.readonly && i <= this._hoverValue\n\n      stars.push(html`\n        <span\n          part=\"star\"\n          class=${clsx('star', {\n            'star--active': isActive,\n            'star--hover': isHovered,\n            'star--readonly': this.readonly,\n            'star--disabled': this.disabled,\n          })}\n          @click=${() => this._handleStarClick(i)}\n          @mouseenter=${() => this._handleStarHover(i)}\n          @mouseleave=${() => this._handleStarLeave()}\n          tabindex=${this.disabled ? '-1' : '0'}\n          role=\"radio\"\n          aria-checked=${isActive}\n          aria-disabled=${this.disabled}\n          aria-posinset=${i}\n          aria-setsize=${this.max}>\n          <dap-ds-icon part=\"icon\" name=\"star-fill\"></dap-ds-icon>\n          <span class=\"sr-only\">${i} star${i === 1 ? '' : 's'}</span>\n        </span>\n      `)\n    }\n\n    return html`\n      <div\n        class=\"rating-container\"\n        part=\"base\"\n        tabindex=${this.disabled ? '-1' : '0'}\n        @focus=${this._handleContainerFocus}\n        @blur=${this._handleContainerBlur}\n        @keydown=${this._handleContainerKeyDown}\n        aria-labelledby=\"rating-label-${this._uniqueId}\">\n        ${(this, this.renderLabel(`rating-label-${this._uniqueId}`))}\n        <div\n          class=\"stars-container\"\n          part=\"stars-container\"\n          role=\"radiogroup\"\n          aria-labelledby=\"rating-label-${this._uniqueId}\"\n          aria-disabled=${this.disabled}\n          aria-readonly=${this.readonly}>\n          ${stars}\n        </div>\n        <!-- Live region for screen reader announcements -->\n        <div class=\"sr-announcement sr-only\" aria-live=\"assertive\"></div>\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { nothing, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './scroll-area.scss?inline'\n\n/**\n * `dap-ds-scroll-area`\n * @summary A component that provides a customizable scrollable area with a custom scrollbar.\n * @element dap-ds-scroll-area\n * @title - Scroll area\n *\n * @slot - The content to be scrolled\n *\n * @csspart viewport - The viewport element that contains the scrollable content\n * @csspart scrollbar - The scrollbar container\n * @csspart corner - The corner between vertical and horizontal scrollbars\n *\n * @cssprop --dds-scroll-area-radius - The border radius of the scroll area and its elements (default: var(--dds-radius-base))\n * @cssprop --dds-scroll-area-background - The background color of the scroll area (default: var(--dds-background-neutral-base))\n * @cssprop --dds-scroll-area-scrollbar-background - The background color of the scrollbar (default: var(--dds-background-neutral-subtle))\n * @cssprop --dds-scroll-area-thumb-background - The background color of the scrollbar thumb (default: var(--dds-background-neutral-interactive))\n * @cssprop --dds-scroll-area-thumb-hover-background - The background color of the scrollbar thumb on hover (default: var(--dds-background-neutral-interactive-hover))\n * @cssprop --dds-scroll-area-thumb-active-background - The background color of the scrollbar thumb when active (default: var(--dds-background-neutral-interactive-active))\n * @cssprop --dds-scroll-area-transition - The transition timing for scrollbar interactions (default: var(--dds-transition-fast) var(--dds-easing-ease-out))\n * @cssprop --dds-scroll-area-scrollbar-size - The width/height of the scrollbar (default: 10px)\n */\n@customElement('dap-ds-scroll-area')\nexport default class DapDSScrollArea extends DdsElement {\n  /**\n   * The orientation of the scrollbar.\n   * @type {'vertical' | 'horizontal' | 'both'}\n   * @default 'vertical'\n   */\n  @property({ type: String }) orientation: 'vertical' | 'horizontal' | 'both' =\n    'vertical'\n\n  static readonly styles = unsafeCSS(styles)\n\n  private viewport: HTMLElement | null = null\n  private scrollbar: HTMLElement | null = null\n  private thumbHorizontal: HTMLElement | null = null\n  private thumbVertical: HTMLElement | null = null\n  private isDragging = false\n  private startY = 0\n  private startScrollTop = 0\n\n  firstUpdated() {\n    this.viewport = this.shadowRoot?.querySelector(\n      '.scroll-area__viewport',\n    ) as HTMLElement\n    this.scrollbar = this.shadowRoot?.querySelector(\n      '.scroll-area__scrollbar',\n    ) as HTMLElement\n    this.thumbHorizontal = this.shadowRoot?.querySelector(\n      '.scroll-area__thumb--horizontal',\n    ) as HTMLElement\n    this.thumbVertical = this.shadowRoot?.querySelector(\n      '.scroll-area__thumb--vertical',\n    ) as HTMLElement\n\n    if (\n      this.viewport &&\n      this.scrollbar &&\n      (this.thumbHorizontal || this.thumbVertical)\n    ) {\n      this.setupScrollbar()\n    }\n  }\n\n  private setupScrollbar() {\n    if (\n      !this.viewport ||\n      !this.scrollbar ||\n      (!this.thumbHorizontal && !this.thumbVertical)\n    )\n      return\n\n    const updateThumbSize = () => {\n      if (this.orientation === 'vertical' || this.orientation === 'both') {\n        const { scrollHeight, clientHeight } = this.viewport!\n        const thumbHeight = (clientHeight / scrollHeight) * clientHeight\n        this.thumbVertical!.style.height = `${thumbHeight}px`\n      }\n\n      if (this.orientation === 'horizontal' || this.orientation === 'both') {\n        const { scrollWidth, clientWidth } = this.viewport!\n        const thumbWidth = (clientWidth / scrollWidth) * clientWidth\n        this.thumbHorizontal!.style.width = `${thumbWidth}px`\n      }\n    }\n\n    const updateThumbPosition = () => {\n      if (this.orientation === 'vertical' || this.orientation === 'both') {\n        const { scrollTop, scrollHeight, clientHeight } = this.viewport!\n        const thumbPosition =\n          (scrollTop / (scrollHeight - clientHeight)) *\n          (clientHeight - this.thumbVertical!.offsetHeight)\n        this.thumbVertical!.style.transform = `translateY(${thumbPosition}px)`\n      }\n\n      if (this.orientation === 'horizontal' || this.orientation === 'both') {\n        const { scrollLeft, scrollWidth, clientWidth } = this.viewport!\n        const thumbPosition =\n          (scrollLeft / (scrollWidth - clientWidth)) *\n          (clientWidth - this.thumbHorizontal!.offsetWidth)\n        this.thumbHorizontal!.style.transform = `translateX(${thumbPosition}px)`\n      }\n    }\n\n    const handleThumbMouseDown = (e: MouseEvent) => {\n      e.preventDefault()\n      this.isDragging = true\n\n      if (this.orientation === 'vertical' || this.orientation === 'both') {\n        this.startY = e.clientY\n        this.startScrollTop = this.viewport!.scrollTop\n      }\n\n      if (this.orientation === 'horizontal' || this.orientation === 'both') {\n        this.startY = e.clientX\n        this.startScrollTop = this.viewport!.scrollLeft\n      }\n\n      document.addEventListener('mousemove', handleThumbMouseMove)\n      document.addEventListener('mouseup', handleThumbMouseUp)\n    }\n\n    const handleThumbMouseMove = (e: MouseEvent) => {\n      if (!this.isDragging) return\n\n      if (this.orientation === 'vertical' || this.orientation === 'both') {\n        const deltaY = e.clientY - this.startY\n        const { scrollHeight, clientHeight } = this.viewport!\n        const scrollRatio = scrollHeight / clientHeight\n        this.viewport!.scrollTop = this.startScrollTop + deltaY * scrollRatio\n      }\n\n      if (this.orientation === 'horizontal' || this.orientation === 'both') {\n        const deltaX = e.clientX - this.startY\n        const { scrollWidth, clientWidth } = this.viewport!\n        const scrollRatio = scrollWidth / clientWidth\n        this.viewport!.scrollLeft = this.startScrollTop + deltaX * scrollRatio\n      }\n    }\n\n    const handleThumbMouseUp = () => {\n      this.isDragging = false\n      document.removeEventListener('mousemove', handleThumbMouseMove)\n      document.removeEventListener('mouseup', handleThumbMouseUp)\n    }\n\n    updateThumbSize()\n    updateThumbPosition()\n\n    this.viewport.addEventListener('scroll', updateThumbPosition)\n    this.viewport.addEventListener('resize', updateThumbSize)\n    this.thumbHorizontal?.addEventListener('mousedown', handleThumbMouseDown)\n    this.thumbVertical?.addEventListener('mousedown', handleThumbMouseDown)\n  }\n\n  getScrollbar(orientation: 'horizontal' | 'vertical') {\n    return html`<div\n      part=\"scrollbar\"\n      class=${clsx(\n        'scroll-area__scrollbar',\n        `scroll-area__scrollbar--${orientation}`,\n      )}>\n      <div part=\"thumb\" class=\"scroll-area__thumb--${orientation}\"></div>\n    </div> `\n  }\n\n  render() {\n    return html`\n      <div part=\"base\" class=\"scroll-area\">\n        <div part=\"viewport\" class=\"scroll-area__viewport\">\n          <slot></slot>\n        </div>\n\n        ${this.orientation === 'horizontal' || this.orientation === 'both'\n          ? this.getScrollbar('horizontal')\n          : nothing}\n        ${this.orientation === 'vertical' || this.orientation === 'both'\n          ? this.getScrollbar('vertical')\n          : nothing}\n      </div>\n    `\n  }\n}\n","import { customElement } from 'lit/decorators.js'\n\nimport ComboboxBaseElement from '../combobox/comboboxBase'\n\n/**\n * `dap-ds-search`\n * @summary A select is a form element that allows the user to select one option from a set.\n * @element dap-ds-search\n * @title - Search\n *\n * @event dds-change - Fired when the search value changes.\n * @event dds-blur - Emitted when the search loses focus.\n * @event dds-focus - Emitted when the search gains focus.\n * @event dds-clear - Emitted when the search is cleared.\n * @event dds-search - Emitted when the search input value changes.\n * @event dds-input - Emitted when typing happens in the search input.\n *\n * @property {string} value - The value of the search.\n * @property {string} placeholder - The placeholder of the search.\n * @property { 'top' | 'top-start' | 'top-end' | 'right' | 'right-start'| 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end'} placement - The placement of the select dropdown. Default is 'bottom-start'.\n * @property {boolean} opened - Whether the search dropdown is opened.\n * @property {boolean} sync - The sync mode of the search dropdown. How the dropdown item size is synced to the trigger element'.\n * @property {string} label - The label of the search.\n * @property {string} description - The description of the search.\n * @property {string} tooltip - The tooltip of the search.\n * @property {'xs' | 'sm' | 'lg'} size - The size of the search.\n * @property {'none' | 'typehead' | 'autocomplete' | 'manual'} searchMode - The search mode of the select. Default is 'none'.\n * @property {boolean} disabled - Whether the search is disabled.\n * @property {boolean} required - Whether the search is required.\n * @property {boolean} readonly - Whether the search is readonly.\n * @property {boolean} autofocus - Whether the search is autofocus.\n * @property {string} clearButton - Whether the search is clearable. Default is 'true'.\n * @property {string} feedback - The feedback content of the search.\n * @property {'negative' | 'positive' | 'warning' | 'info'} feedbackType - The feedback type of the search.\n * @property {boolean} allowManualInput - Whether the search allows manual input, or free text.\n * @property {boolean} searchForText - Whether the search should search for the selected item text.\n * @property {boolean} textComplete - Whether the search should not complete the text.\n * @property {string} searchButtonAriaLabel - The aria label of the search button.\n * @property {boolean} openOnEmpty - Whether the search should open on empty results.\n * @property {string} selectable - Show the selected item check mark in the dropdown. Default is 'false'.\n * @property {boolean} noAnimation - Whether the search open indicator should be animated. Default is true.\n * @property {boolean} subtle - Subtle color version\n *\n * @cssproperty --dds-combobox-padding-xs - The padding for extra small size. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-padding-sm - The padding for small size. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-padding-lg - The padding for large size. Defaults to var(--dds-spacing-300).\n * @cssproperty --dds-combobox-padding-horizontal - The horizontal padding. Defaults to var(--dds-spacing-300).\n * @cssproperty --dds-combobox-padding-vertical - The vertical padding. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-gap - The gap between elements. Defaults to var(--dds-spacing-100).\n * @cssproperty --dds-combobox-icon-gap - The gap between icons. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-action-gap - The gap between action elements. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-combobox-action-padding - The padding for action elements. Defaults to var(--dds-spacing-300).\n * @cssproperty --dds-combobox-clear-icon-width - The width of the clear icon. Defaults to var(--dds-spacing-800).\n * @cssproperty --dds-combobox-dropdown-icon-right - The right position of the dropdown icon. Defaults to var(--dds-spacing-600).\n * @cssproperty --dds-combobox-min-width - The minimum width of the combobox. Defaults to 7.5rem.\n *\n * @csspart base - The main search container.\n * @csspart trigger - The trigger button of the search.\n * @csspart label - The label of the search.\n * @csspart description - The description of the search.\n * @csspart feedback - The feedback of the search.\n * @csspart tooltip - The tooltip of the search.\n * @csspart option-list - The option list of the search.\n *\n * @slot - The default slot for the options.\n *\n */\n@customElement('dap-ds-search')\nexport default class DapDSSearch extends ComboboxBaseElement {\n  constructor() {\n    super()\n    this.selectable = 'false'\n    this.search = true\n    this.noAnimation = true\n    this.searchOnValueSet = 'false'\n    this.searchMode = 'none'\n    this.textComplete = false\n  }\n\n  render() {\n    return this.renderCombobox()\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property, query, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport {\n  CommonFormElementSize,\n  FloatingStrategy,\n  PopupPlacement,\n} from '@/common/types'\nimport { getValidityStateObject } from '@/common/utils'\nimport { GenericFormElement } from '@/internal/mixin/genericFormElement'\nimport { t } from '@/localization/localization'\n\nimport DapDSOptionList from '../option-list/option-list.component'\nimport styles from './select.scss?inline'\n\n/**\n * `dap-ds-select`\n * @summary A select is a form element that allows the user to select one option from a set.\n * @element dap-ds-select\n * @title - Select\n *\n * @event {{ value: string }} dds-change - Fired when the select value changes.\n * @event {{ void }} dds-blur - Emitted when the select loses focus.\n * @event {{ void }} dds-focus - Emitted when the select gains focus.\n * @event {{ void }} dds-opened - Emitted when the select dropdown is opened.\n * @event {{ void }} dds-closed - Emitted when the select dropdown is closed.\n *\n * @property {string} value - The value of the select.\n * @property {string} label - The label of the select.\n * @property {string} description - The description of the select.\n * @property {string} tooltip - The tooltip of the select.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The tooltip placement of the select.\n * @property {'xs' | 'sm' | 'lg'} size - The size of the select. Default is `sm`.\n * @property {boolean} disabled - Whether the select is disabled.\n * @property {boolean} required - Whether the select is required.\n * @property {boolean} readonly - Whether the select is readonly.\n * @property {boolean} autofocus - Whether the select is autofocus.\n * @property {string} feedback - The feedback of the select.\n * @property {negative | positive | warning} feedbackType - The feedback type of the select. Can be `negative`, `positive`, or `warning`.\n * @property {string} status - The status of the select. Can be `success` or `error`.\n * @property {boolean} optional - The optional state of the select.\n * @property {string} optionalLabel - The optional label of the select.\n * @property {boolean} subtle - The weight of the label. Default is `false`\n *\n * @csspart base - The main select container.\n * @csspart trigger - The trigger button of the select.\n * @csspart label - The label of the select.\n * @csspart description - The description of the select.\n * @csspart feedback - The feedback of the select.\n * @csspart tooltip - The tooltip of the select.\n * @csspart option-list - The option list of the select.\n *\n * @cssproperty --dds-select-min-height - Minimum height of the select component (default: var(--dds-spacing-1000))\n * @cssproperty --dds-select-padding - Padding of the select component (default: var(--dds-spacing-300))\n * @cssproperty --dds-select-column-gap - Column gap of the select component (default: var(--dds-spacing-100))\n * @cssproperty --dds-select-border-color - Border color of the select component (default: var(--dds-border-neutral-base))\n * @cssproperty --dds-select-border-radius - Border radius of the select component (default: var(--dds-radius-base))\n * @cssproperty --dds-select-bg-color - Background color of the select component (default: var(--dds-background-neutral-subtle))\n * @cssproperty --dds-select-text-color - Text color of the select component (default: var(--dds-text-neutral-base))\n * @cssproperty --dds-select-icon-right - Right position of the icon (default: var(--dds-spacing-200))\n * @cssproperty --dds-select-icon-color - Color of the icon (default: var(--dds-icon-neutral-subtle))\n * @cssproperty --dds-select-text-margin-right - Right margin of the text (default: var(--dds-spacing-600))\n * @cssproperty --dds-select-disabled-border-color - Border color when disabled (default: var(--dds-background-neutral-stronger))\n * @cssproperty --dds-select-disabled-bg-color - Background color when disabled (default: var(--dds-background-neutral-stronger))\n * @cssproperty --dds-select-disabled-text-color - Text color when disabled (default: var(--dds-text-neutral-disabled))\n * @cssproperty --dds-select-error-border-color - Border color in error state (default: var(--dds-border-negative-base))\n * @cssproperty --dds-select-success-border-color - Border color in success state (default: var(--dds-border-positive-base))\n * @cssproperty --dds-select-xs-min-height - Minimum height for extra small size (default: var(--dds-spacing-800))\n * @cssproperty --dds-select-xs-padding - Padding for extra small size (default: var(--dds-spacing-200))\n * @cssproperty --dds-select-xs-font-size - Font size for extra small size (default: var(--dds-font-sm))\n * @cssproperty --dds-select-lg-min-height - Minimum height for large size (default: var(--dds-spacing-1200))\n * @cssproperty --dds-select-lg-padding - Padding for large size (default: var(--dds-spacing-400))\n * @cssproperty --dds-select-lg-font-size - Font size for large size (default: var(--dds-font-lg))\n * @cssproperty --dds-select-lg-icon-right - Right position of the icon for large size (default: var(--dds-spacing-300))\n * @cssproperty --dds-select-lg-icon-color - Color of the icon for large size (default: var(--dds-text-icon-neutral-subtle))\n * @cssproperty --dds-select-popup-bg-color - Background color of the popup (default: var(--dds-background-neutral-subtle))\n *\n * @slot - The option list of the select.\n * @slot indicator-icon - The indicator icon of the select.\n */\n@customElement('dap-ds-select')\nexport default class DapDSSelect extends GenericFormElement {\n  /**\n   * @ignore\n   */\n  @query('button') triggerButton!: HTMLButtonElement\n\n  /**\n   * @ignore\n   */\n  @query('dap-ds-option-list') optionList!: DapDSOptionList\n\n  /** The popup placement of the select\n   * @type {'top' | 'top-start' | 'top-end' | 'right' | 'right-start'| 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end'}\n   */\n  @property({ reflect: true }) placement: PopupPlacement = 'bottom-start'\n\n  /** Whether the select dropdown is opened.*/\n  @property({ type: Boolean, reflect: true }) opened? = false\n\n  /** The placeholder of the select. */\n  @property() placeholder: string | null\n\n  /** The sync size of the select dropdown */\n  @property({ type: Boolean }) sync?: boolean\n\n  /** Whether the select is in mobile mode. */\n  @property({ type: Boolean }) isMobile?: boolean = false\n\n  /** The loading state of the select. */\n  @property({ type: Boolean }) loading?: boolean = false\n\n  /** The max heigth of the select dropdown. */\n  @property({ type: Number }) maxHeight?: number\n\n  /** Whether the select dropdown indicator is animated or not */\n  @property({ type: Boolean }) noAnimation?: boolean = false\n\n  /** The floating strategy of the select dropdown\n   * @type {'absolute' | 'fixed'}\n   */\n  @property({ reflect: true }) floatingStrategy: FloatingStrategy = 'absolute'\n\n  /**\n   * @ignore\n   */\n  @state() selectedItem: any\n\n  static readonly styles = unsafeCSS(styles)\n\n  /**\n   * Lifecycle method to handle property changes\n   */\n  updated(changedProperties: Map<string, unknown>) {\n    super.updated(changedProperties)\n\n    // Handle when value is set to undefined or null externally\n    if (changedProperties.has('value')) {\n      const newValue = this.value\n      if (newValue === undefined || newValue === null) {\n        if (this.selectedItem !== null) {\n          this.selectedItem = null\n          this.setValidity()\n        }\n      }\n    }\n  }\n\n  private readonly handleClick = () => {\n    if (this.readonly || this.disabled) {\n      return\n    }\n\n    this.opened ? this.hideDropDown() : this.showDropDown()\n  }\n\n  private readonly handleKeyDown = async (event: KeyboardEvent) => {\n    if (event.key === 'Tab' || event.key === 'Shift') {\n      return\n    }\n\n    if (this.readonly) {\n      return\n    }\n\n    event.preventDefault()\n\n    if (event.key === 'Enter' || event.key === ' ') {\n      return this.opened ? this.hideDropDown() : this.showDropDown()\n    }\n\n    if (event.key === 'Escape') {\n      this.hideDropDown()\n      return this.focus()\n    }\n\n    if (\n      event.key === 'ArrowDown' ||\n      event.key === 'ArrowUp' ||\n      event.key === 'ArrowLeft' ||\n      event.key === 'ArrowRight'\n    ) {\n      if (!this.opened) {\n        return this.showDropDown()\n      }\n\n      return\n    }\n\n    this.emit('dds-keydown', event)\n\n    // typing\n    this.showDropDown(event.key)\n  }\n\n  private readonly handleListKeyDown = (event: CustomEvent) => {\n    if (event.detail.key === 'Escape') {\n      this.hideDropDown()\n    }\n  }\n\n  private readonly handleDocumentMouseDown = (event: MouseEvent) => {\n    const path = event.composedPath()\n    if (this && !path.includes(this)) {\n      this.hideDropDown()\n    }\n  }\n\n  private readonly handleFocus = () => {\n    this.emit('dds-focus')\n  }\n\n  private readonly handleBlur = () => {\n    this.emit('dds-blur')\n  }\n\n  formResetCallback() {\n    this.internals.setValidity({})\n    this.internals.setFormValue(this.defaultValue)\n    this.value = this.defaultValue\n    this.selectedItem = this.defaultValue\n  }\n\n  async showDropDown(key?: string) {\n    if (this.opened) {\n      return\n    }\n\n    this.opened = true\n\n    document.addEventListener('mousedown', this.handleDocumentMouseDown)\n\n    await this.updateComplete\n    this.optionList.captureFocus(key)\n\n    this.emit('dds-opened')\n  }\n\n  async hideDropDown() {\n    if (!this.opened) {\n      return\n    }\n\n    this.opened = false\n\n    document.removeEventListener('mousedown', this.handleDocumentMouseDown)\n\n    await this.updateComplete\n    this.optionList.removeFocus()\n\n    this.focus()\n\n    this.emit('dds-closed')\n  }\n\n  get focusElement() {\n    return this.triggerButton\n  }\n\n  // custom validation\n  get validity(): ValidityState {\n    if (this.internals.validity) {\n      return this.internals.validity\n    } else {\n      return getValidityStateObject({\n        valueMissing: this.required && !this.selectedItem,\n      })\n    }\n  }\n\n  get validationMessage(): string {\n    return t('form.validationMessage.select')\n  }\n\n  checkValidity() {\n    return this.required ? !!this.selectedItem : true\n  }\n\n  reportValidity() {\n    return this.required ? this.checkValidity() : true\n  }\n\n  setValidity() {\n    if (!this.checkValidity()) {\n      this.internals.setValidity(\n        {\n          valueMissing: this.required && !this.selectedItem,\n        },\n        this.validationMessage,\n        this.triggerButton,\n      )\n    } else {\n      this.internals.setValidity({})\n    }\n  }\n\n  handleInvalid(event: Event) {\n    event.preventDefault()\n  }\n\n  private readonly handleSelectedChange = (event: CustomEvent) => {\n    const val = Object.keys(event.detail).length ? event.detail : null\n    this.selectedItem = val\n    this.hideDropDown()\n    this.value = this.selectedItem?.value\n    this.emit('dds-change', this.selectedItem)\n\n    this.setValidity()\n  }\n\n  private readonly handleOptionDeselect = () => {\n    this.selectedItem = null\n    this.value = undefined\n    this.emit('dds-change', null)\n\n    this.setValidity()\n  }\n\n  renderTriggerElement() {\n    return html` <button\n      slot=\"trigger\"\n      part=\"trigger\"\n      role=\"combobox\"\n      class=\"${clsx('select', `select--${this.size}`, {\n        'select--disabled': this.disabled,\n        'select--readonly': this.readonly,\n        'select--opened': this.opened,\n        'select--loading': this.loading,\n        'select--success': this.status === 'success',\n        'select--error': this.status === 'error',\n        'select--no-animation': this.noAnimation,\n        'select--optional': this.optional,\n      })}\"\n      .aria-expanded=${this.readonly || this.disabled ? undefined : this.opened}\n      aria-haspopup=${ifDefined(\n        this.readonly || this.disabled ? undefined : 'listbox',\n      )}\n      aria-labelledby=${this.label ? 'label' : ''}\n      aria-label=${this.ariaLabel ?? ''}\n      aria-describedby=\"${this.description ? 'description' : ''}${this.feedback\n        ? ' feedback'\n        : ''}\"\n      aria-disabled=${this.disabled}\n      .aria-controls=${this.readonly || this.disabled\n        ? undefined\n        : 'option-list'}\n      aria-activedescendant=${this.selectedItem?.id}\n      ?required=${this.required}\n      ?readonly=${this.readonly}\n      ?autofocus=${this.autofocus}\n      ?disabled=${this.disabled}\n      tabindex=${this.readonly || this.disabled ? -1 : 0}\n      @blur=${this.handleBlur}\n      @focus=${this.handleFocus}\n      @keydown=${this.handleKeyDown}\n      @click=${this.handleClick}>\n      <span class=\"text\"\n        >${this.selectedItem ? this.selectedItem.text : this.placeholder}</span\n      >\n      <div class=\"icon\">\n        ${this.loading\n          ? html`<dap-ds-icon-loading-spinner></dap-ds-icon-loading-spinner>`\n          : html`<slot name=\"indicator-icon\"\n              ><dap-ds-icon-arrow-right-s-line></dap-ds-icon-arrow-right-s-line\n            ></slot>`}\n      </div>\n    </button>`\n  }\n\n  renderOptionList() {\n    return html` <dap-ds-option-list\n      class=\"option-list\"\n      part=\"option-list\"\n      id=\"option-list\"\n      searchMode=\"typehead\"\n      size=${ifDefined(this.size)}\n      value=${this.value}\n      disableDelaySet\n      @dds-option-change=${this.handleSelectedChange}\n      @dds-keydown=${this.handleListKeyDown}\n      @dds-option-deselect=${this.handleOptionDeselect}>\n      <slot></slot>\n    </dap-ds-option-list>`\n  }\n\n  render() {\n    return html` <div class=\"label-container\">\n        ${this.label &&\n        html`<dap-ds-form-label\n          part=\"label\"\n          id=\"label\"\n          .size=${this.size}\n          .required=${this.required}\n          .optional=${this.optional}\n          .optionalLabel=${this.optionalLabel}\n          .subtle=${this.subtle}\n          .disabled=${this.disabled}\n          class=${clsx('label')}\n          for=\"input\"\n          label=${ifDefined(this.label)}>\n        </dap-ds-form-label>`}\n        ${this.tooltip &&\n        html` <dap-ds-tooltip\n          part=\"tooltip\"\n          content=${this.tooltip}\n          mode=\"toggle\"\n          placement=${this.tooltipPlacement}>\n          <dap-ds-icon-button\n            clean\n            slot=\"trigger\"\n            size=${this.size as 'xs' | 'sm' | 'md' | 'lg'}\n            iconSize=${this.size === 'xs' ? '16' : '22'}\n            aria-label=${this.tooltipAriaLabel}\n            class=\"input-group__toggle-button\">\n            <dap-ds-icon\n              name=\"information-line\"\n              class=\"info-button\"></dap-ds-icon>\n          </dap-ds-icon-button>\n        </dap-ds-tooltip>`}\n      </div>\n      ${this.description &&\n      html`\n        <dap-ds-typography\n          part=\"description\"\n          variant=\"description\"\n          size=${ifDefined(this.size as CommonFormElementSize)}\n          id=\"description\">\n          ${this.description}\n        </dap-ds-typography>\n      `}\n      <div>\n        ${!this.isMobile\n          ? html`<dap-ds-popup\n              floatingStrategy=${ifDefined(this.floatingStrategy)}\n              part=\"base\"\n              class=\"select-popup\"\n              ?opened=${this.opened}\n              ?hasArrow=${false}\n              overflow\n              placement=${this.placement}\n              maxHeight=${ifDefined(this.maxHeight)}\n              ?sync=${this.sync}\n              size=${ifDefined(this.size) as 'lg' | 'sm' | 'xs'}>\n              ${this.renderTriggerElement()} ${this.renderOptionList()}\n            </dap-ds-popup>`\n          : html`\n              ${this.renderTriggerElement()}\n              <dap-ds-tray ?open=${this.opened}\n                >${this.renderOptionList()}</dap-ds-tray\n              >\n            `}\n        ${this.feedback &&\n        html`<dap-ds-feedback\n          part=\"feedback\"\n          feedbackType=${ifDefined(this.feedbackType)}\n          feedbackSize=\"${ifDefined(this.size as 'lg' | 'sm' | 'xs')}\"\n          id=\"feedback\"\n          .subtle=${this.subtle}>\n          ${this.feedback}\n        </dap-ds-feedback>`}\n      </div>`\n  }\n}\n","import clsx from 'clsx'\nimport { PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './sidenav.scss?inline'\n\n/**\n * `dap-ds-sidenav`\n * @summary Side navigation is a list of links that are used to navigate to different sections of a page.\n * @element dap-ds-sidenav\n * @title - Side navigation\n *\n * @event {{ href: string, event: Event }} dds-item-click - Event fired when the side navigation item is clicked.\n *\n * @slot - The content of the side navigation.\n *\n * @csspart base - The main side navigation container.\n * @csspart menu - The menu of the side navigation.\n */\n@customElement('dap-ds-sidenav')\nexport default class DapDSSideNav extends DdsElement {\n  /** The label of the side navigation, if aria label is not provided, it will be used as aria label */\n  @property({ reflect: true }) label: string\n\n  /** The active href of the side navigation, to explicitly set the active item, if not provided, it will be set based on the current location */\n  @property() activeHref: string\n\n  /** The size of the side navigation */\n  @property({ type: String }) size: 'xs' | 'sm' | 'lg' = 'xs'\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    const activeItem = this.querySelector(\n      `[href=\"${this.activeHref ? this.activeHref : window.location.pathname}\"]`,\n    )\n\n    if (activeItem) {\n      this.removeActive()\n      this.setActive(activeItem)\n    }\n\n    const activeGroup = activeItem?.closest('dap-ds-sidenav-group')\n    if (activeGroup) {\n      activeGroup.setAttribute('open', 'true')\n    }\n\n    // go through all the items and and groups and set the size\n    this.querySelectorAll('dap-ds-sidenav-item, dap-ds-sidenav-group').forEach(\n      item => {\n        ;(item as any).size = this.size\n      },\n    )\n  }\n\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null,\n  ): void {\n    super.attributeChangedCallback(name, _old, value)\n\n    if (name === 'activehref') {\n      this.removeActive()\n\n      const activeItem = this.querySelector(`[href=\"${value}\"]`)\n      this.setActive(activeItem)\n    }\n  }\n\n  private removeActive(): void {\n    this.querySelectorAll('dap-ds-sidenav-item, dap-ds-sidenav-group').forEach(\n      item => {\n        item.removeAttribute('active')\n      },\n    )\n  }\n\n  private setActive(activeItem?: Element | null): void {\n    if (activeItem) {\n      activeItem.setAttribute('active', 'true')\n\n      const activeGroup = activeItem.closest('dap-ds-sidenav-group')\n      if (activeGroup) {\n        activeGroup.setAttribute('open', 'true')\n      }\n    }\n  }\n\n  render() {\n    return html`\n      <aside\n        part=\"base\"\n        class=${clsx('sidenav', `sidenav--${this.size}`)}\n        aria-label=${this.ariaLabel ?? this.label}>\n        <menu part=\"menu\">\n          <slot></slot>\n        </menu>\n      </aside>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './sidenav-group.scss?inline'\n\nexport type Spacing = 'top' | 'bottom' | 'both' | 'none'\n\n/**\n * `dap-ds-sidenav-group`\n * @summary Side navigation group\n * @element dap-ds-sidenav-group\n * @title - Side navigation group\n * @group side-navigation\n *\n * @slot - The content of the side navigation group.\n * @slot submenu - The submenu of the side navigation group.\n * @slot suffix - The suffix of the side navigation group.\n *\n * @csspart base - The main side navigation group container.\n * @csspart title - The title of the side navigation group.\n * @csspart link - The link of the side navigation group.\n * @csspart toggle - The toggle button of the side navigation group.\n * @csspart submenu - The submenu of the side navigation group.\n *\n * @cssproperty --dds-sidenav-group-margin-bottom - Default bottom margin of the sidenav group.\n * @cssproperty --dds-sidenav-group-border-radius - Border radius of the sidenav group.\n * @cssproperty --dds-sidenav-group-spacing-margin - Margin used for spacing variants.\n * @cssproperty --dds-sidenav-group-item-min-height-xs - Minimum height of the sidenav group item.\n * @cssproperty --dds-sidenav-group-item-min-height-sm - Minimum height of the sidenav group item.\n * @cssproperty --dds-sidenav-group-item-min-height-lg - Minimum height of the sidenav group item.\n * @cssproperty --dds-sidenav-group-item-padding-xs - Padding of the sidenav group item.\n * @cssproperty --dds-sidenav-group-item-padding-sm - Padding of the sidenav group item.\n * @cssproperty --dds-sidenav-group-item-padding-lg - Padding of the sidenav group item.\n * @cssproperty --dds-sidenav-group-item-color - Text color of the sidenav group item.\n * @cssproperty --dds-sidenav-group-item-font-size-xs - Font size of the sidenav group item.\n * @cssproperty --dds-sidenav-group-item-font-size-sm - Font size of the sidenav group item.\n * @cssproperty --dds-sidenav-group-item-font-size-lg - Font size of the sidenav group item.\n * @cssproperty --dds-sidenav-group-item-font-weight - Font weight of the sidenav group item.\n * @cssproperty --dds-sidenav-group-item-bg-active - Background color when the item is active.\n * @cssproperty --dds-sidenav-group-item-bg-hover - Background color on hover and active states.\n * @cssproperty --dds-sidenav-group-toggle-margin - Margin for the toggle button.\n * @cssproperty --dds-sidenav-group-submenu-padding - Padding for the submenu.\n */\n@customElement('dap-ds-sidenav-group')\nexport default class DapDSSideNavGroup extends DdsElement {\n  /** The href of the side navigation item */\n  @property({ reflect: true }) href: string\n\n  /** Whether the side navigation item is active */\n  @property({ type: Boolean, reflect: true }) active = false\n\n  /** The spacing of the side navigation item\n   * @type {'top' | 'bottom' | 'both' | 'none'}\n   */\n  @property({ reflect: true }) spacing: Spacing = 'none'\n\n  /** Whether the side navigation group is open */\n  @property({ type: Boolean, reflect: true }) open = false\n\n  /** The size of the side navigation group */\n  @property({ reflect: true, type: String }) size: 'xs' | 'sm' | 'lg' = 'xs'\n\n  static readonly styles = unsafeCSS(styles)\n\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        role=\"listitem\"\n        class=${clsx(\n          'sidenav-group',\n          `sidenav-group--spacing-${this.spacing}`,\n        )}>\n        <div\n          class=${clsx(\n            'sidenav-group__item',\n            `sidenav-group__item--${this.size}`,\n            {\n              'sidenav-group__item--active': this.active,\n            },\n          )}>\n          <div\n            class=${clsx('sidenav-group__title')}\n            part=\"title\"\n            id=\"title\"\n            @click=${() => {\n              if (!this.open) {\n                this.open = true\n              } else if (this.open && !this.href) {\n                this.open = false\n              }\n            }}>\n            ${this.href\n              ? html`<a\n                  href=${this.href}\n                  class=\"sidenav-group__link\"\n                  part=\"link\">\n                  <slot></slot>\n                  <slot name=\"suffix\"></slot>\n                </a>`\n              : html`<slot></slot>`}\n          </div>\n          <button\n            part=\"toggle\"\n            class=${clsx('sidenav-group__toggle', {\n              'sidenav-group__toggle--open': this.open,\n            })}\n            aria-labelledby=\"title\"\n            @click=${(e: any) => {\n              e.preventDefault()\n              this.open = !this.open\n            }}>\n            <dap-ds-icon-arrow-right-s-line\n              part=\"icon\"\n              aria-hidden=\"true\"></dap-ds-icon-arrow-right-s-line>\n          </button>\n        </div>\n        <ul\n          part=\"submenu\"\n          role=\"list\"\n          class=${clsx('sidenav-group__submenu', {\n            'sidenav-group__submenu--open': this.open,\n          })}>\n          <slot name=\"submenu\"></slot>\n        </ul>\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './sidenav-item.scss?inline'\n\nexport type Spacing = 'top' | 'bottom' | 'both' | 'none'\n\n/**\n * `dap-ds-sidenav-item`\n * @summary Side navigation item\n * @element dap-ds-sidenav-item\n * @title - Side navigation item\n * @group side-navigation\n *\n * @slot - The content of the side navigation item.\n * @slot suffix - The suffix of the side navigation item.\n *\n * @csspart base - The main side navigation item container.\n * @csspart link - The link of the side navigation item.\n *\n * @cssproperty --dds-sidenav-item-min-height-xs - Minimum height of the sidenav item.\n * @cssproperty --dds-sidenav-item-min-height-sm - Minimum height of the sidenav item.\n * @cssproperty --dds-sidenav-item-min-height-lg - Minimum height of the sidenav item.\n * @cssproperty --dds-sidenav-item-margin-bottom - Default bottom margin of the sidenav item.\n * @cssproperty --dds-sidenav-item-padding-xs - Padding of the sidenav item.\n * @cssproperty --dds-sidenav-item-padding-sm - Padding of the sidenav item.\n * @cssproperty --dds-sidenav-item-padding-lg - Padding of the sidenav item.\n * @cssproperty --dds-sidenav-item-radius - Border radius of the sidenav item.\n * @cssproperty --dds-sidenav-item-color - Text color of the sidenav item.\n * @cssproperty --dds-sidenav-item-font-size-xs - Font size of the sidenav item.\n * @cssproperty --dds-sidenav-item-font-size-sm - Font size of the sidenav item.\n * @cssproperty --dds-sidenav-item-font-size-lg - Font size of the sidenav item.\n * @cssproperty --dds-sidenav-item-font-weight - Font weight of the sidenav item.\n * @cssproperty --dds-sidenav-item-spacing-margin - Margin used for spacing variants.\n * @cssproperty --dds-sidenav-item-bg-active - Background color when the item is active.\n * @cssproperty --dds-sidenav-item-bg-hover - Background color on hover and active states.\n */\n@customElement('dap-ds-sidenav-item')\nexport default class DapDSSideNavItem extends DdsElement {\n  /** The href of the side navigation item */\n  @property() href: string\n\n  /** Whether the side navigation item is active */\n  @property({ type: Boolean, reflect: true }) active = false\n\n  /** The spacing of the side navigation item\n   * @type {'top' | 'bottom' | 'both' | 'none'}\n   */\n  @property({ reflect: true }) spacing: Spacing = 'none'\n\n  /** The size of the side navigation item */\n  @property({ reflect: true, type: String }) size: 'xs' | 'sm' | 'lg' = 'xs'\n\n  static readonly styles = unsafeCSS(styles)\n\n  render() {\n    return html`\n      <li\n        part=\"base\"\n        role=\"listitem\"\n        class=${clsx(\n          'sidenav-item',\n          `sidenav-item--spacing-${this.spacing}`,\n          `sidenav-item--${this.size}`,\n          {\n            'sidenav-item--active': this.active,\n          },\n        )}>\n        <a\n          part=\"link\"\n          href=${this.href}\n          class=\"sidenav-item__link\"\n          target=${ifDefined(this.href ? '_self' : undefined)}\n          rel=${ifDefined(this.href ? 'noreferrer noopener' : undefined)}>\n          <slot></slot>\n          <slot name=\"suffix\"></slot>\n        </a>\n      </li>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { html, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\n\nimport { t } from '@/localization/localization'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './skeleton.scss?inline'\n\nexport type SkeletonVariant = 'text' | 'circular' | 'rectangular'\nexport type SkeletonAnimation = 'wave' | 'pulse' | 'custom'\n\n/**\n * `dap-ds-skeleton`\n * @summary A skeleton loader component for displaying placeholder content while loading.\n * @element dap-ds-skeleton\n * @title - Skeleton\n *\n * @example Basic Usage\n * ```html\n * <dap-ds-skeleton></dap-ds-skeleton>\n * <dap-ds-skeleton variant=\"circular\"></dap-ds-skeleton>\n * <dap-ds-skeleton variant=\"rectangular\" width=\"200px\" height=\"100px\"></dap-ds-skeleton>\n * <dap-ds-skeleton animation=\"custom\" custom-keyframes=\"0% { transform: scale(1); } 50% { transform: scale(1.1); } 100% { transform: scale(1); }\"></dap-ds-skeleton>\n * ```\n *\n * @csspart base - The main skeleton container.\n *\n * @cssprop --dds-skeleton-color - The base color of the skeleton.\n * @cssprop --dds-skeleton-animation-duration - Duration of the loading animation.\n * @cssprop --dds-skeleton-border-radius - Border radius for rectangular skeletons.\n * @cssprop --dds-skeleton-text-spacing - Spacing between text lines in text variant.\n * @cssprop --dds-skeleton-animation-timing-function - Timing function for the loading animation.\n */\n@customElement('dap-ds-skeleton')\nexport default class DapDSSkeleton extends DdsElement {\n  /**\n   * The variant of the skeleton.\n   * @type {\"text\" | \"circular\" | \"rectangular\"}\n   */\n  @property({ type: String, reflect: true }) variant: SkeletonVariant = 'text'\n\n  /**\n   * The width of the skeleton. Can be any valid CSS width value.\n   */\n  @property({ type: String }) width?: string\n\n  /**\n   * The height of the skeleton. Can be any valid CSS height value.\n   */\n  @property({ type: String }) height?: string\n\n  /**\n   * Whether to animate the skeleton.\n   */\n  @property({ type: Boolean, reflect: true }) animated = true\n\n  /**\n   * The animation type for the skeleton.\n   * @type {\"wave\" | \"pulse\" | \"custom\"}\n   */\n  @property({ type: String, reflect: true }) animation: SkeletonAnimation =\n    'wave'\n\n  /**\n   * Custom keyframes for the animation when animation=\"custom\".\n   * Should be a valid CSS keyframes string without the @keyframes wrapper.\n   * @example \"0% { transform: scale(1); } 50% { transform: scale(1.1); } 100% { transform: scale(1); }\"\n   */\n  @property({ type: String, attribute: 'custom-keyframes' })\n  customKeyframes?: string\n\n  static readonly styles = unsafeCSS(styles)\n\n  private _customStyleSheet?: CSSStyleSheet\n\n  private _updateCustomAnimation() {\n    if (this.animation === 'custom' && this.customKeyframes) {\n      // Create or update custom stylesheet\n      const keyframesCSS = `\n        @keyframes custom-skeleton-animation {\n          ${this.customKeyframes}\n        }\n        .skeleton--custom::before {\n          animation: custom-skeleton-animation var(--dds-skeleton-animation-duration) var(--dds-skeleton-animation-timing-function) infinite;\n        }\n      `\n\n      if (this._customStyleSheet) {\n        this._customStyleSheet.replaceSync(keyframesCSS)\n      } else {\n        this._customStyleSheet = new CSSStyleSheet()\n        this._customStyleSheet.replaceSync(keyframesCSS)\n        this.shadowRoot!.adoptedStyleSheets = [\n          ...this.shadowRoot!.adoptedStyleSheets,\n          this._customStyleSheet,\n        ]\n      }\n    } else if (this._customStyleSheet) {\n      // Remove custom stylesheet if not needed\n      this.shadowRoot!.adoptedStyleSheets =\n        this.shadowRoot!.adoptedStyleSheets.filter(\n          sheet => sheet !== this._customStyleSheet,\n        )\n      this._customStyleSheet = undefined\n    }\n  }\n\n  updated(changedProperties: Map<string, unknown>) {\n    super.updated(changedProperties)\n\n    if (\n      changedProperties.has('animation') ||\n      changedProperties.has('customKeyframes')\n    ) {\n      this._updateCustomAnimation()\n    }\n  }\n\n  render() {\n    if (this.width) {\n      this.style.setProperty('--skeleton-width', this.width)\n    } else {\n      this.style.removeProperty('--skeleton-width')\n    }\n\n    if (this.height) {\n      this.style.setProperty('--skeleton-height', this.height)\n    } else {\n      this.style.removeProperty('--skeleton-height')\n    }\n\n    this._updateCustomAnimation()\n\n    return html`\n      <div\n        part=\"base\"\n        class=\"${clsx('skeleton', {\n          [`skeleton--${this.variant}`]: this.variant,\n          'skeleton--animate': this.animated,\n          [`skeleton--${this.animation}`]: this.animated && this.animation,\n        })}\"\n        role=\"status\"\n        aria-label=${this.ariaLabel ?? t('loading')}></div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { CommonSize, Placement } from '../../common/types'\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './skip-link.scss?inline'\n\n/**\n * `dap-ds-skip-link`\n * @summary A skip link is a link that allows keyboard users to skip to the main content of a page.\n * @element dap-ds-skip-link\n * @title - Skip link\n *\n * @slot - The content of the skip link.\n *\n * @csspart base - The main skip link container.\n * @csspart text - The text container of the skip link.\n * @csspart high-contrast - The high contrast outline container.\n *\n * @cssproperty --dds-skip-link-border-color - Border color for the high contrast outline (default: var(--dds-border-neutral-transparent-interactive, #fff500))\n * @cssproperty --dds-skip-link-border-width - Border width for the high contrast outline (default: var(--dds-border-width-large))\n * @cssproperty --dds-skip-link-border-width-active - Border width for the active state (default: var(--dds-border-width-xlarge))\n * @cssproperty --dds-skip-link-border-radius - Border radius of the skip link (default: var(--dds-radius-small))\n * @cssproperty --dds-skip-link-padding-sm - Padding for small size variant (default: var(--dds-spacing-200))\n * @cssproperty --dds-skip-link-padding-lg - Padding for large size variant (default: var(--dds-spacing-400))\n * @cssproperty --dds-skip-link-text-underline-offset - Underline offset for the text (default: 3px)\n * @cssproperty --dds-skip-link-z-index - Z-index of the skip link (default: var(--dds-z-index-100))\n */\n@customElement('dap-ds-skip-link')\nexport default class DapDSSkipLink extends DdsElement {\n  /** The placement of the skip link.\n   * @type {'left' | 'center'}\n   */\n  @property({ reflect: true }) placement: Placement\n\n  /** The href of the skip link */\n  @property() href: string = '#'\n\n  /** The size of the skip link\n   * @type {'sm' | 'lg'}\n   */\n  @property() size: CommonSize = 'sm'\n\n  /** Whether the skip link should have an underline */\n  @property({ type: Boolean }) noUnderline = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  render() {\n    return html`\n      <dap-ds-link\n        ?noUnderLine=${this.noUnderline}\n        part=\"base\"\n        variant=\"brand\"\n        href=${this.href}\n        class=${clsx(\n          'skip-link',\n          `skip-link--${this.size}`,\n          `skip-link--${this.placement}`,\n        )}>\n        <span part=\"text\" class=\"skip-link__text\">\n          <slot></slot>\n        </span>\n        <span\n          part=\"high-contrast\"\n          class=${clsx(\n            'skip-link__high-contrast',\n            `skip-link__high-contrast--${this.size}`,\n          )}></span>\n      </dap-ds-link>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport {\n  MessageOptionsType,\n  SnackbarMessage,\n  SnackbarPosition,\n} from '@/common/types'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './snackbar.scss?inline'\n\nif (typeof window !== 'undefined') {\n  window.showDapSnackbar = (message: string, options?: MessageOptionsType) => {\n    DapDSSnackbar.show(message, options)\n  }\n\n  window.closeAllDapSnackbars = () => {\n    DapDSSnackbar.closeAll()\n  }\n}\n\n/**\n * `dap-ds-snackbar`\n * @summary The Snackbar is a container of sliding messages.\n * @element dap-ds-snackbar\n * @title - Snackbar\n *\n * @csspart host - The host element\n *\n * @cssproperty --dds-snackbar-spacing - Spacing used for positioning the snackbar (default: var(--dds-spacing-400))\n * @cssproperty --dds-snackbar-z-index - Z-index of the snackbar container (default: 10000)\n * @cssproperty --dds-snackbar-pointer-events - Pointer events behavior for the snackbar (default: auto)\n * @cssproperty --dds-snackbar-animation-duration - Duration of entrance animations (default: 0.3s)\n * @cssproperty --dds-snackbar-animation-timing - Timing function for animations (default: ease-out)\n */\n@customElement('dap-ds-snackbar')\nexport default class DapDSSnackbar extends DdsElement {\n  /** The maximum number of snackbar messages at a given time. */\n  @property({ type: Number }) maxItems = 4\n\n  /** The position of the snackbar\n   * @type {'bottom-left' | 'bottom-right' | 'bottom-center' | 'top-right' | 'top-center'}\n   */\n  @property({ type: String }) position: SnackbarPosition = 'bottom-right'\n\n  /** The duration of the snackbar message in milliseconds */\n  @property({ type: Number }) duration = 6000\n\n  /** Whether the snackbar should announce new messages to screen readers */\n  @property({ type: Boolean }) announceMessages = true\n\n  @state() private messages: SnackbarMessage[] = []\n  @state() private idCounter = 0\n  private timeouts: Map<string, ReturnType<typeof setTimeout>> = new Map()\n\n  static readonly styles = unsafeCSS(styles)\n\n  /**\n   * Static method to show a snackbar message anywhere in the application\n   * @param message - The message to display\n   * @param options - Optional configuration for the message\n   */\n  static show(message: string, options?: MessageOptionsType): void {\n    document.dispatchEvent(\n      new CustomEvent('dds-show-snackbar', {\n        detail: { message, options },\n        bubbles: true,\n      }),\n    )\n  }\n\n  /**\n   * Static method to show a success message\n   * @param message - The message to display\n   * @param options - Optional configuration (alertType will be overridden to 'successful')\n   */\n  static success(\n    message: string,\n    options?: Omit<MessageOptionsType, 'alertType'>,\n  ): void {\n    this.show(message, { ...options, alertType: 'successful' })\n  }\n\n  /**\n   * Static method to show an error message\n   * @param message - The message to display\n   * @param options - Optional configuration (alertType will be overridden to 'error')\n   */\n  static error(\n    message: string,\n    options?: Omit<MessageOptionsType, 'alertType'>,\n  ): void {\n    this.show(message, { ...options, alertType: 'error' })\n  }\n\n  /**\n   * Static method to show an information message\n   * @param message - The message to display\n   * @param options - Optional configuration (alertType will be overridden to 'information')\n   */\n  static info(\n    message: string,\n    options?: Omit<MessageOptionsType, 'alertType'>,\n  ): void {\n    this.show(message, { ...options, alertType: 'information' })\n  }\n\n  /**\n   * Static method to show a default message\n   * @param message - The message to display\n   * @param options - Optional configuration (alertType will be overridden to 'default')\n   */\n  static default(\n    message: string,\n    options?: Omit<MessageOptionsType, 'alertType'>,\n  ): void {\n    this.show(message, { ...options, alertType: 'default' })\n  }\n\n  /**\n   * Static method to close all snackbar messages globally\n   */\n  static closeAll(): void {\n    document.dispatchEvent(\n      new CustomEvent('dds-close-all-snackbars', {\n        bubbles: true,\n      }),\n    )\n  }\n\n  /**\n   * Close all currently displayed messages\n   */\n  closeAll(): void {\n    this.clearAllTimeouts()\n    this.messages = []\n  }\n\n  private generateId(): string {\n    this.idCounter++\n\n    return `dap-snackbar-${this.idCounter}`\n  }\n\n  addMessage(message: string, options?: MessageOptionsType): void {\n    if (!message || typeof message !== 'string') {\n      console.warn('DapDSSnackbar: Message must be a non-empty string')\n      return\n    }\n\n    const newId = this.generateId()\n    if (this.messages.length >= this.maxItems) {\n      this.sliceMessage()\n    }\n\n    const newMessage: SnackbarMessage = {\n      id: newId,\n      message: message.trim(),\n      ...(options && { options }),\n    }\n\n    this.messages = [...this.messages, newMessage]\n    this.elapseMessages(newId, options?.duration)\n\n    // Announce the message if enabled\n    if (this.announceMessages) {\n      this.announceToScreenReader(message)\n    }\n  }\n\n  private sliceMessage(): void {\n    if (this.messages) {\n      this.messages = this.messages.slice(1)\n    }\n  }\n\n  private removeMessage(id: string): void {\n    if (id) {\n      this.messages = this.messages.filter(\n        (messageItem: SnackbarMessage) => messageItem.id !== id,\n      )\n      this.clearTimeout(id)\n    }\n  }\n\n  private elapseMessages(id: string, duration?: number): void {\n    const durationTime = duration ?? this.duration\n    const timeoutId = setTimeout(() => {\n      this.removeMessage(id)\n    }, durationTime)\n    this.timeouts.set(id, timeoutId)\n  }\n\n  private clearTimeout(id: string): void {\n    const timeoutId = this.timeouts.get(id)\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n      this.timeouts.delete(id)\n    }\n  }\n\n  private clearAllTimeouts(): void {\n    this.timeouts.forEach(timeoutId => clearTimeout(timeoutId))\n    this.timeouts.clear()\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback()\n    document.addEventListener(\n      'dds-show-snackbar',\n      this.handleShowSnackbarEvent as EventListener,\n    )\n    document.addEventListener(\n      'dds-close-all-snackbars',\n      this.handleCloseAllEvent as EventListener,\n    )\n    document.addEventListener('keydown', this.handleKeyDown)\n  }\n\n  disconnectedCallback(): void {\n    this.clearAllTimeouts()\n    document.removeEventListener(\n      'dds-show-snackbar',\n      this.handleShowSnackbarEvent as EventListener,\n    )\n    document.removeEventListener(\n      'dds-close-all-snackbars',\n      this.handleCloseAllEvent as EventListener,\n    )\n    document.removeEventListener('keydown', this.handleKeyDown)\n    super.disconnectedCallback()\n  }\n\n  private handleShowSnackbarEvent = (\n    event: CustomEvent<{ message: string; options?: MessageOptionsType }>,\n  ) => {\n    const { message, options } = event.detail\n    this.addMessage(message, options)\n  }\n\n  private handleCloseAllEvent = () => {\n    this.closeAll()\n  }\n\n  private handleKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Escape' && this.messages.length > 0) {\n      // Close the most recent message\n      const lastMessage = this.messages[this.messages.length - 1]\n      if (lastMessage) {\n        this.removeMessage(lastMessage.id)\n      }\n    }\n  }\n\n  private announceToScreenReader(message: string): void {\n    const announcer = document.createElement('div')\n    announcer.setAttribute('aria-live', 'assertive')\n    announcer.setAttribute('aria-atomic', 'true')\n    announcer.style.position = 'absolute'\n    announcer.style.left = '-10000px'\n    announcer.style.width = '1px'\n    announcer.style.height = '1px'\n    announcer.style.overflow = 'hidden'\n\n    document.body.appendChild(announcer)\n    announcer.textContent = message\n\n    // Remove the announcer after a short delay\n    setTimeout(() => {\n      document.body.removeChild(announcer)\n    }, 1000)\n  }\n\n  private _closeMessage(event: CustomEvent<{ id: string }>) {\n    if (event?.detail?.id) {\n      this.removeMessage(event.detail.id)\n    }\n  }\n\n  render() {\n    return html`<div\n      class=${clsx('snackbar', `snackbar--${this.position}`)}\n      role=\"region\"\n      aria-live=\"polite\"\n      aria-label=\"Notifications\">\n      ${this.messages.map(\n        messageItem => html`\n          <dap-ds-snackbar-message\n            @dds-close=${this._closeMessage}\n            id=${messageItem.id}\n            message=${messageItem.message}\n            alertType=${ifDefined(messageItem?.options?.alertType)}\n            .actions=${messageItem?.options?.actions}\n            closeButton=${ifDefined(messageItem?.options?.closeButton)}\n            .customStyle=${messageItem?.options?.customStyle}\n            position=${this.position}></dap-ds-snackbar-message>\n        `,\n      )}\n    </div>`\n  }\n}\n","import{noChange as t}from\"../lit-html.js\";import{directive as e,Directive as r,PartType as s}from\"../directive.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const n=\"important\",i=\" !\"+n,o=e(class extends r{constructor(t){if(super(t),t.type!==s.ATTRIBUTE||\"style\"!==t.name||t.strings?.length>2)throw Error(\"The `styleMap` directive must be used in the `style` attribute and must be the only part in the attribute.\")}render(t){return Object.keys(t).reduce(((e,r)=>{const s=t[r];return null==s?e:e+`${r=r.includes(\"-\")?r:r.replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g,\"-$&\").toLowerCase()}:${s};`}),\"\")}update(e,[r]){const{style:s}=e.element;if(void 0===this.ft)return this.ft=new Set(Object.keys(r)),this.render(r);for(const t of this.ft)null==r[t]&&(this.ft.delete(t),t.includes(\"-\")?s.removeProperty(t):s[t]=null);for(const t in r){const e=r[t];if(null!=e){this.ft.add(t);const r=\"string\"==typeof e&&e.endsWith(i);t.includes(\"-\")||r?s.setProperty(t,r?e.slice(0,-11):e,r?n:\"\"):s[t]=e}}return t}});export{o as styleMap};\n//# sourceMappingURL=style-map.js.map\n","import clsx from 'clsx'\nimport { nothing, TemplateResult, unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { styleMap } from 'lit/directives/style-map.js'\nimport { html } from 'lit/static-html.js'\nimport { translate } from 'lit-i18n'\n\nimport { ActionType, AlertType, SnackbarPosition } from '@/common/types'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './snackbar-message.scss?inline'\n\n/**\n * `dap-ds-snackbar-message`\n * @summary The Snackbar component shows a sliding message to the user.\n * @element dap-ds-snackbar-message\n * @title - Snackbar message\n * @group snackbar\n *\n * @event {{ id: string }} dds-close - Fires when the snackbar closes.\n *\n * @slot default - The content of the snackbar.\n *\n * @csspart base - Main snackbar container.\n * @csspart text - The text part of the snackbar.\n * @csspart closebutton - The close button part of the component.\n * @csspart icon - The icon part of the close button.\n *\n * @cssproperty --dds-snackbar-width - Width of the snackbar.\n * @cssproperty --dds-snackbar-gap - Gap between snackbar elements.\n * @cssproperty --dds-snackbar-padding - Padding inside the snackbar.\n * @cssproperty --dds-snackbar-margin-bottom - Bottom margin of the snackbar.\n * @cssproperty --dds-snackbar-transition - Transition property for the snackbar.\n * @cssproperty --dds-snackbar-border-width - Border width of the snackbar.\n * @cssproperty --dds-snackbar-border-radius - Border radius of the snackbar.\n * @cssproperty --dds-snackbar-font-size - Font size used in the snackbar.\n * @cssproperty --dds-snackbar-background - Background color of the snackbar.\n * @cssproperty --dds-snackbar-border - Border color of the snackbar.\n * @cssproperty --dds-snackbar-text - Text color of the snackbar.\n * @cssproperty --dds-snackbar-icon - Icon color of the snackbar.\n * @cssproperty --dds-snackbar-link - Link color of the snackbar.\n * @cssproperty --dds-snackbar-information-background - Background color for information variant.\n * @cssproperty --dds-snackbar-information-border - Border color for information variant.\n * @cssproperty --dds-snackbar-information-icon - Icon color for information variant.\n * @cssproperty --dds-snackbar-success-background - Background color for success variant.\n * @cssproperty --dds-snackbar-success-border - Border color for success variant.\n * @cssproperty --dds-snackbar-success-icon - Icon color for success variant.\n * @cssproperty --dds-snackbar-error-background - Background color for error variant.\n * @cssproperty --dds-snackbar-error-border - Border color for error variant.\n * @cssproperty --dds-snackbar-error-icon - Icon color for error variant.\n * @cssproperty --dds-snackbar-variant-text - Text color for information, success, and error variants.\n * @cssproperty --dds-snackbar-variant-icon - Icon color for information, success, and error variants.\n * @cssproperty --dds-snackbar-variant-link - Link color for information, success, and error variants.\n */\n@customElement('dap-ds-snackbar-message')\nexport default class DapDSSnackbarMessage extends DdsElement {\n  /** The actions of the snackbar item. */\n  @property({ type: Array }) actions?: ActionType[] = []\n  /** The message of the snackbar item. */\n  @property({ type: String }) message = ''\n  /** Whether the snackbar has a close button. */\n  @property({ type: String, reflect: true }) closeButton = 'true'\n  /** The message type of the snackbar item. */\n  @property({ type: String }) alertType: AlertType = 'default'\n  /** The custom style of the snackbar item. */\n  @property({ type: Object }) customStyle?: Record<string, string>\n  /** The position of the snackbar container for directional animations. */\n  @property({ type: String }) position: SnackbarPosition = 'bottom-right'\n\n  @state() private isClosing = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  private getActions(): TemplateResult | typeof nothing {\n    if (this.actions && this.actions.length > 0) {\n      return html`<dap-ds-stack\n        part=\"actions\"\n        exportparts=\"base:actions-base\"\n        class=\"snackbar__actions\"\n        direction=\"row\">\n        ${this.actions.map((actionItem: ActionType) => {\n          if (actionItem && typeof actionItem.func === 'function') {\n            return html`<dap-ds-button\n              variant=${actionItem.variant ?? 'primary'}\n              @click=${() => {\n                if (actionItem.func) {\n                  actionItem.func()\n                }\n              }}\n              >${ifDefined(actionItem.text)}</dap-ds-button\n            >`\n          } else {\n            return html`<dap-ds-link\n              class=\"snackbar__link\"\n              href=${ifDefined(actionItem.href)}\n              target=\"${ifDefined(actionItem.target)}\"\n              rel=${ifDefined(actionItem.target ? actionItem.rel : undefined)}\n              >${ifDefined(actionItem.text)}</dap-ds-link\n            >`\n          }\n        })}\n      </dap-ds-stack>`\n    }\n    return nothing\n  }\n\n  private getAlertTypeIcon(): TemplateResult | typeof nothing {\n    let iconName = ''\n    switch (this.alertType) {\n      case 'information':\n        iconName = 'information-2-fill'\n        break\n      case 'successful':\n        iconName = 'checkbox-circle-fill'\n        break\n      case 'error':\n        iconName = 'error-warning-fill'\n        break\n      default:\n    }\n    return iconName.length > 0\n      ? html`<dap-ds-icon\n          name=${iconName}\n          size=\"lg\"\n          class=\"snackbar__alert-icon\"></dap-ds-icon>`\n      : nothing\n  }\n\n  private _close(id: string) {\n    if (id) {\n      this.isClosing = true\n      // Wait for the closing animation to complete before emitting the close event\n      setTimeout(() => {\n        this.emit('dds-close', { id })\n      }, 300) // Match the animation duration\n    }\n  }\n\n  render() {\n    return html`<div\n      role=\"alert\"\n      aria-label=${this.message}\n      part=\"base\"\n      class=${clsx(\n        'snackbar',\n        `snackbar--${this.alertType}`,\n        `snackbar--position-${this.position}`,\n        { 'snackbar--closing': this.isClosing },\n      )}\n      style=${styleMap(this.customStyle ?? {})}>\n      <div class=\"snackbar__main\">\n        <div class=\"snackbar__left-group\">\n          ${this.getAlertTypeIcon()}\n          <div class=\"snackbar__content\">\n            ${this.message\n              ? html`<span part=\"text\" class=\"snackbar__text\"\n                  >${this.message}</span\n                >`\n              : html`<slot></slot>`}\n            ${this.actions ? html` ${this.getActions()}` : nothing}\n          </div>\n        </div>\n        ${this.closeButton === 'true'\n          ? html`<dap-ds-icon-button\n              @click=${() => this._close(this.id)}\n              part=\"closebutton\"\n              class=\"snackbar__close\"\n              aria-label=${translate('close')}>\n              <dap-ds-icon\n                part=\"icon\"\n                class=\"snackbar__close-icon\"\n                name=\"close-line\"></dap-ds-icon>\n            </dap-ds-icon-button>`\n          : nothing}\n      </div>\n    </div>`\n  }\n}\n","import clsx from 'clsx'\nimport { html, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport { IconSize } from '../icon/icon.component'\nimport styles from './spinner.scss?inline'\n\nexport type SpinnerVariant =\n  | 'neutral'\n  | 'brand'\n  | 'negative'\n  | 'positive'\n  | 'inverted'\n\n/**\n * `dap-ds-spinner`\n * @summary Loading spinner component.\n * @element dap-ds-spinner\n * @title - Spinner\n *\n * @csspart base - The main spinner container.\n * @csspart icon - The loading icon element.\n * @csspart icon-base - The base of the loading icon.\n * @csspart text - The loading text element.\n *\n * @slot - The loading text content.\n *\n * @cssprop --dds-spinner-icon-color-neutral - Color for neutral spinner icons.\n * @cssprop --dds-spinner-icon-color-brand - Color for brand spinner icons.\n * @cssprop --dds-spinner-icon-color-negative - Color for negative spinner icons.\n * @cssprop --dds-spinner-icon-color-positive - Color for positive spinner icons.\n * @cssprop --dds-spinner-icon-color-inverted - Color for inverted spinner icons.\n * @cssprop --dds-spinner-text-spacing - Spacing between spinner and text.\n * @cssprop --dds-spinner-animation-duration - Duration of the spinner animation.\n *\n */\n@customElement('dap-ds-spinner')\nexport default class DapDSSpinner extends DdsElement {\n  /**\n   * The variant of the spinner.\n   * @type {\"neutral\" | \"brand\" | \"negative\" | \"positive\" | \"inverted\"}\n   */\n  @property({ type: String, reflect: true }) variant: SpinnerVariant = 'neutral'\n  /**\n   * The size of the spinner.\n   * @type {\"xxl\" | \"xl\" | \"lg\" | \"md\" | \"sm\" | \"xs\"}\n   */\n  @property({ type: String, reflect: true }) size: IconSize = 'lg'\n  /** The size of the spinner in pixels. This overrides the size attribute */\n  @property({ type: Number }) staticSize?: number\n  /** The loading text. */\n  @property({ type: String }) text: string\n  /** Removes the text color */\n  @property({ type: Boolean, reflect: true }) noColor = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        role=\"status\"\n        name=\"icon-spinner\"\n        class=\"${clsx('spinner', {\n          [`spinner--${this.size}`]: this.size,\n          [`spinner--${this.variant}`]: this.variant,\n        })}\">\n        <dap-ds-icon\n          part=\"icon\"\n          exportparts=\"base: icon-base\"\n          size=${this.size}\n          staticSize=${ifDefined(this.staticSize)}\n          name=\"loading-spinner\"\n          class=\"spinner__icon\"></dap-ds-icon>\n        ${this.text\n          ? html` <span\n              part=\"text\"\n              class=${clsx('spinner__text', {\n                'spinner__text--no-color': this.noColor,\n              })}>\n              ${this.text}\n            </span>`\n          : html`<slot></slot>`}\n      </div>\n    `\n  }\n}\n","import { clsx } from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { CSSFlexDirection, Spacing } from '../../common/types'\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './stack.scss?inline'\n\n/**\n * `dap-ds-stack`\n * @summary A stack is a container for stacked content.\n * @element dap-ds-stack\n * @title - Stack\n *\n * @slot - The content of the stack.\n *\n * @csspart stack - The main stack container.\n */\n@customElement('dap-ds-stack')\nexport default class DapDSStack extends DdsElement {\n  /** The direction of the stack.\n   * @type {'column' | 'column-reverse' | 'row' | 'row-reverse'}\n   */\n  @property() direction: CSSFlexDirection = 'column'\n  /** Adds margin to the end of the stack. */\n  @property({ type: Boolean }) endMargin?: boolean = false\n  /** Adds margin to the start of the stack. */\n  @property({ type: Boolean }) startMargin?: boolean = false\n\n  private _spacing: Spacing\n  /** The spacing of the stack. Uses the system spacing scale (100, 200, 300...etc) */\n  @property({ type: Number })\n  set spacing(value: Spacing) {\n    this._spacing = value\n  }\n  get spacing() {\n    if (\n      !this._spacing &&\n      this._spacing !== 0 &&\n      (this.direction === 'column' || this.direction === 'column-reverse')\n    ) {\n      return 600\n    }\n\n    if (\n      !this._spacing &&\n      this._spacing !== 0 &&\n      (this.direction === 'row' || this.direction === 'row-reverse')\n    ) {\n      return 200\n    }\n\n    return this._spacing\n  }\n\n  static readonly styles = unsafeCSS(styles)\n\n  getMarginStyles(\n    direction: CSSFlexDirection,\n    spacing: number,\n    startMargin?: boolean,\n    endMargin?: boolean,\n  ) {\n    if (direction === 'row' || direction === 'row-reverse') {\n      return `margin-left: ${startMargin ? `var(--dds-spacing-${spacing})` : '0'}; margin-right: ${endMargin ? `var(--dds-spacing-${spacing})` : '0'};`\n    }\n\n    return `margin-top: ${startMargin ? `var(--dds-spacing-${spacing})` : '0'}; margin-bottom: ${endMargin ? `var(--dds-spacing-${spacing})` : '0'};`\n  }\n\n  render() {\n    return html`\n      <div\n        class=${clsx('stack', `stack-gap-${this.spacing}`, {\n          [`stack-direction-${this.direction}`]: this.direction,\n        })}\n        part=\"base\"\n        style=${ifDefined(\n          this.getMarginStyles(\n            this.direction,\n            this.spacing,\n            this.startMargin,\n            this.endMargin,\n          ),\n        )}>\n        <slot></slot>\n      </div>\n    `\n  }\n}\n","import { clsx } from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property, query } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { LabeledChoiceElement } from '@/internal/mixin/labeledChoiceElement'\n\nimport { CommonFormElementSize, CommonSize } from '../../common/types'\nimport styles from './switch.scss?inline'\n\n/**\n * `dap-ds-switch`\n * @summary A switch is a graphical control element that allows the user to toggle between two states.\n * @element dap-ds-switch\n * @title - Switch\n *\n * @property {string} name - The name of the switch.\n * @property {string} value - The value of the switch.\n * @property {string} label - The label of the switch.\n * @property {string} description - The description of the switch.\n * @property {boolean} checked - The checked state of the switch.\n * @property {'xs' | 'sm' | 'lg'} size - The size of the switch.\n * @property {boolean} disabled - The disabled state of the switch.\n * @property {boolean} readonly - Whether the switch is readonly (cannot be changed but value is submitted with form).\n * @property {boolean} required - The required state of the switch.\n * @property {'left' | 'right'} labelPlacement - The placement of the label.\n * @property {'top' | 'bottom'} descriptionPlacement - The placement of the description.\n * @property {boolean} subtle - The weight of the label.\n * @property {string} feedback - The feedback of the switch.\n * @property {'negative' | 'positive' | 'warning'} feedbackType - The feedback type of the switch.\n * @property {boolean} optional - The optional state of the switch.\n * @property {string} optionalLabel - The optional label of the switch.\n *\n * @cssProperty --dds-switch-width - Width of the switch control.\n * @cssProperty --dds-switch-height - Height of the switch control.\n * @cssProperty --dds-switch-thumb-width - Width of the switch thumb.\n * @cssProperty --dds-switch-thumb-height - Height of the switch thumb.\n * @cssProperty --dds-switch-thumb-margin - Margin around the switch thumb.\n * @cssProperty --dds-switch-thumb-color - Color of the switch thumb.\n * @cssProperty --dds-switch-unchecked-bg - Background color of the switch when unchecked.\n * @cssProperty --dds-switch-checked-bg - Background color of the switch when checked.\n * @cssProperty --dds-switch-invalid-bg - Background color of the switch when invalid.\n * @cssProperty --dds-switch-disabled-bg - Background color of the switch when disabled.\n * @cssProperty --dds-switch-wrapper-padding - Padding of the switch wrapper.\n * @cssProperty --dds-switch-wrapper-bg - Background color of the switch wrapper.\n * @cssProperty --dds-switch-border-color - Border color of the switch.\n * @cssProperty --dds-switch-high-contrast-border-color - Border color of the switch in high contrast mode.\n *\n * @event {{ value: string }} dds-change - Fired when the input value changes.\n * @event {{ void }} dds-blur - Emitted when the input loses focus.\n * @event {{ void }} dds-focus - Emitted when the input gains focus.\n * @event {{ value: string }} dds-input - Emitted when the input receives input.\n *\n * @csspart base - The main switch container.\n * @csspart baselabel - The main label container\n * @csspart label - The label of the switch.\n * @csspart input - The native input of the switch.\n * @csspart control - The control of the switch.\n * @csspart description - The description of the switch.\n */\n@customElement('dap-ds-switch')\nexport default class DapDSSwitch extends LabeledChoiceElement {\n  @query('#input') private readonly input!: HTMLInputElement\n\n  /** This sets up border around the switch, when true. */\n  @property({ type: Boolean }) border: boolean = false\n\n  /** The type of the switch\n   * @type {'normal' | 'background'}\n   */\n  @property({ type: String }) type: 'normal' | 'background' = 'normal'\n\n  static readonly styles = unsafeCSS(styles)\n\n  /**\n   * Validates property combinations and logs warnings for invalid states.\n   * @private\n   */\n  private validateProperties(): void {\n    // Add any switch-specific validation here\n    if (this.required && !this.checked) {\n      // This will be handled by form validation, but we can provide early feedback\n    }\n  }\n\n  /**\n   * Gets the aria-describedby attribute value by combining description and feedback IDs.\n   * @returns {string | undefined} Space-separated IDs or undefined if none exist\n   * @private\n   */\n  private getAriaDescribedBy(): string | undefined {\n    const ids: string[] = []\n\n    if (this.description) {\n      ids.push('description')\n    }\n\n    if (this.feedback) {\n      ids.push('feedback')\n    }\n\n    return ids.length > 0 ? ids.join(' ') : undefined\n  }\n\n  /**\n   * Handles click events on the switch.\n   * Manages the checked state transitions and emits change events.\n   * @private\n   */\n  private readonly handleClick = (event?: Event): void => {\n    // Early return if component is disabled or readonly\n    if (this.disabled || this.readonly) {\n      if (this.readonly && event) {\n        event.preventDefault()\n        event.stopPropagation()\n      }\n      return\n    }\n\n    // Validate property combinations before state change\n    this.validateProperties()\n\n    // Toggle the checked state\n    this.checked = !this.checked\n\n    const { checked, value, disabled } = this\n\n    // Emit change event with error handling\n    try {\n      const event = new CustomEvent('dds-change', {\n        bubbles: true,\n        cancelable: false,\n        composed: true,\n        detail: {\n          checked,\n          value: value || '',\n          disabled,\n          readonly: this.readonly,\n        },\n      })\n\n      this.dispatchEvent(event)\n    } catch (error) {\n      console.error('Error emitting switch change event:', error)\n    }\n\n    // Update validity state with error handling\n    try {\n      this.setValidity()\n    } catch (error) {\n      console.error('Error setting switch validity:', error)\n    }\n  }\n\n  public get focusElement(): HTMLInputElement {\n    if (!this.input) {\n      throw new Error(\n        'Switch input element not found. Component may not be properly initialized.',\n      )\n    }\n    return this.input\n  }\n\n  /**\n   * Programmatically focuses the switch input element.\n   * @public\n   */\n  public focus(): void {\n    if (this.input && !this.disabled && !this.readonly) {\n      this.input.focus()\n    }\n  }\n\n  /**\n   * Programmatically blurs the switch input element.\n   * @public\n   */\n  public blur(): void {\n    if (this.input) {\n      this.input.blur()\n    }\n  }\n\n  /**\n   * Handles invalid events on the switch input.\n   * Prevents the default browser validation UI from showing and manages invalid state.\n   * @param {Event} event - The invalid event\n   * @private\n   */\n  public handleInvalid(event: Event): void {\n    event.preventDefault()\n    // Set invalid state if not already set\n    if (!this.invalid) {\n      this.invalid = true\n    }\n  }\n\n  /**\n   * Handles keyboard events on the switch.\n   * Provides enhanced keyboard navigation and accessibility.\n   * @param {KeyboardEvent} event - The keyboard event\n   * @private\n   */\n  private handleKeyDown(event: KeyboardEvent): void {\n    // Early return if readonly\n    if (this.readonly) {\n      return\n    }\n\n    // Handle Space key to toggle switch (in addition to default behavior)\n    if (event.code === 'Space') {\n      // Allow default Space behavior for switch input\n      // This ensures proper accessibility and form behavior\n      return\n    }\n\n    // Handle Enter key to toggle switch (custom behavior)\n    if (event.code === 'Enter') {\n      event.preventDefault()\n      this.handleClick()\n    }\n  }\n\n  render() {\n    return html`\n      <div part=\"base\">\n        <label\n          part=\"baselabel\"\n          id=\"label\"\n          class=${clsx('switch choice', `switch--${this.size}`, {\n            'switch--checked': this.checked,\n            'switch--disabled': this.disabled,\n            'switch--readonly': this.readonly,\n            'switch--required': this.required,\n            'choice--readonly': this.readonly,\n            'choice--disabled': this.disabled,\n            'choice__label--right': this.labelPlacement === 'right',\n            'choice__label--left': this.labelPlacement === 'left',\n          })}>\n          <div\n            class=${clsx('input__wrapper', {\n              'input__wrapper--background': this.type === 'background',\n              'input__wrapper--border': this.border,\n            })}>\n            <input\n              part=\"input\"\n              type=\"checkbox\"\n              class=\"input\"\n              id=\"input\"\n              role=\"switch\"\n              .checked=${this.checked}\n              .required=${this.required}\n              .disabled=${this.disabled}\n              .readonly=${this.readonly}\n              aria-label=${ifDefined(this.ariaLabel) || ''}\n              aria-describedby=${ifDefined(this.getAriaDescribedBy())}\n              aria-checked=${this.checked ? 'true' : 'false'}\n              .aria-invalid=${this.invalid ? 'true' : null}\n              @invalid=${this.handleInvalid}\n              @click=${this.handleClick}\n              @keydown=${this.handleKeyDown}\n              @focus=${this.onFocus}\n              @blur=${this.onBlur}\n              @input=${this.onInput} />\n            <span\n              part=\"control\"\n              class=${clsx(\n                'input__control',\n                { 'input__control--disabled': this.disabled },\n                { 'input__control--readonly': this.readonly },\n                { 'input__control--invalid': this.invalid },\n                { 'input__control--checked': this.checked },\n              )}>\n              <span class=\"input__control-toggle\">\n                <dap-ds-icon\n                  name=\"checkbox-blank-circle-fill\"\n                  class=\"input__control-toggle-thumb\"\n                  aria-hidden=\"true\"></dap-ds-icon\n                ><dap-ds-icon\n                  name=\"checkbox-circle-fill\"\n                  class=${clsx(\n                    'input__control-toggle-thumb',\n                    'check-indicator',\n                  )}\n                  aria-hidden=\"true\"></dap-ds-icon>\n              </span>\n              <span\n                part=\"high-contrast\"\n                aria-hidden=\"true\"\n                class=${clsx(\n                  'input__control-high-contrast',\n                  `input__control-high-contrast--${this.size}`,\n                  {\n                    'input__control-high-contrast--disabled': this.disabled,\n                    'input__control-high-contrast--readonly': this.readonly,\n                  },\n                )}></span>\n            </span>\n            <div\n              part=\"label-container\"\n              class=${clsx('choice__label-container', {\n                'choice__label-container--disabled': this.disabled,\n                'choice__label-container--readonly': this.readonly,\n                'choice__label--bottom': this.descriptionPlacement === 'top',\n                'choice__label--top': this.descriptionPlacement === 'bottom',\n              })}>\n              ${this.label &&\n              html`<dap-ds-form-label\n                id=\"label\"\n                class=\"label\"\n                part=\"label\"\n                .size=${this.size}\n                .required=${this.required}\n                .optional=${this.optional}\n                .optionalLabel=${this.optionalLabel}\n                subtle\n                .disabled=${this.disabled || this.readonly}\n                .readonly=${this.readonly}\n                label=${ifDefined(this.label)}\n                renderAs=\"span\">\n              </dap-ds-form-label>`}\n              ${this.description &&\n              html`\n                <dap-ds-typography\n                  part=\"description\"\n                  class=\"description\"\n                  variant=\"description\"\n                  size=${ifDefined(this.size as CommonFormElementSize)}\n                  id=\"description\">\n                  ${this.description}\n                </dap-ds-typography>\n              `}\n            </div>\n          </div>\n          ${this.feedback &&\n          html`\n            <dap-ds-feedback\n              part=\"feedback\"\n              feedbackType=${ifDefined(this.feedbackType)}\n              feedbackSize=${ifDefined(this.size) as CommonSize}\n              id=\"feedback\"\n              .subtle=${this.subtle}>\n              ${this.feedback}\n            </dap-ds-feedback>\n          `}\n        </label>\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\nimport { html } from 'lit-element'\n\nimport { DdsTabSelectEvent } from '@/dap-design-system'\nimport { DdsElement } from '@/internal/dds-hu-element'\n\nimport styles from './tab.scss?inline'\n\n/**\n * `dap-ds-tab`\n * @summary A tab item component. It is used in dap-ds-tab-group component slot to create a tab item.\n * @element dap-ds-tab\n * @title - Tab\n * *\n * @slot - The tab title template.\n * @slot content - The tab content.\n *\n * @csspart base - The main tab content container.\n */\n@customElement('dap-ds-tab')\nexport default class DapDSTab extends DdsElement {\n  static readonly styles = unsafeCSS(styles)\n\n  /** The tab id. Required */\n  @property({ type: String, reflect: true }) tabId: string\n  /** The disabled state of the tab. */\n  @property({ type: Boolean, reflect: true }) disabled = false\n\n  @state() private _selected: boolean = false\n\n  firstUpdated() {\n    this.setAttribute('id', this.tabId)\n\n    this.parentElement?.addEventListener(\n      'dds-tab-select',\n      (e: DdsTabSelectEvent) => {\n        if (e.detail && this.tabId === e.detail.tabId) {\n          this._selected = true\n        } else if (this._selected) {\n          this._selected = false\n        }\n      },\n    )\n  }\n\n  render() {\n    return html`<div\n      id=${this.tabId}\n      part=\"base\"\n      tabindex=${this._selected ? 0 : -1}\n      class=${clsx('tab-panel', {\n        'tab-panel--selected': this._selected,\n      })}\n      role=\"tabpanel\"\n      aria-labelledby=${this.tabId}>\n      <slot></slot>\n      <slot name=\"content\"></slot>\n    </div>`\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nfunction*o(o,f){if(void 0!==o){let i=0;for(const t of o)yield f(t,i++)}}export{o as map};\n//# sourceMappingURL=map.js.map\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { map } from 'lit/directives/map.js'\nimport { html } from 'lit-element'\n\nimport { CommonSize } from '@/common/types'\nimport DapDSTab from '@/components/tab/tab.component'\nimport { DdsElement } from '@/internal/dds-hu-element'\n\nimport styles from './tab-group.scss?inline'\n\ninterface TabNavItem {\n  titleTemplate: Node[]\n  disabled: boolean\n  tabId: string | null\n}\n\n/**\n * `dap-ds-tab-group`\n * @summary A tab group component. It is used with dap-ds-tab component to create a tab group.\n * @element dap-ds-tab-group\n * @title - Tab group\n * @group tab\n *\n * @event dds-tab-select - Fired when select a new tab.\n *\n * @slot - The tab items.\n *\n * @csspart base - The main container.\n * @csspart tab-nav - The tab navigation container.\n * @csspart tab-content - The tab content container.\n *\n * @cssproperty --dds-tab-group-border-radius - Border radius of the tab group container\n * @cssproperty --dds-tab-group-border-width - Border width of the tab navigation\n * @cssproperty --dds-tab-group-border-color - Border color of the tab navigation\n * @cssproperty --dds-tab-height-sm - Height of small tabs\n * @cssproperty --dds-tab-height-lg - Height of large tabs\n * @cssproperty --dds-tab-font-size-sm - Font size of small tabs\n * @cssproperty --dds-tab-font-size-lg - Font size of large tabs\n * @cssproperty --dds-tab-padding - Padding of the tab buttons\n * @cssproperty --dds-tab-border-width - Border width for tabs\n * @cssproperty --dds-tab-selected-border-color - Border color for selected tabs\n * @cssproperty --dds-tab-text-color - Text color for tabs\n * @cssproperty --dds-tab-hover-text-color - Text color for tabs on hover\n * @cssproperty --dds-tab-disabled-text-color - Text color for disabled tabs\n * @cssproperty --dds-tab-hover-background - Background color for tabs on hover\n * @cssproperty --dds-tab-active-background - Background color for active tabs\n */\n@customElement('dap-ds-tab-group')\nexport default class DapDSTabGroup extends DdsElement {\n  /**@ignore */\n  @query('slot') defaultSlot: HTMLSlotElement\n  /**@ignore */\n  @queryAll('.tab:not(.tab--disabled)') tabNavElements: HTMLElement[]\n\n  /** The selected tab id. */\n  @property({\n    type: String,\n    reflect: true,\n  })\n  selectedTabId: string\n\n  /** The size of the tab buttons. Default is `sm`. Can be `sm` or `lg`.\n   * @type {'sm' | 'lg'}\n   */\n  @property({ type: String, reflect: true }) size: CommonSize = 'sm'\n\n  /** If true, the tab group will be displayed in mobile mode. */\n  @property({ type: Boolean, reflect: true }) mobile: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  private _tabNavItems: TabNavItem[] = []\n  private _activeTabIds: string[] = []\n  private _initialEmit = true\n\n  emitTabSelect(tabId: string) {\n    if (!tabId) {\n      console.warn('Empty tab id!')\n      return\n    }\n\n    this.emit('dds-tab-select', { tabId }, { bubbles: false })\n\n    if (this._initialEmit) {\n      this._initialEmit = false\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    value: string | null,\n  ): void {\n    super.attributeChangedCallback(name, oldValue, value)\n    if (name.toLocaleLowerCase() === 'selectedtabid' && value !== oldValue) {\n      customElements.whenDefined('dap-ds-tab').then(() => {\n        if (value && this._activeTabIds.includes(value)) {\n          this.emitTabSelect(value)\n        }\n      })\n    }\n  }\n\n  handleSlotChange(event: Event) {\n    const tabElements: NodeListOf<DapDSTab> = (\n      event.target as any\n    )?.assignedElements({\n      flatten: true,\n      selector: 'dap-ds-tab',\n    })\n\n    const tabNavItems: TabNavItem[] = []\n    const tabElementsList: DapDSTab[] = []\n    const activeTabIds: string[] = []\n\n    tabElements.forEach(tab => {\n      const tabId = tab.getAttribute('tabId')\n      const disabled = tab.hasAttribute('disabled')\n\n      const tabTitle = tab?.shadowRoot?.querySelector(\n        'slot:not([name=\"content\"])',\n      ) as HTMLSlotElement\n\n      tabNavItems.push({\n        titleTemplate: tabTitle?.assignedNodes({ flatten: true }),\n        disabled,\n        tabId,\n      })\n\n      tabElementsList.push(tab)\n\n      if (!disabled && tabId) {\n        activeTabIds.push(tabId)\n      }\n    })\n\n    this._tabNavItems = tabNavItems\n    this._activeTabIds = activeTabIds\n\n    if (!this.selectedTabId && this._activeTabIds.length) {\n      this.selectedTabId = this._activeTabIds[0]\n    } else if (this._initialEmit) {\n      this.emitTabSelect(this.selectedTabId)\n    }\n\n    this.requestUpdate()\n  }\n\n  handleClick(tabId: string | null) {\n    if (tabId === this.selectedTabId || !tabId) return\n\n    this.selectedTabId = tabId\n    this.emitTabSelect(tabId)\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const currentTabIndex = this._activeTabIds.indexOf(this.selectedTabId)\n    let flag = false\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        {\n          if (currentTabIndex > 0) {\n            const newTabIndex = currentTabIndex - 1\n            this.handleClick(this._activeTabIds[newTabIndex])\n            this.tabNavElements[newTabIndex].focus()\n          }\n          flag = true\n        }\n        break\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        {\n          if (currentTabIndex < this._activeTabIds.length - 1) {\n            const newTabIndex = currentTabIndex + 1\n            this.handleClick(this._activeTabIds[newTabIndex])\n            this.tabNavElements[newTabIndex].focus()\n          }\n          flag = true\n        }\n        break\n\n      case 'Home':\n        this.handleClick(this._activeTabIds[0])\n        this.tabNavElements[0].focus()\n        flag = true\n        break\n\n      case 'End':\n        this.handleClick(this._activeTabIds[this._activeTabIds.length - 1])\n        this.tabNavElements[this._activeTabIds.length - 1].focus()\n        flag = true\n        break\n\n      default:\n        break\n    }\n\n    if (flag) {\n      event.stopPropagation()\n      event.preventDefault()\n    }\n  }\n\n  render() {\n    return html`\n      <div part=\"base\" class=\"tab-group\">\n        <div\n          role=\"tablist\"\n          class=\"    ${clsx('tab-group__nav', {\n            'tab-group--mobile': this.mobile,\n          })}\">\n          ${map(\n            this._tabNavItems,\n            tab => html`\n              <button\n                part=\"tab-nav\"\n                ?disabled=\"${tab.disabled}\"\n                role=\"tab\"\n                aria-controls=${ifDefined(tab.tabId ?? undefined)}\n                aria-selected=\"${this.selectedTabId === tab.tabId}\"\n                tabindex=\"${this.selectedTabId === tab.tabId ? 0 : -1}\"\n                type=\"button\"\n                class=${clsx('tab', {\n                  'tab--selected': this.selectedTabId === tab.tabId,\n                  'tab--disabled': tab.disabled,\n                  'tab--sm': this.size === 'sm',\n                  'tab--lg': this.size === 'lg',\n                })}\n                @click=${() => {\n                  this.handleClick(tab.tabId)\n                }}\n                @keydown=${this.handleKeyDown}>\n                <span\n                  part=\"high-contrast\"\n                  class=${clsx(\n                    'tab__high-contrast',\n                    {\n                      'tab__high-contrast--selected':\n                        this.selectedTabId === tab.tabId,\n                    },\n                    `tab__high-contrast--${this.size}`,\n                  )}></span>\n                ${tab.titleTemplate}\n              </button>\n            `,\n          )}\n        </div>\n\n        <div part=\"tab-group-content\" class=\"tab-group__content\">\n          <slot @slotchange=${this.handleSlotChange}></slot>\n        </div>\n      </div>\n    `\n  }\n}\n","import { PropertyValueMap, unsafeCSS } from 'lit'\nimport {\n  customElement,\n  property,\n  queryAssignedElements,\n} from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './table.scss?inline'\n\n/**\n * Data table component.\n * @element dap-ds-table\n * @title - Table\n *\n * @slot - The default slot. Accepts `dap-ds-table-row` elements.\n *\n * @cssprop --dds-table-border-width - Width of the table border. Default: var(--dds-border-width-base, 1px)\n * @cssprop --dds-table-border-color - Color of the table border. Default: var(--dds-border-neutral-subtle)\n * @cssprop --dds-table-border-radius - Border radius of the table. Default: var(--dds-radius-small, 4px)\n * @cssprop --dds-table-row-divider-color - Color of the divider between rows in mobile view. Default: var(--dds-border-neutral-subtle)\n */\n@customElement('dap-ds-table')\nexport default class DapDSTable extends DdsElement {\n  /**@ignore */\n  @queryAssignedElements() rows!: Array<HTMLElement>\n  @property({ reflect: true }) public role = 'grid'\n  /**If the table has mobile design */\n  @property({ type: Boolean, reflect: true }) mobile = false\n\n  /** The caption of the table */\n  @property({ type: String }) caption = ''\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    this.rows.forEach((row, index) => {\n      if (index === this.rows.length - 1) {\n        row.toggleAttribute('last')\n      }\n    })\n\n    this.setAttribute('aria-label', this.caption)\n  }\n\n  render() {\n    return html`\n      <caption class=\"caption\" part=\"caption\">\n        ${this.caption}\n      </caption>\n      <slot></slot>\n    `\n  }\n}\n","import { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './table-cell.scss?inline'\n\n/**\n * Table cell component.\n * @element dap-ds-table-cell\n * @title - Table cell\n * @group table\n *\n * @slot - The default slot.\n *\n * @csspart base - The main cell container.\n *\n * @cssproperty --dds-table-cell-padding-block - Padding for the top and bottom of the cell. Default: var(--dds-spacing-200)\n * @cssproperty --dds-table-cell-padding-inline-start - Padding for the start (left in LTR) of the cell. Default: var(--dds-spacing-500)\n * @cssproperty --dds-table-cell-padding-inline-end - Padding for the end (right in LTR) of the cell. Default: var(--dds-spacing-500)\n * @cssproperty --dds-table-cell-border-width - Width of the cell's bottom border. Default: var(--dds-border-width-base)\n * @cssproperty --dds-table-cell-border-color - Color of the cell's bottom border. Default: var(--dds-border-neutral-subtle)\n * @cssproperty --dds-table-cell-text-color - Text color of the cell. Default: var(--dds-text-neutral-base)\n * @cssproperty --dds-table-cell-line-height - Line height of the cell text. Default: 1.5\n * @cssproperty --dds-table-cell-text-align - Text alignment in the cell. Default: left\n */\n@customElement('dap-ds-table-cell')\nexport default class DapDSTableCell extends DdsElement {\n  static readonly styles = unsafeCSS(styles)\n\n  /**If the cell is the last one.*/\n  @property({ type: Boolean, reflect: true }) last: boolean\n  /** The html role of the cell */\n  @property({ reflect: true })\n  public role = 'cell'\n\n  render() {\n    return html` <slot></slot> `\n  }\n}\n","import { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './table-header.scss?inline'\n\n/**\n * Table header cell component.\n * @element dap-ds-table-header\n * @title - Table header\n * @group table\n *\n * @slot - The default slot.\n *\n * @csspart base - The main header cell container.\n *\n * @cssproperty --dds-table-header-padding-block - Padding for the top and bottom of the header cell.\n * @cssproperty --dds-table-header-padding-inline-start - Padding for the start (left in LTR) of the header cell.\n * @cssproperty --dds-table-header-padding-inline-end - Padding for the end (right in LTR) of the header cell.\n * @cssproperty --dds-table-header-border-width - Width of the header cell's bottom border.\n * @cssproperty --dds-table-header-border-color - Color of the header cell's bottom border.\n * @cssproperty --dds-table-header-text-color - Text color of the header cell.\n * @cssproperty --dds-table-header-font-weight - Font weight of the header cell text.\n * @cssproperty --dds-table-header-line-height - Line height of the header cell text.\n */\n@customElement('dap-ds-table-header')\nexport default class DapDSTableHeader extends DdsElement {\n  static readonly styles = unsafeCSS(styles)\n\n  /**If the header cell is the last one.*/\n  @property({ type: Boolean, reflect: true }) last: boolean\n  /** The html role of the header cell */\n  @property({ reflect: true })\n  public role = 'columnheader'\n\n  render() {\n    return html` <slot part=\"base\"></slot> `\n  }\n}\n","import { unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './table-row.scss?inline'\n\n/**\n * Table row component.\n * @element dap-ds-table-row\n * @title - Table row\n * @group table\n *\n * @slot - The default slot. Accepts `dap-ds-table-cell` and `dap-ds-table-header` elements.\n *\n * @cssprop --dds-table-row-padding-right - Padding right for the last table header, defaults to var(--dds-spacing-500)\n * @cssprop --dds-table-row-padding-top - Padding top for table headers in mobile view, defaults to var(--dds-spacing-400)\n * @cssprop --dds-table-row-padding-bottom - Padding bottom for the last table cell in mobile view, defaults to var(--dds-spacing-400)\n * @cssprop --dds-table-row-border-color - Border color for table cells and headers, defaults to transparent\n */\n@customElement('dap-ds-table-row')\nexport default class DapDSTableRow extends DdsElement {\n  static readonly styles = unsafeCSS(styles)\n\n  /** The html role of the row */\n  @property({ reflect: true })\n  public role = 'row'\n\n  /**If the row is mobile design */\n  @property({ type: Boolean, reflect: true }) mobile = false\n\n  render() {\n    return html` <slot></slot> `\n  }\n}\n","import clsx from 'clsx'\nimport { nothing, unsafeCSS } from 'lit'\nimport { customElement, property, query, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { GenericFormElement } from '@/internal/mixin/genericFormElement'\n\nimport { CommonFormElementSize, CommonSize } from '../../common/types'\nimport styles from './textarea.scss?inline'\n\n/**\n * `dap-ds-textarea`\n * @summary A textarea is a multi-line text input field.\n * @element dap-ds-textarea\n * @title - Textarea\n *\n * @property {'xs' | 'sm' | 'lg'} size - The size of the textarea. Default is `md`.\n * @property {boolean} disabled - The disabled state of the textarea.\n * @property {number} minlength - The minimum length of the textarea.\n * @property {string} value - The value of the textarea.\n * @property {string} tooltip - The tooltip of the textarea.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The tooltip placement of the textarea.\n * @property {InputStatus} status - The status of the textarea. Can be `success` or `error`.\n * @property {boolean} readonly - The readonly state of the textarea.\n * @property {boolean} required - The required state of the textarea.\n * @property {string} label - The label of the textarea.\n * @property {string} description - The description of the textarea.\n * @property {string} feedback - The feedback of the textarea.\n * @property {'negative' | 'positive' | 'warning'} feedbackType - The feedback type of the textarea. Can be `negative`, `positive`, or `warning`.\n * @property {boolean} optional - The optional state of the textarea.\n * @property {string} optionalLabel - The optional label of the textarea.\n * @property {boolean} subtle - The weight of the label. Default is `false`\n * @property {boolean} autofocus - The autofocus state of the textarea.\n *\n * @event {{ value: number }} dds-count-change - Fires when the count of the textarea changes.\n * @event {{ value: string }} dds-change - Fired when the textarea value changes.\n * @event {{ value: string }} dds-input - Fired when the textarea value changes.\n * @event {{ value: string, originalEvent: Event }} dds-keydown - Fired when a key is pressed down.\n * @event {{ void }} dds-blur - Fired when the textarea loses focus.\n * @event {{ void }} dds-focus - Emitted when the textarea gains focus.\n * @event {{ value: string }} dds-select - Emitted when select text in textarea.\n *\n * @slot feedback-icon - The custom icon of the feedback.\n *\n * @csspart base - The main textarea container.\n * @csspart input - The native input of the textarea.\n * @csspart counter - The counter of the textarea.\n * @csspart counter-base - The base of the counter.\n * @csspart feedback - The feedback of the textarea.\n * @csspart feedback-base - The base of the feedback.\n * @csspart feedback-text - The text of the feedback.\n * @csspart feedback-icon - The icon of the feedback.\n *\n * @cssproperty --dds-textarea-min-rows - Minimum number of rows in the textarea. Default is 2.\n * @cssproperty --dds-textarea-spacing - Gap between elements in the textarea container. Default is var(--dds-spacing-200).\n * @cssproperty --dds-textarea-gap - Gap between elements in the textarea container. Default is var(--dds-spacing-200).\n * @cssproperty --dds-textarea-margin-top - Top margin of the textarea. Default is var(--dds-spacing-200).\n * @cssproperty --dds-textarea-padding - Padding of the textarea control. Default is var(--dds-spacing-200) var(--dds-spacing-300).\n * @cssproperty --dds-textarea-border-width - Border width of the textarea. Default is var(--dds-border-width-base).\n * @cssproperty --dds-textarea-border-color - Border color of the textarea. Default is var(--dds-border-neutral-base).\n * @cssproperty --dds-textarea-background - Background color of the textarea. Default is var(--dds-fields-background-default).\n * @cssproperty --dds-textarea-color - Text color of the textarea. Default is var(--dds-text-neutral-base).\n * @cssproperty --dds-textarea-border-radius - Border radius of the textarea. Default is var(--dds-radius-base).\n * @cssproperty --dds-textarea-disabled-bg - Background color when disabled. Default is var(--dds-fields-background-disabled).\n * @cssproperty --dds-textarea-disabled-color - Text color when disabled. Default is var(--dds-text-neutral-disabled).\n * @cssproperty --dds-textarea-readonly-bg - Background color when readonly. Default is var(--dds-fields-background-read-only).\n * @cssproperty --dds-textarea-readonly-color - Text color when readonly. Default is var(--dds-text-neutral-subtle).\n * @cssproperty --dds-textarea-error-border - Border color when in error state. Default is var(--dds-border-negative-base).\n * @cssproperty --dds-textarea-success-border - Border color when in success state. Default is var(--dds-border-positive-base).\n */\n@customElement('dap-ds-textarea')\nexport default class DapDSTextarea extends GenericFormElement {\n  /**@ignore */\n  @query('#input') input!: HTMLTextAreaElement\n  /** Hide character counter. */\n  @property({ type: Boolean, reflect: true }) hideCounter = false\n  /** The minimum length of the textarea. */\n  @property({ type: Number }) minlength?: number\n  /** The maximum length of the textarea. */\n  @property({ type: Number }) maxlength?: number\n  /** The number of rows in the textarea. */\n  @property({ type: Number }) rows?: number = 6\n  /** The number of columns in the textarea. */\n  @property({ type: Number }) cols?: number\n  /** The placeholder of the textarea. */\n  @property() placeholder = ''\n  /** Indicates how the control should wrap the value for form submission. */\n  @property() wrap: 'hard' | 'soft'\n\n  /**@ignore */\n  @state() count = 0\n\n  static readonly styles = unsafeCSS(styles)\n\n  get focusElement() {\n    return this.input\n  }\n\n  private _handleSlotChange(event: Event) {\n    const target = event?.target as HTMLInputElement\n    target.setAttribute('slot', 'icon')\n  }\n\n  async connectedCallback() {\n    super.connectedCallback()\n\n    await this.updateComplete\n    this.input.value = this.value ?? ''\n    this.count = this.input.value.length\n  }\n\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n    super.attributeChangedCallback(name, oldValue, newValue)\n\n    if (name === 'value' && this.input) {\n      this.input.value = newValue\n    }\n  }\n\n  onInput() {\n    super.onInput()\n\n    this.count = this.input.value.length\n    this.value = this.input.value\n    this.emit('dds-count-change', { value: this.count })\n\n    this.setValidity()\n  }\n\n  onChange() {\n    super.onChange()\n\n    this.count = this.input.value.length\n    this.value = this.input.value\n    this.emit('dds-count-change', { value: this.count })\n\n    this.setValidity()\n  }\n\n  onSelect(e: Event) {\n    const target = e.target as HTMLTextAreaElement\n    const selection = target.value.substring(\n      target.selectionStart,\n      target.selectionEnd,\n    )\n    this.emit('dds-select', { value: selection })\n  }\n\n  formResetCallback() {\n    this.internals.setValidity({})\n    this.internals.setFormValue(this.defaultValue || '')\n    this.value = this.defaultValue || ''\n    this.input.value = this.defaultValue || ''\n  }\n\n  handleInvalid(event: Event) {\n    event.preventDefault()\n  }\n\n  private _renderFooter() {\n    const counter = !this.hideCounter\n      ? html`\n    <dap-ds-typography\n          part=\"counter\"\n          exportparts=\"base: counter-base\"\n          class=${clsx('textarea__counter', {\n            'textarea__counter--error': this.status === 'error',\n          })}\n          variant=\"caption\"\n          size=\"${this.size as CommonFormElementSize}\"\n          id=\"counter\"\n          aria-hidden=\"true\">\n          ${this.count}\n        </dap-ds-typography>\n      </div>\n    `\n      : nothing\n\n    return html`\n      <div class=\"textarea__footer\" part=\"footer\">\n        ${this.feedback && this._renderFeedback()}\n        <span part=\"counter-container\">${counter}</span>\n      </div>\n    `\n  }\n\n  render() {\n    return this.renderLabel(\n      undefined,\n      html`\n        <div\n          part=\"base\"\n          class=${clsx(\n            'textarea',\n            `textarea--${this.size}`,\n            { 'textarea--success': this.status === 'success' },\n            { 'textarea--error': this.status === 'error' },\n            { 'textarea--disabled': this.disabled },\n            { 'textarea--readonly': this.readonly },\n            { 'textarea--optional': this.optional },\n          )}>\n          <textarea\n            id=\"input\"\n            part=\"input\"\n            class=\"textarea__control\"\n            aria-disabled=${this.disabled}\n            aria-describedby=\"description ${this.feedback\n              ? 'feedback'\n              : nothing}\"\n            ?disabled=${this.disabled}\n            ?readonly=${this.readonly}\n            ?required=${this.required}\n            minlength=${ifDefined(this.minlength)}\n            maxlength=${ifDefined(this.maxlength)}\n            wrap=${ifDefined(this.wrap)}\n            cols=${ifDefined(this.cols)}\n            rows=${ifDefined(this.rows)}\n            placeholder=${ifDefined(this.placeholder)}\n            ?autofocus=${this.autofocus}\n            ?value=${this.value}\n            aria-labelledby=\"label\"\n            @input=${this.onInput}\n            @keydown=${this.onKeydown}\n            @change=${this.onChange}\n            @blur=${this.onBlur}\n            @focus=${this.onFocus}\n            @select=${this.onSelect}\n            @invalid=${this.handleInvalid}></textarea>\n\n          ${this._renderFooter()}\n        </div>\n      `,\n    )\n  }\n\n  private _renderFeedback() {\n    return html`\n      <dap-ds-feedback\n        part=\"feedback\"\n        feedbackType=${ifDefined(this.feedbackType)}\n        feedbackSize=${ifDefined(this.size) as CommonSize}\n        class=${clsx('textarea__feedback', {\n          'textarea__feedback--sm': this.size === 'sm',\n        })}\n        id=\"feedback\"\n        exportparts=\"base:feedback-base, text:feedback-text, icon:feedback-icon\"\n        .subtle=${this.subtle}>\n        <slot\n          name=\"feedback-icon\"\n          @slotchange=\"${this._handleSlotChange}\"></slot>\n        ${this.feedback}\n      </dap-ds-feedback>\n    `\n  }\n}\n","import { PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\n\nimport styles from './timeline.scss?inline'\n\n/**\n * `dap-ds-timeline`\n * @summary A timeline is a graphical representation of a series of events.\n * @element dap-ds-timeline\n * @title - Timeline\n *\n * @slot - The default slot for the timeline items.\n *\n * @csspart base - The main timeline container.\n */\n@customElement('dap-ds-timeline')\nexport default class DapDSTimeline extends DdsElement {\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n    this.setAttribute('role', 'list')\n\n    const children = Array.from(this.children)\n\n    children.forEach((child, index) => {\n      child.setAttribute('role', 'listitem')\n      if (index === 0) {\n        child.toggleAttribute('first')\n      } else if (index === children.length - 1) {\n        child.toggleAttribute('last')\n      } else {\n        child.removeAttribute('first')\n        child.removeAttribute('last')\n        child.toggleAttribute('middle')\n      }\n    })\n  }\n\n  render() {\n    return html`\n      <div part=\"base\" class=\"timeline\">\n        <slot></slot>\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport { unsafeCSS } from 'lit'\nimport { customElement } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\n\nimport styles from './timeline-item.scss?inline'\n\n/**\n * `dap-ds-timeline-item`\n * @summary A timeline is a graphical representation of a series of events.\n * @element dap-ds-timeline-item\n * @title - Timeline item\n * @group timeline\n *\n * @slot - The default slot for the item content.\n *\n * @csspart base - The main timeline item container.\n * @csspart connector - The connector element between two timeline items.\n * @csspart content - The content of the timeline item.\n *\n * @cssproperty --dds-timeline-position - Position of the timeline dot (default: 28px)\n * @cssproperty --dds-timeline-connector-width - Width of the timeline connector line (default: 1px)\n * @cssproperty --dds-timeline-connector-left-position - Left position of the timeline connector (default: 5.5px)\n * @cssproperty --dds-timeline-dot-size - Size of the timeline dot (default: var(--dds-spacing-300))\n * @cssproperty --dds-timeline-item-margin-bottom - Bottom margin of timeline items (default: var(--dds-spacing-200))\n * @cssproperty --dds-timeline-item-padding-left - Left padding of timeline items (default: var(--dds-spacing-400))\n */\n@customElement('dap-ds-timeline-item')\nexport default class DapDSTimelineItem extends DdsElement {\n  static readonly styles = unsafeCSS(styles)\n\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        class=${clsx('timeline-item', {\n          'timeline-item--first': this.hasAttribute('first'),\n          'timeline-item--last': this.hasAttribute('last'),\n          'timeline-item--middle': this.hasAttribute('middle'),\n        })}>\n        <div part=\"connector\" class=\"timeline-connector\"></div>\n        <div part=\"content\" class=\"timeline-content\">\n          <slot></slot>\n        </div>\n      </div>\n    `\n  }\n}\n","import { html, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\n\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { getTimeFormatPreference, t } from '@/localization/localization'\n\nimport styles from './time-grid.scss?inline'\n\nexport interface TimeSelection {\n  hour: number\n  minute: number\n}\n\n/**\n * `dap-ds-time-grid`\n * @summary A time grid component that allows users to select hours and minutes in two side-by-side scrollable columns.\n * @element dap-ds-time-grid\n * @title - Time grid\n * @group timepicker\n *\n * @property {number} selectedHour - The currently selected hour (0-23).\n * @property {number} selectedMinute - The currently selected minute (0-59).\n * @property {string} minTime - The minimum selectable time (format: 'HH:mm').\n * @property {string} maxTime - The maximum selectable time (format: 'HH:mm').\n * @property {number} step - The step interval in minutes.\n * @property {string} locale - The locale for time formatting.\n *\n * @event {{ detail: TimeSelection }} dds-change - Fired when time selection changes.\n * @event {{ void }} dds-close - Fired when the time grid should close.\n *\n * @csspart time-grid - The main time grid container.\n * @csspart hour-section - The hour selection section.\n * @csspart minute-section - The minute selection section.\n * @csspart time-button - Individual time selection buttons.\n * @csspart section-header-title - The title of the section header.\n * @csspart section-header-divider - The divider between the section header and the time buttons.\n * @csspart time-column - The time column container.\n *\n * @cssprop --dds-time-grid-gap - The gap between time sections (default: var(--dds-spacing-400)).\n * @cssprop --dds-time-grid-padding - The padding around the time grid (default: var(--dds-spacing-0)).\n * @cssprop --dds-time-grid-column-gap - The gap between time buttons in columns (default: var(--dds-spacing-200)).\n * @cssprop --dds-time-grid-border-radius - The border radius of the time grid (default: var(--dds-radius-base)).\n * @cssprop --dds-time-grid-background - The background color of the time grid (default: var(--dds-background-neutral-subtle)).\n * @cssprop --dds-time-grid-transition - The transition timing for the time grid (default: all 0.2s ease-in-out).\n * @cssprop --dds-time-grid-max-width - The maximum width of the time grid (default: 400px).\n * @cssprop --dds-time-grid-column-max-height - The maximum height of time columns (default: 240px).\n */\n@customElement('dap-ds-time-grid')\nexport default class DapDSTimeGrid extends DdsElement {\n  @property({ type: Number }) selectedHour = 12\n  @property({ type: Number }) selectedMinute = 0\n  @property({ type: String }) minTime = '00:00'\n  @property({ type: String }) maxTime = '23:59'\n  @property({ type: Number }) step = 5\n  @property({ type: String }) locale = 'en'\n\n  static readonly styles = unsafeCSS(styles)\n\n  private getHours(): number[] {\n    return Array.from({ length: 24 }, (_, i) => i)\n  }\n\n  private getMinutes(): number[] {\n    const minutes = []\n    for (let i = 0; i < 60; i += this.step) {\n      minutes.push(i)\n    }\n    return minutes\n  }\n\n  private isTimeDisabled(hour: number, minute: number): boolean {\n    const time = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`\n    return time < this.minTime || time > this.maxTime\n  }\n\n  private handleHourSelect(hour: number) {\n    this.selectedHour = hour\n    this.requestUpdate()\n    this.emitChange()\n  }\n\n  private handleMinuteSelect(minute: number) {\n    this.selectedMinute = minute\n    this.requestUpdate()\n    this.emitChange()\n  }\n\n  private emitChange() {\n    this.emit('dds-change', {\n      hour: this.selectedHour,\n      minute: this.selectedMinute,\n    })\n  }\n\n  private formatHour(hour: number): string {\n    const timeFormat = getTimeFormatPreference(this.locale)\n\n    if (timeFormat === '24h') {\n      return hour.toString().padStart(2, '0')\n    }\n\n    // 12-hour format\n    if (hour === 0) return '12 AM'\n    if (hour === 12) return '12 PM'\n    if (hour > 12) return `${hour - 12} PM`\n    return `${hour} AM`\n  }\n\n  private formatMinute(minute: number): string {\n    return minute.toString().padStart(2, '0')\n  }\n\n  public scrollToSelectedTime() {\n    // Scroll to selected hour\n    const hourColumn = this.shadowRoot?.querySelector('#hour-column')\n    if (hourColumn) {\n      const hourButtons = hourColumn.querySelectorAll('dap-ds-button')\n      const selectedHourButton = Array.from(hourButtons).find(\n        button =>\n          button.textContent?.trim() === this.formatHour(this.selectedHour),\n      )\n\n      if (selectedHourButton) {\n        selectedHourButton.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center',\n          inline: 'nearest',\n        })\n      }\n    }\n\n    // Scroll to selected minute\n    const minuteColumn = this.shadowRoot?.querySelector('#minute-column')\n    if (minuteColumn) {\n      const minuteButtons = minuteColumn.querySelectorAll('dap-ds-button')\n      const selectedMinuteButton = Array.from(minuteButtons).find(\n        button =>\n          button.textContent?.trim() === this.formatMinute(this.selectedMinute),\n      )\n\n      if (selectedMinuteButton) {\n        selectedMinuteButton.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center',\n          inline: 'nearest',\n        })\n      }\n    }\n  }\n\n  override firstUpdated(changedProperties: Map<string, unknown>) {\n    super.firstUpdated(changedProperties)\n    // Scroll to selected time after first render\n    requestAnimationFrame(() => {\n      this.scrollToSelectedTime()\n    })\n  }\n\n  override updated(changedProperties: Map<string, unknown>) {\n    super.updated(changedProperties)\n\n    // Scroll to selected time when selection changes\n    if (\n      changedProperties.has('selectedHour') ||\n      changedProperties.has('selectedMinute')\n    ) {\n      requestAnimationFrame(() => {\n        this.scrollToSelectedTime()\n      })\n    }\n  }\n\n  render() {\n    return html`\n      <div part=\"time-grid\" class=\"time-grid\">\n        <div part=\"hour-section\" class=\"time-section\">\n          <div class=\"section-header\">\n            <span part=\"section-header-title\"\n              >${t('timepicker.hour', {\n                lng: this.locale,\n              })}</span\n            >\n            <dap-ds-divider\n              part=\"section-header-divider\"\n              spacing=\"200\"></dap-ds-divider>\n          </div>\n          <div part=\"time-column\" class=\"time-column\" id=\"hour-column\">\n            ${this.getHours().map(hour => {\n              const isDisabled = this.isTimeDisabled(hour, this.selectedMinute)\n              const isSelected = hour === this.selectedHour\n              return html`\n                <dap-ds-button\n                  variant=\"subtle-menu\"\n                  ?active=${isSelected}\n                  part=\"time-button\"\n                  ?disabled=${isDisabled}\n                  @click=${() => this.handleHourSelect(hour)}>\n                  ${this.formatHour(hour)}\n                </dap-ds-button>\n              `\n            })}\n          </div>\n        </div>\n\n        <div part=\"minute-section\" class=\"time-section\">\n          <div class=\"section-header\">\n            <span part=\"section-header-title\"\n              >${t('timepicker.minute', {\n                lng: this.locale,\n              })}</span\n            >\n            <dap-ds-divider\n              part=\"section-header-divider\"\n              spacing=\"200\"></dap-ds-divider>\n          </div>\n          <div part=\"time-column\" class=\"time-column\" id=\"minute-column\">\n            ${this.getMinutes().map(minute => {\n              const isDisabled = this.isTimeDisabled(this.selectedHour, minute)\n              const isSelected = minute === this.selectedMinute\n              return html`\n                <dap-ds-button\n                  variant=\"subtle-menu\"\n                  ?active=${isSelected}\n                  part=\"time-button\"\n                  ?disabled=${isDisabled}\n                  @click=${() => this.handleMinuteSelect(minute)}>\n                  ${this.formatMinute(minute)}\n                </dap-ds-button>\n              `\n            })}\n          </div>\n        </div>\n      </div>\n    `\n  }\n}\n","import clsx from 'clsx'\nimport dayjs, { Dayjs } from 'dayjs'\nimport { nothing, PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property, query, state } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport {\n  CommonFormElementSize,\n  FloatingStrategy,\n  PopupPlacement,\n} from '@/common/types'\nimport { getValidityStateObject } from '@/common/utils'\nimport { GenericFormElement } from '@/internal/mixin/genericFormElement'\nimport { translate } from '@/localization/localization'\n\nimport DapDSTimeGrid, { TimeSelection } from './time-grid.component'\nimport styles from './timepicker.scss?inline'\n\n/**\n * `dap-ds-timepicker`\n * @summary A timepicker is a graphical user interface widget that allows the user to select a time from a time range.\n * @element dap-ds-timepicker\n * @title - Timepicker\n *\n * @property {Dayjs} value - The value of the timepicker.\n * @property {string} label - The label of the timepicker.\n * @property {string} description - The description of the timepicker.\n * @property {'xs' | 'sm' | 'lg'} size - The size of the timepicker.\n * @property {boolean} disabled - The disabled state of the timepicker.\n * @property {boolean} required - The required state of the timepicker.\n * @property {boolean} readonly - The readonly state of the timepicker.\n * @property {boolean} autofocus - The autofocus state of the timepicker.\n * @property {string} tooltip - The tooltip of the timepicker.\n * @property {'top' | 'right' | 'bottom' | 'left'} tooltipPlacement - The tooltip placement of the timepicker.\n * @property {string} feedback - The feedback of the timepicker.\n * @property {'negative' | 'positive' | 'warning'} feedbackType - The feedback type of the timepicker.\n * @property {boolean} optional - The optional state of the timepicker.\n * @property {string} optionalLabel - The optional label of the timepicker.\n * @property {boolean} subtle - The weight of the label. Default is `false`\n * @property {string} autocomplete - The autocomplete of the timepicker.\n * @property {string} placeholder - The placeholder of the timepicker.\n * @property {boolean} loading - The loading state of the timepicker.\n * @property {string} format - The format of the timepicker. Defaults to 'HH:mm'.\n * @property {string} minTime - The minimum time of the timepicker. Format: 'HH:mm'.\n * @property {string} maxTime - The maximum time of the timepicker. Format: 'HH:mm'.\n * @property {number} step - The step interval in minutes. Defaults to 15.\n * @property {boolean} openTimeOnInput - Whether the time picker should open on typing.\n * @property {boolean} sendEmptyEventOnInput - Whether the time picker should send an empty event on typing.\n * @property {string} clearButton - Whether the clear button should be shown. Defaults to 'true'.\n * @property {string} clearButtonAriaLabel - The aria label of the clear button.\n * @property {string} placement - The placement of the dropdown of the timepicker.\n * @property {FloatingStrategy} floatingStrategy - The floating strategy of the timepicker.\n * @property {string} locale - The locale of the timepicker.\n * @property {boolean} closeOnSelection - Whether the dropdown should close when a time is selected.\n *\n * @event {{ value: string }} dds-change - Fired when the timepicker value changes.\n * @event {{ value: string }} dds-input - Fired when the timepicker input value changes.\n * @event {{ value: string }} dds-valid-time - Fired when the timepicker input value is valid. Happens on manual input typing.\n * @event {{ value: string, type: 'invalid' | 'out-of-range' }} dds-invalid-time - Fired when the timepicker input value is invalid. Happens on manual input typing.\n * @event {{ void }} dds-clear - Fired when the timepicker is cleared.\n * @event {{ void }} dds-focus - Emitted when the timepicker gains focus.\n * @event {{ void }} dds-blur - Emitted when the timepicker loses focus.\n *\n * @csspart base - The main timepicker container.\n * @csspart trigger - The trigger button of the timepicker.\n * @csspart label - The label of the timepicker.\n * @csspart description - The description of the timepicker.\n * @csspart feedback - The feedback of the timepicker.\n * @csspart tooltip - The tooltip of the timepicker.\n * @csspart input - The input of the timepicker.\n * @csspart clear-button - The clear button of the timepicker.\n *\n * @cssproperty --dds-timepicker-background - The background color of the timepicker. Defaults to var(--dds-fields-background-default).\n * @cssproperty --dds-timepicker-border-color - The border color of the timepicker. Defaults to var(--dds-border-neutral-base).\n * @cssproperty --dds-timepicker-border-width - The border width of the timepicker. Defaults to var(--dds-border-width-base, 1px).\n * @cssproperty --dds-timepicker-border-radius - The border radius of the timepicker. Defaults to var(--dds-radius-base).\n * @cssproperty --dds-timepicker-text-color - The text color of the timepicker. Defaults to var(--dds-text-neutral-base).\n * @cssproperty --dds-timepicker-placeholder-color - The placeholder text color. Defaults to var(--dds-text-neutral-subtle).\n * @cssproperty --dds-timepicker-disabled-background - The background color when disabled. Defaults to var(--dds-background-neutral-stronger).\n * @cssproperty --dds-timepicker-disabled-text - The text color when disabled. Defaults to var(--dds-text-neutral-disabled).\n * @cssproperty --dds-timepicker-error-border - The border color for error state. Defaults to var(--dds-border-negative-base).\n * @cssproperty --dds-timepicker-success-border - The border color for success state. Defaults to var(--dds-border-positive-base).\n * @cssproperty --dds-timepicker-icon-color - The color of the icons. Defaults to var(--dds-text-icon-neutral-subtle).\n * @cssproperty --dds-timepicker-clear-icon-color - The color of the clear icon. Defaults to var(--dds-button-subtle-icon-neutral-enabled).\n * @cssproperty --dds-timepicker-popup-background - The background color of the popup. Defaults to var(--dds-background-neutral-subtle).\n * @cssproperty --dds-timepicker-popup-shadow - The box shadow of the popup. Defaults to 0 4px 6px -1px rgb(0 0 0 / 8%), 0 2px 4px -1px rgb(0 0 0 / 6%).\n *\n * @cssproperty --dds-timepicker-padding-xs - The padding for extra small size. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-timepicker-padding-sm - The padding for small size. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-timepicker-padding-lg - The padding for large size. Defaults to var(--dds-spacing-300).\n * @cssproperty --dds-timepicker-padding-horizontal - The horizontal padding. Defaults to var(--dds-spacing-300).\n * @cssproperty --dds-timepicker-padding-vertical - The vertical padding. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-timepicker-gap - The gap between elements. Defaults to var(--dds-spacing-100).\n * @cssproperty --dds-timepicker-icon-gap - The gap between icons. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-timepicker-action-gap - The gap between action elements. Defaults to var(--dds-spacing-200).\n * @cssproperty --dds-timepicker-action-padding - The padding for action elements. Defaults to var(--dds-spacing-300).\n * @cssproperty --dds-timepicker-clear-icon-width - The width of the clear icon. Defaults to var(--dds-spacing-800).\n * @cssproperty --dds-timepicker-dropdown-icon-right - The right position of the dropdown icon. Defaults to var(--dds-spacing-600).\n * @cssproperty --dds-timepicker-min-width - The minimum width of the timepicker. Defaults to 7.5rem.\n *\n */\n@customElement('dap-ds-timepicker')\nexport default class DapDSTimePicker extends GenericFormElement {\n  @query('#input') private readonly triggerInput!: HTMLInputElement\n  @query('#time-grid') private readonly timeGrid!: DapDSTimeGrid\n\n  // Internal storage for the Dayjs time value\n  private _timeValue?: Dayjs\n\n  // The selected time value (Dayjs object) - internal use only\n  private get timeValue(): Dayjs | undefined {\n    return this._timeValue\n  }\n\n  private set timeValue(value: Dayjs | undefined) {\n    this._timeValue = value\n  }\n\n  /** The minimum time of the timepicker. This time will be the minimum selectable time.\n   * @type {string}\n   * @default '00:00'\n   */\n  @property({ type: String }) minTime = '00:00'\n\n  /** The maximum time of the timepicker. This time will be the maximum selectable time.\n   * @type {string}\n   * @default '23:59'\n   */\n  @property({ type: String }) maxTime = '23:59'\n\n  /** The step interval in minutes for the time input.\n   * @type {number}\n   * @default 5\n   */\n  @property({ type: Number }) step = 5\n\n  /** The placement of the dropdown of the timepicker.\n   * @type {'top-start' | 'top' | 'top-end' | 'right-start' | 'right' | 'right-end' | 'bottom-start' | 'bottom' | 'bottom-end' | 'left-start' | 'left' | 'left-end'}\n   */\n  @property({ reflect: true }) placement: PopupPlacement = 'bottom-start'\n\n  /** The open state of the timepicker. */\n  @property({ type: Boolean, reflect: true }) opened = false\n\n  /** Whether the time picker should open on typing. */\n  @property({ type: Boolean }) openTimeOnInput = false\n\n  /** Whether the time picker should send an empty event on typing. */\n  @property({ type: Boolean }) sendEmptyEventOnInput = false\n\n  /** The placeholder of the timepicker. */\n  @property() placeholder: string | null\n\n  /** The loading state of the timepicker. */\n  @property({ type: Boolean }) loading?: boolean = false\n\n  /** The format of the timepicker. This is the time format used for display and validation.\n   * @type {string}\n   * @default 'HH:mm'\n   */\n  @property({ type: String }) format = 'HH:mm'\n\n  /** Whether the clear button should be shown. */\n  @property({ type: String }) clearButton?: string = 'true'\n\n  /** The aria label of the clear button. */\n  @property({ type: String }) clearButtonAriaLabel?: string\n\n  /** The floating strategy of the timepicker. */\n  @property({ type: String }) floatingStrategy: FloatingStrategy = 'fixed'\n\n  /** The locale of the timepicker. By default it uses the global locale from dayjs.\n   * @type {'hu' | 'en'}\n   */\n  @property({ type: String }) locale: string = dayjs.locale()\n\n  /** Whether the dropdown should close when a time is selected. */\n  @property({ type: Boolean }) closeOnSelection = false\n\n  @state() private setValueState: boolean = true\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n\n    // Sync internal timeValue with public value\n    this.syncTimeValue()\n\n    if (this.timeValue) {\n      this.triggerInput.value = this.getFormattedValue()\n      this.updateTimeGridSelection()\n    }\n  }\n\n  // Override attributeChangedCallback to sync internal state when value changes\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n    super.attributeChangedCallback(name, oldValue, newValue)\n\n    if (name === 'value' && newValue !== oldValue) {\n      this.syncTimeValue()\n      this.requestUpdate()\n    }\n  }\n\n  // Sync internal _timeValue with public value property\n  private syncTimeValue() {\n    if (this.value) {\n      this._timeValue = dayjs(`2000-01-01 ${this.value}`)\n    } else {\n      this._timeValue = undefined\n    }\n  }\n\n  protected updated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.updated(_changedProperties)\n\n    if (_changedProperties.has('value')) {\n      if (this.setValueState) {\n        this.triggerInput.value = this.getFormattedValue()\n        this.updateTimeGridSelection()\n      }\n      this.setValidity()\n    }\n\n    if (_changedProperties.has('step') && this.timeGrid) {\n      this.timeGrid.step = this.step\n    }\n\n    if (_changedProperties.has('minTime') && this.timeGrid) {\n      this.timeGrid.minTime = this.minTime\n    }\n\n    if (_changedProperties.has('maxTime') && this.timeGrid) {\n      this.timeGrid.maxTime = this.maxTime\n    }\n\n    if (_changedProperties.has('locale') && this.timeGrid) {\n      this.timeGrid.locale = this.locale\n    }\n  }\n\n  private updateTimeGridSelection() {\n    if (this.timeValue && this.timeGrid) {\n      this.timeGrid.selectedHour = this.timeValue.hour()\n      this.timeGrid.selectedMinute = this.timeValue.minute()\n    }\n  }\n\n  private getHourValue(): number {\n    return this.timeValue ? this.timeValue.hour() : 12\n  }\n\n  private getMinuteValue(): number {\n    return this.timeValue ? this.timeValue.minute() : 0\n  }\n\n  getFormattedValue() {\n    if (!this.timeValue) {\n      return ''\n    }\n\n    return dayjs(this.timeValue).format(this.format)\n  }\n\n  isValidTime(value: string) {\n    if (!value) {\n      return false\n    }\n\n    // Check if the time format is valid\n    const timeRegex = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/\n    if (!timeRegex.test(value)) {\n      return false\n    }\n\n    // Check if time is within min/max range\n    const inputTime = dayjs(`2000-01-01 ${value}`)\n    const minTime = dayjs(`2000-01-01 ${this.minTime}`)\n    const maxTime = dayjs(`2000-01-01 ${this.maxTime}`)\n\n    return (\n      inputTime.isSame(minTime) ||\n      (inputTime.isAfter(minTime) && inputTime.isBefore(maxTime)) ||\n      inputTime.isSame(maxTime)\n    )\n  }\n\n  isValueValid() {\n    if (!this.timeValue) {\n      return true\n    }\n\n    return this.isInputValid()\n  }\n\n  isInputValid() {\n    return this.isValidTime(this.triggerInput.value)\n  }\n\n  setValue(\n    value?: Dayjs,\n    setInputValue: boolean = true,\n    sendEmptyEventOnInput: boolean = true,\n  ) {\n    this._timeValue = value\n    // Update the public value property to trigger form mixin\n    this.value = value ? value.format('HH:mm') : null\n\n    if (setInputValue) {\n      this.setValueState = true\n      this.triggerInput.value = this.getFormattedValue()\n      this.updateTimeGridSelection()\n    } else {\n      this.setValueState = false\n    }\n\n    this.setValidity()\n\n    if (this.closeOnSelection) {\n      this.hideTimePicker()\n    }\n\n    if (sendEmptyEventOnInput) {\n      this.emit('dds-change', {\n        value: this.timeValue,\n        hour: this.timeValue?.hour(),\n        minute: this.timeValue?.minute(),\n      })\n      this.emit('dds-valid-time', {\n        value: this.triggerInput.value,\n        hour: this.timeValue?.hour(),\n        minute: this.timeValue?.minute(),\n      })\n    }\n  }\n\n  async clearSelection() {\n    this.setValue(undefined, true, true)\n  }\n\n  private readonly handleDocumentMouseDown = (event: MouseEvent) => {\n    const path = event.composedPath()\n    if (this && !path.includes(this)) {\n      this.hideTimePicker()\n    }\n  }\n\n  private readonly handleInput = (event: InputEvent) => {\n    const input = event.target as HTMLInputElement\n\n    if (!input.value) {\n      this.setValue(undefined, false, true)\n    } else {\n      if (this.isInputValid()) {\n        const time = dayjs(`2000-01-01 ${input.value}`)\n        this.setValue(time, false)\n        this.emit('dds-valid-time', {\n          value: input.value,\n          type: 'valid',\n          minute: time.minute(),\n          hour: time.hour(),\n        })\n      } else {\n        this.setValue(undefined, false, this.sendEmptyEventOnInput)\n        this.emit('dds-invalid-time', {\n          value: input.value,\n          type: 'invalid',\n          hour: input.value.split(':')[0],\n          minute: input.value.split(':')[1],\n        })\n      }\n    }\n\n    if (this.openTimeOnInput && !this.opened) {\n      this.showTimePicker()\n    }\n\n    this.emit('dds-input', { value: input.value })\n  }\n\n  private readonly handleKeyDown = async (event: KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      return\n    }\n\n    if (\n      event.key === 'Enter' ||\n      event.key === 'ArrowDown' ||\n      event.key === 'ArrowUp'\n    ) {\n      event.preventDefault()\n      event.stopPropagation()\n\n      if (!this.opened) {\n        this.showTimePicker()\n      } else {\n        this.hideTimePicker()\n      }\n    }\n  }\n\n  public get focusElement() {\n    return this.triggerInput\n  }\n\n  private readonly handleClick = () => {\n    if (!this.opened) {\n      this.showTimePicker()\n    } else {\n      this.hideTimePicker()\n    }\n  }\n\n  private readonly handleClearClick = () => {\n    if (!this.disabled) {\n      this.clearSelection()\n\n      this.triggerInput.focus()\n      this.setValidity()\n\n      this.hideTimePicker()\n\n      this.emit('dds-clear')\n    }\n  }\n\n  private readonly handleTimeChange = (event: CustomEvent<TimeSelection>) => {\n    const { hour, minute } = event.detail\n    const time = dayjs().hour(hour).minute(minute).second(0).millisecond(0)\n    this.setValue(time, true, true)\n  }\n\n  async showTimePicker() {\n    if (this.disabled || this.readonly || this.opened) {\n      return\n    }\n\n    this.opened = true\n\n    document.addEventListener('mousedown', this.handleDocumentMouseDown)\n  }\n\n  async hideTimePicker() {\n    if (!this.opened) {\n      return\n    }\n\n    this.opened = false\n\n    document.removeEventListener('mousedown', this.handleDocumentMouseDown)\n\n    await this.updateComplete\n    this.focus()\n  }\n\n  private readonly handleFocus = () => {\n    this.emit('dds-focus')\n  }\n\n  private readonly handleBlur = () => {\n    this.emit('dds-blur')\n  }\n\n  private readonly handlePopupOpened = () => {\n    // When popup opens, scroll to selected time in the grid\n    if (this.timeGrid) {\n      // Use requestAnimationFrame to ensure the popup is fully visible\n      requestAnimationFrame(() => {\n        this.timeGrid.scrollToSelectedTime()\n      })\n    }\n  }\n\n  // custom validation\n  getValidity() {\n    return !!this.value\n  }\n\n  get validity(): ValidityState {\n    if (this.internals.validity) {\n      return this.internals.validity\n    } else {\n      return getValidityStateObject({\n        valueMissing: this.required && !this.getValidity(),\n        patternMismatch: !this.isValueValid(),\n      })\n    }\n  }\n\n  checkValidity() {\n    return this.required && this.getValidity() && this.isValueValid()\n  }\n\n  reportValidity() {\n    return this.required && this.getValidity() && this.isValueValid()\n  }\n\n  setValidity() {\n    if (!this.checkValidity()) {\n      this.internals.setValidity(\n        {\n          valueMissing: this.required && !this.getValidity(),\n          patternMismatch: !this.isValueValid(),\n        },\n        this.validationMessage,\n        this.triggerInput,\n      )\n    } else {\n      this.internals.setValidity({})\n    }\n  }\n\n  handleInvalid(event: Event) {\n    event.preventDefault()\n  }\n\n  render() {\n    return html` <div class=\"label-container\">\n        ${this.label &&\n        html`<dap-ds-form-label\n          part=\"label\"\n          id=\"label\"\n          .size=${this.size}\n          .required=${this.required}\n          .optional=${this.optional}\n          .disabled=${this.disabled}\n          class=${clsx('label')}\n          for=\"input\"\n          label=${ifDefined(this.label)}>\n        </dap-ds-form-label>`}\n        ${this.tooltip &&\n        html` <dap-ds-tooltip\n          part=\"tooltip\"\n          content=${this.tooltip}\n          mode=\"toggle\"\n          placement=${this.tooltipPlacement}>\n          <dap-ds-icon-button\n            slot=\"trigger\"\n            size=${this.size as 'xs' | 'sm' | 'md' | 'lg'}\n            iconSize=${this.size === 'xs' ? '16' : '22'}\n            clean>\n            <dap-ds-icon\n              name=\"information-line\"\n              aria-label=${this.tooltipAriaLabel}\n              class=\"info-button\"></dap-ds-icon>\n          </dap-ds-icon-button>\n        </dap-ds-tooltip>`}\n      </div>\n      ${this.description &&\n      html`\n        <dap-ds-typography\n          part=\"description\"\n          variant=\"description\"\n          size=${ifDefined(this.size as CommonFormElementSize)}\n          id=\"description\">\n          ${this.description}\n        </dap-ds-typography>\n      `}\n      <div>\n        <dap-ds-popup\n          part=\"base\"\n          class=\"select-popup\"\n          overflow\n          ?opened=${this.opened}\n          ?hasArrow=${false}\n          placement=${this.placement}\n          floatingStrategy=${this.floatingStrategy}\n          maxHeight=\"auto\"\n          offset=\"4\"\n          @dds-opened=${this.handlePopupOpened}>\n          <div\n            slot=\"trigger\"\n            part=\"trigger\"\n            class=\"${clsx('select', `select--${this.size}`, {\n              'select--disabled': this.disabled,\n              'select--readonly': this.readonly,\n              'select--opened': this.opened,\n              'select--loading': this.loading,\n              'select--success': this.status === 'success',\n              'select--error': this.status === 'error',\n            })}\">\n            <input\n              part=\"input\"\n              role=\"combobox\"\n              class=\"${clsx('input', `input--${this.size}`, {\n                'input--disabled': this.disabled,\n                'input--readonly': this.readonly,\n              })}\"\n              id=\"input\"\n              value=${this.getFormattedValue()}\n              aria-expanded=${this.opened}\n              aria-haspopup=\"dialog\"\n              aria-labelledby=${ifDefined(this.label ? 'label' : nothing)}\n              aria-describedby=\"${ifDefined(\n                this.description ? 'description' : nothing,\n              )} ${ifDefined(this.feedback ? 'feedback' : nothing)}\"\n              aria-disabled=${this.disabled}\n              aria-controls=\"time-grid\"\n              aria-autocomplete=\"none\"\n              ?required=${this.required}\n              ?readonly=${this.readonly}\n              ?autofocus=${this.autofocus}\n              ?disabled=${this.disabled}\n              autocomplete=${this.autocomplete as any}\n              placeholder=${ifDefined(this.placeholder ?? '')}\n              @blur=${this.handleBlur}\n              @focus=${this.handleFocus}\n              @input=${this.handleInput}\n              @keydown=${this.handleKeyDown}\n              @invalid=${this.handleInvalid}\n              @click=${this.handleClick} />\n            <div\n              class=\"${clsx('select-action', `select-action--${this.size}`, {\n                'select-action--disabled': this.disabled,\n                'select-action--readonly': this.readonly,\n                'select-action--opened': this.opened,\n              })}\">\n              ${this.clearButton === 'true' && !this.readonly\n                ? html`<div class=\"${clsx('clear-icon')}\">\n                    <dap-ds-icon-button\n                      icon=\"close-line\"\n                      part=\"clear-button\"\n                      aria-label=${ifDefined(\n                        this.clearButtonAriaLabel ?? translate('clear'),\n                      )}\n                      ?disabled=${this.disabled}\n                      @click=${this.handleClearClick}></dap-ds-icon-button>\n                  </div>`\n                : nothing}\n              <div\n                class=\"${clsx('indicator-icon', {\n                  'indicator-icon--loading': this.loading,\n                })}\">\n                ${this.loading\n                  ? html`<dap-ds-icon-loading-spinner></dap-ds-icon-loading-spinner>`\n                  : html`<dap-ds-icon-time-line\n                      aria-hidden=\"true\"\n                      part=\"time-button\"\n                      class=${clsx('time-icon')}\n                      @click=${this.handleClick}></dap-ds-icon-time-line>`}\n              </div>\n            </div>\n          </div>\n          <dap-ds-time-grid\n            id=\"time-grid\"\n            part=\"time-grid\"\n            .selectedHour=${this.getHourValue()}\n            .selectedMinute=${this.getMinuteValue()}\n            .minTime=${this.minTime}\n            .maxTime=${this.maxTime}\n            .step=${this.step}\n            .locale=${this.locale}\n            @dds-change=${(event: CustomEvent<TimeSelection>) => {\n              event.stopPropagation()\n              event.preventDefault()\n              this.handleTimeChange(event)\n            }}>\n          </dap-ds-time-grid>\n        </dap-ds-popup>\n        ${this.feedback &&\n        html`<dap-ds-feedback\n          part=\"feedback\"\n          feedbackType=${ifDefined(this.feedbackType)}\n          feedbackSize=\"${ifDefined(this.size as 'lg' | 'sm' | 'xs')}\"\n          id=\"feedback\">\n          ${this.feedback}\n        </dap-ds-feedback>`}\n      </div>`\n  }\n}\n","import clsx from 'clsx'\nimport { PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\n\nimport { anchorClass } from '@/common/const'\nimport { DdsElement } from '@/internal/dds-hu-element'\nimport { SizedMixin } from '@/internal/mixin/sizedMixin'\nimport { t } from '@/localization/localization'\n\nimport styles from './toc.scss?inline'\n\ntype Heading = { level: number; id: any; text: any }\n\n/**\n * `dap-ds-toc`\n * @summary A table of contents (TOC) is a list of links that allows users to quickly navigate to sections within a document.\n * @element dap-ds-toc\n * @title - toc\n *\n * @property {'sm' | 'lg'} size - The size of the toc. Default is `lg`.\n *\n * @event {{ selectedItem: HTMLAnchorElement, anchorElement: IntersectionObserverEntry | HTMLElement }} dds-anchor-change - Event that is triggered when the anchor changes.\n *\n * @csspart base - The main container of the toc.\n *\n * @cssproperty --dds-toc-border-width - Width of the TOC border. Default: var(--dds-border-width-base)\n * @cssproperty --dds-toc-border-color - Color of the TOC border. Default: var(--dds-border-neutral-divider)\n * @cssproperty --dds-toc-title-color - Color of the TOC title. Default: var(--dds-text-neutral-strong)\n * @cssproperty --dds-toc-title-font-size - Font size of the TOC title. Default: var(--dds-font-base)\n * @cssproperty --dds-toc-title-font-weight - Font weight of the TOC title. Default: var(--dds-font-weight-bold)\n * @cssproperty --dds-toc-title-line-height - Line height of the TOC title. Default: 1.25\n * @cssproperty --dds-toc-link-color - Color of the TOC links. Default: var(--dds-button-subtle-text-neutral-enabled)\n * @cssproperty --dds-toc-link-active-color - Color of the active TOC link. Default: var(--dds-button-subtle-text-enabled)\n * @cssproperty --dds-toc-link-border-color - Border color of the active TOC link. Default: var(--dds-border-brand-base)\n * @cssproperty --dds-toc-link-line-height - Line height of the TOC links. Default: 1.2\n * @cssproperty --dds-toc-link-padding - Padding of the TOC links. Default: var(--dds-spacing-200)\n */\n@customElement('dap-ds-toc')\nexport default class DapDSTOC extends SizedMixin(DdsElement) {\n  /** The root element to observe [`IntersectionObserver`](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#root) */\n  @property() root: string = ''\n\n  /** The margin around the root element to observe [`IntersectionObserver`](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#rootmargin) */\n  @property() rootMargin: string = '0px 0px -80% 0px'\n\n  /** The margin around the last anchor to observe [`IntersectionObserver`](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#rootmargin) */\n  @property() lastAnchorRootMargin: string = '0px 0px -50% 0px'\n  /** The threshold to trigger [`IntersectionObserver`](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#threshold) */\n  @property({ type: Array }) threshold: number[] = [0, 0.1, 0.25, 0.5, 0.75, 1]\n\n  /** The minimum heading level to include in the TOC. The default value is `2`. */\n  @property({ type: Number }) minHeadingLevel: number = 2\n\n  /** The maximum heading level to include in the TOC. The default value is `3`. */\n  @property({ type: Number }) maxHeadingLevel: number = 3\n\n  /** Whether to indent the TOC items. */\n  @property({ type: Boolean }) noIndent: boolean = false\n\n  /** The header of the TOC. */\n  @property() header: string\n\n  private _observer: IntersectionObserver\n  private _lastAnchorObserver: IntersectionObserver\n  private _anchors: HTMLElement[]\n  private _activeAnchor: HTMLAnchorElement\n  private _selectors: string[] = []\n  private _items: Heading[]\n  private _intersectionData: Map<\n    HTMLElement,\n    {\n      isIntersecting: boolean\n      intersectionRatio: number\n      boundingRect: DOMRect\n    }\n  > = new Map()\n  private _debounceTimer: number | null = null\n\n  static readonly styles = unsafeCSS(styles)\n\n  constructor() {\n    super()\n    this.size = 'lg'\n    // Use multiple thresholds for more precise intersection detection\n    this.threshold = [0.1]\n  }\n\n  get activeAnchor() {\n    return this._activeAnchor\n  }\n\n  get anchors() {\n    return this._anchors\n  }\n\n  get items() {\n    return this._items\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n\n    const options = {\n      root: this.root ? document.querySelector(this.root) : null,\n      rootMargin: this.rootMargin,\n      threshold: this.threshold,\n    }\n\n    this._observer = new IntersectionObserver(this._handleIntersect, options)\n\n    this._lastAnchorObserver = new IntersectionObserver(this._handleIntersect, {\n      ...options,\n      rootMargin: this.lastAnchorRootMargin,\n    })\n\n    window.addEventListener('scroll', this.onScroll)\n  }\n\n  protected async firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): Promise<void> {\n    super.firstUpdated(_changedProperties)\n    await this.renderTree()\n  }\n\n  async attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n    super.attributeChangedCallback(name, oldValue, newValue)\n    await this.renderTree()\n  }\n\n  async updated(changedProperties: Map<PropertyKey, unknown>) {\n    super.updated(changedProperties)\n    await this.renderTree()\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback()\n    if (this._observer) {\n      this._observer?.disconnect()\n      this._lastAnchorObserver?.disconnect()\n      window.removeEventListener('scroll', this.onScroll)\n    }\n  }\n\n  private readonly onScroll = () => {\n    if (\n      this._anchors &&\n      this._anchors.length > 0 &&\n      Math.round(window.scrollY + window.innerHeight) ===\n        document.body.scrollHeight\n    ) {\n      const entry = this._anchors[this._anchors.length - 1]\n      const link = this.shadowRoot!.querySelector(`[href=\"#${entry.id}\"`)\n      if (link) {\n        this.setActiveAnchor(link as HTMLAnchorElement, link as HTMLElement)\n      }\n    }\n  }\n\n  async renderTree() {\n    this._anchors = this.getAnchors(\n      !this.minHeadingLevel ? 2 : this.minHeadingLevel,\n      !this.maxHeadingLevel ? 3 : this.maxHeadingLevel,\n    )\n\n    if (this._anchors.length === 0 || !this._anchors) {\n      return\n    }\n\n    this._anchors.forEach((anchor, index) => {\n      if (index === this._anchors.length - 1)\n        this._lastAnchorObserver?.observe(anchor)\n      else {\n        this._observer?.observe(anchor)\n      }\n    })\n\n    this._items = await this.getHeaders()\n    const tree = this.buildTree(this._items)\n\n    const baseElement = document.createElement('div')\n    baseElement.setAttribute('part', 'base')\n    baseElement.classList.add('toc')\n\n    const base = `\n        <span class=\"toc-title toc-title--${this.size}\">${this.header ?? t('tocTitle')}</span>\n        <nav aria-label='${this.header ?? t('tocTitle')}''>${tree}</nav>`\n\n    baseElement.innerHTML = base\n\n    if (!this.shadowRoot) return\n\n    this.shadowRoot.removeChild(this.shadowRoot.childNodes[0])\n    this.shadowRoot.appendChild(baseElement)\n  }\n\n  getAnchors(minHeadingLevel: number, maxHeadingLevel: number): HTMLElement[] {\n    this._selectors = []\n    for (let i = minHeadingLevel; i <= maxHeadingLevel; i += 1) {\n      this._selectors.push(`h${i}.${anchorClass}`)\n      this._selectors.push(`dap-ds-typography[variant=h${i}][anchor]`)\n    }\n\n    return Array.from(document.querySelectorAll(this._selectors.join()))\n  }\n\n  setActiveAnchor(\n    element: HTMLAnchorElement,\n    entry: IntersectionObserverEntry | HTMLElement,\n  ) {\n    this._activeAnchor?.removeAttribute('aria-current')\n    element.setAttribute('aria-current', 'true')\n    this._activeAnchor = element\n\n    this.emit('dds-anchor-change', {\n      selectedItem: element,\n      anchorElement: entry,\n    })\n  }\n\n  private readonly getHeaders = async () => {\n    const headers: Heading[] = []\n\n    await this._anchors.forEach(async (el, index) => {\n      await (el as any).updateComplete\n\n      const textContent =\n        el.getAttribute('data-text') ||\n        el.innerText?.trim() ||\n        el.textContent?.trim() ||\n        ''\n      const id =\n        el.id ||\n        el.innerText?.toLowerCase().split(' ').join('-') ||\n        textContent.toLowerCase().split(' ').join('-')\n\n      if (!el.id && id) {\n        let count = 0\n\n        if (this._anchors.some(anchor => anchor.id === id)) {\n          count++\n        }\n\n        while (this._anchors.some(anchor => anchor.id === `${id}-${count}`)) {\n          count++\n        }\n\n        if (count === 0) {\n          el.setAttribute('id', id)\n        } else {\n          el.setAttribute('id', `${id}-${count}`)\n        }\n      }\n\n      let level = this._selectors.indexOf(\n        `${el.tagName.toLowerCase()}.${anchorClass}`,\n      )\n\n      if (level === -1) {\n        level = this._selectors.indexOf(\n          `dap-ds-typography[variant=${el.getAttribute('variant')}][anchor]`,\n        )\n      }\n\n      headers[index] = {\n        id,\n        text: textContent,\n        level: Math.floor(level / 2),\n      }\n    })\n\n    return headers\n  }\n\n  buildTree(headers: any[]) {\n    const list: string[] = []\n    let nextLevelHeaders: any[] = []\n    let lastLevel = -1\n\n    if (headers.length === 0) {\n      return ''\n    }\n\n    const buildSubTree = () => {\n      if (nextLevelHeaders.length > 0) {\n        list[list.length - 1] += this.buildTree(nextLevelHeaders)\n      }\n    }\n\n    headers.forEach((h: Heading) => {\n      if (lastLevel !== -1 && lastLevel < h.level) {\n        nextLevelHeaders.push(h)\n        return\n      }\n\n      buildSubTree()\n\n      lastLevel = h.level\n      list.push(\n        `<a href=\"#${h.id}\" class=\"toc-link toc-link--${this.size}\">${h.text}<span class=\"toc-link__high-contrast\"></span></a>`,\n      )\n      nextLevelHeaders = []\n    })\n\n    buildSubTree()\n\n    const listHTML = list\n      .map(\n        i => `<li class=\"toc-item ${'toc-item-level-' + lastLevel}\">${i}</li>`,\n      )\n      .join('')\n\n    return `<ul class=\"${clsx({\n      'toc--no-indent': this.noIndent,\n    })}\">${listHTML}</ul>`\n  }\n\n  private readonly _handleIntersect = (\n    entries: IntersectionObserverEntry[],\n  ) => {\n    // Update intersection data for all entries\n    entries.forEach(entry => {\n      this._intersectionData.set(entry.target as HTMLElement, {\n        isIntersecting: entry.isIntersecting,\n        intersectionRatio: entry.intersectionRatio,\n        boundingRect: entry.boundingClientRect,\n      })\n    })\n\n    // Debounce the active anchor selection to prevent rapid changes\n    if (this._debounceTimer) {\n      clearTimeout(this._debounceTimer)\n    }\n\n    this._debounceTimer = window.setTimeout(() => {\n      this._updateActiveAnchor()\n    }, 50) // 50ms debounce\n  }\n\n  private readonly _updateActiveAnchor = () => {\n    const viewportCenter = window.innerHeight / 2\n    let bestAnchor: HTMLElement | null = null\n    let bestScore = -Infinity\n\n    // Find the best anchor based on intersection ratio and distance from viewport center\n    this._intersectionData.forEach((data, anchor) => {\n      if (!data.isIntersecting) return\n\n      const distanceFromCenter = Math.abs(\n        data.boundingRect.top + data.boundingRect.height / 2 - viewportCenter,\n      )\n      const intersectionScore = data.intersectionRatio\n\n      // Calculate a score that prioritizes elements closer to viewport center\n      // and with higher intersection ratios\n      const score =\n        intersectionScore - (distanceFromCenter / window.innerHeight) * 0.5\n\n      if (score > bestScore) {\n        bestScore = score\n        bestAnchor = anchor as HTMLElement\n      }\n    })\n\n    if (bestAnchor && (bestAnchor as HTMLElement).id) {\n      const link = this.shadowRoot!.querySelector(\n        `[href=\"#${(bestAnchor as HTMLElement).id}\"`,\n      )\n      if (link && link !== this._activeAnchor) {\n        this.setActiveAnchor(\n          link as HTMLAnchorElement,\n          bestAnchor as HTMLElement,\n        )\n      }\n    }\n  }\n}\n","import clsx from 'clsx'\nimport { PropertyValues, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html } from 'lit/static-html.js'\n\nimport { GenericFormElement } from '@/internal/mixin/genericFormElement'\n\nimport { ButtonShape, ButtonSize } from '../../common/types'\nimport styles from './_styles/toggle-button.scss?inline'\n\n/**\n * `dap-ds-toggle-button` is a custom toggle button component.\n * @element dap-ds-toggle-button\n * @summary A toggle button is a button that can be toggled on (active) or off (inactive).\n * @title - Toggle button\n *\n * @slot - The content of the toggle button.\n *\n * @csspart base - The main button container.\n * @csspart high-contrast - The high contrast part of the button.\n *\n * @cssproperty --dds-toggle-button-min-width-lg - Minimum width of the large toggle button\n * @cssproperty --dds-toggle-button-min-width-md - Minimum width of the medium toggle button\n * @cssproperty --dds-toggle-button-min-width-sm - Minimum width of the small toggle button\n * @cssproperty --dds-toggle-button-min-width-xs - Minimum width of the extra small toggle button\n * @cssproperty --dds-toggle-button-height-lg - Height of the large toggle button\n * @cssproperty --dds-toggle-button-height-md - Height of the medium toggle button\n * @cssproperty --dds-toggle-button-height-sm - Height of the small toggle button\n * @cssproperty --dds-toggle-button-height-xs - Height of the extra small toggle button\n * @cssproperty --dds-toggle-button-padding-lg - Padding of the large toggle button\n * @cssproperty --dds-toggle-button-padding-md - Padding of the medium toggle button\n * @cssproperty --dds-toggle-button-padding-sm - Padding of the small toggle button\n * @cssproperty --dds-toggle-button-padding-xs - Padding of the extra small toggle button\n * @cssproperty --dds-toggle-button-font-size-lg - Font size of the large toggle button\n * @cssproperty --dds-toggle-button-font-size-md - Font size of the medium toggle button\n * @cssproperty --dds-toggle-button-font-size-sm - Font size of the small toggle button\n * @cssproperty --dds-toggle-button-font-size-xs - Font size of the extra small toggle button\n * @cssproperty --dds-toggle-button-border-enabled - Border color in enabled state\n * @cssproperty --dds-toggle-button-background-enabled - Background color in enabled state\n * @cssproperty --dds-toggle-button-content-enabled - Content/text color in enabled state\n * @cssproperty --dds-toggle-button-border-hover - Border color in hover state\n * @cssproperty --dds-toggle-button-background-hover - Background color in hover state\n * @cssproperty --dds-toggle-button-border-pressed - Border color in pressed state\n * @cssproperty --dds-toggle-button-background-pressed - Background color in pressed state\n * @cssproperty --dds-toggle-button-background-selected-enabled - Background color in selected enabled state\n * @cssproperty --dds-toggle-button-content-selected-enabled - Content/text color in selected enabled state\n * @cssproperty --dds-toggle-button-background-selected-hover - Background color in selected hover state\n * @cssproperty --dds-toggle-button-background-selected-pressed - Background color in selected pressed state\n * @cssproperty --dds-toggle-button-border-disabled - Border color in disabled state\n * @cssproperty --dds-toggle-button-background-disabled - Background color in disabled state\n * @cssproperty --dds-toggle-button-content-disabled - Content/text color in disabled state\n * @cssproperty --dds-toggle-button-highcontrast-border - High contrast border color\n * @cssproperty --dds-toggle-button-highcontrast-border-hover - High contrast border color on hover\n */\n@customElement('dap-ds-toggle-button')\nexport default class DapDSToggleButton extends GenericFormElement {\n  /** The size of the button\n   * @type { 'lg' | 'md' | 'sm' | 'xs' }\n   */\n  @property({ reflect: true }) size: ButtonSize = 'md'\n\n  /** Whether the button is active. */\n  @property({ type: Boolean, reflect: true }) active = false\n\n  /** The shape of the button\n   * @type { 'button' | 'circle' }\n   */\n  @property({ reflect: true }) shape: ButtonShape = 'button'\n\n  @property({ type: String }) sizeChildren = 'true'\n\n  static readonly styles = unsafeCSS(styles)\n\n  get focusElement(): HTMLButtonElement {\n    return this.shadowRoot?.querySelector('button') as HTMLButtonElement\n  }\n\n  protected firstUpdated(_changedProperties: PropertyValues): void {\n    super.firstUpdated(_changedProperties)\n\n    if (this.sizeChildren === 'true') {\n      const slot = this.shadowRoot?.querySelector('slot')\n      slot?.assignedElements().forEach(el => {\n        el.setAttribute('size', this.size)\n      })\n    }\n  }\n\n  private handleClick(): void {\n    if (this.disabled) {\n      return\n    }\n  }\n\n  render() {\n    return html`\n      <button\n        part=\"base\"\n        .disabled=${this.disabled}\n        aria-disabled=${this.disabled}\n        aria-label=${ifDefined(this.ariaLabel) || ''}\n        aria-pressed=${this.active}\n        .autofocus=${this.autofocus}\n        type=\"button\"\n        class=${clsx(\n          'toggle-button',\n          `toggle-button--${this.size}`,\n          `toggle-button--${this.shape}`,\n          {\n            'toggle-button--active': this.active,\n            'toggle-button--disabled': this.disabled,\n          },\n        )}\n        @click=${this.handleClick}>\n        <div part=\"high-contrast\" class=\"toggle-button__highcontrast\"></div>\n        <slot></slot>\n      </button>\n    `\n  }\n}\n","import { clsx } from 'clsx'\nimport { PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { PopupPlacement } from '../../common/types'\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './tooltip.scss?inline'\nexport type TooltipMode = 'tooltip' | 'toggle'\n\n/**\n * The distance in pixels between the tooltip and the trigger element.\n */\nconst TOOLTIP_OFFSET = 8\n\n/**\n * `dap-ds-tooltip`\n * @summary A tooltip is a container for tooltip content.\n * @element dap-ds-tooltip\n * @title - Tooltip\n *\n * @slot - The content of the tooltip.\n * @slot trigger - The trigger element of the tooltip.\n *\n * @csspart base - The main tooltip container.\n * @csspart trigger - The trigger element of the tooltip.\n * @csspart popup - The popup of the tooltip.\n * @csspart arrow - The arrow of the tooltip.\n *\n * @cssproperty --dds-tooltip-max-width - The maximum width of the tooltip before its content will wrap.\n * @cssproperty --dds-tooltip-padding - The padding inside the tooltip.\n * @cssproperty --dds-tooltip-border-color - The border color of the tooltip.\n * @cssproperty --dds-tooltip-bg-color - The background color of the tooltip.\n * @cssproperty --dds-tooltip-text-color - The text color of the tooltip.\n * @cssproperty --dds-tooltip-font-size - The font size of the tooltip text.\n * @cssproperty --dds-tooltip-box-shadow - The box shadow of the tooltip.\n */\n@customElement('dap-ds-tooltip')\nexport default class DapDSTooltip extends DdsElement {\n  static readonly styles = unsafeCSS(styles)\n\n  /** The content of the tooltip, supporting text only. */\n  @property() content: string\n\n  /** The position of the tooltip around the trigger element.\n   * @type { 'top' | 'right' | 'bottom' | 'left' }\n   */\n  @property({ reflect: true }) placement: PopupPlacement = 'bottom'\n\n  /** Sets the tooltip to opened by default (will still be closed on closing events). */\n  @property({ type: Boolean, reflect: true }) opened? = false\n\n  /** Sets the tooltip to toggle mode.\n   * @type { 'tooltip' | 'toggle' }\n   */\n  @property() mode?: TooltipMode = 'tooltip'\n\n  /** Hides the arrow of the tooltip. */\n  @property({ type: Boolean, reflect: true }) noArrow? = false\n\n  /** The floating strategy of the tooltip. Default is `absolute`. Can be `absolute` or `fixed`.\n   * @type { 'absolute' | 'fixed' }\n   */\n  @property({ reflect: true })\n  floatingStrategy: 'absolute' | 'fixed' = 'absolute'\n\n  private _trigger: string = 'hover focus'\n\n  /** Sets custom trigger event (hover, focus, click). Default is `hover focus`. */\n  @property()\n  set trigger(value: string) {\n    this._trigger = value\n  }\n  get trigger() {\n    if (!this.mode) {\n      return 'hover focus'\n    }\n\n    if (this.mode === 'toggle') {\n      return 'click'\n    }\n\n    return this._trigger\n  }\n\n  /** @ignore */\n  @state() mouseOverTooltip: boolean = false\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.addEventListener('blur', this.handleBlur, true)\n    this.addEventListener('focus', this.handleFocus, true)\n    this.addEventListener('click', this.handleClick)\n    this.addEventListener('mouseover', this.handleMouseOver)\n    this.addEventListener('mouseout', this.handleMouseOut)\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener('blur', this.handleBlur, true)\n    this.removeEventListener('focus', this.handleFocus, true)\n    this.removeEventListener('click', this.handleClick)\n    this.removeEventListener('mouseover', this.handleMouseOver)\n    this.removeEventListener('mouseout', this.handleMouseOut)\n    super.disconnectedCallback()\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n\n    this.setAttribute('role', 'status')\n  }\n\n  async showTooltip() {\n    if (this.opened) {\n      return\n    }\n\n    this.opened = true\n\n    const trigger = this.querySelector('[slot=\"trigger\"]')\n    if (trigger) {\n      trigger.setAttribute('aria-expanded', 'true')\n    }\n  }\n\n  async hideTooltip() {\n    if (!this.opened) {\n      return\n    }\n\n    this.opened = false\n\n    const trigger = this.querySelector('[slot=\"trigger\"]')\n    if (trigger) {\n      trigger.setAttribute('aria-expanded', 'false')\n    }\n  }\n\n  private readonly handleBlur = () => {\n    if (this.hasTrigger('focus')) {\n      this.hideTooltip()\n    }\n  }\n\n  private readonly handleClick = () => {\n    if (this.hasTrigger('click')) {\n      this.opened && !this.hasTrigger('focus')\n        ? this.hideTooltip()\n        : this.showTooltip()\n    }\n  }\n\n  private readonly handleFocus = () => {\n    if (this.hasTrigger('focus')) {\n      this.showTooltip()\n    }\n  }\n\n  private readonly handleMouseOver = () => {\n    if (this.hasTrigger('hover')) {\n      this.showTooltip()\n    }\n  }\n\n  private readonly handleMouseOut = () => {\n    if (!this.mouseOverTooltip) {\n      if (this.hasTrigger('hover')) {\n        this.hideTooltip()\n      }\n    }\n  }\n\n  private readonly hasTrigger = (triggerType: string) => {\n    const triggers = this.trigger.split(' ')\n    return triggers.includes(triggerType)\n  }\n\n  render() {\n    return html`\n      <dap-ds-popup\n        part=\"base\"\n        role=\"tooltip\"\n        id=\"tooltip\"\n        exportparts=\"\n          popup:base__popup,\n          arrow:base__arrow\n        \"\n        class=${clsx('tooltip', {\n          'tooltip--open': this.opened,\n          'tooltip--tooltip': this.mode === 'tooltip',\n          'tooltip--toggle': this.mode === 'toggle',\n        })}\n        ?opened=${this.opened}\n        placement=${this.placement}\n        offset=${TOOLTIP_OFFSET}\n        floatingStrategy=${this.floatingStrategy}\n        ?hasArrow=${!this.noArrow}\n        @dds-closed=${this.hideTooltip}\n        @dds-opened=${this.showTooltip}>\n        <slot\n          part=\"trigger\"\n          name=\"trigger\"\n          slot=\"trigger\"\n          aria-describedby=\"tooltip\"></slot>\n        ${this.content ? html`${this.content}` : html`<slot></slot>`}\n      </dap-ds-popup>\n    `\n  }\n}\n","import { css, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\n\nimport ModalBaseElement from '../modal/modal-base-element'\nimport style from './tray.scss?inline'\n\n/**\n * `dap-ds-tray`\n * @summary A tray is a container for slide in content.\n * @element dap-ds-tray\n * @title - Tray\n *\n * @property {boolean} open - The open state of the tray.\n * @property {boolean} closeOnEsc - Whether the tray should close on pressing the escape key. Default is true.\n * @property {boolean} closeOnOverlayClick - Whether the tray should close on clicking the overlay. Default is true.\n * @property {string} closeButton - Whether the tray should have a close button. Default is true.\n * @property {string} title - The title of the tray.\n * @property {string} description - The description of the tray.\n * @property {string} okButtonLabel - The label of the OK button.\n * @property {string} cancelButtonLabel - The label of the Cancel button.\n * @property {string} footer - Whether the tray should have a footer. Default is false.\n * @property {string} header - Whether the tray should have a header. Default is false.\n *\n * @event {{ void }} dds-before-open - Fires before the tray opens.\n * @event {{ void }} dds-opened - Fires after the tray opens.\n * @event {{ void }} dds-before-close - Fires before the tray closes.\n * @event {{ void }} dds-closed - Fires after the tray closed.\n * @event {{ void }} dds-close - Fires when the tray is closes. You can prevent the tray from closing by calling `event.preventDefault()`.\n *\n * @slot - The content of the tray.\n * @slot header - The header of the tray.\n * @slot footer - The footer of the tray.\n *\n * @cssproperty --dds-modal-max-block-size - Maximum height of the modal. Default: 80vh.\n * @cssproperty --dds-modal-max-inline-size - Maximum width of the modal. Default: 600px.\n * @cssproperty --dds-modal-padding - Padding inside the modal. Default: var(--dds-spacing-800).\n * @cssproperty --dds-modal-transform-amount - Amount to transform for entrance animation. Default: 2rem.\n * @cssproperty --dds-modal-transition-speed - Speed of transition animations. Default: var(--dds-transition-fast).\n * @cssproperty --dds-modal-transition-timing - Timing function for transitions. Default: var(--dds-easing-ease-in-out).\n * @cssproperty --dds-modal-border-width - Border width of the modal. Default: var(--dds-border-width-base).\n * @cssproperty --dds-modal-border-color - Border color of the modal. Default: var(--dds-border-neutral-divider).\n * @cssproperty --dds-modal-border-radius - Border radius of the modal. Default: var(--dds-radius-large, 16px).\n * @cssproperty --dds-modal-background - Background color of the modal. Default: var(--dds-background-neutral-subtle).\n * @cssproperty --dds-modal-header-margin - Margin below the header. Default: var(--dds-spacing-800).\n * @cssproperty --dds-modal-footer-margin - Margin above the footer. Default: var(--dds-spacing-400).\n * @cssproperty --dds-modal-footer-gap - Gap between footer elements. Default: var(--dds-spacing-400).\n * @cssproperty --dds-modal-close-margin - Margin for the close button. Default: var(--dds-spacing-300).\n * @cssproperty --dds-tray-width-side - Width of the side (left/right) trays. Default: 250px.\n * @cssproperty --dds-tray-min-width-horizontal - Minimum width of the horizontal (top/bottom) trays. Default: 400px.\n * @cssproperty --dds-tray-min-height-horizontal - Minimum height of the horizontal (top/bottom) trays. Default: 300px.\n * @cssproperty --dds-tray-min-height-vertical - Minimum height of the vertical (left/right) trays. Default: 100%.\n * @cssproperty --dds-tray-transform-duration - Duration of the transform animation. Default: 0.3s.\n * @cssproperty --dds-tray-transform-timing - Timing function for the transform animation. Default: ease-in-out.\n *\n * @csspart base - The main tray container.\n * @csspart panel - The panel of the tray.\n * @csspart header - The header of the tray.\n * @csspart footer - The footer of the tray.\n * @csspart body - The body of the tray.\n *\n */\n@customElement('dap-ds-tray')\nexport default class DapDSTray extends ModalBaseElement {\n  /** The placement of the tray.\n   * @type { 'left' | 'right' | 'top' | 'bottom' }\n   */\n  @property({ reflect: true }) placement: 'left' | 'right' | 'top' | 'bottom' =\n    'bottom'\n\n  constructor() {\n    super()\n    this.footer = 'false'\n    this.header = 'false'\n\n    if (this.title) {\n      this.header = 'true'\n    }\n  }\n\n  static readonly styles = css`\n    ${unsafeCSS(ModalBaseElement.styles)}\n    ${unsafeCSS(style)}\n  `\n\n  render() {\n    return this.renderModal()\n  }\n}\n","import { cva } from 'class-variance-authority'\nimport { clsx } from 'clsx'\nimport { PropertyValueMap, unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ifDefined } from 'lit/directives/if-defined.js'\nimport { html, unsafeStatic } from 'lit/static-html.js'\n\nimport { anchorClass } from '@/common/const'\n\nimport { Common, Size } from '../../common/types'\nimport { DdsElement } from '../../internal/dds-hu-element'\nimport styles from './_styles/typography.scss?inline'\n\nexport type TypographyVariant =\n  | 'h1'\n  | 'h2'\n  | 'h3'\n  | 'h4'\n  | 'h5'\n  | 'h6'\n  | 'body'\n  | 'caption'\n  | 'description'\n\nexport type TypographySize =\n  | Extract<Size, 'lg' | 'md' | 'sm'>\n  | null\n  | undefined\n\ntype HeadingProps = {\n  variant: Extract<TypographyVariant, 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'>\n  size?: TypographySize\n}\n\ntype BodyProps = {\n  variant: Extract<TypographyVariant, 'body'>\n  size: TypographySize\n}\n\ntype CaptionProps = {\n  variant: Extract<TypographyVariant, 'caption'>\n  size: never\n}\n\ntype DescriptionProps = {\n  variant: Extract<TypographyVariant, 'description'>\n  size: Extract<TypographySize, 'lg' | 'sm'>\n}\n\nexport type TypographyProps =\n  | HeadingProps\n  | BodyProps\n  | CaptionProps\n  | DescriptionProps\n\nconst typographyStyles = cva('typography', {\n  variants: {\n    variant: {\n      h1: 'heading typography-h1',\n      h2: 'heading typography-h2',\n      h3: 'heading typography-h3',\n      h4: 'heading typography-h4',\n      h5: 'heading typography-h5',\n      h6: 'heading typography-h6',\n      body: 'typography-body',\n      caption: 'typography-caption',\n      description: 'typography-description',\n    },\n    size: {\n      lg: 'typography-size-lg',\n      md: 'typography-size-md',\n      sm: 'typography-size-sm',\n      xs: 'typography-size-xs',\n    },\n  },\n  compoundVariants: [\n    {\n      variant: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n      class: '',\n    },\n    {\n      variant: 'description',\n      size: 'lg',\n      class: 'typography-description-lg',\n    },\n    {\n      variant: 'description',\n      size: 'sm',\n      class: 'typography-description-sm',\n    },\n  ],\n})\n\n/**\n * @element dap-ds-typography\n * @summary Typography is used to display text in different styles.\n * @title - Typography\n *\n * @slot default - The content of the typography.\n *\n * @csspart base - The main typography container.\n *\n * @cssproperty --dds-text-color - The color of the typography.\n * @cssproperty --dds-text-heading-color - The color of the heading typography.\n * @cssproperty --dds-text-description-subtle - The color of the subtle typography.\n * @cssproperty --dds-text-font-family - The font family of the typography.\n * @cssproperty --dds-text-font-weight-medium - The font weight of the medium typography.\n * @cssproperty --dds-text-font-weight-bold - The font weight of the bold typography.\n * @cssproperty --dds-text-font-size-h1 - The font size of the h1 typography.\n * @cssproperty --dds-text-font-size-h2 - The font size of the h2 typography.\n * @cssproperty --dds-text-font-size-h3 - The font size of the h3 typography.\n * @cssproperty --dds-text-font-size-h4 - The font size of the h4 typography.\n * @cssproperty --dds-text-font-size-h5 - The font size of the h5 typography.\n * @cssproperty --dds-text-font-size-h6 - The font size of the h6 typography.\n * @cssproperty --dds-text-font-size-body - The font size of the body typography.\n * @cssproperty --dds-text-font-size-caption - The font size of the caption typography.\n * @cssproperty --dds-text-font-size-description - The font size of the description typography.\n * @cssproperty --dds-text-font-size-description-lg - The font size of the description lg typography.\n * @cssproperty --dds-text-font-size-description-sm - The font size of the description sm typography.\n * @cssproperty --dds-text-font-size-lg - The font size of the lg typography.\n * @cssproperty --dds-text-font-size-md - The font size of the md typography.\n * @cssproperty --dds-text-font-size-sm - The font size of the sm typography.\n * @cssproperty --dds-text-font-size-xs - The font size of the xs typography.\n */\n@customElement('dap-ds-typography')\nexport default class DapDSTypography\n  extends DdsElement\n  implements Common<TypographyProps>\n{\n  /**\n   * The variant of the typography.\n   * @type {'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'body' | 'caption' | 'description'}\n   */\n  @property({ reflect: true }) variant!: TypographyVariant\n  /**\n   * The size of the typography.\n   * @type {'sm' | 'md' | 'lg'}\n   */\n  @property({ reflect: true }) size?: TypographySize\n  /**\n   * The html element of the body typography.\n   */\n  @property({ reflect: true }) bodyAs?: string = 'p'\n  /** The custom class of the typography. */\n  @property() customClass?: string\n  /** Whether the typography is an anchor for the TOC component. */\n  @property({ type: Boolean, reflect: true }) anchor = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties)\n    if (this.elementId) {\n      this.setAttribute('id', this.elementId)\n    }\n  }\n\n  private get elementId() {\n    return this.id ? this.id : undefined\n  }\n\n  private _renderHeading(\n    elementId: string | undefined,\n    customClass: string,\n    variant: TypographyVariant,\n    size: TypographySize,\n  ) {\n    return html`\n      <${unsafeStatic(variant)}\n        part=\"base\"\n        id=${ifDefined(elementId)}\n        class=${clsx(\n          typographyStyles({ variant, size }),\n          { [anchorClass]: this.anchor },\n          customClass,\n        )}\n      >\n       <slot></slot>\n      </${unsafeStatic(variant)}>\n    `\n  }\n\n  private _renderBody(\n    elementId: string | undefined,\n    customClass: string,\n    size: TypographySize,\n    bodyAs: string,\n  ) {\n    return html`\n      <${unsafeStatic(bodyAs)}\n        id=${ifDefined(elementId)}\n        part=\"base\"\n        class=${clsx(typographyStyles({ variant: 'body', size }), customClass)}\n      >\n        <slot></slot>\n      </${unsafeStatic(bodyAs)}>\n    `\n  }\n\n  private _renderCaption(elementId: string | undefined, customClass: string) {\n    return html`\n      <span\n        id=${ifDefined(elementId)}\n        part=\"base\"\n        class=${clsx(typographyStyles({ variant: 'caption' }), customClass)}>\n        <slot></slot>\n      </span>\n    `\n  }\n\n  private _renderDescription(\n    elementId: string | undefined,\n    customClass: string,\n    size: TypographySize,\n  ) {\n    return html`\n      <span\n        id=${ifDefined(elementId)}\n        part=\"base\"\n        class=${clsx(\n          typographyStyles({ variant: 'description', size }),\n          customClass,\n        )}>\n        <slot></slot>\n      </span>\n    `\n  }\n\n  private _getElement(\n    elementId: string | undefined,\n    variant: TypographyVariant,\n    size: TypographySize,\n    customClass: string = '',\n    bodyAs: string = '',\n  ) {\n    switch (variant) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return this._renderHeading(elementId, customClass, variant, size)\n      case 'body':\n        return this._renderBody(elementId, customClass, size, bodyAs)\n      case 'caption':\n        return this._renderCaption(elementId, customClass)\n      case 'description':\n        return this._renderDescription(elementId, customClass, size)\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return this._getElement(\n      this.elementId,\n      this.variant,\n      this.size,\n      this.customClass,\n      this.bodyAs,\n    )\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-down-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-down-line\n * @title - ArrowsArrowDownLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-down-line')\nexport default class ArrowsArrowDownLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-down-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m13 16.172 5.364-5.364 1.414 1.414L12 20l-7.778-7.778 1.414-1.414L11 16.172V4h2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-down-s-fill`\n * @summary An icon\n * @element dap-ds-icon-arrow-down-s-fill\n * @title - ArrowsArrowDownSFill\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-down-s-fill')\nexport default class ArrowsArrowDownSFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-down-s-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m12 16-6-6h12z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-down-s-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-down-s-line\n * @title - ArrowsArrowDownSLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-down-s-line')\nexport default class ArrowsArrowDownSLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-down-s-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m12 13.171 4.95-4.95 1.414 1.415L12 16 5.636 9.636 7.05 8.222z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-left-down-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-left-down-line\n * @title - ArrowsArrowLeftDownLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-left-down-line')\nexport default class ArrowsArrowLeftDownLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-left-down-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m9 13.589 8.607-8.607 1.414 1.415-8.607 8.606H18v2H7v-11h2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-left-l-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-left-l-line\n * @title - ArrowsArrowLeftLLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-left-l-line')\nexport default class ArrowsArrowLeftLLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-left-l-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path fill-rule=\"evenodd\" d=\"M15.294 3.293 6.587 12l8.707 8.707 1.414-1.414L9.415 12l7.293-7.293z\" clip-rule=\"evenodd\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-left-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-left-line\n * @title - ArrowsArrowLeftLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-left-line')\nexport default class ArrowsArrowLeftLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-left-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M7.828 11H20v2H7.828l5.364 5.364-1.414 1.414L4 12l7.778-7.778 1.414 1.414z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-left-s-fill`\n * @summary An icon\n * @element dap-ds-icon-arrow-left-s-fill\n * @title - ArrowsArrowLeftSFill\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-left-s-fill')\nexport default class ArrowsArrowLeftSFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-left-s-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m8 12 6-6v12z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-left-s-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-left-s-line\n * @title - ArrowsArrowLeftSLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-left-s-line')\nexport default class ArrowsArrowLeftSLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-left-s-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m10.828 12 4.95 4.95-1.414 1.415L8 12l6.364-6.364 1.414 1.414z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-left-up-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-left-up-line\n * @title - ArrowsArrowLeftUpLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-left-up-line')\nexport default class ArrowsArrowLeftUpLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-left-up-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m9.414 8 8.607 8.607-1.414 1.414L8 9.414V17H6V6h11v2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-right-down-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-right-down-line\n * @title - ArrowsArrowRightDownLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-right-down-line')\nexport default class ArrowsArrowRightDownLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-right-down-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M14.59 16.003 5.983 7.397l1.414-1.415 8.607 8.607V7.003h2v11h-11v-2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-right-l-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-right-l-line\n * @title - ArrowsArrowRightLLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-right-l-line')\nexport default class ArrowsArrowRightLLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-right-l-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path fill-rule=\"evenodd\" d=\"M8.707 3.293 17.414 12l-8.707 8.707-1.414-1.414L14.586 12 7.293 4.707z\" clip-rule=\"evenodd\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-right-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-right-line\n * @title - ArrowsArrowRightLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-right-line')\nexport default class ArrowsArrowRightLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-right-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m16.172 11-5.364-5.364 1.414-1.414L20 12l-7.778 7.778-1.414-1.414L16.172 13H4v-2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-right-s-fill`\n * @summary An icon\n * @element dap-ds-icon-arrow-right-s-fill\n * @title - ArrowsArrowRightSFill\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-right-s-fill')\nexport default class ArrowsArrowRightSFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-right-s-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m16 12-6 6V6z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-right-s-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-right-s-line\n * @title - ArrowsArrowRightSLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-right-s-line')\nexport default class ArrowsArrowRightSLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-right-s-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m13.172 12-4.95-4.95 1.414-1.413L16 12l-6.364 6.364-1.414-1.415z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-right-up-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-right-up-line\n * @title - ArrowsArrowRightUpLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-right-up-line')\nexport default class ArrowsArrowRightUpLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-right-up-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m16.004 9.414-8.607 8.607-1.414-1.414L14.59 8H7.003V6h11v11h-2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-up-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-up-line\n * @title - ArrowsArrowUpLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-up-line')\nexport default class ArrowsArrowUpLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-up-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M13 7.828V20h-2V7.828l-5.364 5.364-1.414-1.414L12 4l7.778 7.778-1.414 1.414z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-up-s-fill`\n * @summary An icon\n * @element dap-ds-icon-arrow-up-s-fill\n * @title - ArrowsArrowUpSFill\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-up-s-fill')\nexport default class ArrowsArrowUpSFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-up-s-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m12 8 6 6H6z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-arrow-up-s-line`\n * @summary An icon\n * @element dap-ds-icon-arrow-up-s-line\n * @title - ArrowsArrowUpSLine\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-arrow-up-s-line')\nexport default class ArrowsArrowUpSLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-arrow-up-s-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m12 10.828-4.95 4.95-1.414-1.414L12 8l6.364 6.364-1.414 1.414z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-expand-up-down-fill`\n * @summary An icon\n * @element dap-ds-icon-expand-up-down-fill\n * @title - ArrowsExpandUpDownFill\n * @group icon\n * @icontype arrows\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-expand-up-down-fill')\nexport default class ArrowsExpandUpDownFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-expand-up-down-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m18 9-6-6-6 6zm0 6-6 6-6-6z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-home-6-line`\n * @summary An icon\n * @element dap-ds-icon-home-6-line\n * @title - BuildingsHome6Line\n * @group icon\n * @icontype buildings\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-home-6-line')\nexport default class BuildingsHome6Line extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-home-6-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M21 20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.49a1 1 0 0 1 .386-.79l8-6.223a1 1 0 0 1 1.228 0l8 6.223a1 1 0 0 1 .386.79zm-2-1V9.978l-7-5.444-7 5.444V19zM7 15h10v2H7z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-calendar-line`\n * @summary An icon\n * @element dap-ds-icon-calendar-line\n * @title - BusinessCalendarLine\n * @group icon\n * @icontype business\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-calendar-line')\nexport default class BusinessCalendarLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-calendar-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M9 1v2h6V1h2v2h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1zm11 10H4v8h16zM7 5H4v4h16V5h-3v2h-2V5H9v2H7z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-edit-line`\n * @summary An icon\n * @element dap-ds-icon-edit-line\n * @title - DesignEditLine\n * @group icon\n * @icontype design\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-edit-line')\nexport default class DesignEditLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-edit-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M6.414 15.89 16.556 5.748l-1.414-1.414L5 14.476v1.414zm.829 2H3v-4.243L14.435 2.212a1 1 0 0 1 1.414 0l2.829 2.829a1 1 0 0 1 0 1.414zM3 19.89h18v2H3z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-tools-line`\n * @summary An icon\n * @element dap-ds-icon-tools-line\n * @title - DesignToolsLine\n * @group icon\n * @icontype design\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-tools-line')\nexport default class DesignToolsLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-tools-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M5.33 3.272a3.5 3.5 0 0 1 4.254 4.962l10.709 10.71-1.414 1.414-10.71-10.71a3.502 3.502 0 0 1-4.962-4.255L5.444 7.63a1.5 1.5 0 0 0 2.121-2.121zm10.367 1.883 3.182-1.768 1.414 1.415-1.768 3.181-1.768.354-2.12 2.121-1.415-1.414 2.121-2.121zm-6.718 8.132 1.415 1.414-5.304 5.303a1 1 0 0 1-1.492-1.327l.078-.087z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-computer-line`\n * @summary An icon\n * @element dap-ds-icon-computer-line\n * @title - DeviceComputerLine\n * @group icon\n * @icontype device\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-computer-line')\nexport default class DeviceComputerLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-computer-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M4 16h16V5H4zm9 2v2h4v2H7v-2h4v-2H2.992A1 1 0 0 1 2 16.992V4.008C2 3.451 2.455 3 2.992 3h18.016c.548 0 .992.449.992 1.007v12.985c0 .557-.455 1.008-.992 1.008z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-clipboard-line`\n * @summary An icon\n * @element dap-ds-icon-clipboard-line\n * @title - DocumentClipboardLine\n * @group icon\n * @icontype document\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-clipboard-line')\nexport default class DocumentClipboardLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-clipboard-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M7 4V2h10v2h3.007c.548 0 .993.445.993.993v16.014a.994.994 0 0 1-.993.993H3.993A.993.993 0 0 1 3 21.007V4.993C3 4.445 3.445 4 3.993 4zm0 2H5v14h14V6h-2v2H7zm2-2v2h6V4z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-file-copy-line`\n * @summary An icon\n * @element dap-ds-icon-file-copy-line\n * @title - DocumentFileCopyLine\n * @group icon\n * @icontype document\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-file-copy-line')\nexport default class DocumentFileCopyLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-file-copy-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M7 6V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3v3c0 .552-.45 1-1.007 1H4.007A1 1 0 0 1 3 21l.003-14c0-.552.45-1 1.006-1zM5.002 8 5 20h10V8zM9 6h8v10h2V4H9z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-file-image-line`\n * @summary An icon\n * @element dap-ds-icon-file-image-line\n * @title - DocumentFileImageLine\n * @group icon\n * @icontype document\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-file-image-line')\nexport default class DocumentFileImageLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-file-image-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M15 8V4H5v16h14V8zM3 2.992C3 2.444 3.447 2 3.999 2H16l5 5v13.993A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008zM11 9.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m6.5 7.5-4-7L8 17z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-file-music-line`\n * @summary An icon\n * @element dap-ds-icon-file-music-line\n * @title - DocumentFileMusicLine\n * @group icon\n * @icontype document\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-file-music-line')\nexport default class DocumentFileMusicLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-file-music-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M16 8v2h-3v4.5a2.5 2.5 0 1 1-2-2.45V8h4V4H5v16h14V8zM3 2.992C3 2.444 3.447 2 3.999 2H16l5 5v13.993A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-file-text-line`\n * @summary An icon\n * @element dap-ds-icon-file-text-line\n * @title - DocumentFileTextLine\n * @group icon\n * @icontype document\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-file-text-line')\nexport default class DocumentFileTextLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-file-text-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M21 8v12.993A1 1 0 0 1 20.007 22H3.993A.993.993 0 0 1 3 21.008V2.992C3 2.455 3.449 2 4.002 2h10.995zm-2 1h-5V4H5v16h14zM8 7h3v2H8zm0 4h8v2H8zm0 4h8v2H8z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-file-video-line`\n * @summary An icon\n * @element dap-ds-icon-file-video-line\n * @title - DocumentFileVideoLine\n * @group icon\n * @icontype document\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-file-video-line')\nexport default class DocumentFileVideoLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-file-video-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M15 4v4h4v12H5V4zM3.999 2A.995.995 0 0 0 3 2.992v18.016a1 1 0 0 0 .993.992h16.014A1 1 0 0 0 21 20.992V7l-5-5zM15 11.667l-4.88-3.253a.4.4 0 0 0-.621.333v6.505a.4.4 0 0 0 .622.333L15 12.333a.4.4 0 0 0 0-.666\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-folder-line`\n * @summary An icon\n * @element dap-ds-icon-folder-line\n * @title - DocumentFolderLine\n * @group icon\n * @icontype document\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-folder-line')\nexport default class DocumentFolderLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-folder-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M4 5v14h16V7h-8.414l-2-2zm8.414 0H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-folder-open-line`\n * @summary An icon\n * @element dap-ds-icon-folder-open-line\n * @title - DocumentFolderOpenLine\n * @group icon\n * @icontype document\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-folder-open-line')\nexport default class DocumentFolderOpenLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-folder-open-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M3 21a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H20a1 1 0 0 1 1 1v3h-2V7h-7.414l-2-2H4v11.998L5.5 11h17l-2.31 9.243a1 1 0 0 1-.97.757zm16.938-8H7.062l-1.5 6h12.876z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-heart-fill`\n * @summary An icon\n * @element dap-ds-icon-heart-fill\n * @title - HealthHeartFill\n * @group icon\n * @icontype health\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-heart-fill')\nexport default class HealthHeartFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-heart-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12.001 4.529a6 6 0 0 1 8.242.228 6 6 0 0 1 .236 8.236l-8.48 8.492-8.478-8.492a6 6 0 0 1 8.48-8.464\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-heart-line`\n * @summary An icon\n * @element dap-ds-icon-heart-line\n * @title - HealthHeartLine\n * @group icon\n * @icontype health\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-heart-line')\nexport default class HealthHeartLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-heart-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12.001 4.529a6 6 0 0 1 8.242.228 6 6 0 0 1 .236 8.236l-8.48 8.492-8.478-8.492a6 6 0 0 1 8.48-8.464m6.826 1.641a4 4 0 0 0-5.49-.153l-1.335 1.198-1.336-1.197a4 4 0 0 0-5.686 5.605L12 18.654l7.02-7.03a4 4 0 0 0-.193-5.454\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-cookie-line`\n * @summary An icon\n * @element dap-ds-icon-cookie-line\n * @title - OthersCookieLine\n * @group icon\n * @icontype others\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-cookie-line')\nexport default class OthersCookieLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-cookie-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path fill-rule=\"evenodd\" d=\"M19.999 11.893v.007zm-.062 1.116C19.439 16.945 16.067 20 12 20c-4.41 0-8-3.59-8-8 0-4.068 3.056-7.439 6.991-7.937.172.356.396.683.666.972-.22.95-.082 1.968.423 2.843a3.92 3.92 0 0 0 2.253 1.789 3.92 3.92 0 0 0 3.744 2.778q.451 0 .887-.103c.289.27.617.495.973.667M16.17 8.35a1.93 1.93 0 0 0 .951 1.837 1.92 1.92 0 0 0 2.067-.094.48.48 0 0 1 .711.19c.3.65.93 1.077 1.644 1.113a.48.48 0 0 1 .455.473l.001.04L22 12c0 5.514-4.486 10-10 10S2 17.514 2 12 6.486 2 12 2l.092.001h.04a.48.48 0 0 1 .472.456A1.91 1.91 0 0 0 13.716 4.1a.48.48 0 0 1 .19.712c-.43.61-.466 1.42-.094 2.066a1.93 1.93 0 0 0 1.837.951.48.48 0 0 1 .521.521m-3.293-2.435h-.002z\" clip-rule=\"evenodd\"></path><path d=\"M10 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0M8 12a1 1 0 1 1-2 0 1 1 0 0 1 2 0M12 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2M12 17a1 1 0 1 1-2 0 1 1 0 0 1 2 0M16 16a1 1 0 1 0 0-2 1 1 0 0 0 0 2\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-add-line`\n * @summary An icon\n * @element dap-ds-icon-add-line\n * @title - SystemAddLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-add-line')\nexport default class SystemAddLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-add-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-alert-fill`\n * @summary An icon\n * @element dap-ds-icon-alert-fill\n * @title - SystemAlertFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-alert-fill')\nexport default class SystemAlertFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-alert-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m12.866 3 9.526 16.5a1 1 0 0 1-.866 1.5H2.474a1 1 0 0 1-.866-1.5L11.134 3a1 1 0 0 1 1.732 0M11 16v2h2v-2zm0-7v5h2V9z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-alert-line`\n * @summary An icon\n * @element dap-ds-icon-alert-line\n * @title - SystemAlertLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-alert-line')\nexport default class SystemAlertLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-alert-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m12.866 3 9.526 16.5a1 1 0 0 1-.866 1.5H2.474a1 1 0 0 1-.866-1.5L11.134 3a1 1 0 0 1 1.732 0m-8.66 16h15.588L12 5.5zM11 16h2v2h-2zm0-7h2v5h-2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-check-line`\n * @summary An icon\n * @element dap-ds-icon-check-line\n * @title - SystemCheckLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-check-line')\nexport default class SystemCheckLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-check-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m10 15.17 9.192-9.191 1.414 1.414L10 17.999l-6.364-6.364 1.414-1.414z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-check-line2`\n * @summary An icon\n * @element dap-ds-icon-check-line2\n * @title - SystemCheckLine2\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-check-line2')\nexport default class SystemCheckLine2 extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-check-line2')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M19.71 6.393a1 1 0 0 1 0 1.414l-9.8 9.8a1 1 0 0 1-1.414 0l-4.2-4.2a1 1 0 1 1 1.414-1.414l3.493 3.493 9.093-9.093a1 1 0 0 1 1.414 0\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-checkbox-blank-circle-fill`\n * @summary An icon\n * @element dap-ds-icon-checkbox-blank-circle-fill\n * @title - SystemCheckboxBlankCircleFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-checkbox-blank-circle-fill')\nexport default class SystemCheckboxBlankCircleFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-checkbox-blank-circle-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-checkbox-blank-circle-fill-check`\n * @summary An icon\n * @element dap-ds-icon-checkbox-blank-circle-fill-check\n * @title - SystemCheckboxBlankCircleFillCheck\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-checkbox-blank-circle-fill-check')\nexport default class SystemCheckboxBlankCircleFillCheck extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-checkbox-blank-circle-fill-check')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path fill-rule=\"evenodd\" d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m-.938-4.377 4.524-5.654-1.172-.938-3.476 4.346L5.03 7.47 3.97 8.53z\" clip-rule=\"evenodd\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-checkbox-blank-circle-line`\n * @summary An icon\n * @element dap-ds-icon-checkbox-blank-circle-line\n * @title - SystemCheckboxBlankCircleLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-checkbox-blank-circle-line')\nexport default class SystemCheckboxBlankCircleLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-checkbox-blank-circle-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10m0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-checkbox-circle-fill`\n * @summary An icon\n * @element dap-ds-icon-checkbox-circle-fill\n * @title - SystemCheckboxCircleFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-checkbox-circle-fill')\nexport default class SystemCheckboxCircleFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-checkbox-circle-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10m-.997-6 7.07-7.071-1.413-1.414-5.657 5.657-2.829-2.829-1.414 1.414z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-checkbox-circle-line`\n * @summary An icon\n * @element dap-ds-icon-checkbox-circle-line\n * @title - SystemCheckboxCircleLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-checkbox-circle-line')\nexport default class SystemCheckboxCircleLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-checkbox-circle-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10m0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16m-.997-4L6.76 11.757l1.414-1.414 2.829 2.829 5.657-5.657 1.414 1.414z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-close-circle-fill`\n * @summary An icon\n * @element dap-ds-icon-close-circle-fill\n * @title - SystemCloseCircleFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-close-circle-fill')\nexport default class SystemCloseCircleFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-close-circle-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10m0-11.414L9.172 7.757 7.757 9.172 10.586 12l-2.829 2.828 1.415 1.415L12 13.414l2.828 2.829 1.415-1.415L13.414 12l2.829-2.828-1.415-1.415z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-close-circle-line`\n * @summary An icon\n * @element dap-ds-icon-close-circle-line\n * @title - SystemCloseCircleLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-close-circle-line')\nexport default class SystemCloseCircleLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-close-circle-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10m0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16m0-9.414 2.828-2.829 1.415 1.415L13.414 12l2.829 2.828-1.415 1.415L12 13.414l-2.828 2.829-1.415-1.415L10.586 12 7.757 9.172l1.415-1.415z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-close-fill`\n * @summary An icon\n * @element dap-ds-icon-close-fill\n * @title - SystemCloseFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-close-fill')\nexport default class SystemCloseFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-close-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m12 10.587 4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.415 1.414-4.95-4.95-4.949 4.95-1.414-1.415 4.95-4.95-4.95-4.95L7.05 5.638z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-close-line`\n * @summary An icon\n * @element dap-ds-icon-close-line\n * @title - SystemCloseLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-close-line')\nexport default class SystemCloseLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-close-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m12 10.587 4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.415 1.414-4.95-4.95-4.949 4.95-1.414-1.415 4.95-4.95-4.95-4.95L7.05 5.638z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-delete-bin-fill`\n * @summary An icon\n * @element dap-ds-icon-delete-bin-fill\n * @title - SystemDeleteBinFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-delete-bin-fill')\nexport default class SystemDeleteBinFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-delete-bin-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M17 6h5v2h-2v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1zm-8 5v6h2v-6zm4 0v6h2v-6zM9 4v2h6V4z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-delete-bin-line`\n * @summary An icon\n * @element dap-ds-icon-delete-bin-line\n * @title - SystemDeleteBinLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-delete-bin-line')\nexport default class SystemDeleteBinLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-delete-bin-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M17 6h5v2h-2v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1zm1 2H6v12h12zm-9 3h2v6H9zm4 0h2v6h-2zM9 4v2h6V4z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-download-line`\n * @summary An icon\n * @element dap-ds-icon-download-line\n * @title - SystemDownloadLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-download-line')\nexport default class SystemDownloadLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-download-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M3 19h18v2H3zm10-5.828L19.071 7.1l1.414 1.414L12 17 3.515 8.515 4.929 7.1 11 13.173V2h2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-error-warning-fill`\n * @summary An icon\n * @element dap-ds-icon-error-warning-fill\n * @title - SystemErrorWarningFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-error-warning-fill')\nexport default class SystemErrorWarningFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-error-warning-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10m-1-7v2h2v-2zm0-8v6h2V7z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-error-warning-line`\n * @summary An icon\n * @element dap-ds-icon-error-warning-line\n * @title - SystemErrorWarningLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-error-warning-line')\nexport default class SystemErrorWarningLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-error-warning-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10m0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16m-1-5h2v2h-2zm0-8h2v6h-2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-external-link-line`\n * @summary An icon\n * @element dap-ds-icon-external-link-line\n * @title - SystemExternalLinkLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-external-link-line')\nexport default class SystemExternalLinkLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-external-link-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M10 6v2H5v11h11v-5h2v6a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1zm11-3v8h-2V6.413l-7.793 7.794-1.414-1.414L17.585 5H13V3z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-eye-line`\n * @summary An icon\n * @element dap-ds-icon-eye-line\n * @title - SystemEyeLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-eye-line')\nexport default class SystemEyeLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-eye-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 3c5.392 0 9.878 3.88 10.819 9-.94 5.12-5.427 9-10.819 9s-9.878-3.88-10.818-9C2.122 6.88 6.608 3 12 3m0 16a9.005 9.005 0 0 0 8.778-7 9.005 9.005 0 0 0-17.555 0A9.005 9.005 0 0 0 12 19m0-2.5a4.5 4.5 0 1 1 0-9 4.5 4.5 0 0 1 0 9m0-2a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-eye-off-line`\n * @summary An icon\n * @element dap-ds-icon-eye-off-line\n * @title - SystemEyeOffLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-eye-off-line')\nexport default class SystemEyeOffLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-eye-off-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M17.883 19.297A10.95 10.95 0 0 1 12 21c-5.392 0-9.878-3.88-10.818-9A11 11 0 0 1 4.52 5.935L1.394 2.808l1.414-1.414 19.799 19.798-1.414 1.415zM5.936 7.35A8.97 8.97 0 0 0 3.223 12a9.005 9.005 0 0 0 13.201 5.838l-2.028-2.028A4.5 4.5 0 0 1 8.19 9.604zm6.978 6.978-3.242-3.241a2.5 2.5 0 0 0 3.241 3.241m7.893 2.265-1.431-1.431A8.9 8.9 0 0 0 20.778 12 9.005 9.005 0 0 0 9.552 5.338L7.974 3.76C9.221 3.27 10.58 3 12 3c5.392 0 9.878 3.88 10.819 9a10.95 10.95 0 0 1-2.012 4.593m-9.084-9.084Q11.86 7.5 12 7.5a4.5 4.5 0 0 1 4.492 4.778z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-forbid-fill`\n * @summary An icon\n * @element dap-ds-icon-forbid-fill\n * @title - SystemForbidFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-forbid-fill')\nexport default class SystemForbidFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-forbid-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10M8.523 7.109A6 6 0 0 0 7.11 8.523l8.368 8.368a6 6 0 0 0 1.414-1.414z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-information-2-fill`\n * @summary An icon\n * @element dap-ds-icon-information-2-fill\n * @title - SystemInformation2Fill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-information-2-fill')\nexport default class SystemInformation2Fill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-information-2-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10m0-12.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m2 5.5h-1v-4.5h-3v2h1V15h-1v2h4z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-information-fill`\n * @summary An icon\n * @element dap-ds-icon-information-fill\n * @title - SystemInformationFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-information-fill')\nexport default class SystemInformationFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-information-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10m-1-11v6h2v-6zm0-4v2h2V7z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-information-line`\n * @summary An icon\n * @element dap-ds-icon-information-line\n * @title - SystemInformationLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-information-line')\nexport default class SystemInformationLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-information-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10m0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16M11 7h2v2h-2zm0 4h2v6h-2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-lightbulb-fill`\n * @summary An icon\n * @element dap-ds-icon-lightbulb-fill\n * @title - SystemLightbulbFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-lightbulb-fill')\nexport default class SystemLightbulbFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-lightbulb-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M11 18H7.941c-.297-1.273-1.637-2.314-2.187-3a8 8 0 1 1 12.49.002c-.55.685-1.888 1.726-2.185 2.998H13v-5h-2zm5 2v1a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-1z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-loading-spinner`\n * @summary An icon\n * @element dap-ds-icon-loading-spinner\n * @title - SystemLoadingSpinner\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-loading-spinner')\nexport default class SystemLoadingSpinner extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-loading-spinner')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M15.889 6.18A7 7 0 0 0 12 5V3a9 9 0 1 1-9 9h2a7 7 0 1 0 10.889-5.82\" clip-rule=\"evenodd\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-lock-fill`\n * @summary An icon\n * @element dap-ds-icon-lock-fill\n * @title - SystemLockFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-lock-fill')\nexport default class SystemLockFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-lock-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M19 10h1a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h1V9a7 7 0 0 1 14 0zm-2 0V9A5 5 0 0 0 7 9v1zm-6 4v4h2v-4z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-lock-line`\n * @summary An icon\n * @element dap-ds-icon-lock-line\n * @title - SystemLockLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-lock-line')\nexport default class SystemLockLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-lock-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M19 10h1a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h1V9a7 7 0 0 1 14 0zM5 12v8h14v-8zm6 2h2v4h-2zm6-4V9A5 5 0 0 0 7 9v1z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-menu-line`\n * @summary An icon\n * @element dap-ds-icon-menu-line\n * @title - SystemMenuLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-menu-line')\nexport default class SystemMenuLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-menu-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M3 4h18v2H3zm0 7h18v2H3zm0 7h18v2H3z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-menu-line-s`\n * @summary An icon\n * @element dap-ds-icon-menu-line-s\n * @title - SystemMenuLineS\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-menu-line-s')\nexport default class SystemMenuLineS extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-menu-line-s')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M5.003 6h14v2h-14zm0 5h14v2h-14zm0 5h14v2h-14z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-more-2-line`\n * @summary An icon\n * @element dap-ds-icon-more-2-line\n * @title - SystemMore2Line\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-more-2-line')\nexport default class SystemMore2Line extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-more-2-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 3c-.825 0-1.5.675-1.5 1.5S11.175 6 12 6s1.5-.675 1.5-1.5S12.825 3 12 3m0 15c-.825 0-1.5.675-1.5 1.5S11.175 21 12 21s1.5-.675 1.5-1.5S12.825 18 12 18m0-7.5c-.825 0-1.5.675-1.5 1.5s.675 1.5 1.5 1.5 1.5-.675 1.5-1.5-.675-1.5-1.5-1.5\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-more-line`\n * @summary An icon\n * @element dap-ds-icon-more-line\n * @title - SystemMoreLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-more-line')\nexport default class SystemMoreLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-more-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M4.5 10.5c-.825 0-1.5.675-1.5 1.5s.675 1.5 1.5 1.5S6 12.825 6 12s-.675-1.5-1.5-1.5m15 0c-.825 0-1.5.675-1.5 1.5s.675 1.5 1.5 1.5S21 12.825 21 12s-.675-1.5-1.5-1.5m-7.5 0c-.825 0-1.5.675-1.5 1.5s.675 1.5 1.5 1.5 1.5-.675 1.5-1.5-.675-1.5-1.5-1.5\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-search-line`\n * @summary An icon\n * @element dap-ds-icon-search-line\n * @title - SystemSearchLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-search-line')\nexport default class SystemSearchLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-search-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m18.031 16.617 4.283 4.282-1.415 1.415-4.282-4.283A8.96 8.96 0 0 1 11 20c-4.968 0-9-4.032-9-9s4.032-9 9-9 9 4.032 9 9a8.96 8.96 0 0 1-1.969 5.617m-2.006-.742A6.98 6.98 0 0 0 18 11c0-3.867-3.133-7-7-7s-7 3.133-7 7 3.133 7 7 7a6.98 6.98 0 0 0 4.875-1.975z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-share-line`\n * @summary An icon\n * @element dap-ds-icon-share-line\n * @title - SystemShareLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-share-line')\nexport default class SystemShareLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-share-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m13.12 17.023-4.199-2.29a4 4 0 1 1 0-5.465l4.2-2.29a4 4 0 1 1 .958 1.755l-4.2 2.29a4 4 0 0 1 0 1.954l4.2 2.29a4 4 0 1 1-.959 1.755M6 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4m11-6a2 2 0 1 0 0-4 2 2 0 0 0 0 4m0 12a2 2 0 1 0 0-4 2 2 0 0 0 0 4\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-shield-check-fill`\n * @summary An icon\n * @element dap-ds-icon-shield-check-fill\n * @title - SystemShieldCheckFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-shield-check-fill')\nexport default class SystemShieldCheckFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-shield-check-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m12 1 8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976zm4.452 7.222-4.95 4.949-2.828-2.828-1.414 1.414L11.503 16l6.364-6.364z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-shield-check-line`\n * @summary An icon\n * @element dap-ds-icon-shield-check-line\n * @title - SystemShieldCheckLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-shield-check-line')\nexport default class SystemShieldCheckLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-shield-check-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m12 1 8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976zm0 2.049L5 4.604v9.185a4 4 0 0 0 1.781 3.328L12 20.597l5.219-3.48A4 4 0 0 0 19 13.79V4.604zm4.452 5.173 1.415 1.414L11.503 16 7.26 11.757l1.414-1.414 2.828 2.828z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-star-fill`\n * @summary An icon\n * @element dap-ds-icon-star-fill\n * @title - SystemStarFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-star-fill')\nexport default class SystemStarFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-star-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"m12 18.26-7.053 3.948 1.575-7.928L.588 8.792l8.027-.952L12 .5l3.385 7.34 8.027.952-5.934 5.488 1.575 7.928z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-subtract-line`\n * @summary An icon\n * @element dap-ds-icon-subtract-line\n * @title - SystemSubtractLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-subtract-line')\nexport default class SystemSubtractLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-subtract-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M5 11v2h14v-2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-subtract-line2`\n * @summary An icon\n * @element dap-ds-icon-subtract-line2\n * @title - SystemSubtractLine2\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-subtract-line2')\nexport default class SystemSubtractLine2 extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-subtract-line2')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14 10H6\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-time-fill`\n * @summary An icon\n * @element dap-ds-icon-time-fill\n * @title - SystemTimeFill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-time-fill')\nexport default class SystemTimeFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-time-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10m1-10V7h-2v7h6v-2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-time-line`\n * @summary An icon\n * @element dap-ds-icon-time-line\n * @title - SystemTimeLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-time-line')\nexport default class SystemTimeLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-time-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10m0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16m1-8h4v2h-6V7h2z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-upload-2-fill`\n * @summary An icon\n * @element dap-ds-icon-upload-2-fill\n * @title - SystemUpload2Fill\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-upload-2-fill')\nexport default class SystemUpload2Fill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-upload-2-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2zM14 9v6h-4V9H5l7-7 7 7z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-upload-2-line`\n * @summary An icon\n * @element dap-ds-icon-upload-2-line\n * @title - SystemUpload2Line\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-upload-2-line')\nexport default class SystemUpload2Line extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-upload-2-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2zm9-10v7h-2V9H6l6-6 6 6z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-upload-line`\n * @summary An icon\n * @element dap-ds-icon-upload-line\n * @title - SystemUploadLine\n * @group icon\n * @icontype system\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-upload-line')\nexport default class SystemUploadLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-upload-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M3 19h18v2H3zM13 5.828V17h-2V5.828L4.929 11.9l-1.414-1.414L12 2l8.485 8.485-1.414 1.415z\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-account-circle-fill`\n * @summary An icon\n * @element dap-ds-icon-account-circle-fill\n * @title - UserAccountCircleFill\n * @group icon\n * @icontype user\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-account-circle-fill')\nexport default class UserAccountCircleFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-account-circle-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12 6.48 2 12 2M6.023 15.416C7.491 17.606 9.695 19 12.16 19s4.669-1.393 6.136-3.584A8.97 8.97 0 0 0 12.16 13a8.97 8.97 0 0 0-6.137 2.416M12 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-account-circle-line`\n * @summary An icon\n * @element dap-ds-icon-account-circle-line\n * @title - UserAccountCircleLine\n * @group icon\n * @icontype user\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-account-circle-line')\nexport default class UserAccountCircleLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-account-circle-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2m.16 14a6.98 6.98 0 0 0-5.147 2.256A7.97 7.97 0 0 0 12 20c1.97 0 3.773-.712 5.167-1.892A6.98 6.98 0 0 0 12.16 16M12 4a8 8 0 0 0-6.384 12.821A8.98 8.98 0 0 1 12.16 14a8.97 8.97 0 0 1 6.362 2.634A8 8 0 0 0 12 4m0 1a4 4 0 1 1 0 8 4 4 0 0 1 0-8m0 2a2 2 0 1 0 0 4 2 2 0 0 0 0-4\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-user-fill`\n * @summary An icon\n * @element dap-ds-icon-user-fill\n * @title - UserUserFill\n * @group icon\n * @icontype user\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-user-fill')\nexport default class UserUserFill extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-user-fill')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M4 22a8 8 0 1 1 16 0zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6 6 2.685 6 6-2.685 6-6 6\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n","/* eslint-disable prettier/prettier */\nimport { clsx } from 'clsx'\nimport { PropertyValueMap,unsafeCSS } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { html } from 'lit/static-html.js'\n\nimport { DdsElement } from '../../../../internal/dds-hu-element'\nimport styles from '../../../icon/_styles/icon.scss?inline'\n\n/**\n * `dap-ds-icon-user-line`\n * @summary An icon\n * @element dap-ds-icon-user-line\n * @title - UserUserLine\n * @group icon\n * @icontype user\n * \n * @attribute {number} size - (optional) The width and height in pixels\n * @attribute {boolean} selected - (optional) Sets the icon color via the `fill` attribute\n * @attribute {string} accessibilityTitle - (optional) When using the icon standalone, make it meaningful for accessibility\n * @attribute {boolean} focusable - (optional) If `true` the icon can receive focus\n *\n * @csspart base - The main icon container.\n */\n@customElement('dap-ds-icon-user-line')\nexport default class UserUserLine extends DdsElement {\n  /** (optional) The width and height in pixels */\n  @property({ type: Number, reflect: true }) size? = 24\n  /** (optional) Sets the icon color via the `fill` attribute */\n  @property({ type: Boolean, reflect: true }) selected?: boolean = false\n  /** (optional) When using the icon standalone, make it meaningful for accessibility */\n  @property() accessibilityTitle?: string\n  /** (optional) If `true` the icon can receive focus */\n  @property({ type: Boolean }) focusable?: boolean = false\n\n  static readonly styles = unsafeCSS(styles)\n\n  protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(_changedProperties)\n\n    this.classList.add('dap-ds-icon')\n  }\n\n  render() {\n    return html`\n      <svg\n        part=\"base\"\n        class=${clsx('icon', 'dap-ds-icon-user-line')}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=${this.size}\n        height=${this.size}\n        viewBox=\"0 0 24 24\"\n        tabindex=${this.focusable ? 0 : -1}\n        aria-hidden=${this.ariaHidden ?? 'true'}>\n        ${this.accessibilityTitle\n          ? html`<title>${this.accessibilityTitle}</title>`\n          : null}\n        <g part=\"container\">\n          <g>\n            <path d=\"M4 22a8 8 0 1 1 16 0h-2a6 6 0 0 0-12 0zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6 6 2.685 6 6-2.685 6-6 6m0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4\"></path>\n          </g>\n        </g>\n      </svg>\n    `\n  }\n}\n"],"names":["t","o","e","s","n$6","r","n","i","S","c","h","a","l","p","d","u","f","b","_a","_b","y$1","_c","_d","__async","y","__spreadProps","__spreadValues","clsx","v","_","m","g","$","x","T","E","A","C","P","V","N","H","I","L","k","M$1","R","z","M","Z","j","B","DdsElement","LitElement","name","value","options","event","module","this","D","w","O","require$$0","Y","isString","obj","defer","res","rej","promise","resolve","reject","makeString","object","copy","lastOfPathSeparatorRegExp","cleanKey","key","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","stackIndex","setPath","newValue","last","pushPath","concat","getPath","getPathWithDefaults","data","defaultData","deepExtend","target","source","overwrite","prop","regexEscape","str","_entityMap","escape","RegExpCache","capacity","pattern","regExpFromCache","regExpNew","chars","looksLikeObjectPathRegExpCache","looksLikeObjectPath","nsSeparator","keySeparator","possibleChars","matched","ki","deepFind","tokens","current","next","nextPath","getCleanedCode","code","consoleLogger","args","type","Logger","concreteLogger","_len","_key","_len2","_key2","_len3","_key3","_len4","_key4","lvl","prefix","debugOnly","moduleName","baseLogger","EventEmitter","events","listener","numListeners","_ref","observer","numTimesAdded","_ref2","ResourceStore","ns","index","lng","ignoreJSONStructure","result","resources","deep","pack","postProcessor","processors","translator","processor","checkedLoadedFor","Translator","services","resolved","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","parts","keys","lastKey","returnDetails","namespace","appendNamespaceToCIMode","resUsedKey","resExactUsedKey","resType","noObject","joinArrays","handleAsObjectInI18nFormat","handleAsObject","resTypeIsArray","newKeyToUse","deepKey","usedDefault","usedKey","needsPluralHandling","hasDefaultValue","defaultValueSuffix","defaultValueSuffixOrdinalFallback","needsZeroSuffixLookup","defaultValue","resForMissing","updateMissing","fk","lngs","fallbackLngs","send","specificDefaultValue","defaultForMissing","language","suffixes","suffix","_this","skipOnVariables","nestBef","nb","na","nestAft","postProcess","postProcessorNames","found","exactUsedKey","usedLng","usedNS","extracted","needsContextHandling","codes","finalKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","possibleKey","optionsKeys","useOptionsReplaceForData","option","capitalize","string","LanguageUtil","formattedCode","specialCases","part","cleanedLng","lngOnly","supportedLng","fallbacks","fallbackCode","fallbackCodes","addCode","fc","sets","_rulesPluralsTypes","nonIntlVersions","intlVersions","suffixesOrder","createRules","rules","set","PluralResolver","languageUtils","cleanedCode","cacheKey","rule","err","lngPart","pluralCategory1","pluralCategory2","pluralCategory","number","count","idx","returnSuffix","deepFindWithDefaults","regexSafe","val","Interpolator","escape$1","escapeValue","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","getOrResetRegExp","existingRegExp","match","replaces","handleFormat","missingInterpolationHandler","todo","matchedVar","temp","safeValue","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","doReduce","elem","parseFormatStr","formatStr","formatName","formatOptions","optStr","opt","rest","trimmedKey","createCachedFormatter","fn","cache","optForCache","formatter","Formatter","format","formats","lastIndex","mem","formatted","valOptions","error","removePending","q","Connector","backend","store","languages","callback","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","loaded","loadedKeys","fcName","tried","wait","resolver","fallbackValue","isUpdate","clb","opts","get","ret","transformOptions","noop","bindMemberFunctions","inst","I18n","defOpts","createClassOnDemand","ClassOrObject","lu","deferred","load","finish","usedCallback","append","li","lngInLngs","_this2","setLngProps","done","setLng","keyPrefix","_this3","fixedT","resultKey","fallbackLng","lastLng","loadNotPending","loadState","preResult","preloaded","newLngs","rtlLngs","forkResourceStore","mergedOptions","clone","instance","_classCallCheck","_typeof","toPrimitive","toPropertyKey","_defineProperties","_createClass","arr","each","slice","defaults","fieldContentRegExp","serializeCookie","maxAge","sameSite","cookie","minutes","domain","cookieOptions","nameEQ","ca","cookie$1","querystring","search","query","params","pos","hasLocalStorageSupport","localStorageAvailable","testKey","localStorage","hasSessionStorageSupport","sessionStorageAvailable","sessionStorage","navigator$1","htmlTag","subdomain","lookupFromSubdomainIndex","canCookies","order","getDefaults","Browser","i18nOptions","detector","detectionOrder","detected","detectorName","lookup","caches","cacheName","i$1","i18n","i18nResolver","i18Provider","initLitI18n","i18nextInstance","setI18n","registry","registryCleanup","details","isConnected","initialized","updateAll","translation","translateAndInit","translateDirective","PartType","TranslateBase","AsyncDirective","noChange","Translate","translate","directive","dayjs","localeData","weekday","LocalizedFormat","customParseFormat","DEFAULT_LOCALE","getDefaultLang","lang","i18next","LanguageDetector","en","hu","documentElementObserver","update","getTimeFormatPreference","locale","currentLocale","longTimeFormat","localeLower","accordionCounter","_AccordionBaseElement","html","_changedProperties","ifDefined","unsafeStatic","unsafeCSS","styles","AccordionBaseElement","__decorateClass","property","DapDSAccordion","customElement","DapDSAccordionGroup","accordion","openedAccordion","queryAssignedElements","freeGlobal","freeSelf","root","Symbol","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","getRawTag","isOwn","tag","unmasked","objectToString","nullTag","undefinedTag","baseGetTag","isObjectLike","symbolTag","isSymbol","arrayMap","array","iteratee","length","isArray","symbolProto","symbolToString","baseToString","toString","arrayReduce","accumulator","initAccum","basePropertyOf","deburredLetters","deburrLetter","reLatin","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsCombo","reComboMark","deburr","reAsciiWord","asciiWords","reHasUnicodeWord","hasUnicodeWord","rsAstralRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","reUnicodeWord","unicodeWords","words","guard","reApos","createCompounder","kebabCase","word","anchorClass","adoptLightStyles","element","global","supportsAdoptingStyleSheets","myStyleSheet","style","nonce","DapDSAnchorHeading","typographyStyles","DapDSAvatar","initials","size","nothing","displayInitials","baseClasses","state","DapDSAvatarGroup","slot","changedProperties","hiddenCount","totalCount","displayText","ariaLabel","avatar","DapDSBadge","iconSlot","assignedElements","hasIcon","iconNameMap","DapDSBanner","icon","DapDSBreadcrumbItem","DapDSBreadcrumb","items","el","item","isLast","separator","FeedbackMixin","constructor","FeedbackElement","FocusableMixin","FocusableElement","focusElement","CheckedAttributes","FormElementMixin","FormElement","oldValue","LabelableMixin","base","LabelableElement","id","content","setFromParentSize","JSONAttributeParser","convertedValue","getValidityStateObject","SizedMixin","SizedElement","changes","GenericFormElement","falsyToString","cx","cva","config","props","_config_compoundVariants","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","getCompoundVariantClassNames","cvClass","cvClassName","compoundVariantOptions","__objRest","buttonVariants","LOADING_ICON_SIZES","DapDSButton","url","handled","proxy","DapDSCalendarCell","currentTime","dateLabel","todayLabel","selectedLabel","dateStr","DapDSCalendar","date","month","monthOption","mutationList","days","__superGet","_old","setFocus","selectedCell","currentDate","week","from","dates","nextDate","minDate","maxDate","minYear","maxYear","minMonth","maxMonth","year","day","cell","firstDayofMonth","today","firstAllowedDay","offset","nextIndex","currentMonth","lastDay","lastDayCell","firstDay","firstDayCell","weekdays","isDisabled","queryAll","DapDSCallout","DapDSCard","DapDSCardActions","DapDSCardContent","DapDSCardImage","DapDSCardSubtitle","DapDSCardTitle","ChoiceElementMixin","ChoiceElement","LabelPositionedMixin","LabelPositionedElement","LabeledChoiceElement","DapDSCheckbox","ids","checked","indeterminate","disabled","_ComboboxBaseElement","hasOptions","input","mutations","shouldUpdateState","mutation","addedOptions","node","removedOptions","hasInputValue","inputValue","text","start","end","controlValueLength","isAutocompleteOrManual","showLoadingSpinner","ComboboxBaseElement","DapDSCombobox","KeyboardNavigationManager","container","lastClickedItem","htmlItem","focusIndex","lastClickedIndex","createOrUpdateLiveRegion","announcement","liveRegion","announceSelection","position","total","createKeyboardNavigationHandler","manager","min","max","round","floor","createCoords","oppositeSideMap","oppositeAlignmentMap","clamp","evaluate","getSide","placement","getAlignment","getOppositeAxis","axis","getAxisLength","yAxisSides","getSideAxis","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","mainAlignmentSide","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","lrPlacement","rlPlacement","tbPlacement","btPlacement","getSideList","side","isStart","getOppositeAxisPlacements","flipAlignment","direction","list","expandPaddingObject","padding","getPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","reference","floating","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","strategy","middleware","platform","validMiddleware","statefulPlacement","middlewareData","resetCount","nextX","nextY","reset","detectOverflow","_await$platform$isEle","elements","boundary","rootBoundary","elementContext","altBoundary","paddingObject","clippingClientRect","offsetParent","offsetScale","elementClientRect","arrow","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","alignmentOffset","flip","_middlewareData$arrow","_middlewareData$flip","initialPlacement","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","detectOverflowOptions","initialSideAxis","isBasePlacement","fallbackPlacements","hasFallbackAxisSideDirection","placements","overflow","overflows","overflowsData","sides","_middlewareData$flip2","_overflowsData$filter","nextPlacement","resetPlacement","_overflowsData$filter2","currentSideAxis","originSides","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","_middlewareData$offse","diffCoords","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","_state$middlewareData","_state$middlewareData2","apply","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","hasWindow","getNodeName","isNode","getWindow","_node$ownerDocument","getDocumentElement","isElement","isHTMLElement","isShadowRoot","invalidOverflowDisplayValues","isOverflowElement","overflowX","overflowY","display","getComputedStyle","tableElements","isTableElement","topLayerSelectors","isTopLayer","selector","_e","transformProperties","willChangeValues","containValues","isContainingBlock","elementOrCss","webkit","isWebKit","css","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","lastTraversableNodeNames","getNodeScroll","getNearestOverflowAncestor","parentNode","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","getCssDimensions","getComputedStyle$1","hasOffset","offsetWidth","offsetHeight","shouldFallback","unwrapElement","getScale","domElement","noOffsets","getVisualOffsets","shouldAddVisualOffsets","isFixed","floatingOffsetParent","getBoundingClientRect","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","left","top","getWindowScrollBarX","leftScroll","getHTMLOffset","documentElement","scroll","htmlRect","convertOffsetParentRelativeRectToViewportRelativeRect","topLayer","offsets","isOffsetParentAnElement","offsetRect","htmlOffset","getClientRects","getDocumentRect","body","SCROLLBAR_MAX","getViewportRect","visualViewport","visualViewportBased","windowScrollbarX","doc","bodyStyles","bodyMarginInline","clippingStableScrollbarWidth","absoluteOrFixed","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","getClippingElementAncestors","cachedResult","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingRect","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getDimensions","getRectRelativeToOffsetParent","setLeftRTLScrollbarOffset","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","getOffsetParent","svgOffsetParent","getElementRects","getOffsetParentFn","getDimensionsFn","floatingDimensions","isRTL","rectsAreEqual","observeMove","onMove","io","timeoutId","cleanup","_io","refresh","skip","threshold","elementRectForRootMargin","insetTop","insetRight","insetBottom","insetLeft","isFirstUpdate","handleObserve","entries","ratio","autoUpdate","ancestorScroll","ancestorResize","elementResize","layoutShift","animationFrame","referenceEl","ancestors","cleanupIo","reobserveFrame","resizeObserver","firstEntry","_resizeObserver","frameId","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","offset$1","shift$1","flip$1","size$1","arrow$1","platformWithCache","computePosition$1","_PopupBaseElement","changedProps","triggerRect","syncWidth","arrowX","arrowY","staticSide","PopupBaseElement","DapDSPopup","DapDSCommand","closeOnSelect","triggerElement","DapDSCommandGroup","clickedItem","DapDSCommandItem","DapDSContentSwitcher","inputs","values","DapDSContentSwitcherItem","_InputBaseElement","hasModifier","InputBaseElement","DapDSCopyBoxInput","inputElement","DapDSDAPBadge","iconTemplate","functionalUpdate","updater","makeStateUpdater","old","isFunction","isNumberArray","flattenBy","getChildren","flat","recurse","subArr","children","memo","getDeps","deps","depArgs","depTime","newDeps","dep","resultTime","depEndTime","resultEndTime","resultFpsPercentage","pad","num","getMemoOptions","tableOptions","debugLevel","onChange","_tableOptions$debugAl","createCell","table","row","column","columnId","getRenderValue","_cell$getValue","feature","createColumn","columnDef","depth","parent","_resolvedColumnDef$id","defaultColumn","resolvedColumnDef","accessorKey","accessorFn","originalRow","_result","_column$columns","orderColumns","_column$columns2","leafColumns","debug","createHeader","_options$id","header","leafHeaders","recurseHeader","Headers","allColumns","right","_left$map$filter","_right$map$filter","leftColumns","rightColumns","centerColumns","buildHeaderGroups","_left$map$filter2","orderedLeafColumns","_right$map$filter2","headerGroups","headerGroup","flatHeaders","_header$subHeaders","_header$subHeaders2","_header$subHeaders3","_left$0$headers","_left$","_center$0$headers","_center$","_right$0$headers","_right$","columnsToGroup","headerFamily","_headerGroups$0$heade","_headerGroups$","maxDepth","findMaxDepth","columns","createHeaderGroup","headersToGroup","pendingParentHeaders","headerToGroup","latestPendingParentHeader","isLeafHeader","isPlaceholder","bottomHeaders","recurseHeadersForSpans","headers","colSpan","rowSpan","childRowSpans","childColSpan","childRowSpan","minChildRowSpan","createRow","original","rowIndex","subRows","parentId","_row$getValue","parentRows","currentRow","parentRow","allCells","ColumnFaceting","includesString","filterValue","_filterValue$toString","testFalsey","includesStringSensitive","_row$getValue2","equalsString","_row$getValue3","arrIncludes","_row$getValue4","arrIncludesAll","_row$getValue5","arrIncludesSome","_row$getValue6","equals","weakEquals","inNumberRange","rowValue","unsafeMin","unsafeMax","parsedMin","parsedMax","filterFns","ColumnFiltering","firstRow","_table$options$filter","_table$options$filter2","_column$columnDef$ena","_table$options$enable","_table$options$enable2","_table$getState$colum","_table$getState$colum2","_table$getState$colum3","filterFn","previousFilter","newFilter","shouldAutoRemoveFilter","_old$filter","newFilterObj","_old$map","_table","updateFn","_functionalUpdate","filter","defaultState","_table$initialState$c","_table$initialState","sum","_leafRows","childRows","nextValue","extent","mean","leafRows","median","mid","nums","unique","uniqueCount","_columnId","aggregationFns","ColumnGrouping","_toString","_props$getValue","_table$getState$group","_table$getState$group2","canGroup","_table$options$aggreg","_table$options$aggreg2","_table$initialState$g","_row$subRows","grouping","groupedColumnMode","nonGroupingColumns","col","ColumnOrdering","_getVisibleLeafColumns","_columns$","_columns","columnOrder","orderedColumns","columnOrderCopy","columnsCopy","targetColumnId","foundIndex","getDefaultColumnPinningState","ColumnPinning","columnIds","_old$left3","_old$right3","_old$left","_old$right","_old$left2","_old$right2","_d$columnDef$enablePi","leafColumnIds","isLeft","isRight","leftAndRight","_pinningState$positio","pinningState","_pinningState$left","_pinningState$right","safelyAccessDocument","_document","defaultColumnSizing","getDefaultColumnSizingInfoState","ColumnSizing","_column$columnDef$min","_column$columnDef$max","columnSize","__restKey","_header$column$getSiz","prevSiblingHeader","_contextDocument","canResize","isTouchStartEvent","startSize","columnSizingStart","clientX","newColumnSizing","updateOffset","eventType","clientXPos","_old$startOffset","_old$startSize","deltaDirection","deltaOffset","deltaPercentage","_ref3","headerSize","onEnd","contextDocument","mouseEvents","touchEvents","_e$touches$","passiveIfSupported","passiveEventSupported","_table$initialState$c2","_table$getHeaderGroup","_table$getHeaderGroup2","_table$getLeftHeaderG","_table$getLeftHeaderG2","_table$getCenterHeade","_table$getCenterHeade2","_table$getRightHeader","_table$getRightHeader2","passiveSupported","supported","ColumnVisibility","childColumns","cells","makeVisibleColumnsMethod","getColumns","_value","_target","GlobalFaceting","GlobalFiltering","_table$getCoreRowMode","_table$options$getCol","globalFilterFn","RowExpanding","registered","queued","_table$options$autoRe","expanded","_table$initialState$e","splitId","_expanded","exists","oldExpanded","rowId","_table$options$getIsR","_table$options$getRow","isFullyExpanded","canExpand","defaultPageIndex","defaultPageSize","getDefaultPaginationState","RowPagination","safeUpdater","_table$initialState$p","pageIndex","maxPageIndex","_table$initialState$p2","_table$initialState$p3","_table$initialState2","pageSize","topRowIndex","_table$options$pageCo","newPageCount","pageCount","pageOptions","_table$options$pageCo2","_table$options$rowCou","getDefaultRowPinningState","RowPinning","includeLeafRows","includeParentRows","leafRowIds","parentRowIds","rowIds","_old$top3","_old$bottom3","_old$top","_old$bottom","_old$top2","_old$bottom2","enableRowPinning","enablePinning","bottom","isTop","isBottom","_ref4","_visiblePinnedRowIds$","visiblePinnedRowIds","_ref5","_table$initialState$r","_pinningState$top","_pinningState$bottom","visibleRows","pinnedRowIds","_table$options$keepPi","allRows","topPinnedRowIds","bottomPinnedRowIds","topAndBottom","RowSelection","rowSelection","preGroupedFlatRows","resolvedValue","mutateRowIsSelected","rowModel","selectRowsFn","isAllRowsSelected","paginationFlatRows","isAllPageRowsSelected","_table$getState$rowSe","totalSelected","isSelected","_opts$selectChildren","selectedRowIds","isRowSelected","isSubRowSelected","_table$options$enable3","canSelect","includeChildren","newSelectedFlatRows","newSelectedRowsById","recurseRows","rows","_row$subRows2","selection","_selection$row$id","_row$subRows3","allChildrenSelected","someSelected","subRow","subRowChildrenSelected","reSplitAlphaNumeric","alphanumeric","rowA","rowB","compareAlphanumeric","alphanumericCaseSensitive","compareBasic","textCaseSensitive","datetime","basic","aStr","bStr","aa","bb","an","bn","combo","sortingFns","RowSorting","firstRows","_table$options$sortin","_table$options$sortin2","desc","multi","nextSortingOrder","hasManualValue","existingSorting","existingIndex","newSorting","sortAction","nextDesc","_table$options$maxMul","_column$columnDef$sor","firstSortDirection","isSorted","_column$columnDef$ena2","_table$getState$sorti","columnSort","_table$getState$sorti2","_table$getState$sorti3","canSort","_table$initialState$s","builtInFeatures","createTable","_options$_features","_options$initialState","_features","defaultOptions","mergeOptions","initialState","_feature$getInitialSt","queuedTimeout","coreInstance","cb","newOptions","searchAll","_defaultColumn","_props$renderValue$to","_props$renderValue","columnDefs","recurseColumns","groupingColumnDef","flatColumns","getCoreRowModel","accessRows","originalRows","_row$originalSubRows","expandRows","expandedRows","handleRow","getPaginationRowModel","pagination","flatRows","rowsById","pageStart","pageEnd","paginatedRowModel","getSortedRowModel","sorting","sortingState","sortedFlatRows","availableSorting","sort","_table$getColumn","columnInfoById","sortEntry","sortData","sortedData","_sortEntry$desc","columnInfo","sortUndefined","isDesc","sortInt","aValue","bValue","aUndefined","bUndefined","flexRender","Comp","TableController","host","__publicField","resolvedOptions","prev","MULTISELECT_COLUMN_ID","DapDSDataTable","repeat","rowCount","cellCount","_index","nextSortOrder","disableDefaultSorting","headerStyle","contentStyle","sortIcon","sortTitle","elementTag","clickHandler","cursorStyle","updaterOrValue","DapDSDatePicker","trimmedValue","localeFormat","parsedDate","formattedDate","normalizedInput","setInputValue","sendEmptyEventOnInput","DapDSDivider","DapDSFeedback","HttpError","message","response","status","FileError","file","meta","DapDSFileInput","file1","file2","acceptedType","baseType","fileList","errors","totalSize","fileData","fileName","uploadResult","customEvent","loading","fileComponent","xhr","newProgress","deleteEndpoint","files","totalFiles","completedUploads","formData","progress","dataTransfer","targetFiles","validation","droppedFiles","DapDSFileInputList","fileComponents","linkSlot","hasLinkSlot","DapDSFileInputListItem","canvas","ctx","img","maxSize","sizes","DapDSFormLabel","DapDSInputGroup","checkedInput","KEY_CODES","DapDSRadioGroup","radios","radio","firstFocusable","checkedRadio","step","isValid","DapDSIcon","IconTag","DapDSIconButton","DapDSInput","DapDSLabel","DapDSLink","DapDSListItem","staticIcon","_ModalBaseElement","open","focusableSelectors","assignedElement","activeElement","focusedElement","firstFocusableElement","lastFocusableElement","ModalBaseElement","DapDSModal","DapDSNavigationMenu","openingItem","DapDSNavigationMenuItem","triggerElements","trigger","href","defaultButton","triggerHref","childNodes","popupStyles","DapDSNotificationBadge","slotElement","slottedElements","isCircular","borderRadius","minDimension","sheet","selectorText","radius","angle","offsetDistance","parsed","parsedContent","DapDSNumberInput","escapedDecimalSeparator","normalizedValue","numericValue","currentValue","DapDSOfficialWebsiteBanner","accordionStyles","officialStyles","DapDSOptionItem","DapDSOptionList","isModifierKeyPressed","isAlreadySelected","emptyItem","char","queryString","mainSlot","embeddedSlot","ro","valueLowerCase","activeOption","nearest","keyCode","allOptions","nextOption","renderedItem","firstOption","DapDSOverlay","DapDSPager","totalRows","action","label","slotName","isLastPage","DapDSPasswordInput","DapDSRadioButton","DapDSRating","stars","isActive","isHovered","DapDSScrollArea","updateThumbSize","scrollHeight","clientHeight","thumbHeight","scrollWidth","clientWidth","thumbWidth","updateThumbPosition","scrollTop","thumbPosition","scrollLeft","handleThumbMouseDown","handleThumbMouseMove","handleThumbMouseUp","deltaY","scrollRatio","deltaX","orientation","DapDSSearch","DapDSSelect","DapDSSideNav","activeItem","activeGroup","DapDSSideNavGroup","DapDSSideNavItem","DapDSSkeleton","keyframesCSS","DapDSSkipLink","DapDSSnackbar","lastMessage","newId","newMessage","messageItem","duration","durationTime","announcer","DapDSSnackbarMessage","actionItem","iconName","styleMap","DapDSSpinner","DapDSStack","spacing","startMargin","endMargin","DapDSSwitch","DapDSTab","DapDSTabGroup","tabId","tabElements","tabNavItems","activeTabIds","tab","tabTitle","currentTabIndex","flag","newTabIndex","map","DapDSTable","DapDSTableCell","DapDSTableHeader","DapDSTableRow","DapDSTextarea","counter","DapDSTimeline","child","DapDSTimelineItem","DapDSTimeGrid","hour","minute","time","hourColumn","hourButtons","selectedHourButton","button","minuteColumn","minuteButtons","selectedMinuteButton","DapDSTimePicker","inputTime","minTime","maxTime","DapDSTOC","entry","link","textContent","anchor","level","viewportCenter","bestAnchor","bestScore","distanceFromCenter","score","tree","baseElement","minHeadingLevel","maxHeadingLevel","nextLevelHeaders","lastLevel","buildSubTree","listHTML","DapDSToggleButton","TOOLTIP_OFFSET","DapDSTooltip","triggerType","DapDSTray","DapDSTypography","elementId","customClass","bodyAs","ArrowsArrowDownLine","ArrowsArrowDownSFill","ArrowsArrowDownSLine","ArrowsArrowLeftDownLine","ArrowsArrowLeftLLine","ArrowsArrowLeftLine","ArrowsArrowLeftSFill","ArrowsArrowLeftSLine","ArrowsArrowLeftUpLine","ArrowsArrowRightDownLine","ArrowsArrowRightLLine","ArrowsArrowRightLine","ArrowsArrowRightSFill","ArrowsArrowRightSLine","ArrowsArrowRightUpLine","ArrowsArrowUpLine","ArrowsArrowUpSFill","ArrowsArrowUpSLine","ArrowsExpandUpDownFill","BuildingsHome6Line","BusinessCalendarLine","DesignEditLine","DesignToolsLine","DeviceComputerLine","DocumentClipboardLine","DocumentFileCopyLine","DocumentFileImageLine","DocumentFileMusicLine","DocumentFileTextLine","DocumentFileVideoLine","DocumentFolderLine","DocumentFolderOpenLine","HealthHeartFill","HealthHeartLine","OthersCookieLine","SystemAddLine","SystemAlertFill","SystemAlertLine","SystemCheckLine","SystemCheckLine2","SystemCheckboxBlankCircleFill","SystemCheckboxBlankCircleFillCheck","SystemCheckboxBlankCircleLine","SystemCheckboxCircleFill","SystemCheckboxCircleLine","SystemCloseCircleFill","SystemCloseCircleLine","SystemCloseFill","SystemCloseLine","SystemDeleteBinFill","SystemDeleteBinLine","SystemDownloadLine","SystemErrorWarningFill","SystemErrorWarningLine","SystemExternalLinkLine","SystemEyeLine","SystemEyeOffLine","SystemForbidFill","SystemInformation2Fill","SystemInformationFill","SystemInformationLine","SystemLightbulbFill","SystemLoadingSpinner","SystemLockFill","SystemLockLine","SystemMenuLine","SystemMenuLineS","SystemMore2Line","SystemMoreLine","SystemSearchLine","SystemShareLine","SystemShieldCheckFill","SystemShieldCheckLine","SystemStarFill","SystemSubtractLine","SystemSubtractLine2","SystemTimeFill","SystemTimeLine","SystemUpload2Fill","SystemUpload2Line","SystemUploadLine","UserAccountCircleFill","UserAccountCircleLine","UserUserFill","UserUserLine"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,MAAMA,IAAE,OAAG,CAAC,GAAEC,MAAI;EAAUA,eAAEA,EAAE,eAAgB,MAAI;AAAC,mBAAe,OAAO,GAAE,CAAC;AAAA,EAAC,CAAC,IAAG,eAAe,OAAO,GAAE,CAAC;AAAC;ACL7G;AAAA;AAAA;AAAA;AAAA;AAKA,MAAMD,KAAE,YAAWE,KAAEF,GAAE,eAAsBA,GAAE,aAAX,UAAqBA,GAAE,SAAS,iBAAe,wBAAuB,SAAS,aAAW,aAAY,cAAc,WAAUG,KAAE,OAAM,GAAGF,KAAE,oBAAI;AAAQ,IAAAG,KAAA,MAAO;AAAA,EAAC,YAAYJ,GAAEE,GAAE,GAAE;AAAC,QAAG,KAAK,eAAa,IAAG,MAAIC,GAAE,OAAM,MAAM,mEAAmE;AAAE,SAAK,UAAQH,GAAE,KAAK,IAAEE;AAAA,EAAC;AAAA,EAAC,IAAI,aAAY;AAAC,QAAIF,IAAE,KAAK;AAAE,UAAMG,IAAE,KAAK;AAAE,QAAGD,MAAYF,MAAT,QAAW;AAAC,YAAME,IAAWC,MAAT,UAAgBA,EAAE,WAAN;AAAa,MAAAD,MAAIF,IAAEC,GAAE,IAAIE,CAAC,IAAYH,MAAT,YAAc,KAAK,IAAEA,IAAE,IAAI,iBAAe,YAAY,KAAK,OAAO,GAAEE,KAAGD,GAAE,IAAIE,GAAEH,CAAC;AAAA,IAAE;AAAC,WAAOA;AAAA,EAAC;AAAA,EAAC,WAAU;AAAC,WAAO,KAAK;AAAA,EAAO;AAAC;AAAC,MAAMK,IAAE,OAAG,IAAIC,GAAY,OAAO,KAAjB,WAAmB,IAAE,IAAE,IAAG,QAAOH,EAAC,GAAEI,KAAE,CAAC,MAAK,MAAI;AAAC,QAAMN,IAAM,EAAE,WAAN,IAAa,EAAE,CAAC,IAAE,EAAE,OAAQ,CAACC,GAAEC,GAAEF,MAAIC,KAAG,CAAAF,MAAG;AAAC,QAAQA,EAAE,iBAAP,GAAoB,QAAOA,EAAE;AAAQ,QAAa,OAAOA,KAAjB,SAAmB,QAAOA;AAAE,UAAM,MAAM,qEAAmEA,IAAE,sFAAsF;AAAA,EAAC,GAAGG,CAAC,IAAE,EAAEF,IAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAAE,SAAO,IAAIK,GAAEL,GAAE,GAAEE,EAAC;AAAC,GAAEK,KAAE,CAACL,GAAEF,MAAI;AAAC,MAAGC,GAAE,CAAAC,EAAE,qBAAmBF,EAAE,IAAK,CAAAD,MAAGA,aAAa,gBAAcA,IAAEA,EAAE;MAAkB,YAAUE,KAAKD,GAAE;AAAC,UAAM,IAAE,SAAS,cAAc,OAAO,GAAEK,IAAEN,GAAE;AAAS,IAASM,MAAT,UAAY,EAAE,aAAa,SAAQA,CAAC,GAAE,EAAE,cAAYJ,EAAE,SAAQC,EAAE,YAAY,CAAC;AAAA,EAAC;AAAC,GAAEM,KAAEP,KAAE,OAAG,IAAE,OAAG,aAAa,iBAAe,CAAAF,MAAG;AAAC,MAAIE,IAAE;AAAG,aAAUC,KAAKH,EAAE,SAAS,CAAAE,KAAGC,EAAE;AAAQ,SAAOE,EAAEH,CAAC;AAAC,GAAG,CAAC,IAAE;ACJ3zC;AAAA;AAAA;AAAA;AAAA;AAIG,MAAK,EAAC,IAAGK,IAAE,gBAAeL,IAAE,0BAAyBQ,IAAE,qBAAoBL,IAAE,uBAAsBJ,IAAE,gBAAeK,GAAC,IAAE,QAAOK,KAAE,YAAWF,KAAEE,GAAE,cAAaC,KAAEH,KAAEA,GAAE,cAAY,IAAGI,KAAEF,GAAE,gCAA+BG,KAAE,CAAC,GAAEX,MAAI,GAAEY,KAAE,EAAC,YAAY,GAAEZ,GAAE;AAAC,UAAOA,GAAG;AAAA,IAAA,KAAK;AAAQ,UAAE,IAAES,KAAE;AAAK;AAAA,IAAM,KAAK;AAAA,IAAO,KAAK;AAAM,UAAQ,KAAN,OAAQ,IAAE,KAAK,UAAU,CAAC;AAAA,EAAC;AAAC,SAAO;AAAC,GAAE,cAAc,GAAET,GAAE;AAAC,MAAI,IAAE;AAAE,UAAOA;IAAG,KAAK;AAAQ,UAAS,MAAP;AAAS;AAAA,IAAM,KAAK;AAAO,UAAS,MAAP,OAAS,OAAK,OAAO,CAAC;AAAE;AAAA,IAAM,KAAK;AAAA,IAAO,KAAK;AAAM,UAAG;AAAC,YAAE,KAAK,MAAM,CAAC;AAAA,MAAC,SAAOH,GAAE;AAAC,YAAE;AAAA,MAAI;AAAA,EAAC;AAAC,SAAO;AAAC,EAAC,GAAEgB,KAAE,CAAC,GAAEb,MAAI,CAACI,GAAE,GAAEJ,CAAC,GAAEc,KAAE,EAAC,WAAU,IAAG,MAAK,QAAO,WAAUF,IAAE,SAAQ,IAAG,YAAW,IAAG,YAAWC,GAAC;AFLjnB,IAAAE,IAAAC;AAAA,CEKmnBD,KAAA,OAAO,aAAP,gBAAO,WAAW,OAAO,UAAU,KAAEP,KAAAA,GAAE,wBAAFA,SAAAA,GAAE,sBAAsB,oBAAI;AAAQ,IAAAS,KAAA,cAAgB,YAAW;AAAA,EAAC,OAAO,eAAepB,GAAE;AFLhvB,QAAAkB;AEKivB,SAAK,KAAI,KAAIA,IAAA,KAAK,MAAL,OAAAA,IAAA,KAAK,IAAI,CAAA,GAAI,KAAKlB,CAAC;AAAA,EAAC;AAAA,EAAC,WAAW,qBAAoB;AAAC,WAAO,KAAK,SAAU,GAAC,KAAK,QAAM,CAAC,GAAG,KAAK,KAAK,KAAM,CAAA;AAAA,EAAC;AAAA,EAAC,OAAO,eAAeA,GAAEG,IAAEc,IAAE;AAAC,QAAGd,EAAE,UAAQA,EAAE,YAAU,KAAI,KAAK,KAAM,GAAC,KAAK,UAAU,eAAeH,CAAC,OAAKG,IAAE,OAAO,OAAOA,CAAC,GAAG,UAAQ,KAAI,KAAK,kBAAkB,IAAIH,GAAEG,CAAC,GAAE,CAACA,EAAE,YAAW;AAAC,YAAMI,IAAE,OAAM,GAAGG,IAAE,KAAK,sBAAsBV,GAAEO,GAAEJ,CAAC;AAAE,MAASO,MAAT,UAAYR,GAAE,KAAK,WAAUF,GAAEU,CAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,OAAO,sBAAsBV,GAAEG,GAAEI,GAAE;AFL/pC,QAAAW;AEKgqC,UAAK,EAAC,KAAIhB,GAAE,KAAIG,EAAC,KAAEK,IAAAA,GAAE,KAAK,WAAUV,CAAC,MAAlBU,OAAAA,IAAqB,EAAC,MAAK;AAAC,aAAO,KAAKP,CAAC;AAAA,IAAC,GAAE,IAAIH,GAAE;AAAC,WAAKG,CAAC,IAAEH;AAAA,IAAC,EAAC;AAAE,WAAM,EAAC,KAAIE,GAAE,IAAIC,GAAE;AAAC,YAAMO,IAAER,KAAA,gBAAAA,EAAG,KAAK;AAAM,MAAAG,KAAA,QAAAA,EAAG,KAAK,MAAKF,IAAG,KAAK,cAAcH,GAAEU,GAAEH,CAAC;AAAA,IAAC,GAAE,cAAa,IAAG,YAAW,GAAE;AAAA,EAAC;AAAA,EAAC,OAAO,mBAAmBP,GAAE;AFLl4C,QAAAkB;AEKm4C,YAAOA,IAAA,KAAK,kBAAkB,IAAIlB,CAAC,MAA5B,OAAAkB,IAA+BD;AAAA,EAAC;AAAA,EAAC,OAAO,OAAM;AAAC,QAAG,KAAK,eAAeH,GAAE,mBAAmB,CAAC,EAAE;AAAO,UAAMd,IAAEM,GAAE,IAAI;AAAE,IAAAN,EAAE,SAAU,GAAUA,EAAE,MAAX,WAAe,KAAK,IAAE,CAAC,GAAGA,EAAE,CAAC,IAAG,KAAK,oBAAkB,IAAI,IAAIA,EAAE,iBAAiB;AAAA,EAAC;AAAA,EAAC,OAAO,WAAU;AAAC,QAAG,KAAK,eAAec,GAAE,WAAW,CAAC,EAAE;AAAO,QAAG,KAAK,YAAU,IAAG,KAAK,KAAM,GAAC,KAAK,eAAeA,GAAE,YAAY,CAAC,GAAE;AAAC,YAAMd,IAAE,KAAK,YAAWG,IAAE,CAAC,GAAGE,GAAEL,CAAC,GAAE,GAAGC,GAAED,CAAC,CAAC;AAAE,iBAAUO,KAAKJ,EAAE,MAAK,eAAeI,GAAEP,EAAEO,CAAC,CAAC;AAAA,IAAC;AAAC,UAAMP,IAAE,KAAK,OAAO,QAAQ;AAAE,QAAUA,MAAP,MAAS;AAAC,YAAMG,IAAE,oBAAoB,IAAIH,CAAC;AAAE,UAAYG,MAAT,OAAW,YAAS,CAACH,GAAEO,CAAC,KAAIJ,EAAE,MAAK,kBAAkB,IAAIH,GAAEO,CAAC;AAAA,IAAC;AAAC,SAAK,OAAK,oBAAI;AAAI,eAAS,CAACP,GAAEG,CAAC,KAAI,KAAK,mBAAkB;AAAC,YAAMI,IAAE,KAAK,KAAKP,GAAEG,CAAC;AAAE,MAASI,MAAT,UAAY,KAAK,KAAK,IAAIA,GAAEP,CAAC;AAAA,IAAC;AAAC,SAAK,gBAAc,KAAK,eAAe,KAAK,MAAM;AAAA,EAAC;AAAA,EAAC,OAAO,eAAeG,GAAE;AAAC,UAAM,IAAE,CAAE;AAAC,QAAG,MAAM,QAAQA,CAAC,GAAE;AAAC,YAAMD,IAAE,IAAI,IAAIC,EAAE,KAAK,KAAG,EAAE,QAAS,CAAA;AAAE,iBAAUA,KAAKD,EAAE,GAAE,QAAQF,GAAEG,CAAC,CAAC;AAAA,IAAC,MAAM,CAASA,MAAT,UAAY,EAAE,KAAKH,GAAEG,CAAC,CAAC;AAAE,WAAO;AAAA,EAAC;AAAA,EAAC,OAAO,KAAKH,GAAEG,GAAE;AAAC,UAAMI,IAAEJ,EAAE;AAAU,WAAWI,MAAL,KAAO,SAAiB,OAAOA,KAAjB,WAAmBA,IAAY,OAAOP,KAAjB,WAAmBA,EAAE,YAAa,IAAC;AAAA,EAAM;AAAA,EAAC,cAAa;AAAC,UAAK,GAAG,KAAK,OAAK,QAAO,KAAK,kBAAgB,IAAG,KAAK,aAAW,IAAG,KAAK,OAAK,MAAK,KAAK,KAAI;AAAA,EAAE;AAAA,EAAC,OAAM;AFLvgF,QAAAkB;AEKwgF,SAAK,OAAK,IAAI,QAAS,CAAAlB,MAAG,KAAK,iBAAeA,CAAC,GAAG,KAAK,OAAK,oBAAI,OAAI,KAAK,KAAI,GAAG,KAAK,kBAAgBkB,IAAA,KAAK,YAAY,MAAjB,QAAAA,EAAoB,QAAS,CAAAlB,MAAGA,EAAE,IAAI;AAAA,EAAG;AAAA,EAAC,cAAcA,GAAE;AFLvqF,QAAAkB,GAAAC;AEKwqF,MAACD,IAAA,KAAK,SAAL,OAAAA,IAAA,KAAK,OAAO,oBAAI,OAAK,IAAIlB,CAAC,GAAW,KAAK,eAAd,UAA0B,KAAK,iBAAamB,IAAAnB,EAAE,kBAAF,QAAAmB,EAAA,KAAAnB;AAAA,EAAmB;AAAA,EAAC,iBAAiBA,GAAE;AFLxxF,QAAAkB;AEKyxF,KAAAA,IAAA,KAAK,SAAL,QAAAA,EAAW,OAAOlB;AAAA,EAAE;AAAA,EAAC,OAAM;AAAC,UAAMA,IAAE,oBAAI,OAAIG,IAAE,KAAK,YAAY;AAAkB,eAAUI,KAAKJ,EAAE,KAAI,EAAG,MAAK,eAAeI,CAAC,MAAIP,EAAE,IAAIO,GAAE,KAAKA,CAAC,CAAC,GAAE,OAAO,KAAKA,CAAC;AAAG,IAAAP,EAAE,OAAK,MAAI,KAAK,OAAKA;AAAA,EAAE;AAAA,EAAC,mBAAkB;AFLt+F,QAAAkB;AEKu+F,UAAMlB,KAAEkB,IAAA,KAAK,eAAL,OAAAA,IAAiB,KAAK,aAAa,KAAK,YAAY,iBAAiB;AAAE,WAAOf,GAAEH,GAAE,KAAK,YAAY,aAAa,GAAEA;AAAA,EAAC;AAAA,EAAC,oBAAmB;AFLtnG,QAAAkB,GAAAC;AEKunG,KAAAD,IAAA,KAAK,eAAL,cAAK,aAAa,KAAK,iBAAkB,IAAC,KAAK,eAAe,EAAE,IAAEC,IAAA,KAAK,SAAL,QAAAA,EAAW,QAAS,CAAAnB,MAAC;AFL9sG,UAAAkB;AEKgtG,cAAAA,IAAAlB,EAAE,kBAAF,gBAAAkB,EAAA,KAAAlB;AAAA;AAAA,EAAqB;AAAA,EAAC,eAAeA,GAAE;AAAA,EAAE;AAAA,EAAA,uBAAsB;AFL/wG,QAAAkB;AEKgxG,KAAAA,IAAA,KAAK,SAAL,QAAAA,EAAW,QAAS,CAAAlB,MAAC;AFLryG,UAAAkB;AEKuyG,cAAAA,IAAAlB,EAAE,qBAAF,gBAAAkB,EAAA,KAAAlB;AAAA;AAAA,EAAwB;AAAA,EAAC,yBAAyBA,GAAEG,GAAEI,GAAE;AAAC,SAAK,KAAKP,GAAEO,CAAC;AAAA,EAAC;AAAA,EAAC,KAAKP,GAAEG,GAAE;AFLx3G,QAAAe;AEKy3G,UAAMX,IAAE,KAAK,YAAY,kBAAkB,IAAIP,CAAC,GAAEE,IAAE,KAAK,YAAY,KAAKF,GAAEO,CAAC;AAAE,QAAYL,MAAT,UAAiBK,EAAE,YAAP,IAAe;AAAC,YAAMG,OAAYQ,IAAAX,EAAE,cAAF,gBAAAW,EAAa,iBAAtB,SAAkCX,EAAE,YAAUQ,IAAG,YAAYZ,GAAEI,EAAE,IAAI;AAAE,WAAK,OAAKP,GAAQU,KAAN,OAAQ,KAAK,gBAAgBR,CAAC,IAAE,KAAK,aAAaA,GAAEQ,CAAC,GAAE,KAAK,OAAK;AAAA,IAAI;AAAA,EAAC;AAAA,EAAC,KAAKV,GAAEG,GAAE;AFLnpH,QAAAe,GAAAC,GAAAE,GAAAC;AEKopH,UAAMf,IAAE,KAAK,aAAYL,IAAEK,EAAE,KAAK,IAAIP,CAAC;AAAE,QAAYE,MAAT,UAAY,KAAK,SAAOA,GAAE;AAAC,YAAMF,IAAEO,EAAE,mBAAmBL,CAAC,GAAEQ,IAAc,OAAOV,EAAE,aAArB,aAA+B,EAAC,eAAcA,EAAE,UAAS,MAAWkB,IAAAlB,EAAE,cAAF,gBAAAkB,EAAa,mBAAtB,SAAoClB,EAAE,YAAUe;AAAE,WAAK,OAAKb,GAAE,KAAKA,CAAC,KAAEoB,KAAAD,IAAAX,EAAE,cAAcP,GAAEH,EAAE,IAAI,MAAxB,OAAAqB,KAA2BF,IAAA,KAAK,SAAL,gBAAAA,EAAW,IAAIjB,OAA1C,OAAAoB,IAA8C,MAAK,KAAK,OAAK;AAAA,IAAI;AAAA,EAAC;AAAA,EAAC,cAActB,GAAEG,GAAEI,GAAE;AFLr9H,QAAAW,GAAAC;AEKs9H,QAAYnB,MAAT,QAAW;AAAC,YAAME,IAAE,KAAK,aAAYQ,IAAE,KAAKV,CAAC;AAAE,UAAGO,KAAA,SAAAA,IAAIL,EAAE,mBAAmBF,CAAC,IAAE,IAAGkB,IAAAX,EAAE,eAAF,OAAAW,IAAcF,IAAGN,GAAEP,CAAC,KAAGI,EAAE,cAAYA,EAAE,WAASG,QAAIS,IAAA,KAAK,SAAL,gBAAAA,EAAW,IAAInB,OAAI,CAAC,KAAK,aAAaE,EAAE,KAAKF,GAAEO,CAAC,CAAC,GAAG;AAAO,WAAK,EAAEP,GAAEG,GAAEI,CAAC;AAAA,IAAC;AAAG,IAAG,KAAK,oBAAR,OAA0B,KAAK,OAAK,KAAK,KAAM;AAAA,EAAC;AAAA,EAAC,EAAEP,GAAEG,GAAE,EAAC,YAAWI,GAAE,SAAQL,GAAE,SAAQQ,EAAC,GAAEL,GAAE;AFLrwI,QAAAa,GAAAC,GAAAE;AEKswI,IAAAd,KAAG,GAAEW,IAAA,KAAK,SAAL,OAAAA,IAAA,KAAK,OAAO,oBAAI,OAAK,IAAIlB,CAAC,MAAI,KAAK,KAAK,IAAIA,IAAEmB,IAAAd,KAAA,OAAAA,IAAGF,MAAH,OAAAgB,IAAM,KAAKnB,CAAC,CAAC,GAAOU,MAAL,MAAiBL,MAAT,YAAc,KAAK,KAAK,IAAIL,CAAC,MAAI,KAAK,cAAYO,MAAIJ,IAAE,SAAQ,KAAK,KAAK,IAAIH,GAAEG,CAAC,IAAQD,MAAL,MAAQ,KAAK,SAAOF,OAAIqB,IAAA,KAAK,SAAL,OAAAA,IAAA,KAAK,OAAO,oBAAI,OAAK,IAAIrB,CAAC;AAAA,EAAE;AAAA,EAAO,OAAM;AAAA,WAAAuB,EAAA;AAAC,WAAK,kBAAgB;AAAG,UAAG;AAAC,cAAM,KAAK;AAAA,MAAI,SAAOvB,GAAE;AAAC,gBAAQ,OAAOA,CAAC;AAAA,MAAC;AAAC,YAAMA,IAAE,KAAK,eAAc;AAAG,aAAaA,KAAN,SAAS,MAAMA,IAAE,CAAC,KAAK;AAAA,IAAe;AAAA;AAAA,EAAC,iBAAgB;AAAC,WAAO,KAAK,cAAe;AAAA,EAAA;AAAA,EAAC,gBAAe;AFLrrJ,QAAAkB,GAAAC;AEKsrJ,QAAG,CAAC,KAAK,gBAAgB;AAAO,QAAG,CAAC,KAAK,YAAW;AAAC,WAAGD,IAAA,KAAK,eAAL,cAAK,aAAa,KAAK,iBAAkB,IAAC,KAAK,MAAK;AAAC,mBAAS,CAAClB,GAAEG,CAAC,KAAI,KAAK,KAAK,MAAKH,CAAC,IAAEG;AAAE,aAAK,OAAK;AAAA,MAAM;AAAC,YAAMH,IAAE,KAAK,YAAY;AAAkB,UAAGA,EAAE,OAAK,EAAE,YAAS,CAACG,GAAEI,CAAC,KAAIP,GAAE;AAAC,cAAK,EAAC,SAAQA,EAAC,IAAEO,GAAEL,IAAE,KAAKC,CAAC;AAAE,QAAKH,MAAL,MAAQ,KAAK,KAAK,IAAIG,CAAC,KAAYD,MAAT,UAAY,KAAK,EAAEC,GAAE,QAAOI,GAAEL,CAAC;AAAA,MAAC;AAAA,IAAC;AAAC,QAAIF,IAAE;AAAG,UAAMG,IAAE,KAAK;AAAK,QAAG;AAAC,MAAAH,IAAE,KAAK,aAAaG,CAAC,GAAEH,KAAG,KAAK,WAAWG,CAAC,IAAEgB,IAAA,KAAK,SAAL,QAAAA,EAAW,QAAS,CAAAnB,MAAC;AFL9lK,YAAAkB;AEKgmK,gBAAAA,IAAAlB,EAAE,eAAF,gBAAAkB,EAAA,KAAAlB;AAAA,UAAmB,KAAK,OAAOG,CAAC,KAAG,KAAK,KAAM;AAAA,IAAA,SAAO,GAAE;AAAC,YAAMH,IAAE,IAAG,KAAK,KAAM,GAAC;AAAA,IAAC;AAAC,IAAAA,KAAG,KAAK,KAAKG,CAAC;AAAA,EAAC;AAAA,EAAC,WAAWH,GAAE;AAAA,EAAE;AAAA,EAAA,KAAKA,GAAE;AFLvtK,QAAAkB;AEKwtK,KAAAA,IAAA,KAAK,SAAL,QAAAA,EAAW,QAAS,CAAAlB,MAAC;AFL7uK,UAAAkB;AEK+uK,cAAAA,IAAAlB,EAAE,gBAAF,gBAAAkB,EAAA,KAAAlB;AAAA,QAAoB,KAAK,eAAa,KAAK,aAAW,IAAG,KAAK,aAAaA,CAAC,IAAG,KAAK,QAAQA,CAAC;AAAA,EAAC;AAAA,EAAC,OAAM;AAAC,SAAK,OAAK,oBAAI,OAAI,KAAK,kBAAgB;AAAA,EAAE;AAAA,EAAC,IAAI,iBAAgB;AAAC,WAAO,KAAK,kBAAmB;AAAA,EAAA;AAAA,EAAC,oBAAmB;AAAC,WAAO,KAAK;AAAA,EAAI;AAAA,EAAC,aAAaA,GAAE;AAAC,WAAQ;AAAA,EAAA;AAAA,EAAC,OAAOA,GAAE;AAAC,SAAK,SAAL,KAAK,OAAO,KAAK,KAAK,QAAS,CAAAA,MAAG,KAAK,KAAKA,GAAE,KAAKA,CAAC,CAAC,CAAC,IAAG,KAAK,KAAM;AAAA,EAAA;AAAA,EAAC,QAAQA,GAAE;AAAA,EAAA;AAAA,EAAE,aAAaA,GAAE;AAAA,EAAE;AAAA;AFL9lL,IAAAkB;AEK+lLM,GAAE,gBAAc,CAAE,GAACA,GAAE,oBAAkB,EAAC,MAAK,OAAM,GAAEA,GAAEV,GAAE,mBAAmB,CAAC,IAAE,oBAAI,OAAIU,GAAEV,GAAE,WAAW,CAAC,IAAE,oBAAI,OAAID,MAAAA,QAAAA,GAAI,EAAC,iBAAgBW,GAAC,MAAIb,KAAAA,GAAE,4BAAFA,OAAAA,KAAAA,GAAE,0BAA0B,CAAE,GAAE,KAAK,OAAO;ACJtxL;AAAA;AAAA;AAAA;AAAA;AAIG,MAAMV,KAAE,EAAC,WAAU,IAAG,MAAK,QAAO,WAAUD,IAAE,SAAQ,IAAG,YAAWE,GAAC,GAAEG,KAAE,CAAC,IAAEJ,IAAE,GAAEI,MAAI;AAAC,QAAK,EAAC,MAAKC,GAAE,UAASC,EAAC,IAAEF;AAAE,MAAI,IAAE,WAAW,oBAAoB,IAAIE,CAAC;AAAE,MAAY,MAAT,UAAY,WAAW,oBAAoB,IAAIA,GAAE,IAAE,oBAAI,KAAG,GAAaD,MAAX,cAAgB,IAAE,OAAO,OAAO,CAAC,GAAG,UAAQ,KAAI,EAAE,IAAID,EAAE,MAAK,CAAC,GAAeC,MAAb,YAAe;AAAC,UAAK,EAAC,MAAKL,EAAC,IAAEI;AAAE,WAAM,EAAC,IAAIA,GAAE;AAAC,YAAMC,IAAE,EAAE,IAAI,KAAK,IAAI;AAAE,QAAE,IAAI,KAAK,MAAKD,CAAC,GAAE,KAAK,cAAcJ,GAAEK,GAAE,CAAC;AAAA,IAAC,GAAE,KAAKJ,GAAE;AAAC,aAAgBA,MAAT,UAAY,KAAK,EAAED,GAAE,QAAO,GAAEC,CAAC,GAAEA;AAAA,IAAC,EAAC;AAAA,EAAC;AAAC,MAAcI,MAAX,UAAa;AAAC,UAAK,EAAC,MAAKL,EAAC,IAAEI;AAAE,WAAO,SAASA,GAAE;AAAC,YAAMC,IAAE,KAAKL,CAAC;AAAE,QAAE,KAAK,MAAKI,CAAC,GAAE,KAAK,cAAcJ,GAAEK,GAAE,CAAC;AAAA,IAAC;AAAA,EAAC;AAAC,QAAM,MAAM,qCAAmCA,CAAC;AAAC;AAAE,SAASA,EAAE,GAAE;AAAC,SAAM,CAAC,GAAEL,MAAc,OAAOA,KAAjB,WAAmBI,GAAE,GAAE,GAAEJ,CAAC,KAAG,CAACD,GAAEE,GAAED,MAAI;AAAC,UAAMI,IAAEH,EAAE,eAAeD,CAAC;AAAE,WAAOC,EAAE,YAAY,eAAeD,GAAED,CAAC,GAAEK,IAAE,OAAO,yBAAyBH,GAAED,CAAC,IAAE;AAAA,EAAM,GAAG,GAAE,GAAEA,CAAC;AAAC;ACJryB;AAAA;AAAA;AAAA;AAAA;AAIG,SAASI,EAAEA,GAAE;AAAC,SAAOL,EAAEyB,EAAAC,EAAA,IAAIrB,IAAJ,EAAM,OAAM,IAAG,WAAU,GAAE,EAAC;AAAC;ACLvD;AAAA;AAAA;AAAA;AAAA;AAKA,MAAMH,KAAE,CAACA,GAAEF,GAAES,OAAKA,EAAE,eAAa,IAAGA,EAAE,aAAW,IAAG,QAAQ,YAAoB,OAAOT,KAAjB,YAAoB,OAAO,eAAeE,GAAEF,GAAES,CAAC,GAAEA;ACJvH;AAAA;AAAA;AAAA;AAAA;AAIG,SAASP,GAAEA,GAAEG,GAAE;AAAC,SAAM,CAACC,GAAEH,GAAEI,MAAI;AAAC,UAAMN,IAAE,CAAAD,MAAC;ANL5C,UAAAkB,GAAAC;AMK8C,cAAAA,KAAAD,IAAAlB,EAAE,eAAF,gBAAAkB,EAAc,cAAchB,OAA5B,OAAAiB,IAAgC;AAAA;AAAwP,WAAOnB,GAAEM,GAAEH,GAAE,EAAC,MAAK;AAAC,aAAOF,EAAE,IAAI;AAAA,IAAC,EAAC,CAAC;AAAA,EAAC;AAAC;ACJ5W;AAAA;AAAA;AAAA;AAAA;AAKA,IAAIC;AAAE,SAASG,GAAEA,GAAE;AAAC,SAAM,CAACC,GAAEL,MAAID,GAAEM,GAAEL,GAAE,EAAC,MAAK;APN7C,QAAAiB;AOM8C,aAAOA,IAAA,KAAK,eAAL,OAAAA,IAAkBhB,MAAAA,OAAAA,UAAI,SAAS,uBAAwB,GAAG,iBAAiBG,CAAC;AAAA,EAAC,EAAC,CAAC;AAAC;ACLrI;AAAA;AAAA;AAAA;AAAA;AAIG,SAASJ,GAAEA,GAAE;AAAC,SAAM,CAAC,GAAEK,MAAI;AAAC,UAAK,EAAC,MAAKD,GAAE,UAASF,EAAC,IAAEF,KAAA,OAAAA,IAAG,CAAA,GAAGQ,IAAE,UAAQJ,IAAE,SAASA,CAAC,MAAI;AAAgB,WAAOL,GAAE,GAAEM,GAAE,EAAC,MAAK;ARL3H,UAAAY,GAAAC;AQK4H,YAAMnB,KAAEkB,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAcT,IAAGP,KAAEiB,IAAAnB,KAAA,gBAAAA,EAAG,iBAAiBC,OAApB,OAAAkB,IAAwB;AAAG,aAAgBhB,MAAT,SAAWD,IAAEA,EAAE,OAAQ,CAAAF,MAAGA,EAAE,QAAQG,CAAC,CAAG;AAAA,IAAA,EAAC,CAAC;AAAA,EAAC;AAAC;ACLtP,SAASE,GAAEH,GAAE;AAAC,MAAIF,GAAEgB,GAAEV,IAAE;AAAG,MAAa,OAAOJ,KAAjB,YAA8B,OAAOA,KAAjB,SAAmB,CAAAI,KAAGJ;AAAA,WAAoB,OAAOA,KAAjB,SAAmB,KAAG,MAAM,QAAQA,CAAC,GAAE;AAAC,QAAID,IAAEC,EAAE;AAAO,SAAIF,IAAE,GAAEA,IAAEC,GAAED,IAAI,CAAAE,EAAEF,CAAC,MAAIgB,IAAEX,GAAEH,EAAEF,CAAC,CAAC,OAAKM,MAAIA,KAAG,MAAKA,KAAGU;AAAA,EAAE,MAAM,MAAIA,KAAKd,EAAE,CAAAA,EAAEc,CAAC,MAAIV,MAAIA,KAAG,MAAKA,KAAGU;AAAG,SAAOV;AAAC;AAAQ,SAASqB,IAAM;AAAC,WAAQzB,GAAEF,GAAEgB,IAAE,GAAEV,IAAE,IAAGL,IAAE,UAAU,QAAOe,IAAEf,GAAEe,IAAI,EAACd,IAAE,UAAUc,CAAC,OAAKhB,IAAEK,GAAEH,CAAC,OAAKI,MAAIA,KAAG,MAAKA,KAAGN;AAAG,SAAOM;AAAC;ACA/W;AAAA;AAAA;AAAA;AAAA;AAKK,MAACN,KAAE,YAAWO,KAAEP,GAAE,cAAaG,KAAEI,KAAEA,GAAE,aAAa,YAAW,EAAC,YAAW,OAAG,EAAC,CAAC,IAAE,QAAOL,KAAE,SAAQQ,KAAE,OAAO,KAAK,OAAM,EAAG,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC,KAAIT,KAAE,MAAIS,IAAEJ,KAAE,IAAIL,EAAC,KAAII,KAAE,UAASO,KAAE,MAAIP,GAAE,cAAc,EAAE,GAAEI,KAAE,OAAU,MAAP,QAAoB,OAAO,KAAjB,YAAgC,OAAO,KAAnB,YAAqBE,KAAE,MAAM,SAAQI,KAAE,OAAGJ,GAAE,CAAC,KAAe,QAAO,uBAAI,OAAO,cAA9B,YAAwCG,KAAE;AAAA,QAAcE,KAAE,uDAAsDY,KAAE,QAAOC,KAAE,MAAKC,KAAE,OAAO,KAAKhB,EAAC,qBAAqBA,EAAC,KAAKA,EAAC;AAAA,2BAAsC,GAAG,GAAED,KAAE,MAAKkB,KAAE,MAAKC,KAAE,sCAAqCR,KAAE,OAAG,CAACjB,MAAKJ,OAAK,EAAC,YAAW,GAAE,SAAQI,GAAE,QAAOJ,EAAC,IAAG8B,IAAET,GAAE,CAAC,GAAgBU,KAAE,OAAO,IAAI,cAAc,GAAEC,IAAE,OAAO,IAAI,aAAa,GAAEC,KAAE,oBAAI,WAAQC,KAAEhC,GAAE,iBAAiBA,IAAE,GAAG;AAAE,SAASiC,GAAE,GAAE/B,GAAE;AAAC,MAAG,CAACI,GAAE,CAAC,KAAG,CAAC,EAAE,eAAe,KAAK,EAAE,OAAM,MAAM,gCAAgC;AAAE,SAAgBR,OAAT,SAAWA,GAAE,WAAWI,CAAC,IAAEA;AAAC;AAAC,MAAMgC,KAAE,CAAC,GAAEhC,MAAI;AAAC,QAAMJ,IAAE,EAAE,SAAO,GAAE,IAAE,CAAA;AAAG,MAAI,GAAES,IAAML,MAAJ,IAAM,UAAYA,MAAJ,IAAM,WAAS,IAAGE,IAAEO;AAAE,WAAQT,IAAE,GAAEA,IAAEJ,GAAEI,KAAI;AAAC,UAAMJ,IAAE,EAAEI,CAAC;AAAE,QAAII,GAAE,GAAEG,IAAE,IAAGU,IAAE;AAAE,WAAKA,IAAErB,EAAE,WAASM,EAAE,YAAUe,GAAE,IAAEf,EAAE,KAAKN,CAAC,GAAS,MAAP,QAAW,CAAAqB,IAAEf,EAAE,WAAUA,MAAIO,KAAU,EAAE,CAAC,MAAX,QAAaP,IAAEmB,KAAW,EAAE,CAAC,MAAZ,SAAcnB,IAAEoB,KAAW,EAAE,CAAC,MAAZ,UAAeG,GAAE,KAAK,EAAE,CAAC,CAAC,MAAI,IAAE,OAAO,OAAK,EAAE,CAAC,GAAE,GAAG,IAAGvB,IAAEqB,MAAY,EAAE,CAAC,MAAZ,WAAgBrB,IAAEqB,MAAGrB,MAAIqB,KAAQ,EAAE,CAAC,MAAT,OAAYrB,IAAE,gBAAGO,IAAEF,IAAE,MAAa,EAAE,CAAC,MAAZ,SAAcA,IAAE,MAAIA,IAAEL,EAAE,YAAU,EAAE,CAAC,EAAE,QAAOE,IAAE,EAAE,CAAC,GAAEF,IAAW,EAAE,CAAC,MAAZ,SAAcqB,KAAQ,EAAE,CAAC,MAAT,MAAWC,KAAElB,MAAGJ,MAAIsB,MAAGtB,MAAII,KAAEJ,IAAEqB,KAAErB,MAAImB,MAAGnB,MAAIoB,KAAEpB,IAAEO,MAAGP,IAAEqB,IAAE,IAAE;AAAQ,UAAMG,IAAExB,MAAIqB,MAAG,EAAEvB,IAAE,CAAC,EAAE,WAAW,IAAI,IAAE,MAAI;AAAG,IAAAK,KAAGH,MAAIO,KAAEb,IAAEG,KAAEQ,KAAG,KAAG,EAAE,KAAKH,CAAC,GAAER,EAAE,MAAM,GAAEW,CAAC,IAAEZ,KAAEC,EAAE,MAAMW,CAAC,IAAEJ,KAAEuB,KAAG9B,IAAEO,MAAQI,MAAL,KAAOP,IAAE0B;AAAA,EAAE;AAAC,SAAM,CAACK,GAAE,GAAE1B,KAAG,EAAET,CAAC,KAAG,UAAYI,MAAJ,IAAM,WAAaA,MAAJ,IAAM,YAAU,GAAG,GAAE,CAAC;AAAC;AAAE,MAAMiC,GAAC;AAAA,EAAC,YAAY,EAAC,SAAQxC,GAAE,YAAWG,EAAC,GAAEG,GAAE;AAAC,QAAI;AAAE,SAAK,QAAM,CAAE;AAAC,QAAIG,IAAE,GAAE,IAAE;AAAE,UAAMM,IAAEf,EAAE,SAAO,GAAEc,IAAE,KAAK,OAAM,CAACE,GAAEY,CAAC,IAAEW,GAAEvC,GAAEG,CAAC;AAAE,QAAG,KAAK,KAAGqC,GAAE,cAAcxB,GAAEV,CAAC,GAAE+B,GAAE,cAAY,KAAK,GAAG,SAAYlC,MAAJ,KAAWA,MAAJ,GAAM;AAAC,YAAMH,IAAE,KAAK,GAAG,QAAQ;AAAW,MAAAA,EAAE,YAAY,GAAGA,EAAE,UAAU;AAAA,IAAC;AAAC,YAAa,IAAEqC,GAAE,gBAAZ,QAAyBvB,EAAE,SAAOC,KAAG;AAAC,UAAO,EAAE,aAAN,GAAe;AAAC,YAAG,EAAE,gBAAgB,YAAUf,KAAK,EAAE,kBAAmB,EAAC,KAAGA,EAAE,SAASE,EAAC,GAAE;AAAC,gBAAMK,IAAEqB,EAAE,GAAG,GAAEzB,IAAE,EAAE,aAAaH,CAAC,EAAE,MAAMU,EAAC,GAAER,IAAE,eAAe,KAAKK,CAAC;AAAE,UAAAO,EAAE,KAAK,EAAC,MAAK,GAAE,OAAML,GAAE,MAAKP,EAAE,CAAC,GAAE,SAAQC,GAAE,MAAWD,EAAE,CAAC,MAAT,MAAWuC,KAAQvC,EAAE,CAAC,MAAT,MAAWwC,KAAQxC,EAAE,CAAC,MAAT,MAAWyC,KAAEC,GAAC,CAAC,GAAE,EAAE,gBAAgB5C,CAAC;AAAA,QAAC,MAAM,CAAAA,EAAE,WAAWU,EAAC,MAAII,EAAE,KAAK,EAAC,MAAK,GAAE,OAAML,EAAC,CAAC,GAAE,EAAE,gBAAgBT,CAAC;AAAG,YAAGgC,GAAE,KAAK,EAAE,OAAO,GAAE;AAAC,gBAAMhC,IAAE,EAAE,YAAY,MAAMU,EAAC,GAAEP,IAAEH,EAAE,SAAO;AAAE,cAAGG,IAAE,GAAE;AAAC,cAAE,cAAYI,KAAEA,GAAE,cAAY;AAAG,qBAAQA,IAAE,GAAEA,IAAEJ,GAAEI,IAAI,GAAE,OAAOP,EAAEO,CAAC,GAAEK,IAAG,GAAEyB,GAAE,YAAWvB,EAAE,KAAK,EAAC,MAAK,GAAE,OAAM,EAAEL,EAAC,CAAC;AAAE,cAAE,OAAOT,EAAEG,CAAC,GAAES,GAAC,CAAE;AAAA,UAAC;AAAA,QAAC;AAAA,MAAC,WAAa,EAAE,aAAN,EAAe,KAAG,EAAE,SAAOX,GAAE,CAAAa,EAAE,KAAK,EAAC,MAAK,GAAE,OAAML,EAAC,CAAC;AAAA,WAAM;AAAC,YAAIT,IAAE;AAAG,gBAAWA,IAAE,EAAE,KAAK,QAAQU,IAAEV,IAAE,CAAC,OAA5B,KAAgC,CAAAc,EAAE,KAAK,EAAC,MAAK,GAAE,OAAML,EAAC,CAAC,GAAET,KAAGU,GAAE,SAAO;AAAA,MAAC;AAAC,MAAAD;AAAA,IAAG;AAAA,EAAC;AAAA,EAAC,OAAO,cAAcT,GAAE,GAAE;AAAC,UAAMG,IAAEE,GAAE,cAAc,UAAU;AAAE,WAAOF,EAAE,YAAUH,GAAEG;AAAA,EAAC;AAAC;AAAC,SAASK,GAAE,GAAED,GAAEJ,IAAE,GAAED,GAAE;AVL7mF,MAAAgB,GAAAC,GAAAE;AUK8mF,MAAGd,MAAI2B,GAAE,QAAO3B;AAAE,MAAIG,IAAWR,MAAT,UAAWgB,IAAAf,EAAE,SAAF,gBAAAe,EAAShB,KAAGC,EAAE;AAAK,QAAMF,IAAEQ,GAAEF,CAAC,IAAE,SAAOA,EAAE;AAAgB,UAAOG,KAAA,gBAAAA,EAAG,iBAAcT,OAAIkB,IAAAT,KAAA,gBAAAA,EAAG,SAAH,QAAAS,EAAA,KAAAT,GAAU,KAAaT,MAAT,SAAWS,IAAE,UAAQA,IAAE,IAAIT,EAAE,CAAC,GAAES,EAAE,KAAK,GAAEP,GAAED,CAAC,IAAYA,MAAT,WAAYmB,IAAAlB,EAAE,SAAF,OAAAkB,IAAAlB,EAAE,OAAO,CAAE,GAAED,CAAC,IAAEQ,IAAEP,EAAE,OAAKO,IAAYA,MAAT,WAAaH,IAAEC,GAAE,GAAEE,EAAE,KAAK,GAAEH,EAAE,MAAM,GAAEG,GAAER,CAAC,IAAGK;AAAC;AAAA,IAAAsC,KAAC,MAAO;AAAA,EAAC,YAAY7C,GAAE,GAAE;AAAC,SAAK,OAAK,CAAE,GAAC,KAAK,OAAK,QAAO,KAAK,OAAKA,GAAE,KAAK,OAAK;AAAA,EAAC;AAAA,EAAC,IAAI,aAAY;AAAC,WAAO,KAAK,KAAK;AAAA,EAAU;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,KAAK;AAAA,EAAI;AAAA,EAAC,EAAEA,GAAE;AVL1hG,QAAAkB;AUK2hG,UAAK,EAAC,IAAG,EAAC,SAAQ,EAAC,GAAE,OAAMf,EAAC,IAAE,KAAK,MAAKD,MAAGgB,IAAAlB,KAAA,gBAAAA,EAAG,kBAAH,OAAAkB,IAAkBb,IAAG,WAAW,GAAE,EAAE;AAAE,IAAAgC,GAAE,cAAYnC;AAAE,QAAIQ,IAAE2B,GAAE,SAAQ,GAAGpC,IAAE,GAAEK,IAAE,GAAE,IAAEH,EAAE,CAAC;AAAE,WAAc,MAAT,UAAY;AAAC,UAAGF,MAAI,EAAE,OAAM;AAAC,YAAIM;AAAE,QAAI,EAAE,SAAN,IAAWA,IAAE,IAAIuC,GAAEpC,GAAEA,EAAE,aAAY,MAAKV,CAAC,IAAM,EAAE,SAAN,IAAWO,IAAE,IAAI,EAAE,KAAKG,GAAE,EAAE,MAAK,EAAE,SAAQ,MAAKV,CAAC,IAAM,EAAE,SAAN,MAAaO,IAAE,IAAIwC,GAAErC,GAAE,MAAKV,CAAC,IAAG,KAAK,KAAK,KAAKO,CAAC,GAAE,IAAEJ,EAAE,EAAEG,CAAC;AAAA,MAAC;AAAC,MAAAL,OAAI,uBAAG,WAAQS,IAAE2B,GAAE,YAAWpC;AAAA,IAAI;AAAC,WAAOoC,GAAE,cAAYhC,IAAEH;AAAA,EAAC;AAAA,EAAC,EAAEF,GAAE;AAAC,QAAI,IAAE;AAAE,eAAUG,KAAK,KAAK,KAAW,CAAGA,MAAH,WAAgBA,EAAE,YAAX,UAAoBA,EAAE,KAAKH,GAAEG,GAAE,CAAC,GAAE,KAAGA,EAAE,QAAQ,SAAO,KAAGA,EAAE,KAAKH,EAAE,CAAC,CAAC,IAAG;AAAA,EAAG;AAAC;AAAC,MAAM8C,GAAC;AAAA,EAAC,IAAI,OAAM;AVL5iH,QAAA5B,GAAAC;AUK6iH,YAAOA,KAAAD,IAAA,KAAK,SAAL,gBAAAA,EAAW,SAAX,OAAAC,IAAiB,KAAK;AAAA,EAAI;AAAA,EAAC,YAAYnB,GAAE,GAAEG,GAAED,GAAE;AVLnmH,QAAAgB;AUKomH,SAAK,OAAK,GAAE,KAAK,OAAKiB,GAAE,KAAK,OAAK,QAAO,KAAK,OAAKnC,GAAE,KAAK,OAAK,GAAE,KAAK,OAAKG,GAAE,KAAK,UAAQD,GAAE,KAAK,QAAKgB,IAAAhB,KAAA,gBAAAA,EAAG,gBAAH,OAAAgB,IAAgB;AAAA,EAAE;AAAA,EAAC,IAAI,aAAY;AAAC,QAAIlB,IAAE,KAAK,KAAK;AAAW,UAAM,IAAE,KAAK;AAAK,WAAgB,MAAT,WAAiBA,KAAA,gBAAAA,EAAG,cAAR,OAAmBA,IAAE,EAAE,aAAYA;AAAA,EAAC;AAAA,EAAC,IAAI,YAAW;AAAC,WAAO,KAAK;AAAA,EAAI;AAAA,EAAC,IAAI,UAAS;AAAC,WAAO,KAAK;AAAA,EAAI;AAAA,EAAC,KAAKA,GAAE,IAAE,MAAK;AAAC,IAAAA,IAAEQ,GAAE,MAAKR,GAAE,CAAC,GAAES,GAAET,CAAC,IAAEA,MAAImC,KAASnC,KAAN,QAAcA,MAAL,MAAQ,KAAK,SAAOmC,KAAG,KAAK,KAAM,GAAC,KAAK,OAAKA,KAAGnC,MAAI,KAAK,QAAMA,MAAIkC,MAAG,KAAK,EAAElC,CAAC,IAAWA,EAAE,eAAX,SAAsB,KAAK,EAAEA,CAAC,IAAWA,EAAE,aAAX,SAAoB,KAAK,EAAEA,CAAC,IAAEe,GAAEf,CAAC,IAAE,KAAK,EAAEA,CAAC,IAAE,KAAK,EAAEA,CAAC;AAAA,EAAC;AAAA,EAAC,EAAEA,GAAE;AAAC,WAAO,KAAK,KAAK,WAAW,aAAaA,GAAE,KAAK,IAAI;AAAA,EAAC;AAAA,EAAC,EAAEA,GAAE;AAAC,SAAK,SAAOA,MAAI,KAAK,KAAM,GAAC,KAAK,OAAK,KAAK,EAAEA,CAAC;AAAA,EAAE;AAAA,EAAC,EAAEA,GAAE;AAAC,SAAK,SAAOmC,KAAG1B,GAAE,KAAK,IAAI,IAAE,KAAK,KAAK,YAAY,OAAKT,IAAE,KAAK,EAAEK,GAAE,eAAeL,CAAC,CAAC,GAAE,KAAK,OAAKA;AAAA,EAAC;AAAA,EAAC,EAAEA,GAAE;AVLv0I,QAAAkB;AUKw0I,UAAK,EAAC,QAAO,GAAE,YAAWf,EAAC,IAAEH,GAAEE,IAAY,OAAOC,KAAjB,WAAmB,KAAK,KAAKH,CAAC,KAAYG,EAAE,OAAX,WAAgBA,EAAE,KAAGqC,GAAE,cAAcF,GAAEnC,EAAE,GAAEA,EAAE,EAAE,CAAC,CAAC,GAAE,KAAK,OAAO,IAAGA;AAAG,UAAGe,IAAA,KAAK,SAAL,gBAAAA,EAAW,UAAOhB,EAAE,MAAK,KAAK,EAAE,CAAC;AAAA,SAAM;AAAC,YAAMF,IAAE,IAAIgD,GAAE9C,GAAE,IAAI,GAAEC,IAAEH,EAAE,EAAE,KAAK,OAAO;AAAE,MAAAA,EAAE,EAAE,CAAC,GAAE,KAAK,EAAEG,CAAC,GAAE,KAAK,OAAKH;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,KAAKA,GAAE;AAAC,QAAI,IAAEoC,GAAE,IAAIpC,EAAE,OAAO;AAAE,WAAgB,MAAT,UAAYoC,GAAE,IAAIpC,EAAE,SAAQ,IAAE,IAAIwC,GAAExC,CAAC,CAAC,GAAE;AAAA,EAAC;AAAA,EAAC,EAAEA,GAAE;AAACW,IAAAA,GAAE,KAAK,IAAI,MAAI,KAAK,OAAK,CAAA,GAAG,KAAK,KAAM;AAAE,UAAM,IAAE,KAAK;AAAK,QAAIR,GAAED,IAAE;AAAE,eAAUQ,KAAKV,EAAE,CAAAE,MAAI,EAAE,SAAO,EAAE,KAAKC,IAAE,IAAI2C,GAAE,KAAK,EAAElC,GAAC,CAAE,GAAE,KAAK,EAAEA,GAAG,CAAA,GAAE,MAAK,KAAK,OAAO,CAAC,IAAET,IAAE,EAAED,CAAC,GAAEC,EAAE,KAAKO,CAAC,GAAER;AAAI,IAAAA,IAAE,EAAE,WAAS,KAAK,KAAKC,KAAGA,EAAE,KAAK,aAAYD,CAAC,GAAE,EAAE,SAAOA;AAAA,EAAE;AAAA,EAAC,KAAKF,IAAE,KAAK,KAAK,aAAY,GAAE;AVLr6J,QAAAkB;AUKs6J,UAAIA,IAAA,KAAK,SAAL,gBAAAA,EAAA,WAAY,IAAG,IAAG,IAAGlB,KAAGA,MAAI,KAAK,QAAM;AAAC,YAAMO,IAAEP,EAAE;AAAY,MAAAA,EAAE,OAAM,GAAGA,IAAEO;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,aAAaP,GAAE;AVLvgK,QAAAkB;AUK8gK,IAAG,KAAK,SAAR,WAAe,KAAK,OAAKlB,IAAEkB,IAAA,KAAK,SAAL,QAAAA,EAAA,WAAYlB;AAAA,EAAG;AAAC;AAAC,MAAM4C,GAAC;AAAA,EAAC,IAAI,UAAS;AAAC,WAAO,KAAK,QAAQ;AAAA,EAAO;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,KAAK;AAAA,EAAI;AAAA,EAAC,YAAY5C,GAAE,GAAEG,GAAED,GAAEQ,GAAE;AAAC,SAAK,OAAK,GAAE,KAAK,OAAKyB,GAAE,KAAK,OAAK,QAAO,KAAK,UAAQnC,GAAE,KAAK,OAAK,GAAE,KAAK,OAAKE,GAAE,KAAK,UAAQQ,GAAEP,EAAE,SAAO,KAAQA,EAAE,CAAC,MAAR,MAAgBA,EAAE,CAAC,MAAR,MAAW,KAAK,OAAK,MAAMA,EAAE,SAAO,CAAC,EAAE,KAAK,IAAI,QAAM,GAAE,KAAK,UAAQA,KAAG,KAAK,OAAKgC;AAAA,EAAC;AAAA,EAAC,KAAKnC,GAAE,IAAE,MAAKG,GAAED,GAAE;AAAC,UAAMQ,IAAE,KAAK;AAAQ,QAAIT,IAAE;AAAG,QAAYS,MAAT,OAAW,CAAAV,IAAEQ,GAAE,MAAKR,GAAE,GAAE,CAAC,GAAEC,IAAE,CAACQ,GAAET,CAAC,KAAGA,MAAI,KAAK,QAAMA,MAAIkC,IAAEjC,MAAI,KAAK,OAAKD;AAAA,SAAO;AAAC,YAAME,IAAEF;AAAE,UAAIM,GAAED;AAAE,WAAIL,IAAEU,EAAE,CAAC,GAAEJ,IAAE,GAAEA,IAAEI,EAAE,SAAO,GAAEJ,IAAI,CAAAD,IAAEG,GAAE,MAAKN,EAAEC,IAAEG,CAAC,GAAE,GAAEA,CAAC,GAAED,MAAI6B,OAAI7B,IAAE,KAAK,KAAKC,CAAC,IAAGL,UAAI,CAACQ,GAAEJ,CAAC,KAAGA,MAAI,KAAK,KAAKC,CAAC,IAAED,MAAI8B,IAAEnC,IAAEmC,IAAEnC,MAAImC,MAAInC,MAAIK,KAAA,OAAAA,IAAG,MAAIK,EAAEJ,IAAE,CAAC,IAAG,KAAK,KAAKA,CAAC,IAAED;AAAA,IAAC;AAAC,IAAAJ,KAAG,CAACC,KAAG,KAAK,EAAEF,CAAC;AAAA,EAAC;AAAA,EAAC,EAAEA,GAAE;AAAC,IAAAA,MAAImC,IAAE,KAAK,QAAQ,gBAAgB,KAAK,IAAI,IAAE,KAAK,QAAQ,aAAa,KAAK,MAAKnC,KAAA,OAAAA,IAAG,EAAE;AAAA,EAAC;AAAC;AAAC,MAAMyC,WAAUG,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK;AAAA,EAAC;AAAA,EAAC,EAAE5C,GAAE;AAAC,SAAK,QAAQ,KAAK,IAAI,IAAEA,MAAImC,IAAE,SAAOnC;AAAA,EAAC;AAAC;AAAC,MAAM0C,WAAUE,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK;AAAA,EAAC;AAAA,EAAC,EAAE5C,GAAE;AAAC,SAAK,QAAQ,gBAAgB,KAAK,MAAK,CAAC,CAACA,KAAGA,MAAImC,CAAC;AAAA,EAAC;AAAC;AAAC,MAAMQ,WAAUC,GAAC;AAAA,EAAC,YAAY5C,GAAE,GAAEG,GAAED,GAAEQ,GAAE;AAAC,UAAMV,GAAE,GAAEG,GAAED,GAAEQ,CAAC,GAAE,KAAK,OAAK;AAAA,EAAC;AAAA,EAAC,KAAKV,GAAE,IAAE,MAAK;AVL1kM,QAAAkB;AUK2kM,SAAIlB,KAAEkB,IAAAV,GAAE,MAAKR,GAAE,GAAE,CAAC,MAAZ,OAAAkB,IAAeiB,OAAKD,GAAE;AAAO,UAAM/B,IAAE,KAAK,MAAKD,IAAEF,MAAImC,KAAGhC,MAAIgC,KAAGnC,EAAE,YAAUG,EAAE,WAASH,EAAE,SAAOG,EAAE,QAAMH,EAAE,YAAUG,EAAE,SAAQO,IAAEV,MAAImC,MAAIhC,MAAIgC,KAAGjC;AAAG,IAAAA,KAAG,KAAK,QAAQ,oBAAoB,KAAK,MAAK,MAAKC,CAAC,GAAEO,KAAG,KAAK,QAAQ,iBAAiB,KAAK,MAAK,MAAKV,CAAC,GAAE,KAAK,OAAKA;AAAA,EAAC;AAAA,EAAC,YAAYA,GAAE;AVLr2M,QAAAkB,GAAAC;AUKs2M,IAAY,OAAO,KAAK,QAAxB,aAA6B,KAAK,KAAK,MAAKA,KAAAD,IAAA,KAAK,YAAL,gBAAAA,EAAc,SAAd,OAAAC,IAAoB,KAAK,SAAQnB,CAAC,IAAE,KAAK,KAAK,YAAYA,CAAC;AAAA,EAAC;AAAC;AAAC,MAAM+C,GAAC;AAAA,EAAC,YAAY/C,GAAE,GAAEG,GAAE;AAAC,SAAK,UAAQH,GAAE,KAAK,OAAK,GAAE,KAAK,OAAK,QAAO,KAAK,OAAK,GAAE,KAAK,UAAQG;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,KAAK;AAAA,EAAI;AAAA,EAAC,KAAKH,GAAE;AAAC,IAAAQ,GAAE,MAAKR,CAAC;AAAA,EAAC;AAAC;AAAC,MAAMiD,KAAE,EAAiC,GAAEH,GAAqB,GAAEI,KAAElD,GAAE;AVL5qN,IAAAkB;AUKmsNgC,MAAA,QAAAA,GAAIV,IAAEM,OAAI9C,KAAAA,GAAE,oBAAFA,OAAAA,KAAAA,GAAE,kBAAkB,CAAA,GAAI,KAAK,OAAO;AAAE,MAAMmD,KAAE,CAAC,GAAE5C,GAAEJ,MAAI;AVLpwN,MAAAe,GAAAC;AUKqwN,QAAMjB,KAAEgB,IAAAf,KAAA,gBAAAA,EAAG,iBAAH,OAAAe,IAAiBX;AAAE,MAAIG,IAAER,EAAE;AAAW,MAAYQ,MAAT,QAAW;AAAC,UAAMV,KAAEmB,IAAAhB,KAAA,gBAAAA,EAAG,iBAAH,OAAAgB,IAAiB;AAAK,IAAAjB,EAAE,aAAWQ,IAAE,IAAIoC,GAAEvC,EAAE,aAAaK,GAAG,GAACZ,CAAC,GAAEA,GAAE,QAAOG,KAAA,OAAAA,IAAG,CAAA,CAAE;AAAA,EAAC;AAAC,SAAOO,EAAE,KAAK,CAAC,GAAEA;AAAC;ACJ76N;AAAA;AAAA;AAAA;AAAA;AAIG,MAAMP,KAAE;SAAW,cAAgBH,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,gBAAc,EAAC,MAAK,KAAI,GAAE,KAAK,OAAK;AAAA,EAAM;AAAA,EAAC,mBAAkB;AXL5I,QAAAkB,GAAAC;AWK6I,UAAMnB,IAAE,MAAM,iBAAgB;AAAG,YAAOmB,KAAAD,IAAA,KAAK,eAAc,iBAAnB,SAAAA,EAAmB,eAAelB,EAAE,aAAWA;AAAA,EAAC;AAAA,EAAC,OAAOA,GAAE;AAAC,UAAMK,IAAE,KAAK,OAAM;AAAG,SAAK,eAAa,KAAK,cAAc,cAAY,KAAK,cAAa,MAAM,OAAOL,CAAC,GAAE,KAAK,OAAKE,GAAEG,GAAE,KAAK,YAAW,KAAK,aAAa;AAAA,EAAC;AAAA,EAAC,oBAAmB;AXL9Z,QAAAa;AWK+Z,UAAM,kBAAmB,IAACA,IAAA,KAAK,SAAL,QAAAA,EAAW,aAAa;AAAA,EAAG;AAAA,EAAC,uBAAsB;AXL3e,QAAAA;AWK4e,UAAM,qBAAoB,IAAGA,IAAA,KAAK,SAAL,QAAAA,EAAW,aAAa;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAOb;AAAAA,EAAC;AAAC;AXLvjB,IAAAa;AWKwjBX,GAAE,gBAAc,IAAGA,GAAE,YAAa,KAAGJ,KAAAA,GAAE,6BAAFA,QAAAA,GAAAA,KAAAA,IAA6B,EAAC,YAAWI,GAAC;AAAG,MAAMN,KAAEE,GAAE;AAA0BF,MAAAA,QAAAA,GAAI,EAAC,YAAWM,GAAC;AXL/rB,IAAAW;AAAA,EWKwvBf,KAAAA,GAAE,uBAAFA,OAAAA,KAAAA,GAAE,qBAAqB,IAAI,KAAK,OAAO;ACJ/xB;AAAA;AAAA;AAAA;AAAA;AAIG,MAAMF,IAAE,CAAAA,MAAGA,KAAA,OAAAA,IAAGD;ACJjB;AAAA;AAAA;AAAA;AAAA;AAKK,MAACW,KAAE,OAAO,IAAI,EAAE,GAAEV,KAAE,OAAG;AAAC,OAAG,uBAAG,OAAIU,GAAE,QAAO,uBAAG;AAAY,GAAER,KAAE,QAAI,EAAC,cAAa,GAAE,GAAEQ,GAAC,IAAyTC,KAAE,oBAAI,OAAIN,KAAE,OAAG,CAACD,MAAKH,MAAI;AAAC,QAAMS,IAAET,EAAE;AAAO,MAAIC,GAAEI;AAAE,QAAMD,IAAE,IAAGS,IAAE,CAAA;AAAG,MAAIN,GAAEuB,IAAE,GAAEhB,IAAE;AAAG,SAAKgB,IAAErB,KAAG;AAAC,SAAIF,IAAEJ,EAAE2B,CAAC,GAAEA,IAAErB,MAAaJ,IAAEL,EAAE8B,CAAC,IAAE7B,IAAEF,GAAEM,CAAC,OAAtB,UAA0B,CAAAE,KAAGN,IAAEE,EAAE,EAAE2B,CAAC,GAAEhB,IAAE;AAAG,IAAAgB,MAAIrB,KAAGI,EAAE,KAAKR,CAAC,GAAED,EAAE,KAAKG,CAAC,GAAEuB;AAAA,EAAG;AAAC,MAAGA,MAAIrB,KAAGL,EAAE,KAAKD,EAAEM,CAAC,CAAC,GAAEK,GAAE;AAAC,UAAMhB,IAAEM,EAAE,KAAK,SAAS;AAAE,KAAUD,IAAEO,GAAE,IAAIZ,CAAC,OAAnB,WAAwBM,EAAE,MAAIA,GAAEM,GAAE,IAAIZ,GAAEK,IAAEC,CAAC,IAAGJ,IAAEa;AAAA,EAAC;AAAC,SAAO,EAAEV,GAAE,GAAGH,CAAC;AAAC,GAAEa,IAAET,GAAEN,CAAC;ACFhsB,MAAMoD,UAAmBC,GAAW;AAAA,EACzC,KACEC,GACAC,GACAC,GACA;AACM,UAAAC,IAAQ,IAAI,YAAeH,GAAM5B,EAAA;AAAA,MACrC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,QAAQ6B,IAAS7B,EAAA,IAAK6B,KAAgB;AAAA,OACnCC,EACJ;AAED,gBAAK,cAAcC,CAAK,GAEjBA;AAAA,EAAA;AAEX;;;;;;;ACtBA,KAAC,SAASzD,GAAEE,GAAE;AAAsD,MAAAwD,YAAexD,EAAmH;AAAA,IAAA,GAAEyD,IAAM,WAAU;AAAc,UAAI3D,IAAE,KAAIE,IAAE,KAAII,IAAE,MAAKD,IAAE,eAAcE,IAAE,UAASJ,IAAE,UAASY,IAAE,QAAOJ,IAAE,OAAMV,IAAE,QAAOQ,IAAE,SAAQO,IAAE,WAAUN,IAAE,QAAOI,IAAE,QAAOF,IAAE,gBAAeoB,IAAE,8FAA6FR,IAAE,uFAAsFwB,IAAE,EAAC,MAAK,MAAK,UAAS,2DAA2D,MAAM,GAAG,GAAE,QAAO,wFAAwF,MAAM,GAAG,GAAE,SAAQ,SAAShD,GAAE;AAAC,YAAIE,IAAE,CAAC,MAAK,MAAK,MAAK,IAAI,GAAEI,IAAEN,IAAE;AAAI,eAAM,MAAIA,KAAGE,GAAGI,IAAE,MAAI,EAAE,KAAGJ,EAAEI,CAAC,KAAGJ,EAAE,CAAC,KAAG;AAAA,MAAG,EAAC,GAAE4B,IAAE,SAAS9B,GAAEE,GAAEI,GAAE;AAAC,YAAID,IAAE,OAAOL,CAAC;AAAE,eAAM,CAACK,KAAGA,EAAE,UAAQH,IAAEF,IAAE,KAAG,MAAME,IAAE,IAAEG,EAAE,MAAM,EAAE,KAAKC,CAAC,IAAEN;AAAA,MAAC,GAAE4B,IAAE,EAAC,GAAEE,GAAE,GAAE,SAAS9B,GAAE;AAAC,YAAIE,IAAE,CAACF,EAAE,UAAS,GAAGM,IAAE,KAAK,IAAIJ,CAAC,GAAEG,IAAE,KAAK,MAAMC,IAAE,EAAE,GAAEC,IAAED,IAAE;AAAG,gBAAOJ,KAAG,IAAE,MAAI,OAAK4B,EAAEzB,GAAE,GAAE,GAAG,IAAE,MAAIyB,EAAEvB,GAAE,GAAE,GAAG;AAAA,MAAC,GAAE,GAAE,SAASP,EAAEE,GAAEI,GAAE;AAAC,YAAGJ,EAAE,KAAI,IAAGI,EAAE,KAAI,EAAG,QAAM,CAACN,EAAEM,GAAEJ,CAAC;AAAE,YAAIG,IAAE,MAAIC,EAAE,KAAI,IAAGJ,EAAE,WAASI,EAAE,UAAQJ,EAAE,MAAO,IAAEK,IAAEL,EAAE,QAAQ,IAAIG,GAAEI,CAAC,GAAEN,IAAEG,IAAEC,IAAE,GAAEQ,IAAEb,EAAE,MAAK,EAAG,IAAIG,KAAGF,IAAE,KAAG,IAAGM,CAAC;AAAE,eAAM,EAAE,EAAEJ,KAAGC,IAAEC,MAAIJ,IAAEI,IAAEQ,IAAEA,IAAER,OAAK;AAAA,MAAE,GAAE,GAAE,SAASP,GAAE;AAAC,eAAOA,IAAE,IAAE,KAAK,KAAKA,CAAC,KAAG,IAAE,KAAK,MAAMA,CAAC;AAAA,MAAC,GAAE,GAAE,SAASA,GAAE;AAAC,eAAM,EAAC,GAAES,GAAE,GAAEC,GAAE,GAAET,GAAE,GAAEU,GAAE,GAAEG,GAAE,GAAEC,GAAE,GAAEZ,GAAE,GAAEI,GAAE,IAAGF,GAAE,GAAEW,EAAC,EAAEhB,CAAC,KAAG,OAAOA,KAAG,EAAE,EAAE,YAAa,EAAC,QAAQ,MAAK,EAAE;AAAA,MAAC,GAAE,GAAE,SAASA,GAAE;AAAC,eAAgBA,MAAT;AAAA,MAAU,EAAC,GAAE+B,IAAE,MAAK6B,IAAE,CAAE;AAAC,MAAAA,EAAE7B,CAAC,IAAEiB;AAAE,UAAInC,KAAE,kBAAiBL,KAAE,SAASR,GAAE;AAAC,eAAOA,aAAa6B,MAAG,EAAE,CAAC7B,KAAG,CAACA,EAAEa,EAAC;AAAA,MAAE,GAAEgD,KAAE,SAAS7D,EAAEE,GAAEI,GAAED,GAAE;AAAC,YAAIE;AAAE,YAAG,CAACL,EAAE,QAAO6B;AAAE,YAAa,OAAO7B,KAAjB,UAAmB;AAAC,cAAIC,IAAED,EAAE,YAAa;AAAC,UAAA0D,EAAEzD,CAAC,MAAII,IAAEJ,IAAGG,MAAIsD,EAAEzD,CAAC,IAAEG,GAAEC,IAAEJ;AAAG,cAAIY,IAAEb,EAAE,MAAM,GAAG;AAAE,cAAG,CAACK,KAAGQ,EAAE,SAAO,EAAE,QAAOf,EAAEe,EAAE,CAAC,CAAC;AAAA,QAAC,OAAK;AAAC,cAAIJ,IAAET,EAAE;AAAK,UAAA0D,EAAEjD,CAAC,IAAET,GAAEK,IAAEI;AAAA,QAAC;AAAC,eAAM,CAACN,KAAGE,MAAIwB,IAAExB,IAAGA,KAAG,CAACF,KAAG0B;AAAA,MAAC,GAAE+B,KAAE,SAAS9D,GAAEE,GAAE;AAAC,YAAGM,GAAER,CAAC,EAAE,QAAOA,EAAE,MAAK;AAAG,YAAIM,IAAY,OAAOJ,KAAjB,WAAmBA,IAAE,CAAE;AAAC,eAAOI,EAAE,OAAKN,GAAEM,EAAE,OAAK,WAAU,IAAIuB,GAAEvB,CAAC;AAAA,MAAC,GAAEW,IAAEW;AAAE,MAAAX,EAAE,IAAE4C,IAAE5C,EAAE,IAAET,IAAES,EAAE,IAAE,SAASjB,GAAEE,GAAE;AAAC,eAAO4D,GAAE9D,GAAE,EAAC,QAAOE,EAAE,IAAG,KAAIA,EAAE,IAAG,GAAEA,EAAE,IAAG,SAAQA,EAAE,QAAO,CAAC;AAAA,MAAC;AAAE,UAAI2B,KAAE,WAAU;AAAC,iBAASmB,EAAEhD,GAAE;AAAC,eAAK,KAAG6D,GAAE7D,EAAE,QAAO,MAAK,EAAE,GAAE,KAAK,MAAMA,CAAC,GAAE,KAAK,KAAG,KAAK,MAAIA,EAAE,KAAG,CAAA,GAAG,KAAKa,EAAC,IAAE;AAAA,QAAE;AAAC,YAAIiB,IAAEkB,EAAE;AAAU,eAAOlB,EAAE,QAAM,SAAS9B,GAAE;AAAC,eAAK,KAAG,SAASA,GAAE;AAAC,gBAAIE,IAAEF,EAAE,MAAKM,IAAEN,EAAE;AAAI,gBAAUE,MAAP,KAAS,QAAO,oBAAI,KAAK,GAAG;AAAE,gBAAGe,EAAE,EAAEf,CAAC,EAAE,QAAO,oBAAI;AAAK,gBAAGA,aAAa,KAAK,QAAO,IAAI,KAAKA,CAAC;AAAE,gBAAa,OAAOA,KAAjB,YAAoB,CAAC,MAAM,KAAKA,CAAC,GAAE;AAAC,kBAAIG,IAAEH,EAAE,MAAM8B,CAAC;AAAE,kBAAG3B,GAAE;AAAC,oBAAIE,IAAEF,EAAE,CAAC,IAAE,KAAG,GAAEF,MAAGE,EAAE,CAAC,KAAG,KAAK,UAAU,GAAE,CAAC;AAAE,uBAAOC,IAAE,IAAI,KAAK,KAAK,IAAID,EAAE,CAAC,GAAEE,GAAEF,EAAE,CAAC,KAAG,GAAEA,EAAE,CAAC,KAAG,GAAEA,EAAE,CAAC,KAAG,GAAEA,EAAE,CAAC,KAAG,GAAEF,EAAC,CAAC,IAAE,IAAI,KAAKE,EAAE,CAAC,GAAEE,GAAEF,EAAE,CAAC,KAAG,GAAEA,EAAE,CAAC,KAAG,GAAEA,EAAE,CAAC,KAAG,GAAEA,EAAE,CAAC,KAAG,GAAEF,EAAC;AAAA,cAAC;AAAA,YAAC;AAAC,mBAAO,IAAI,KAAKD,CAAC;AAAA,UAAC,EAAEF,CAAC,GAAE,KAAK,KAAM;AAAA,QAAA,GAAE8B,EAAE,OAAK,WAAU;AAAC,cAAI9B,IAAE,KAAK;AAAG,eAAK,KAAGA,EAAE,eAAc,KAAK,KAAGA,EAAE,SAAQ,GAAG,KAAK,KAAGA,EAAE,QAAS,GAAC,KAAK,KAAGA,EAAE,OAAQ,GAAC,KAAK,KAAGA,EAAE,YAAW,KAAK,KAAGA,EAAE,WAAU,GAAG,KAAK,KAAGA,EAAE,WAAU,GAAG,KAAK,MAAIA,EAAE,gBAAiB;AAAA,QAAA,GAAE8B,EAAE,SAAO,WAAU;AAAC,iBAAOb;AAAA,QAAC,GAAEa,EAAE,UAAQ,WAAU;AAAC,iBAAQ,KAAK,GAAG,SAAU,MAAGlB;AAAA,QAAE,GAAEkB,EAAE,SAAO,SAAS9B,GAAEE,GAAE;AAAC,cAAII,IAAEwD,GAAE9D,CAAC;AAAE,iBAAO,KAAK,QAAQE,CAAC,KAAGI,KAAGA,KAAG,KAAK,MAAMJ,CAAC;AAAA,QAAC,GAAE4B,EAAE,UAAQ,SAAS9B,GAAEE,GAAE;AAAC,iBAAO4D,GAAE9D,CAAC,IAAE,KAAK,QAAQE,CAAC;AAAA,QAAC,GAAE4B,EAAE,WAAS,SAAS9B,GAAEE,GAAE;AAAC,iBAAO,KAAK,MAAMA,CAAC,IAAE4D,GAAE9D,CAAC;AAAA,QAAC,GAAE8B,EAAE,KAAG,SAAS9B,GAAEE,GAAEI,GAAE;AAAC,iBAAOW,EAAE,EAAEjB,CAAC,IAAE,KAAKE,CAAC,IAAE,KAAK,IAAII,GAAEN,CAAC;AAAA,QAAC,GAAE8B,EAAE,OAAK,WAAU;AAAC,iBAAO,KAAK,MAAM,KAAK,QAAS,IAAC,GAAG;AAAA,QAAC,GAAEA,EAAE,UAAQ,WAAU;AAAC,iBAAO,KAAK,GAAG;QAAS,GAAEA,EAAE,UAAQ,SAAS9B,GAAEE,GAAE;AAAC,cAAII,IAAE,MAAKD,IAAE,CAAC,CAACY,EAAE,EAAEf,CAAC,KAAGA,GAAEc,IAAEC,EAAE,EAAEjB,CAAC,GAAEY,IAAE,SAASZ,IAAEE,IAAE;AAAC,gBAAIK,KAAEU,EAAE,EAAEX,EAAE,KAAG,KAAK,IAAIA,EAAE,IAAGJ,IAAEF,EAAC,IAAE,IAAI,KAAKM,EAAE,IAAGJ,IAAEF,EAAC,GAAEM,CAAC;AAAE,mBAAOD,IAAEE,KAAEA,GAAE,MAAMI,CAAC;AAAA,UAAC,GAAEqB,KAAE,SAAShC,IAAEE,IAAE;AAAC,mBAAOe,EAAE,EAAEX,EAAE,OAAQ,EAACN,EAAC,EAAE,MAAMM,EAAE,OAAO,GAAG,IAAGD,IAAE,CAAC,GAAE,GAAE,GAAE,CAAC,IAAE,CAAC,IAAG,IAAG,IAAG,GAAG,GAAG,MAAMH,EAAC,CAAC,GAAEI,CAAC;AAAA,UAAC,GAAEkB,KAAE,KAAK,IAAGwB,KAAE,KAAK,IAAGlB,KAAE,KAAK,IAAGF,KAAE,SAAO,KAAK,KAAG,QAAM;AAAI,kBAAOZ,GAAC;AAAA,YAAE,KAAKN;AAAE,qBAAOL,IAAEO,EAAE,GAAE,CAAC,IAAEA,EAAE,IAAG,EAAE;AAAA,YAAE,KAAKH;AAAE,qBAAOJ,IAAEO,EAAE,GAAEoC,EAAC,IAAEpC,EAAE,GAAEoC,KAAE,CAAC;AAAA,YAAE,KAAK/C;AAAE,kBAAI8B,KAAE,KAAK,QAAO,EAAG,aAAW,GAAE6B,MAAGpC,KAAEO,KAAEP,KAAE,IAAEA,MAAGO;AAAE,qBAAOnB,EAAEP,IAAEyB,KAAE8B,KAAE9B,MAAG,IAAE8B,KAAGZ,EAAC;AAAA,YAAE,KAAKrC;AAAA,YAAE,KAAKG;AAAE,qBAAOkB,GAAEJ,KAAE,SAAQ,CAAC;AAAA,YAAE,KAAKb;AAAE,qBAAOiB,GAAEJ,KAAE,WAAU,CAAC;AAAA,YAAE,KAAKzB;AAAE,qBAAO6B,GAAEJ,KAAE,WAAU,CAAC;AAAA,YAAE,KAAKrB;AAAE,qBAAOyB,GAAEJ,KAAE,gBAAe,CAAC;AAAA,YAAE;AAAQ,qBAAO,KAAK;UAAO;AAAA,QAAC,GAAEE,EAAE,QAAM,SAAS9B,GAAE;AAAC,iBAAO,KAAK,QAAQA,GAAE,EAAE;AAAA,QAAC,GAAE8B,EAAE,OAAK,SAAS9B,GAAEE,GAAE;AAAC,cAAII,GAAEL,IAAEgB,EAAE,EAAEjB,CAAC,GAAEgB,IAAE,SAAO,KAAK,KAAG,QAAM,KAAIJ,KAAGN,IAAE,CAAE,GAACA,EAAEK,CAAC,IAAEK,IAAE,QAAOV,EAAEQ,CAAC,IAAEE,IAAE,QAAOV,EAAEG,CAAC,IAAEO,IAAE,SAAQV,EAAEI,CAAC,IAAEM,IAAE,YAAWV,EAAES,CAAC,IAAEC,IAAE,SAAQV,EAAEH,CAAC,IAAEa,IAAE,WAAUV,EAAEC,CAAC,IAAES,IAAE,WAAUV,EAAED,CAAC,IAAEW,IAAE,gBAAeV,GAAGL,CAAC,GAAE+B,KAAE/B,MAAIU,IAAE,KAAK,MAAIT,IAAE,KAAK,MAAIA;AAAE,cAAGD,MAAIQ,KAAGR,MAAIS,GAAE;AAAC,gBAAIc,KAAE,KAAK,MAAO,EAAC,IAAIV,GAAE,CAAC;AAAE,YAAAU,GAAE,GAAGZ,CAAC,EAAEoB,EAAC,GAAER,GAAE,QAAO,KAAK,KAAGA,GAAE,IAAIV,GAAE,KAAK,IAAI,KAAK,IAAGU,GAAE,aAAa,CAAC,EAAE;AAAA,UAAE,MAAM,CAAAZ,KAAG,KAAK,GAAGA,CAAC,EAAEoB,EAAC;AAAE,iBAAO,KAAK,KAAI,GAAG;AAAA,QAAI,GAAEF,EAAE,MAAI,SAAS9B,GAAEE,GAAE;AAAC,iBAAO,KAAK,QAAQ,KAAKF,GAAEE,CAAC;AAAA,QAAC,GAAE4B,EAAE,MAAI,SAAS9B,GAAE;AAAC,iBAAO,KAAKiB,EAAE,EAAEjB,CAAC,CAAC,EAAC;AAAA,QAAE,GAAE8B,EAAE,MAAI,SAASzB,GAAEW,GAAE;AAAC,cAAIF,GAAEF,IAAE;AAAK,UAAAP,IAAE,OAAOA,CAAC;AAAE,cAAI2B,IAAEf,EAAE,EAAED,CAAC,GAAEQ,IAAE,SAASxB,IAAE;AAAC,gBAAIE,KAAE4D,GAAElD,CAAC;AAAE,mBAAOK,EAAE,EAAEf,GAAE,KAAKA,GAAE,KAAM,IAAC,KAAK,MAAMF,KAAEK,CAAC,CAAC,GAAEO,CAAC;AAAA,UAAC;AAAE,cAAGoB,MAAIvB,EAAE,QAAO,KAAK,IAAIA,GAAE,KAAK,KAAGJ,CAAC;AAAE,cAAG2B,MAAItB,EAAE,QAAO,KAAK,IAAIA,GAAE,KAAK,KAAGL,CAAC;AAAE,cAAG2B,MAAIrB,EAAE,QAAOa,EAAE,CAAC;AAAE,cAAGQ,MAAI/B,EAAE,QAAOuB,EAAE,CAAC;AAAE,cAAIwB,MAAGlC,IAAE,IAAGA,EAAEX,CAAC,IAAED,GAAEY,EAAEC,CAAC,IAAET,GAAEQ,EAAEP,CAAC,IAAEP,GAAEc,GAAGkB,CAAC,KAAG,GAAEF,KAAE,KAAK,GAAG,QAAS,IAACzB,IAAE2C;AAAE,iBAAO/B,EAAE,EAAEa,IAAE,IAAI;AAAA,QAAC,GAAEA,EAAE,WAAS,SAAS9B,GAAEE,GAAE;AAAC,iBAAO,KAAK,IAAI,KAAGF,GAAEE,CAAC;AAAA,QAAC,GAAE4B,EAAE,SAAO,SAAS9B,GAAE;AAAC,cAAIE,IAAE,MAAKI,IAAE,KAAK,QAAO;AAAG,cAAG,CAAC,KAAK,QAAS,EAAC,QAAOA,EAAE,eAAaM;AAAE,cAAIP,IAAEL,KAAG,wBAAuBO,IAAEU,EAAE,EAAE,IAAI,GAAEd,IAAE,KAAK,IAAGY,KAAE,KAAK,IAAGJ,KAAE,KAAK,IAAGV,KAAEK,EAAE,UAASG,KAAEH,EAAE,QAAOU,KAAEV,EAAE,UAASI,KAAE,SAASV,IAAEM,IAAEC,IAAEJ,IAAE;AAAC,mBAAOH,OAAIA,GAAEM,EAAC,KAAGN,GAAEE,GAAEG,CAAC,MAAIE,GAAED,EAAC,EAAE,MAAM,GAAEH,EAAC;AAAA,UAAC,GAAEW,KAAE,SAASd,IAAE;AAAC,mBAAOiB,EAAE,EAAEd,IAAE,MAAI,IAAGH,IAAE,GAAG;AAAA,UAAC,GAAEgC,KAAEhB,MAAG,SAAShB,IAAEE,IAAEI,IAAE;AAAC,gBAAID,KAAEL,KAAE,KAAG,OAAK;AAAK,mBAAOM,KAAED,GAAE,gBAAcA;AAAA,UAAC;AAAE,iBAAOA,EAAE,QAAQmB,GAAG,SAASxB,IAAEK,IAAE;AAAC,mBAAOA,MAAG,SAASL,IAAE;AAAC,sBAAOA,IAAG;AAAA,gBAAA,KAAI;AAAK,yBAAO,OAAOE,EAAE,EAAE,EAAE,MAAM,EAAE;AAAA,gBAAE,KAAI;AAAO,yBAAOe,EAAE,EAAEf,EAAE,IAAG,GAAE,GAAG;AAAA,gBAAE,KAAI;AAAI,yBAAOS,KAAE;AAAA,gBAAE,KAAI;AAAK,yBAAOM,EAAE,EAAEN,KAAE,GAAE,GAAE,GAAG;AAAA,gBAAE,KAAI;AAAM,yBAAOD,GAAEJ,EAAE,aAAYK,IAAEF,IAAE,CAAC;AAAA,gBAAE,KAAI;AAAO,yBAAOC,GAAED,IAAEE,EAAC;AAAA,gBAAE,KAAI;AAAI,yBAAOT,EAAE;AAAA,gBAAG,KAAI;AAAK,yBAAOe,EAAE,EAAEf,EAAE,IAAG,GAAE,GAAG;AAAA,gBAAE,KAAI;AAAI,yBAAO,OAAOA,EAAE,EAAE;AAAA,gBAAE,KAAI;AAAK,yBAAOQ,GAAEJ,EAAE,aAAYJ,EAAE,IAAGD,IAAE,CAAC;AAAA,gBAAE,KAAI;AAAM,yBAAOS,GAAEJ,EAAE,eAAcJ,EAAE,IAAGD,IAAE,CAAC;AAAA,gBAAE,KAAI;AAAO,yBAAOA,GAAEC,EAAE,EAAE;AAAA,gBAAE,KAAI;AAAI,yBAAO,OAAOC,CAAC;AAAA,gBAAE,KAAI;AAAK,yBAAOc,EAAE,EAAEd,GAAE,GAAE,GAAG;AAAA,gBAAE,KAAI;AAAI,yBAAOW,GAAE,CAAC;AAAA,gBAAE,KAAI;AAAK,yBAAOA,GAAE,CAAC;AAAA,gBAAE,KAAI;AAAI,yBAAOkB,GAAE7B,GAAEY,IAAE,EAAE;AAAA,gBAAE,KAAI;AAAI,yBAAOiB,GAAE7B,GAAEY,IAAE,EAAE;AAAA,gBAAE,KAAI;AAAI,yBAAO,OAAOA,EAAC;AAAA,gBAAE,KAAI;AAAK,yBAAOE,EAAE,EAAEF,IAAE,GAAE,GAAG;AAAA,gBAAE,KAAI;AAAI,yBAAO,OAAOb,EAAE,EAAE;AAAA,gBAAE,KAAI;AAAK,yBAAOe,EAAE,EAAEf,EAAE,IAAG,GAAE,GAAG;AAAA,gBAAE,KAAI;AAAM,yBAAOe,EAAE,EAAEf,EAAE,KAAI,GAAE,GAAG;AAAA,gBAAE,KAAI;AAAI,yBAAOK;AAAA,cAAC;AAAC,qBAAO;AAAA,YAAI,EAAEP,EAAC,KAAGO,EAAE,QAAQ,KAAI,EAAE;AAAA,UAAC,CAAC;AAAA,QAAE,GAAEuB,EAAE,YAAU,WAAU;AAAC,iBAAO,KAAG,CAAC,KAAK,MAAM,KAAK,GAAG,kBAAmB,IAAC,EAAE;AAAA,QAAC,GAAEA,EAAE,OAAK,SAASzB,GAAES,GAAEF,GAAE;AAAC,cAAIoB,GAAER,IAAE,MAAKwB,IAAE/B,EAAE,EAAEH,CAAC,GAAEgB,KAAEgC,GAAEzD,CAAC,GAAEuB,MAAGE,GAAE,UAAW,IAAC,KAAK,UAAW,KAAE5B,GAAE6B,KAAE,OAAKD,IAAE8B,KAAE,WAAU;AAAC,mBAAO3C,EAAE,EAAEO,GAAEM,EAAC;AAAA,UAAC;AAAE,kBAAOkB,GAAC;AAAA,YAAE,KAAKtC;AAAE,cAAAsB,IAAE4B,GAAG,IAAC;AAAG;AAAA,YAAM,KAAKnD;AAAE,cAAAuB,IAAE4B,GAAG;AAAC;AAAA,YAAM,KAAK5C;AAAE,cAAAgB,IAAE4B,OAAI;AAAE;AAAA,YAAM,KAAK3D;AAAE,cAAA+B,KAAGD,KAAEH,MAAG;AAAO;AAAA,YAAM,KAAKjB;AAAE,cAAAqB,KAAGD,KAAEH,MAAG;AAAM;AAAA,YAAM,KAAKb;AAAE,cAAAiB,IAAED,KAAEzB;AAAE;AAAA,YAAM,KAAKH;AAAE,cAAA6B,IAAED,KAAE7B;AAAE;AAAA,YAAM,KAAKK;AAAE,cAAAyB,IAAED,KAAE/B;AAAE;AAAA,YAAM;AAAQ,cAAAgC,IAAED;AAAA,UAAC;AAAC,iBAAOnB,IAAEoB,IAAEf,EAAE,EAAEe,CAAC;AAAA,QAAC,GAAEF,EAAE,cAAY,WAAU;AAAC,iBAAO,KAAK,MAAMrB,CAAC,EAAE;AAAA,QAAE,GAAEqB,EAAE,UAAQ,WAAU;AAAC,iBAAO8B,EAAE,KAAK,EAAE;AAAA,QAAC,GAAE9B,EAAE,SAAO,SAAS9B,GAAEE,GAAE;AAAC,cAAG,CAACF,EAAE,QAAO,KAAK;AAAG,cAAIM,IAAE,KAAK,MAAK,GAAGD,IAAEwD,GAAE7D,GAAEE,GAAE,EAAE;AAAE,iBAAOG,MAAIC,EAAE,KAAGD,IAAGC;AAAA,QAAC,GAAEwB,EAAE,QAAM,WAAU;AAAC,iBAAOb,EAAE,EAAE,KAAK,IAAG,IAAI;AAAA,QAAC,GAAEa,EAAE,SAAO,WAAU;AAAC,iBAAO,IAAI,KAAK,KAAK,QAAS,CAAA;AAAA,QAAC,GAAEA,EAAE,SAAO,WAAU;AAAC,iBAAO,KAAK,QAAO,IAAG,KAAK,YAAa,IAAC;AAAA,QAAI,GAAEA,EAAE,cAAY,WAAU;AAAC,iBAAO,KAAK,GAAG,YAAW;AAAA,QAAE,GAAEA,EAAE,WAAS,WAAU;AAAC,iBAAO,KAAK,GAAG,YAAW;AAAA,QAAE,GAAEkB;AAAA,MAAC,EAAG,GAACJ,KAAEf,GAAE;AAAU,aAAOiC,GAAE,YAAUlB,IAAE,CAAC,CAAC,OAAMvC,CAAC,GAAE,CAAC,MAAKE,CAAC,GAAE,CAAC,MAAKJ,CAAC,GAAE,CAAC,MAAKY,CAAC,GAAE,CAAC,MAAKJ,CAAC,GAAE,CAAC,MAAKF,CAAC,GAAE,CAAC,MAAKC,CAAC,GAAE,CAAC,MAAKI,CAAC,CAAC,EAAE,QAAS,SAASd,GAAE;AAAC,QAAA4C,GAAE5C,EAAE,CAAC,CAAC,IAAE,SAASE,GAAE;AAAC,iBAAO,KAAK,GAAGA,GAAEF,EAAE,CAAC,GAAEA,EAAE,CAAC,CAAC;AAAA,QAAC;AAAA,MAAC,CAAG,GAAC8D,GAAE,SAAO,SAAS9D,GAAEE,GAAE;AAAC,eAAOF,EAAE,OAAKA,EAAEE,GAAE2B,IAAEiC,EAAC,GAAE9D,EAAE,KAAG,KAAI8D;AAAA,MAAC,GAAEA,GAAE,SAAOD,IAAEC,GAAE,UAAQtD,IAAEsD,GAAE,OAAK,SAAS9D,GAAE;AAAC,eAAO8D,GAAE,MAAI9D,CAAC;AAAA,MAAC,GAAE8D,GAAE,KAAGF,EAAE7B,CAAC,GAAE+B,GAAE,KAAGF,GAAEE,GAAE,IAAE,IAAGA;AAAA,IAAC,CAAC;AAAA;;;;;ACAr/N,KAAC,SAAS5D,GAAEI,GAAE;AAAsD,MAAAoD,EAAe,UAAApD,EAAEyD,GAAA,CAAgB;AAAA,IAA4I,GAAEJ,IAAM,SAASzD,GAAE;AAAc,eAASI,EAAEJ,GAAE;AAAC,eAAOA,KAAa,OAAOA,KAAjB,YAAoB,aAAYA,IAAEA,IAAE,EAAC,SAAQA,EAAC;AAAA,MAAC;AAAC,UAAIF,IAAEM,EAAEJ,CAAC,GAAEG,IAAE,EAAC,MAAK,MAAK,UAAS,sDAAsD,MAAM,GAAG,GAAE,eAAc,gCAAgC,MAAM,GAAG,GAAE,aAAY,qBAAqB,MAAM,GAAG,GAAE,QAAO,oGAAoG,MAAM,GAAG,GAAE,aAAY,qDAAqD,MAAM,GAAG,GAAE,SAAQ,SAASH,GAAE;AAAC,eAAOA,IAAE;AAAA,MAAG,GAAE,WAAU,GAAE,cAAa,EAAC,QAAO,YAAW,MAAK,MAAK,GAAE,SAASA,GAAEI,GAAEN,GAAEK,GAAE;AAAC,eAAM,sBAAoBA,KAAGC,IAAE,KAAG;AAAA,MAAI,GAAE,GAAE,SAASJ,GAAEI,GAAEN,GAAEK,GAAE;AAAC,eAAM,cAAYA,KAAGC,IAAE,KAAG;AAAA,MAAI,GAAE,IAAG,SAASJ,GAAEI,GAAEN,GAAEK,GAAE;AAAC,eAAOH,IAAE,WAASG,KAAGC,IAAE,KAAG;AAAA,MAAI,GAAE,GAAE,SAASJ,GAAEI,GAAEN,GAAEK,GAAE;AAAC,eAAM,UAAQA,KAAGC,IAAE,QAAM;AAAA,MAAQ,GAAE,IAAG,SAASJ,GAAEI,GAAEN,GAAEK,GAAE;AAAC,eAAOH,IAAE,OAAKG,KAAGC,IAAE,QAAM;AAAA,MAAQ,GAAE,GAAE,SAASJ,GAAEI,GAAEN,GAAEK,GAAE;AAAC,eAAM,UAAQA,KAAGC,IAAE,QAAM;AAAA,MAAQ,GAAE,IAAG,SAASJ,GAAEI,GAAEN,GAAEK,GAAE;AAAC,eAAOH,IAAE,OAAKG,KAAGC,IAAE,QAAM;AAAA,MAAQ,GAAE,GAAE,SAASJ,GAAEI,GAAEN,GAAEK,GAAE;AAAC,eAAM,UAAQA,KAAGC,IAAE,UAAQ;AAAA,MAAU,GAAE,IAAG,SAASJ,GAAEI,GAAEN,GAAEK,GAAE;AAAC,eAAOH,IAAE,OAAKG,KAAGC,IAAE,UAAQ;AAAA,MAAU,GAAE,GAAE,SAASJ,GAAEI,GAAEN,GAAEK,GAAE;AAAC,eAAM,UAAQA,KAAGC,IAAE,OAAK;AAAA,MAAM,GAAE,IAAG,SAASJ,GAAEI,GAAEN,GAAEK,GAAE;AAAC,eAAOH,IAAE,OAAKG,KAAGC,IAAE,OAAK;AAAA,MAAM,EAAC,GAAE,SAAQ,EAAC,IAAG,QAAO,KAAI,WAAU,GAAE,eAAc,IAAG,iBAAgB,KAAI,sBAAqB,MAAK,2BAA0B,EAAC;AAAE,aAAON,EAAE,QAAQ,OAAOK,GAAE,MAAK,EAAE,GAAEA;AAAA,IAAC,CAAC;AAAA;;;;;;ACAnkD,KAAC,SAASH,GAAEI,GAAE;AAAsD,MAAAoD,EAAA,UAAepD,EAAC;AAAA,IAA4H,GAAEqD,IAAM,WAAU;AAAc,aAAM,EAAC,MAAK,MAAK,UAAS,2DAA2D,MAAM,GAAG,GAAE,QAAO,wFAAwF,MAAM,GAAG,GAAE,SAAQ,SAASzD,GAAE;AAAC,YAAII,IAAE,CAAC,MAAK,MAAK,MAAK,IAAI,GAAEN,IAAEE,IAAE;AAAI,eAAM,MAAIA,KAAGI,GAAGN,IAAE,MAAI,EAAE,KAAGM,EAAEN,CAAC,KAAGM,EAAE,CAAC,KAAG;AAAA,MAAG,EAAC;AAAA,IAAC,CAAC;AAAA;;;;;;;;ACA/hB,KAAC,SAASJ,GAAEF,GAAE;AAAsD,MAAA0D,EAAA,UAAe1D;IAA4I,GAAE2D,IAAM,WAAU;AAAc,UAAIzD,IAAE,EAAC,KAAI,aAAY,IAAG,UAAS,GAAE,cAAa,IAAG,gBAAe,KAAI,uBAAsB,MAAK,4BAA2B,GAAEF,IAAE,iGAAgGM,IAAE,MAAKD,IAAE,QAAOE,IAAE,SAAQN,IAAE,sBAAqBE,IAAE,CAAE,GAACQ,IAAE,SAAST,GAAE;AAAC,gBAAOA,IAAE,CAACA,MAAIA,IAAE,KAAG,OAAK;AAAA,MAAI,GAAMc,IAAE,SAASd,GAAE;AAAC,eAAO,SAASF,GAAE;AAAC,eAAKE,CAAC,IAAE,CAACF;AAAA,QAAC;AAAA,MAAC,GAAE,IAAE,CAAC,uBAAsB,SAASE,GAAE;AAAC,SAAC,KAAK,SAAO,KAAK,OAAK,CAAA,IAAK,SAAO,SAASA,GAAE;AAAgB,cAAZ,CAACA,KAAoBA,MAAN,IAAQ,QAAO;AAAE,cAAIF,IAAEE,EAAE,MAAM,cAAc,GAAEI,IAAE,KAAGN,EAAE,CAAC,KAAG,CAACA,EAAE,CAAC,KAAG;AAAG,iBAAWM,MAAJ,IAAM,IAAQN,EAAE,CAAC,MAAT,MAAW,CAACM,IAAEA;AAAA,QAAC,EAAEJ,CAAC;AAAA,MAAC,CAAC,GAAEa,IAAE,SAASb,GAAE;AAAC,YAAIF,IAAEG,EAAED,CAAC;AAAE,eAAOF,MAAIA,EAAE,UAAQA,IAAEA,EAAE,EAAE,OAAOA,EAAE,CAAC;AAAA,MAAE,GAAEc,IAAE,SAASZ,GAAEF,GAAE;AAAC,YAAIM,GAAED,IAAEF,EAAE;AAAS,YAAGE;AAAG,mBAAQE,IAAE,GAAEA,KAAG,IAAGA,KAAG,EAAE,KAAGL,EAAE,QAAQG,EAAEE,GAAE,GAAEP,CAAC,CAAC,IAAE,IAAG;AAAC,YAAAM,IAAEC,IAAE;AAAG;AAAA,UAAK;AAAA,cAAO,CAAAD,IAAEJ,OAAKF,IAAE,OAAK;AAAM,eAAOM;AAAA,MAAC,GAAEG,IAAE,EAAC,GAAE,CAACR,GAAE,SAASC,GAAE;AAAC,aAAK,YAAUY,EAAEZ,GAAE,EAAE;AAAA,MAAC,CAAC,GAAE,GAAE,CAACD,GAAE,SAASC,GAAE;AAAC,aAAK,YAAUY,EAAEZ,GAAE,EAAE;AAAA,MAAC,CAAC,GAAE,GAAE,CAACI,GAAE,SAASJ,GAAE;AAAC,aAAK,QAAM,KAAGA,IAAE,KAAG;AAAA,MAAC,CAAC,GAAE,GAAE,CAACI,GAAE,SAASJ,GAAE;AAAC,aAAK,eAAa,MAAI,CAACA;AAAA,MAAC,CAAC,GAAE,IAAG,CAACG,GAAE,SAASH,GAAE;AAAC,aAAK,eAAa,KAAG,CAACA;AAAA,MAAC,CAAC,GAAE,KAAI,CAAC,SAAQ,SAASA,GAAE;AAAC,aAAK,eAAa,CAACA;AAAA,MAAC,CAAC,GAAE,GAAE,CAACK,GAAES,EAAE,SAAS,CAAC,GAAE,IAAG,CAACT,GAAES,EAAE,SAAS,CAAC,GAAE,GAAE,CAACT,GAAES,EAAE,SAAS,CAAC,GAAE,IAAG,CAACT,GAAES,EAAE,SAAS,CAAC,GAAE,GAAE,CAACT,GAAES,EAAE,OAAO,CAAC,GAAE,GAAE,CAACT,GAAES,EAAE,OAAO,CAAC,GAAE,IAAG,CAACT,GAAES,EAAE,OAAO,CAAC,GAAE,IAAG,CAACT,GAAES,EAAE,OAAO,CAAC,GAAE,GAAE,CAACT,GAAES,EAAE,KAAK,CAAC,GAAE,IAAG,CAACX,GAAEW,EAAE,KAAK,CAAC,GAAE,IAAG,CAACf,GAAE,SAASC,GAAE;AAAC,YAAIF,IAAEG,EAAE,SAAQG,IAAEJ,EAAE,MAAM,KAAK;AAAE,YAAG,KAAK,MAAII,EAAE,CAAC,GAAEN,EAAE,UAAQK,IAAE,GAAEA,KAAG,IAAGA,KAAG,EAAE,CAAAL,EAAEK,CAAC,EAAE,QAAQ,UAAS,EAAE,MAAIH,MAAI,KAAK,MAAIG;AAAA,MAAE,CAAC,GAAE,GAAE,CAACE,GAAES,EAAE,MAAM,CAAC,GAAE,IAAG,CAACX,GAAEW,EAAE,MAAM,CAAC,GAAE,GAAE,CAACT,GAAES,EAAE,OAAO,CAAC,GAAE,IAAG,CAACX,GAAEW,EAAE,OAAO,CAAC,GAAE,KAAI,CAACf,GAAE,SAASC,GAAE;AAAC,YAAIF,IAAEe,EAAE,QAAQ,GAAET,KAAGS,EAAE,aAAa,KAAGf,EAAE,IAAK,SAASE,GAAE;AAAC,iBAAOA,EAAE,MAAM,GAAE,CAAC;AAAA,QAAC,CAAC,GAAI,QAAQA,CAAC,IAAE;AAAE,YAAGI,IAAE,EAAE,OAAM,IAAI;AAAM,aAAK,QAAMA,IAAE,MAAIA;AAAA,MAAC,CAAC,GAAE,MAAK,CAACL,GAAE,SAASC,GAAE;AAAC,YAAIF,IAAEe,EAAE,QAAQ,EAAE,QAAQb,CAAC,IAAE;AAAE,YAAGF,IAAE,EAAE,OAAM,IAAI;AAAM,aAAK,QAAMA,IAAE,MAAIA;AAAA,MAAC,CAAC,GAAE,GAAE,CAAC,YAAWgB,EAAE,MAAM,CAAC,GAAE,IAAG,CAACX,GAAE,SAASH,GAAE;AAAC,aAAK,OAAKS,EAAET,CAAC;AAAA,MAAC,CAAC,GAAE,MAAK,CAAC,SAAQc,EAAE,MAAM,CAAC,GAAE,GAAE,GAAE,IAAG,EAAC;AAAE,eAASJ,EAAEN,GAAE;AAAC,YAAID,GAAEE;AAAE,QAAAF,IAAEC,GAAEC,IAAEJ,KAAGA,EAAE;AAAQ,iBAAQF,KAAGK,IAAED,EAAE,QAAQ,qCAAqC,SAASL,IAAEM,GAAED,IAAE;AAAC,cAAIJ,KAAEI,MAAGA,GAAE,YAAW;AAAG,iBAAOC,KAAGC,EAAEF,EAAC,KAAGH,EAAEG,EAAC,KAAGE,EAAEN,EAAC,EAAE,QAAQ,kCAAkC,SAASC,GAAEF,GAAEM,GAAE;AAAC,mBAAON,KAAGM,EAAE,MAAM,CAAC;AAAA,UAAC,CAAG;AAAA,QAAA,CAAG,GAAE,MAAMN,CAAC,GAAEW,IAAEV,EAAE,QAAOe,IAAE,GAAEA,IAAEL,GAAEK,KAAG,GAAE;AAAC,cAAIN,IAAET,EAAEe,CAAC,GAAED,KAAEN,EAAEC,CAAC,GAAEI,KAAEC,MAAGA,GAAE,CAAC,GAAEH,KAAEG,MAAGA,GAAE,CAAC;AAAE,UAAAd,EAAEe,CAAC,IAAEJ,KAAE,EAAC,OAAME,IAAE,QAAOF,GAAC,IAAEF,EAAE,QAAQ,YAAW,EAAE;AAAA,QAAC;AAAC,eAAO,SAASR,IAAE;AAAC,mBAAQF,IAAE,CAAA,GAAGM,KAAE,GAAED,KAAE,GAAEC,KAAEK,GAAEL,MAAG,GAAE;AAAC,gBAAIC,IAAEN,EAAEK,EAAC;AAAE,gBAAa,OAAOC,KAAjB,SAAmB,CAAAF,MAAGE,EAAE;AAAA,iBAAW;AAAC,kBAAIJ,IAAEI,EAAE,OAAMS,IAAET,EAAE,QAAOG,IAAER,GAAE,MAAMG,EAAC,GAAEU,IAAEZ,EAAE,KAAKO,CAAC,EAAE,CAAC;AAAE,cAAAM,EAAE,KAAKhB,GAAEe,CAAC,GAAEb,KAAEA,GAAE,QAAQa,GAAE,EAAE;AAAA,YAAC;AAAA,UAAC;AAAC,iBAAO,SAASb,GAAE;AAAC,gBAAIF,IAAEE,EAAE;AAAU,gBAAYF,MAAT,QAAW;AAAC,kBAAIM,IAAEJ,EAAE;AAAM,cAAAF,IAAEM,IAAE,OAAKJ,EAAE,SAAO,MAASI,MAAL,OAASJ,EAAE,QAAM,IAAG,OAAOA,EAAE;AAAA,YAAS;AAAA,UAAC,EAAEF,CAAC,GAAEA;AAAA,QAAC;AAAA,MAAC;AAAC,aAAO,SAASE,GAAEF,GAAEM,GAAE;AAAC,QAAAA,EAAE,EAAE,oBAAkB,IAAGJ,KAAGA,EAAE,sBAAoBS,IAAET,EAAE;AAAmB,YAAIG,IAAEL,EAAE,WAAUO,IAAEF,EAAE;AAAM,QAAAA,EAAE,QAAM,SAASH,GAAE;AAAC,cAAIF,IAAEE,EAAE,MAAKG,KAAEH,EAAE,KAAID,KAAEC,EAAE;AAAK,eAAK,KAAGG;AAAE,cAAIM,KAAEV,GAAE,CAAC;AAAE,cAAa,OAAOU,MAAjB,UAAmB;AAAC,gBAAIK,KAAOf,GAAE,CAAC,MAAR,IAAUS,IAAOT,GAAE,CAAC,MAAR,IAAUc,KAAEC,MAAGN,GAAEI,KAAEb,GAAE,CAAC;AAAE,YAAAS,MAAII,KAAEb,GAAE,CAAC,IAAGE,IAAE,KAAK,QAAO,GAAG,CAACa,MAAGF,OAAIX,IAAEG,EAAE,GAAGQ,EAAC,IAAG,KAAK,KAAG,SAASZ,GAAEF,GAAEM,GAAED,GAAE;AAAC,kBAAG;AAAC,oBAAG,CAAC,KAAI,GAAG,EAAE,QAAQL,CAAC,IAAE,GAAG,QAAO,IAAI,MAAYA,MAAN,MAAQ,MAAI,KAAGE,CAAC;AAAE,oBAAIK,IAAEK,EAAEZ,CAAC,EAAEE,CAAC,GAAED,KAAEM,EAAE,MAAKJ,KAAEI,EAAE,OAAMI,KAAEJ,EAAE,KAAIS,KAAET,EAAE,OAAMG,KAAEH,EAAE,SAAQQ,KAAER,EAAE,SAAQO,KAAEP,EAAE,cAAaE,KAAEF,EAAE,MAAKuB,KAAEvB,EAAE,MAAKyC,KAAE,oBAAI,QAAKgB,KAAErD,OAAIV,MAAGE,KAAE,IAAE6C,GAAE,QAAO,IAAInC,KAAEZ,MAAG+C,GAAE,eAAcpB,KAAE;AAAE,gBAAA3B,MAAG,CAACE,OAAIyB,KAAEzB,KAAE,IAAEA,KAAE,IAAE6C,GAAE,SAAU;AAAE,oBAAIY,IAAEC,KAAE7C,MAAG,GAAEe,KAAErB,MAAG,GAAEc,KAAET,MAAG,GAAE4B,KAAE7B,MAAG;AAAE,uBAAOL,KAAE,IAAI,KAAK,KAAK,IAAII,IAAEe,IAAEoC,IAAEH,IAAE9B,IAAEP,IAAEmB,KAAE,KAAGlC,GAAE,SAAO,GAAG,CAAC,IAAEH,IAAE,IAAI,KAAK,KAAK,IAAIO,IAAEe,IAAEoC,IAAEH,IAAE9B,IAAEP,IAAEmB,EAAC,CAAC,KAAGiB,KAAE,IAAI,KAAK/C,IAAEe,IAAEoC,IAAEH,IAAE9B,IAAEP,IAAEmB,EAAC,GAAEb,OAAI8B,KAAEvD,EAAEuD,EAAC,EAAE,KAAK9B,EAAC,EAAE,OAAQ,IAAE8B;AAAA,cAAE,SAAO1D,IAAE;AAAC,uBAAO,oBAAI,KAAK,EAAE;AAAA,cAAC;AAAA,YAAC,EAAEF,GAAEW,IAAEN,IAAEC,CAAC,GAAE,KAAK,QAAOQ,MAAQA,OAAL,OAAS,KAAK,KAAG,KAAK,OAAOA,EAAC,EAAE,KAAIC,MAAGf,KAAG,KAAK,OAAOW,EAAC,MAAI,KAAK,KAAG,oBAAI,KAAK,EAAE,IAAGR,IAAE,CAAA;AAAA,UAAE,WAASQ,cAAa,MAAM,UAAQF,IAAEE,GAAE,QAAOmB,IAAE,GAAEA,KAAGrB,GAAEqB,KAAG,GAAE;AAAC,YAAA7B,GAAE,CAAC,IAAEU,GAAEmB,IAAE,CAAC;AAAE,gBAAIkB,IAAE1C,EAAE,MAAM,MAAKL,EAAC;AAAE,gBAAG+C,EAAE,QAAO,GAAG;AAAC,mBAAK,KAAGA,EAAE,IAAG,KAAK,KAAGA,EAAE,IAAG,KAAK,KAAI;AAAG;AAAA,YAAK;AAAC,YAAAlB,MAAIrB,MAAI,KAAK,KAAG,oBAAI,KAAK,EAAE;AAAA,UAAE;AAAA,cAAM,CAAAF,EAAE,KAAK,MAAKL,CAAC;AAAA,QAAC;AAAA,MAAC;AAAA,IAAC,CAAC;AAAA;;;;;;;ACApyH,KAAC,SAASI,GAAEJ,GAAE;AAAsD,MAAAwD,YAAexD,EAAC;AAAA,IAAoI,GAAEyD,IAAM,WAAU;AAAc,aAAO,SAASrD,GAAEJ,GAAEF,GAAE;AAAC,YAAIK,IAAEH,EAAE,WAAUD,IAAE,SAASK,GAAE;AAAC,iBAAOA,MAAIA,EAAE,UAAQA,IAAEA,EAAE;AAAA,QAAE,GAAES,IAAE,SAAST,GAAEJ,GAAEF,GAAEK,GAAEU,GAAE;AAAC,cAAIR,IAAED,EAAE,OAAKA,IAAEA,EAAE,QAAO,GAAGK,IAAEV,EAAEM,EAAEL,CAAC,CAAC,GAAEC,IAAEF,EAAEM,EAAEP,CAAC,CAAC,GAAEgB,IAAEL,KAAGR,EAAE,IAAK,SAASG,GAAE;AAAC,mBAAOA,EAAE,MAAM,GAAED,CAAC;AAAA,UAAC,CAAC;AAAG,cAAG,CAACU,EAAE,QAAOC;AAAE,cAAIF,IAAEP,EAAE;AAAU,iBAAOS,EAAE,IAAK,SAASV,GAAEJ,GAAE;AAAC,mBAAOc,GAAGd,KAAGY,KAAG,MAAI,CAAC;AAAA,UAAC,CAAC;AAAA,QAAE,GAAEP,IAAE,WAAU;AAAC,iBAAOP,EAAE,GAAGA,EAAE,OAAM,CAAE;AAAA,QAAC,GAAEW,IAAE,SAASL,GAAEJ,GAAE;AAAC,iBAAOI,EAAE,QAAQJ,CAAC,KAAG,SAASI,GAAE;AAAC,mBAAOA,EAAE,QAAQ,kCAAkC,SAASA,GAAEJ,GAAEF,GAAE;AAAC,qBAAOE,KAAGF,EAAE,MAAM,CAAC;AAAA,YAAC,CAAG;AAAA,UAAA,EAAEM,EAAE,QAAQJ,EAAE,YAAW,CAAE,CAAC;AAAA,QAAC,GAAEC,IAAE,WAAU;AAAC,cAAIG,IAAE;AAAK,iBAAM,EAAC,QAAO,SAASJ,GAAE;AAAC,mBAAOA,IAAEA,EAAE,OAAO,MAAM,IAAEa,EAAET,GAAE,QAAQ;AAAA,UAAC,GAAE,aAAY,SAASJ,GAAE;AAAC,mBAAOA,IAAEA,EAAE,OAAO,KAAK,IAAEa,EAAET,GAAE,eAAc,UAAS,CAAC;AAAA,UAAC,GAAE,gBAAe,WAAU;AAAC,mBAAOA,EAAE,QAAS,EAAC,aAAW;AAAA,UAAC,GAAE,UAAS,SAASJ,GAAE;AAAC,mBAAOA,IAAEA,EAAE,OAAO,MAAM,IAAEa,EAAET,GAAE,UAAU;AAAA,UAAC,GAAE,aAAY,SAASJ,GAAE;AAAC,mBAAOA,IAAEA,EAAE,OAAO,IAAI,IAAEa,EAAET,GAAE,eAAc,YAAW,CAAC;AAAA,UAAC,GAAE,eAAc,SAASJ,GAAE;AAAC,mBAAOA,IAAEA,EAAE,OAAO,KAAK,IAAEa,EAAET,GAAE,iBAAgB,YAAW,CAAC;AAAA,UAAC,GAAE,gBAAe,SAASJ,GAAE;AAAC,mBAAOS,EAAEL,EAAE,QAAS,GAACJ,CAAC;AAAA,UAAC,GAAE,UAAS,KAAK,QAAS,EAAC,UAAS,SAAQ,KAAK,UAAU,QAAO;AAAA,QAAC;AAAE,QAAAG,EAAE,aAAW,WAAU;AAAC,iBAAOF,EAAE,KAAK,IAAI,EAAG;AAAA,QAAA,GAAEH,EAAE,aAAW,WAAU;AAAC,cAAIM,IAAEC;AAAI,iBAAM,EAAC,gBAAe,WAAU;AAAC,mBAAOD,EAAE,aAAW;AAAA,UAAC,GAAE,UAAS,WAAU;AAAC,mBAAON,EAAE;UAAU,GAAE,eAAc,WAAU;AAAC,mBAAOA,EAAE;UAAe,GAAE,aAAY,WAAU;AAAC,mBAAOA,EAAE,YAAa;AAAA,UAAA,GAAE,QAAO,WAAU;AAAC,mBAAOA,EAAE,OAAQ;AAAA,UAAA,GAAE,aAAY,WAAU;AAAC,mBAAOA,EAAE,YAAW;AAAA,UAAE,GAAE,gBAAe,SAASE,GAAE;AAAC,mBAAOS,EAAEL,GAAEJ,CAAC;AAAA,UAAC,GAAE,UAASI,EAAE,UAAS,SAAQA,EAAE,QAAO;AAAA,QAAC,GAAEN,EAAE,SAAO,WAAU;AAAC,iBAAOe,EAAER,EAAG,GAAC,QAAQ;AAAA,QAAC,GAAEP,EAAE,cAAY,WAAU;AAAC,iBAAOe,EAAER,EAAG,GAAC,eAAc,UAAS,CAAC;AAAA,QAAC,GAAEP,EAAE,WAAS,SAASM,GAAE;AAAC,iBAAOS,EAAER,EAAC,GAAG,YAAW,MAAK,MAAKD,CAAC;AAAA,QAAC,GAAEN,EAAE,gBAAc,SAASM,GAAE;AAAC,iBAAOS,EAAER,EAAG,GAAC,iBAAgB,YAAW,GAAED,CAAC;AAAA,QAAC,GAAEN,EAAE,cAAY,SAASM,GAAE;AAAC,iBAAOS,EAAER,EAAG,GAAC,eAAc,YAAW,GAAED,CAAC;AAAA,QAAC;AAAA,MAAC;AAAA,IAAC;;;;;;;;ACA/hE,KAAC,SAASJ,GAAEF,GAAE;AAAsD,MAAA0D,EAAA,UAAe1D,EAA0I;AAAA,IAAA,GAAE2D,IAAM,WAAU;AAAc,UAAIzD,IAAE,EAAC,KAAI,aAAY,IAAG,UAAS,GAAE,cAAa,IAAG,gBAAe,KAAI,uBAAsB,MAAK,4BAA2B;AAAE,aAAO,SAASF,GAAEC,GAAEK,GAAE;AAAC,YAAID,IAAEJ,EAAE,WAAUM,IAAEF,EAAE;AAAO,QAAAC,EAAE,GAAG,UAAQJ,GAAEG,EAAE,SAAO,SAASL,GAAE;AAAC,UAASA,MAAT,WAAaA,IAAE;AAAwB,cAAIC,IAAE,KAAK,QAAS,EAAC,SAAQK,IAAE,SAASN,GAAEC,GAAE;AAAC,mBAAOD,EAAE,QAAQ,qCAAqC,SAASA,GAAEM,GAAED,GAAE;AAAC,kBAAIE,IAAEF,KAAGA,EAAE,YAAa;AAAC,qBAAOC,KAAGL,EAAEI,CAAC,KAAGH,EAAEG,CAAC,KAAGJ,EAAEM,CAAC,EAAE,QAAQ,kCAAkC,SAASL,GAAEF,GAAEC,GAAE;AAAC,uBAAOD,KAAGC,EAAE,MAAM,CAAC;AAAA,cAAC,CAAG;AAAA,YAAA,CAAG;AAAA,UAAA,EAAED,GAAWC,MAAT,SAAW,CAAE,IAACA,CAAC;AAAE,iBAAOM,EAAE,KAAK,MAAKD,CAAC;AAAA,QAAC;AAAA,MAAC;AAAA,IAAC,CAAC;AAAA;;;;;;;ACApyB,KAAC,SAASJ,GAAEF,GAAE;AAAsD,MAAA0D,EAAA,UAAe1D,EAAkI;AAAA,IAAA,GAAE2D,IAAM,WAAU;AAAc,aAAO,SAASzD,GAAEF,GAAE;AAAC,QAAAA,EAAE,UAAU,UAAQ,SAASE,GAAE;AAAC,cAAIF,IAAE,KAAK,QAAO,EAAG,aAAW,GAAEO,IAAE,KAAK,IAAGD,KAAGC,IAAEP,IAAEO,IAAE,IAAEA,KAAGP;AAAE,iBAAO,KAAK,OAAM,EAAG,EAAEE,CAAC,IAAEI,IAAE,KAAK,SAASA,GAAE,KAAK,EAAE,IAAIJ,GAAE,KAAK;AAAA,QAAC;AAAA,MAAC;AAAA,IAAC,CAAC;AAAA;;;mCCAla+D,IAAW,CAAAC,MAAO,OAAOA,KAAQ,UACjCC,KAAQ,MAAM;AAClB,MAAIC,GACAC;AACJ,QAAMC,IAAU,IAAI,QAAQ,CAACC,GAASC,MAAW;AAC/C,IAAAJ,IAAMG,GACNF,IAAMG;AAAA,EACV,CAAG;AACD,SAAAF,EAAQ,UAAUF,GAClBE,EAAQ,SAASD,GACVC;AACT,GACMG,KAAa,CAAAC,MACbA,KAAU,OAAa,KACpB,KAAKA,GAERC,KAAO,CAAChE,GAAGR,GAAGH,MAAM;AACxB,EAAAW,EAAE,QAAQ,CAAAmB,MAAK;AACb,IAAI3B,EAAE2B,CAAC,MAAG9B,EAAE8B,CAAC,IAAI3B,EAAE2B,CAAC;AAAA,EACxB,CAAG;AACH,GACM8C,KAA4B,QAC5BC,KAAW,CAAAC,MAAOA,KAAOA,EAAI,QAAQ,KAAK,IAAI,KAAKA,EAAI,QAAQF,IAA2B,GAAG,IAAIE,GACjGC,KAAuB,CAAAL,MAAU,CAACA,KAAUT,EAASS,CAAM,GAC3DM,KAAgB,CAACN,GAAQO,GAAMC,MAAU;AAC7C,QAAMC,IAASlB,EAASgB,CAAI,IAAWA,EAAK,MAAM,GAAG,IAArBA;AAChC,MAAIG,IAAa;AACjB,SAAOA,IAAaD,EAAM,SAAS,KAAG;AACpC,QAAIJ,GAAqBL,CAAM,EAAG,QAAO,CAAE;AAC3C,UAAMI,IAAMD,GAASM,EAAMC,CAAU,CAAC;AACtC,IAAI,CAACV,EAAOI,CAAG,KAAKI,MAAOR,EAAOI,CAAG,IAAI,IAAII,EAAO,IAChD,OAAO,UAAU,eAAe,KAAKR,GAAQI,CAAG,IAClDJ,IAASA,EAAOI,CAAG,IAEnBJ,IAAS,CAAE,GAEb,EAAEU;AAAA,EACN;AACE,SAAIL,GAAqBL,CAAM,IAAU,CAAE,IACpC;AAAA,IACL,KAAKA;AAAA,IACL,GAAGG,GAASM,EAAMC,CAAU,CAAC;AAAA,EAC9B;AACH,GACMC,KAAU,CAACX,GAAQO,GAAMK,MAAa;AAC1C,QAAM;AAAA,IACJ,KAAApB;AAAA,IACA,GAAAtB;AAAA,EACD,IAAGoC,GAAcN,GAAQO,GAAM,MAAM;AACtC,MAAIf,MAAQ,UAAae,EAAK,WAAW,GAAG;AAC1C,IAAAf,EAAItB,CAAC,IAAI0C;AACT;AAAA,EACJ;AACE,MAAIpF,IAAI+E,EAAKA,EAAK,SAAS,CAAC,GACxBpE,IAAIoE,EAAK,MAAM,GAAGA,EAAK,SAAS,CAAC,GACjCM,IAAOP,GAAcN,GAAQ7D,GAAG,MAAM;AAC1C,SAAO0E,EAAK,QAAQ,UAAa1E,EAAE;AACjC,IAAAX,IAAI,GAAGW,EAAEA,EAAE,SAAS,CAAC,CAAC,IAAIX,CAAC,IAC3BW,IAAIA,EAAE,MAAM,GAAGA,EAAE,SAAS,CAAC,GAC3B0E,IAAOP,GAAcN,GAAQ7D,GAAG,MAAM,GAClC0E,KAAQA,EAAK,OAAO,OAAOA,EAAK,IAAI,GAAGA,EAAK,CAAC,IAAIrF,CAAC,EAAE,KAAM,gBAC5DqF,EAAK,MAAM;AAGf,EAAAA,EAAK,IAAI,GAAGA,EAAK,CAAC,IAAIrF,CAAC,EAAE,IAAIoF;AAC/B,GACME,KAAW,CAACd,GAAQO,GAAMK,GAAUG,MAAW;AACnD,QAAM;AAAA,IACJ,KAAAvB;AAAA,IACA,GAAAtB;AAAA,EACD,IAAGoC,GAAcN,GAAQO,GAAM,MAAM;AACtC,EAAAf,EAAItB,CAAC,IAAIsB,EAAItB,CAAC,KAAK,CAAE,GACrBsB,EAAItB,CAAC,EAAE,KAAK0C,CAAQ;AACtB,GACMI,KAAU,CAAChB,GAAQO,MAAS;AAChC,QAAM;AAAA,IACJ,KAAAf;AAAA,IACA,GAAAtB;AAAA,EACJ,IAAMoC,GAAcN,GAAQO,CAAI;AAC9B,MAAKf;AACL,WAAOA,EAAItB,CAAC;AACd,GACM+C,KAAsB,CAACC,GAAMC,GAAaf,MAAQ;AACtD,QAAMvB,IAAQmC,GAAQE,GAAMd,CAAG;AAC/B,SAAIvB,MAAU,SACLA,IAEFmC,GAAQG,GAAaf,CAAG;AACjC,GACMgB,KAAa,CAACC,GAAQC,GAAQC,MAAc;AAChD,aAAWC,KAAQF;AACjB,IAAIE,MAAS,eAAeA,MAAS,kBAC/BA,KAAQH,IACN9B,EAAS8B,EAAOG,CAAI,CAAC,KAAKH,EAAOG,CAAI,aAAa,UAAUjC,EAAS+B,EAAOE,CAAI,CAAC,KAAKF,EAAOE,CAAI,aAAa,SAC5GD,MAAWF,EAAOG,CAAI,IAAIF,EAAOE,CAAI,KAEzCJ,GAAWC,EAAOG,CAAI,GAAGF,EAAOE,CAAI,GAAGD,CAAS,IAGlDF,EAAOG,CAAI,IAAIF,EAAOE,CAAI;AAIhC,SAAOH;AACT,GACMI,KAAc,CAAAC,MAAOA,EAAI,QAAQ,uCAAuC,MAAM;AACpF,IAAIC,KAAa;AAAA,EACf,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AACP;AACA,MAAMC,KAAS,CAAAV,MACT3B,EAAS2B,CAAI,IACRA,EAAK,QAAQ,cAAc,CAAAzF,MAAKkG,GAAWlG,CAAC,CAAC,IAE/CyF;AAET,MAAMW,GAAY;AAAA,EAChB,YAAYC,GAAU;AACpB,SAAK,WAAWA,GAChB,KAAK,YAAY,oBAAI,IAAK,GAC1B,KAAK,cAAc,CAAE;AAAA,EACzB;AAAA,EACE,UAAUC,GAAS;AACjB,UAAMC,IAAkB,KAAK,UAAU,IAAID,CAAO;AAClD,QAAIC,MAAoB;AACtB,aAAOA;AAET,UAAMC,IAAY,IAAI,OAAOF,CAAO;AACpC,WAAI,KAAK,YAAY,WAAW,KAAK,YACnC,KAAK,UAAU,OAAO,KAAK,YAAY,MAAK,CAAE,GAEhD,KAAK,UAAU,IAAIA,GAASE,CAAS,GACrC,KAAK,YAAY,KAAKF,CAAO,GACtBE;AAAA,EACX;AACA;AACA,MAAMC,KAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,GAAG,GAChCC,KAAiC,IAAIN,GAAY,EAAE,GACnDO,KAAsB,CAAChC,GAAKiC,GAAaC,MAAiB;AAC9D,EAAAD,IAAcA,KAAe,IAC7BC,IAAeA,KAAgB;AAC/B,QAAMC,IAAgBL,GAAM,OAAO,CAAAnG,MAAKsG,EAAY,QAAQtG,CAAC,IAAI,KAAKuG,EAAa,QAAQvG,CAAC,IAAI,CAAC;AACjG,MAAIwG,EAAc,WAAW,EAAG,QAAO;AACvC,QAAM,IAAIJ,GAA+B,UAAU,IAAII,EAAc,IAAI,CAAAxG,MAAKA,MAAM,MAAM,QAAQA,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG;AACjH,MAAIyG,IAAU,CAAC,EAAE,KAAKpC,CAAG;AACzB,MAAI,CAACoC,GAAS;AACZ,UAAMC,IAAKrC,EAAI,QAAQkC,CAAY;AACnC,IAAIG,IAAK,KAAK,CAAC,EAAE,KAAKrC,EAAI,UAAU,GAAGqC,CAAE,CAAC,MACxCD,IAAU;AAAA,EAEhB;AACE,SAAOA;AACT,GACME,KAAW,SAAUlD,GAAKe,GAAM;AACpC,MAAI+B,IAAe,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AACvF,MAAI,CAAC9C,EAAK;AACV,MAAIA,EAAIe,CAAI,EAAG,QAAOf,EAAIe,CAAI;AAC9B,QAAMoC,IAASpC,EAAK,MAAM+B,CAAY;AACtC,MAAIM,IAAUpD;AACd,WAAS3D,IAAI,GAAGA,IAAI8G,EAAO,UAAS;AAClC,QAAI,CAACC,KAAW,OAAOA,KAAY;AACjC;AAEF,QAAIC,GACAC,IAAW;AACf,aAAStE,IAAI3C,GAAG2C,IAAImE,EAAO,QAAQ,EAAEnE;AAMnC,UALIA,MAAM3C,MACRiH,KAAYR,IAEdQ,KAAYH,EAAOnE,CAAC,GACpBqE,IAAOD,EAAQE,CAAQ,GACnBD,MAAS,QAAW;AACtB,YAAI,CAAC,UAAU,UAAU,SAAS,EAAE,QAAQ,OAAOA,CAAI,IAAI,MAAMrE,IAAImE,EAAO,SAAS;AACnF;AAEF,QAAA9G,KAAK2C,IAAI3C,IAAI;AACb;AAAA,MACR;AAEI,IAAA+G,IAAUC;AAAA,EACd;AACE,SAAOD;AACT,GACMG,KAAiB,CAAAC,MAAQA,KAAQA,EAAK,QAAQ,KAAK,GAAG,GAEtDC,KAAgB;AAAA,EACpB,MAAM;AAAA,EACN,IAAIC,GAAM;AACR,SAAK,OAAO,OAAOA,CAAI;AAAA,EACxB;AAAA,EACD,KAAKA,GAAM;AACT,SAAK,OAAO,QAAQA,CAAI;AAAA,EACzB;AAAA,EACD,MAAMA,GAAM;AACV,SAAK,OAAO,SAASA,CAAI;AAAA,EAC1B;AAAA,EACD,OAAOC,GAAMD,GAAM;AACjB,IAAI,WAAW,QAAQC,CAAI,KAAG,QAAQA,CAAI,EAAE,MAAM,SAASD,CAAI;AAAA,EACnE;AACA;AACA,MAAME,GAAO;AAAA,EACX,YAAYC,GAAgB;AAC1B,QAAIvE,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,SAAK,KAAKuE,GAAgBvE,CAAO;AAAA,EACrC;AAAA,EACE,KAAKuE,GAAgB;AACnB,QAAIvE,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,SAAK,SAASA,EAAQ,UAAU,YAChC,KAAK,SAASuE,KAAkBJ,IAChC,KAAK,UAAUnE,GACf,KAAK,QAAQA,EAAQ;AAAA,EACzB;AAAA,EACE,MAAM;AACJ,aAASwE,IAAO,UAAU,QAAQJ,IAAO,IAAI,MAAMI,CAAI,GAAGC,IAAO,GAAGA,IAAOD,GAAMC;AAC/E,MAAAL,EAAKK,CAAI,IAAI,UAAUA,CAAI;AAE7B,WAAO,KAAK,QAAQL,GAAM,OAAO,IAAI,EAAI;AAAA,EAC7C;AAAA,EACE,OAAO;AACL,aAASM,IAAQ,UAAU,QAAQN,IAAO,IAAI,MAAMM,CAAK,GAAGC,IAAQ,GAAGA,IAAQD,GAAOC;AACpF,MAAAP,EAAKO,CAAK,IAAI,UAAUA,CAAK;AAE/B,WAAO,KAAK,QAAQP,GAAM,QAAQ,IAAI,EAAI;AAAA,EAC9C;AAAA,EACE,QAAQ;AACN,aAASQ,IAAQ,UAAU,QAAQR,IAAO,IAAI,MAAMQ,CAAK,GAAGC,IAAQ,GAAGA,IAAQD,GAAOC;AACpF,MAAAT,EAAKS,CAAK,IAAI,UAAUA,CAAK;AAE/B,WAAO,KAAK,QAAQT,GAAM,SAAS,EAAE;AAAA,EACzC;AAAA,EACE,YAAY;AACV,aAASU,IAAQ,UAAU,QAAQV,IAAO,IAAI,MAAMU,CAAK,GAAGC,IAAQ,GAAGA,IAAQD,GAAOC;AACpF,MAAAX,EAAKW,CAAK,IAAI,UAAUA,CAAK;AAE/B,WAAO,KAAK,QAAQX,GAAM,QAAQ,wBAAwB,EAAI;AAAA,EAClE;AAAA,EACE,QAAQA,GAAMY,GAAKC,GAAQC,GAAW;AACpC,WAAIA,KAAa,CAAC,KAAK,QAAc,QACjCzE,EAAS2D,EAAK,CAAC,CAAC,MAAGA,EAAK,CAAC,IAAI,GAAGa,CAAM,GAAG,KAAK,MAAM,IAAIb,EAAK,CAAC,CAAC,KAC5D,KAAK,OAAOY,CAAG,EAAEZ,CAAI;AAAA,EAChC;AAAA,EACE,OAAOe,GAAY;AACjB,WAAO,IAAIb,GAAO,KAAK,QAAQpG,EAAA;AAAA,MAE3B,QAAQ,GAAG,KAAK,MAAM,IAAIiH,CAAU;AAAA,OAEnC,KAAK,QACT;AAAA,EACL;AAAA,EACE,MAAMnF,GAAS;AACb,WAAAA,IAAUA,KAAW,KAAK,SAC1BA,EAAQ,SAASA,EAAQ,UAAU,KAAK,QACjC,IAAIsE,GAAO,KAAK,QAAQtE,CAAO;AAAA,EAC1C;AACA;AACA,IAAIoF,KAAa,IAAId,GAAQ;AAE7B,MAAMe,GAAa;AAAA,EACjB,cAAc;AACZ,SAAK,YAAY,CAAE;AAAA,EACvB;AAAA,EACE,GAAGC,GAAQC,GAAU;AACnB,WAAAD,EAAO,MAAM,GAAG,EAAE,QAAQ,CAAArF,MAAS;AACjC,MAAK,KAAK,UAAUA,CAAK,MAAG,KAAK,UAAUA,CAAK,IAAI,oBAAI,IAAK;AAC7D,YAAMuF,IAAe,KAAK,UAAUvF,CAAK,EAAE,IAAIsF,CAAQ,KAAK;AAC5D,WAAK,UAAUtF,CAAK,EAAE,IAAIsF,GAAUC,IAAe,CAAC;AAAA,IAC1D,CAAK,GACM;AAAA,EACX;AAAA,EACE,IAAIvF,GAAOsF,GAAU;AACnB,QAAK,KAAK,UAAUtF,CAAK,GACzB;AAAA,UAAI,CAACsF,GAAU;AACb,eAAO,KAAK,UAAUtF,CAAK;AAC3B;AAAA,MACN;AACI,WAAK,UAAUA,CAAK,EAAE,OAAOsF,CAAQ;AAAA;AAAA,EACzC;AAAA,EACE,KAAKtF,GAAO;AACV,aAASuE,IAAO,UAAU,QAAQJ,IAAO,IAAI,MAAMI,IAAO,IAAIA,IAAO,IAAI,CAAC,GAAGC,IAAO,GAAGA,IAAOD,GAAMC;AAClG,MAAAL,EAAKK,IAAO,CAAC,IAAI,UAAUA,CAAI;AAEjC,IAAI,KAAK,UAAUxE,CAAK,KACP,MAAM,KAAK,KAAK,UAAUA,CAAK,EAAE,SAAS,EAClD,QAAQ,CAAAwF,MAAQ;AACrB,UAAI,CAACC,GAAUC,CAAa,IAAIF;AAChC,eAAS1I,IAAI,GAAGA,IAAI4I,GAAe5I;AACjC,QAAA2I,EAAS,GAAGtB,CAAI;AAAA,IAE1B,CAAO,GAEC,KAAK,UAAU,GAAG,KACL,MAAM,KAAK,KAAK,UAAU,GAAG,EAAE,SAAS,EAChD,QAAQ,CAAAwB,MAAS;AACtB,UAAI,CAACF,GAAUC,CAAa,IAAIC;AAChC,eAAS7I,IAAI,GAAGA,IAAI4I,GAAe5I;AACjC,QAAA2I,EAAS,MAAMA,GAAU,CAACzF,GAAO,GAAGmE,CAAI,CAAC;AAAA,IAEnD,CAAO;AAAA,EAEP;AACA;AAEA,MAAMyB,WAAsBR,GAAa;AAAA,EACvC,YAAYjD,GAAM;AAChB,QAAIpC,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAAA,MAChF,IAAI,CAAC,aAAa;AAAA,MAClB,WAAW;AAAA,IACZ;AACD,UAAO,GACP,KAAK,OAAOoC,KAAQ,CAAE,GACtB,KAAK,UAAUpC,GACX,KAAK,QAAQ,iBAAiB,WAChC,KAAK,QAAQ,eAAe,MAE1B,KAAK,QAAQ,wBAAwB,WACvC,KAAK,QAAQ,sBAAsB;AAAA,EAEzC;AAAA,EACE,cAAc8F,GAAI;AAChB,IAAI,KAAK,QAAQ,GAAG,QAAQA,CAAE,IAAI,KAChC,KAAK,QAAQ,GAAG,KAAKA,CAAE;AAAA,EAE7B;AAAA,EACE,iBAAiBA,GAAI;AACnB,UAAMC,IAAQ,KAAK,QAAQ,GAAG,QAAQD,CAAE;AACxC,IAAIC,IAAQ,MACV,KAAK,QAAQ,GAAG,OAAOA,GAAO,CAAC;AAAA,EAErC;AAAA,EACE,YAAYC,GAAKF,GAAIxE,GAAK;AACxB,QAAItB,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,UAAMwD,IAAexD,EAAQ,iBAAiB,SAAYA,EAAQ,eAAe,KAAK,QAAQ,cACxFiG,IAAsBjG,EAAQ,wBAAwB,SAAYA,EAAQ,sBAAsB,KAAK,QAAQ;AACnH,QAAIyB;AACJ,IAAIuE,EAAI,QAAQ,GAAG,IAAI,KACrBvE,IAAOuE,EAAI,MAAM,GAAG,KAEpBvE,IAAO,CAACuE,GAAKF,CAAE,GACXxE,MACE,MAAM,QAAQA,CAAG,IACnBG,EAAK,KAAK,GAAGH,CAAG,IACPb,EAASa,CAAG,KAAKkC,IAC1B/B,EAAK,KAAK,GAAGH,EAAI,MAAMkC,CAAY,CAAC,IAEpC/B,EAAK,KAAKH,CAAG;AAInB,UAAM4E,IAAShE,GAAQ,KAAK,MAAMT,CAAI;AAMtC,WALI,CAACyE,KAAU,CAACJ,KAAM,CAACxE,KAAO0E,EAAI,QAAQ,GAAG,IAAI,OAC/CA,IAAMvE,EAAK,CAAC,GACZqE,IAAKrE,EAAK,CAAC,GACXH,IAAMG,EAAK,MAAM,CAAC,EAAE,KAAK,GAAG,IAE1ByE,KAAU,CAACD,KAAuB,CAACxF,EAASa,CAAG,IAAU4E,IACtDtC,GAAS,KAAK,QAAQ,KAAK,KAAKoC,CAAG,KAAK,KAAK,KAAKA,CAAG,EAAEF,CAAE,GAAGxE,GAAKkC,CAAY;AAAA,EACxF;AAAA,EACE,YAAYwC,GAAKF,GAAIxE,GAAKvB,GAAO;AAC/B,QAAIC,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAAA,MAChF,QAAQ;AAAA,IACT;AACD,UAAMwD,IAAexD,EAAQ,iBAAiB,SAAYA,EAAQ,eAAe,KAAK,QAAQ;AAC9F,QAAIyB,IAAO,CAACuE,GAAKF,CAAE;AACnB,IAAIxE,MAAKG,IAAOA,EAAK,OAAO+B,IAAelC,EAAI,MAAMkC,CAAY,IAAIlC,CAAG,IACpE0E,EAAI,QAAQ,GAAG,IAAI,OACrBvE,IAAOuE,EAAI,MAAM,GAAG,GACpBjG,IAAQ+F,GACRA,IAAKrE,EAAK,CAAC,IAEb,KAAK,cAAcqE,CAAE,GACrBjE,GAAQ,KAAK,MAAMJ,GAAM1B,CAAK,GACzBC,EAAQ,UAAQ,KAAK,KAAK,SAASgG,GAAKF,GAAIxE,GAAKvB,CAAK;AAAA,EAC/D;AAAA,EACE,aAAaiG,GAAKF,GAAIK,GAAW;AAC/B,QAAInG,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAAA,MAChF,QAAQ;AAAA,IACT;AACD,eAAW1B,KAAK6H;AACd,OAAI1F,EAAS0F,EAAU7H,CAAC,CAAC,KAAK,MAAM,QAAQ6H,EAAU7H,CAAC,CAAC,MAAG,KAAK,YAAY0H,GAAKF,GAAIxH,GAAG6H,EAAU7H,CAAC,GAAG;AAAA,QACpG,QAAQ;AAAA,MAChB,CAAO;AAEH,IAAK0B,EAAQ,UAAQ,KAAK,KAAK,SAASgG,GAAKF,GAAIK,CAAS;AAAA,EAC9D;AAAA,EACE,kBAAkBH,GAAKF,GAAIK,GAAWC,GAAM3D,GAAW;AACrD,QAAIzC,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAAA,MAChF,QAAQ;AAAA,MACR,UAAU;AAAA,IACX,GACGyB,IAAO,CAACuE,GAAKF,CAAE;AACnB,IAAIE,EAAI,QAAQ,GAAG,IAAI,OACrBvE,IAAOuE,EAAI,MAAM,GAAG,GACpBI,IAAOD,GACPA,IAAYL,GACZA,IAAKrE,EAAK,CAAC,IAEb,KAAK,cAAcqE,CAAE;AACrB,QAAIO,IAAOnE,GAAQ,KAAK,MAAMT,CAAI,KAAK,CAAE;AACzC,IAAKzB,EAAQ,aAAUmG,IAAY,KAAK,MAAM,KAAK,UAAUA,CAAS,CAAC,IACnEC,IACF9D,GAAW+D,GAAMF,GAAW1D,CAAS,IAErC4D,IAAOnI,IAAA,IACFmI,IACAF,IAGPtE,GAAQ,KAAK,MAAMJ,GAAM4E,CAAI,GACxBrG,EAAQ,UAAQ,KAAK,KAAK,SAASgG,GAAKF,GAAIK,CAAS;AAAA,EAC9D;AAAA,EACE,qBAAqBH,GAAKF,GAAI;AAC5B,IAAI,KAAK,kBAAkBE,GAAKF,CAAE,KAChC,OAAO,KAAK,KAAKE,CAAG,EAAEF,CAAE,GAE1B,KAAK,iBAAiBA,CAAE,GACxB,KAAK,KAAK,WAAWE,GAAKF,CAAE;AAAA,EAChC;AAAA,EACE,kBAAkBE,GAAKF,GAAI;AACzB,WAAO,KAAK,YAAYE,GAAKF,CAAE,MAAM;AAAA,EACzC;AAAA,EACE,kBAAkBE,GAAKF,GAAI;AAEzB,WADKA,MAAIA,IAAK,KAAK,QAAQ,YACvB,KAAK,QAAQ,qBAAqB,OAAa5H,EAAA,IAE9C,KAAK,YAAY8H,GAAKF,CAAE,KAEtB,KAAK,YAAYE,GAAKF,CAAE;AAAA,EACnC;AAAA,EACE,kBAAkBE,GAAK;AACrB,WAAO,KAAK,KAAKA,CAAG;AAAA,EACxB;AAAA,EACE,4BAA4BA,GAAK;AAC/B,UAAM5D,IAAO,KAAK,kBAAkB4D,CAAG;AAEvC,WAAO,CAAC,EADE5D,KAAQ,OAAO,KAAKA,CAAI,KAAK,CAAE,GAC9B,KAAK,CAAAhE,MAAKgE,EAAKhE,CAAC,KAAK,OAAO,KAAKgE,EAAKhE,CAAC,CAAC,EAAE,SAAS,CAAC;AAAA,EACnE;AAAA,EACE,SAAS;AACP,WAAO,KAAK;AAAA,EAChB;AACA;AAEA,IAAIkI,KAAgB;AAAA,EAClB,YAAY,CAAE;AAAA,EACd,iBAAiBpG,GAAQ;AACvB,SAAK,WAAWA,EAAO,IAAI,IAAIA;AAAA,EAChC;AAAA,EACD,OAAOqG,GAAYxG,GAAOuB,GAAKtB,GAASwG,GAAY;AAClD,WAAAD,EAAW,QAAQ,CAAAE,MAAa;AAC9B,MAAI,KAAK,WAAWA,CAAS,MAAG1G,IAAQ,KAAK,WAAW0G,CAAS,EAAE,QAAQ1G,GAAOuB,GAAKtB,GAASwG,CAAU;AAAA,IAChH,CAAK,GACMzG;AAAA,EACX;AACA;AAEA,MAAM2G,KAAmB,CAAE;AAC3B,MAAMC,WAAmBtB,GAAa;AAAA,EACpC,YAAYuB,GAAU;AACpB,QAAI5G,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,UAAO,GACPmB,GAAK,CAAC,iBAAiB,iBAAiB,kBAAkB,gBAAgB,oBAAoB,cAAc,OAAO,GAAGyF,GAAU,IAAI,GACpI,KAAK,UAAU5G,GACX,KAAK,QAAQ,iBAAiB,WAChC,KAAK,QAAQ,eAAe,MAE9B,KAAK,SAASoF,GAAW,OAAO,YAAY;AAAA,EAChD;AAAA,EACE,eAAeY,GAAK;AAClB,IAAIA,MAAK,KAAK,WAAWA;AAAA,EAC7B;AAAA,EACE,OAAO1E,GAAK;AACV,QAAItB,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAAA,MAChF,eAAe,CAAA;AAAA,IAChB;AACD,QAAyBsB,KAAQ;AAC/B,aAAO;AAET,UAAMuF,IAAW,KAAK,QAAQvF,GAAKtB,CAAO;AAC1C,WAAO6G,KAAYA,EAAS,QAAQ;AAAA,EACxC;AAAA,EACE,eAAevF,GAAKtB,GAAS;AAC3B,QAAIuD,IAAcvD,EAAQ,gBAAgB,SAAYA,EAAQ,cAAc,KAAK,QAAQ;AACzF,IAAIuD,MAAgB,WAAWA,IAAc;AAC7C,UAAMC,IAAexD,EAAQ,iBAAiB,SAAYA,EAAQ,eAAe,KAAK,QAAQ;AAC9F,QAAI8G,IAAa9G,EAAQ,MAAM,KAAK,QAAQ,aAAa,CAAE;AAC3D,UAAM+G,IAAuBxD,KAAejC,EAAI,QAAQiC,CAAW,IAAI,IACjEyD,IAAuB,CAAC,KAAK,QAAQ,2BAA2B,CAAChH,EAAQ,gBAAgB,CAAC,KAAK,QAAQ,0BAA0B,CAACA,EAAQ,eAAe,CAACsD,GAAoBhC,GAAKiC,GAAaC,CAAY;AAClN,QAAIuD,KAAwB,CAACC,GAAsB;AACjD,YAAM1I,IAAIgD,EAAI,MAAM,KAAK,aAAa,aAAa;AACnD,UAAIhD,KAAKA,EAAE,SAAS;AAClB,eAAO;AAAA,UACL,KAAAgD;AAAA,UACA,YAAYb,EAASqG,CAAU,IAAI,CAACA,CAAU,IAAIA;AAAA,QACnD;AAEH,YAAMG,IAAQ3F,EAAI,MAAMiC,CAAW;AACnC,OAAIA,MAAgBC,KAAgBD,MAAgBC,KAAgB,KAAK,QAAQ,GAAG,QAAQyD,EAAM,CAAC,CAAC,IAAI,QAAIH,IAAaG,EAAM,MAAO,IACtI3F,IAAM2F,EAAM,KAAKzD,CAAY;AAAA,IACnC;AACI,WAAO;AAAA,MACL,KAAAlC;AAAA,MACA,YAAYb,EAASqG,CAAU,IAAI,CAACA,CAAU,IAAIA;AAAA,IACnD;AAAA,EACL;AAAA,EACE,UAAUI,GAAMlH,GAASmH,GAAS;AAQhC,QAPI,OAAOnH,KAAY,YAAY,KAAK,QAAQ,qCAC9CA,IAAU,KAAK,QAAQ,iCAAiC,SAAS,IAE/D,OAAOA,KAAY,aAAUA,IAAU9B,EAAA,IACtC8B,KAEAA,MAASA,IAAU,CAAE,IACAkH,KAAS,KAAM,QAAO;AAChD,IAAK,MAAM,QAAQA,CAAI,MAAGA,IAAO,CAAC,OAAOA,CAAI,CAAC;AAC9C,UAAME,IAAgBpH,EAAQ,kBAAkB,SAAYA,EAAQ,gBAAgB,KAAK,QAAQ,eAC3FwD,IAAexD,EAAQ,iBAAiB,SAAYA,EAAQ,eAAe,KAAK,QAAQ,cACxF;AAAA,MACJ,KAAAsB;AAAA,MACA,YAAAwF;AAAA,IACN,IAAQ,KAAK,eAAeI,EAAKA,EAAK,SAAS,CAAC,GAAGlH,CAAO,GAChDqH,IAAYP,EAAWA,EAAW,SAAS,CAAC,GAC5Cd,IAAMhG,EAAQ,OAAO,KAAK,UAC1BsH,IAA0BtH,EAAQ,2BAA2B,KAAK,QAAQ;AAChF,QAAIgG,KAAOA,EAAI,YAAW,MAAO,UAAU;AACzC,UAAIsB,GAAyB;AAC3B,cAAM/D,IAAcvD,EAAQ,eAAe,KAAK,QAAQ;AACxD,eAAIoH,IACK;AAAA,UACL,KAAK,GAAGC,CAAS,GAAG9D,CAAW,GAAGjC,CAAG;AAAA,UACrC,SAASA;AAAA,UACT,cAAcA;AAAA,UACd,SAAS0E;AAAA,UACT,QAAQqB;AAAA,UACR,YAAY,KAAK,qBAAqBrH,CAAO;AAAA,QAC9C,IAEI,GAAGqH,CAAS,GAAG9D,CAAW,GAAGjC,CAAG;AAAA,MAC/C;AACM,aAAI8F,IACK;AAAA,QACL,KAAK9F;AAAA,QACL,SAASA;AAAA,QACT,cAAcA;AAAA,QACd,SAAS0E;AAAA,QACT,QAAQqB;AAAA,QACR,YAAY,KAAK,qBAAqBrH,CAAO;AAAA,MAC9C,IAEIsB;AAAA,IACb;AACI,UAAMuF,IAAW,KAAK,QAAQK,GAAMlH,CAAO;AAC3C,QAAIY,IAAMiG,KAAYA,EAAS;AAC/B,UAAMU,IAAaV,KAAYA,EAAS,WAAWvF,GAC7CkG,IAAkBX,KAAYA,EAAS,gBAAgBvF,GACvDmG,IAAU,OAAO,UAAU,SAAS,MAAM7G,CAAG,GAC7C8G,IAAW,CAAC,mBAAmB,qBAAqB,iBAAiB,GACrEC,IAAa3H,EAAQ,eAAe,SAAYA,EAAQ,aAAa,KAAK,QAAQ,YAClF4H,IAA6B,CAAC,KAAK,cAAc,KAAK,WAAW,gBACjEC,IAAiB,CAACpH,EAASG,CAAG,KAAK,OAAOA,KAAQ,aAAa,OAAOA,KAAQ;AACpF,QAAIgH,KAA8BhH,KAAOiH,KAAkBH,EAAS,QAAQD,CAAO,IAAI,KAAK,EAAEhH,EAASkH,CAAU,KAAK,MAAM,QAAQ/G,CAAG,IAAI;AACzI,UAAI,CAACZ,EAAQ,iBAAiB,CAAC,KAAK,QAAQ,eAAe;AACzD,QAAK,KAAK,QAAQ,yBAChB,KAAK,OAAO,KAAK,iEAAiE;AAEpF,cAAMnD,IAAI,KAAK,QAAQ,wBAAwB,KAAK,QAAQ,sBAAsB0K,GAAY3G,GAAK3C,EAAAC,EAAA,IAC9F8B,IAD8F;AAAA,UAEjG,IAAI8G;AAAA,QACd,EAAS,IAAI,QAAQxF,CAAG,KAAK,KAAK,QAAQ;AAClC,eAAI8F,KACFP,EAAS,MAAMhK,GACfgK,EAAS,aAAa,KAAK,qBAAqB7G,CAAO,GAChD6G,KAEFhK;AAAA,MACf;AACM,UAAI2G,GAAc;AAChB,cAAMsE,IAAiB,MAAM,QAAQlH,CAAG,GAClCO,IAAO2G,IAAiB,CAAA,IAAK,CAAE,GAC/BC,IAAcD,IAAiBN,IAAkBD;AACvD,mBAAWjJ,MAAKsC;AACd,cAAI,OAAO,UAAU,eAAe,KAAKA,GAAKtC,EAAC,GAAG;AAChD,kBAAM0J,KAAU,GAAGD,CAAW,GAAGvE,CAAY,GAAGlF,EAAC;AACjD,YAAA6C,EAAK7C,EAAC,IAAI,KAAK,UAAU0J,IAAS/J,EAAAC,EAAA,IAC7B8B,IAD6B;AAAA,cAG9B,YAAY;AAAA,cACZ,IAAI8G;AAAA,YAEpB,EAAa,GACG3F,EAAK7C,EAAC,MAAM0J,OAAS7G,EAAK7C,EAAC,IAAIsC,EAAItC,EAAC;AAAA,UACpD;AAEQ,QAAAsC,IAAMO;AAAA,MACd;AAAA,IACA,WAAeyG,KAA8BnH,EAASkH,CAAU,KAAK,MAAM,QAAQ/G,CAAG;AAChF,MAAAA,IAAMA,EAAI,KAAK+G,CAAU,GACrB/G,MAAKA,IAAM,KAAK,kBAAkBA,GAAKsG,GAAMlH,GAASmH,CAAO;AAAA,SAC5D;AACL,UAAIc,IAAc,IACdC,IAAU;AACd,YAAMC,IAAsBnI,EAAQ,UAAU,UAAa,CAACS,EAAST,EAAQ,KAAK,GAC5EoI,KAAkBzB,GAAW,gBAAgB3G,CAAO,GACpDqI,KAAqBF,IAAsB,KAAK,eAAe,UAAUnC,GAAKhG,EAAQ,OAAOA,CAAO,IAAI,IACxGsI,KAAoCtI,EAAQ,WAAWmI,IAAsB,KAAK,eAAe,UAAUnC,GAAKhG,EAAQ,OAAO;AAAA,QACnI,SAAS;AAAA,MACV,CAAA,IAAI,IACCuI,KAAwBJ,KAAuB,CAACnI,EAAQ,WAAWA,EAAQ,UAAU,KAAK,KAAK,eAAe,iBAAkB,GAChIwI,IAAeD,MAAyBvI,EAAQ,eAAe,KAAK,QAAQ,eAAe,MAAM,KAAKA,EAAQ,eAAeqI,EAAkB,EAAE,KAAKrI,EAAQ,eAAesI,EAAiC,EAAE,KAAKtI,EAAQ;AACnO,MAAI,CAAC,KAAK,cAAcY,CAAG,KAAKwH,OAC9BH,IAAc,IACdrH,IAAM4H,IAEH,KAAK,cAAc5H,CAAG,MACzBsH,IAAU,IACVtH,IAAMU;AAGR,YAAMmH,MADiCzI,EAAQ,kCAAkC,KAAK,QAAQ,mCACtCkI,IAAU,SAAYtH,GACxE8H,IAAgBN,MAAmBI,MAAiB5H,KAAO,KAAK,QAAQ;AAC9E,UAAIsH,KAAWD,KAAeS,GAAe;AAE3C,YADA,KAAK,OAAO,IAAIA,IAAgB,cAAc,cAAc1C,GAAKqB,GAAW/F,GAAKoH,IAAgBF,IAAe5H,CAAG,GAC/G4C,GAAc;AAChB,gBAAMmF,IAAK,KAAK,QAAQrH,GAAKrD,EAAAC,EAAA,IACxB8B,IADwB;AAAA,YAE3B,cAAc;AAAA,UAC1B,EAAW;AACD,UAAI2I,KAAMA,EAAG,OAAK,KAAK,OAAO,KAAK,iLAAiL;AAAA,QAC9N;AACQ,YAAIC,IAAO,CAAE;AACb,cAAMC,IAAe,KAAK,cAAc,iBAAiB,KAAK,QAAQ,aAAa7I,EAAQ,OAAO,KAAK,QAAQ;AAC/G,YAAI,KAAK,QAAQ,kBAAkB,cAAc6I,KAAgBA,EAAa,CAAC;AAC7E,mBAAS9L,IAAI,GAAGA,IAAI8L,EAAa,QAAQ9L;AACvC,YAAA6L,EAAK,KAAKC,EAAa9L,CAAC,CAAC;AAAA,YAEtB,CAAI,KAAK,QAAQ,kBAAkB,QACxC6L,IAAO,KAAK,cAAc,mBAAmB5I,EAAQ,OAAO,KAAK,QAAQ,IAEzE4I,EAAK,KAAK5I,EAAQ,OAAO,KAAK,QAAQ;AAExC,cAAM8I,IAAO,CAAC1L,GAAGgC,GAAG2J,MAAyB;AAC3C,gBAAMC,IAAoBZ,MAAmBW,MAAyBnI,IAAMmI,IAAuBN;AACnG,UAAI,KAAK,QAAQ,oBACf,KAAK,QAAQ,kBAAkBrL,GAAGiK,GAAWjI,GAAG4J,GAAmBN,GAAe1I,CAAO,IAChF,KAAK,oBAAoB,KAAK,iBAAiB,eACxD,KAAK,iBAAiB,YAAY5C,GAAGiK,GAAWjI,GAAG4J,GAAmBN,GAAe1I,CAAO,GAE9F,KAAK,KAAK,cAAc5C,GAAGiK,GAAWjI,GAAGwB,CAAG;AAAA,QAC7C;AACD,QAAI,KAAK,QAAQ,gBACX,KAAK,QAAQ,sBAAsBuH,IACrCS,EAAK,QAAQ,CAAAK,MAAY;AACvB,gBAAMC,IAAW,KAAK,eAAe,YAAYD,GAAUjJ,CAAO;AAClE,UAAIuI,MAAyBvI,EAAQ,eAAe,KAAK,QAAQ,eAAe,MAAM,KAAKkJ,EAAS,QAAQ,GAAG,KAAK,QAAQ,eAAe,MAAM,IAAI,KACnJA,EAAS,KAAK,GAAG,KAAK,QAAQ,eAAe,MAAM,GAErDA,EAAS,QAAQ,CAAAC,MAAU;AACzB,YAAAL,EAAK,CAACG,CAAQ,GAAG3H,IAAM6H,GAAQnJ,EAAQ,eAAemJ,CAAM,EAAE,KAAKX,CAAY;AAAA,UAC/F,CAAe;AAAA,QACf,CAAa,IAEDM,EAAKF,GAAMtH,GAAKkH,CAAY;AAAA,MAGxC;AACM,MAAA5H,IAAM,KAAK,kBAAkBA,GAAKsG,GAAMlH,GAAS6G,GAAUM,CAAO,GAC9De,KAAWtH,MAAQU,KAAO,KAAK,QAAQ,gCAA6BV,IAAM,GAAGyG,CAAS,IAAI/F,CAAG,MAC5F4G,KAAWD,MAAgB,KAAK,QAAQ,2BACvC,KAAK,QAAQ,qBAAqB,OACpCrH,IAAM,KAAK,QAAQ,uBAAuB,KAAK,QAAQ,8BAA8B,GAAGyG,CAAS,IAAI/F,CAAG,KAAKA,GAAK2G,IAAcrH,IAAM,MAAS,IAE/IA,IAAM,KAAK,QAAQ,uBAAuBA,CAAG;AAAA,IAGvD;AACI,WAAIwG,KACFP,EAAS,MAAMjG,GACfiG,EAAS,aAAa,KAAK,qBAAqB7G,CAAO,GAChD6G,KAEFjG;AAAA,EACX;AAAA,EACE,kBAAkBA,GAAKU,GAAKtB,GAAS6G,GAAUM,GAAS;AACtD,QAAIiC,IAAQ;AACZ,QAAI,KAAK,cAAc,KAAK,WAAW;AACrC,MAAAxI,IAAM,KAAK,WAAW,MAAMA,GAAK1C,IAAA,IAC5B,KAAK,QAAQ,cAAc,mBAC3B8B,IACFA,EAAQ,OAAO,KAAK,YAAY6G,EAAS,SAASA,EAAS,QAAQA,EAAS,SAAS;AAAA,QACtF,UAAAA;AAAA,MACR,CAAO;AAAA,aACQ,CAAC7G,EAAQ,mBAAmB;AACrC,MAAIA,EAAQ,iBAAe,KAAK,aAAa,KAAK/B,EAAAC,EAAA,IAC7C8B,IAD6C;AAAA,QAG9C,eAAe9B,IAAA,IACV,KAAK,QAAQ,gBACb8B,EAAQ;AAAA,MAGvB,EAAO;AACD,YAAMqJ,IAAkB5I,EAASG,CAAG,MAAMZ,KAAWA,EAAQ,iBAAiBA,EAAQ,cAAc,oBAAoB,SAAYA,EAAQ,cAAc,kBAAkB,KAAK,QAAQ,cAAc;AACvM,UAAIsJ;AACJ,UAAID,GAAiB;AACnB,cAAME,IAAK3I,EAAI,MAAM,KAAK,aAAa,aAAa;AACpD,QAAA0I,IAAUC,KAAMA,EAAG;AAAA,MAC3B;AACM,UAAInH,IAAOpC,EAAQ,WAAW,CAACS,EAAST,EAAQ,OAAO,IAAIA,EAAQ,UAAUA;AAM7E,UALI,KAAK,QAAQ,cAAc,qBAAkBoC,IAAOlE,IAAA,IACnD,KAAK,QAAQ,cAAc,mBAC3BkE,KAELxB,IAAM,KAAK,aAAa,YAAYA,GAAKwB,GAAMpC,EAAQ,OAAO,KAAK,YAAY6G,EAAS,SAAS7G,CAAO,GACpGqJ,GAAiB;AACnB,cAAMG,IAAK5I,EAAI,MAAM,KAAK,aAAa,aAAa,GAC9C6I,IAAUD,KAAMA,EAAG;AACzB,QAAIF,IAAUG,MAASzJ,EAAQ,OAAO;AAAA,MAC9C;AACM,MAAI,CAACA,EAAQ,OAAO,KAAK,QAAQ,qBAAqB,QAAQ6G,KAAYA,EAAS,QAAK7G,EAAQ,MAAM,KAAK,YAAY6G,EAAS,UAC5H7G,EAAQ,SAAS,OAAOY,IAAM,KAAK,aAAa,KAAKA,GAAK,WAAY;AACxE,iBAAS4D,IAAO,UAAU,QAAQJ,IAAO,IAAI,MAAMI,CAAI,GAAGC,IAAO,GAAGA,IAAOD,GAAMC;AAC/E,UAAAL,EAAKK,CAAI,IAAI,UAAUA,CAAI;AAE7B,eAAI0C,KAAWA,EAAQ,CAAC,MAAM/C,EAAK,CAAC,KAAK,CAACpE,EAAQ,WAChDoJ,EAAM,OAAO,KAAK,6CAA6ChF,EAAK,CAAC,CAAC,YAAY9C,EAAI,CAAC,CAAC,EAAE,GACnF,QAEF8H,EAAM,UAAU,GAAGhF,GAAM9C,CAAG;AAAA,MACpC,GAAEtB,CAAO,IACNA,EAAQ,iBAAe,KAAK,aAAa,MAAO;AAAA,IAC1D;AACI,UAAM0J,IAAc1J,EAAQ,eAAe,KAAK,QAAQ,aAClD2J,IAAqBlJ,EAASiJ,CAAW,IAAI,CAACA,CAAW,IAAIA;AACnE,WAAyB9I,KAAQ,QAAQ+I,KAAsBA,EAAmB,UAAU3J,EAAQ,uBAAuB,OACzHY,IAAM0F,GAAc,OAAOqD,GAAoB/I,GAAKU,GAAK,KAAK,WAAW,KAAK,QAAQ,0BAA0BpD,EAAA;AAAA,MAC9G,cAAcD,EAAAC,EAAA,IACT2I,IADS;AAAA,QAEZ,YAAY,KAAK,qBAAqB7G,CAAO;AAAA,MAC9C;AAAA,OACEA,KACDA,GAAS,IAAI,IAEZY;AAAA,EACX;AAAA,EACE,QAAQsG,GAAM;AACZ,QAAIlH,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE,GAChF4J,GACA1B,GACA2B,GACAC,GACAC;AACJ,WAAItJ,EAASyG,CAAI,MAAGA,IAAO,CAACA,CAAI,IAChCA,EAAK,QAAQ,CAAA9H,MAAK;AAChB,UAAI,KAAK,cAAcwK,CAAK,EAAG;AAC/B,YAAMI,IAAY,KAAK,eAAe5K,GAAGY,CAAO,GAC1CsB,IAAM0I,EAAU;AACtB,MAAA9B,IAAU5G;AACV,UAAIwF,IAAakD,EAAU;AAC3B,MAAI,KAAK,QAAQ,eAAYlD,IAAaA,EAAW,OAAO,KAAK,QAAQ,UAAU;AACnF,YAAMqB,IAAsBnI,EAAQ,UAAU,UAAa,CAACS,EAAST,EAAQ,KAAK,GAC5EuI,IAAwBJ,KAAuB,CAACnI,EAAQ,WAAWA,EAAQ,UAAU,KAAK,KAAK,eAAe,iBAAkB,GAChIiK,IAAuBjK,EAAQ,YAAY,WAAcS,EAAST,EAAQ,OAAO,KAAK,OAAOA,EAAQ,WAAY,aAAaA,EAAQ,YAAY,IAClJkK,IAAQlK,EAAQ,OAAOA,EAAQ,OAAO,KAAK,cAAc,mBAAmBA,EAAQ,OAAO,KAAK,UAAUA,EAAQ,WAAW;AACnI,MAAA8G,EAAW,QAAQ,CAAAhB,MAAM;AACvB,QAAI,KAAK,cAAc8D,CAAK,MAC5BG,IAASjE,GACL,CAACY,GAAiB,GAAGwD,EAAM,CAAC,CAAC,IAAIpE,CAAE,EAAE,KAAK,KAAK,SAAS,KAAK,MAAM,sBAAsB,CAAC,KAAK,MAAM,mBAAmBiE,CAAM,MAChIrD,GAAiB,GAAGwD,EAAM,CAAC,CAAC,IAAIpE,CAAE,EAAE,IAAI,IACxC,KAAK,OAAO,KAAK,QAAQoC,CAAO,oBAAoBgC,EAAM,KAAK,IAAI,CAAC,sCAAsCH,CAAM,wBAAwB,0NAA0N,IAEpWG,EAAM,QAAQ,CAAAhG,MAAQ;AACpB,cAAI,KAAK,cAAc0F,CAAK,EAAG;AAC/B,UAAAE,IAAU5F;AACV,gBAAMiG,IAAY,CAAC7I,CAAG;AACtB,cAAI,KAAK,cAAc,KAAK,WAAW;AACrC,iBAAK,WAAW,cAAc6I,GAAW7I,GAAK4C,GAAM4B,GAAI9F,CAAO;AAAA,eAC1D;AACL,gBAAIoK;AACJ,YAAIjC,MAAqBiC,IAAe,KAAK,eAAe,UAAUlG,GAAMlE,EAAQ,OAAOA,CAAO;AAClG,kBAAMqK,IAAa,GAAG,KAAK,QAAQ,eAAe,QAC5CC,IAAgB,GAAG,KAAK,QAAQ,eAAe,UAAU,KAAK,QAAQ,eAAe;AAU3F,gBATInC,MACFgC,EAAU,KAAK7I,IAAM8I,CAAY,GAC7BpK,EAAQ,WAAWoK,EAAa,QAAQE,CAAa,MAAM,KAC7DH,EAAU,KAAK7I,IAAM8I,EAAa,QAAQE,GAAe,KAAK,QAAQ,eAAe,CAAC,GAEpF/B,KACF4B,EAAU,KAAK7I,IAAM+I,CAAU,IAG/BJ,GAAsB;AACxB,oBAAMM,KAAa,GAAGjJ,CAAG,GAAG,KAAK,QAAQ,gBAAgB,GAAGtB,EAAQ,OAAO;AAC3E,cAAAmK,EAAU,KAAKI,EAAU,GACrBpC,MACFgC,EAAU,KAAKI,KAAaH,CAAY,GACpCpK,EAAQ,WAAWoK,EAAa,QAAQE,CAAa,MAAM,KAC7DH,EAAU,KAAKI,KAAaH,EAAa,QAAQE,GAAe,KAAK,QAAQ,eAAe,CAAC,GAE3F/B,KACF4B,EAAU,KAAKI,KAAaF,CAAU;AAAA,YAGxD;AAAA,UACA;AACU,cAAIG;AACJ,iBAAOA,IAAcL,EAAU;AAC7B,YAAK,KAAK,cAAcP,CAAK,MAC3BC,IAAeW,GACfZ,IAAQ,KAAK,YAAY1F,GAAM4B,GAAI0E,GAAaxK,CAAO;AAAA,QAGrE,CAAS;AAAA,MACT,CAAO;AAAA,IACP,CAAK,GACM;AAAA,MACL,KAAK4J;AAAA,MACL,SAAA1B;AAAA,MACA,cAAA2B;AAAA,MACA,SAAAC;AAAA,MACA,QAAAC;AAAA,IACD;AAAA,EACL;AAAA,EACE,cAAcnJ,GAAK;AACjB,WAAOA,MAAQ,UAAa,EAAE,CAAC,KAAK,QAAQ,cAAcA,MAAQ,SAAS,EAAE,CAAC,KAAK,QAAQ,qBAAqBA,MAAQ;AAAA,EAC5H;AAAA,EACE,YAAYsD,GAAM4B,GAAIxE,GAAK;AACzB,QAAItB,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,WAAI,KAAK,cAAc,KAAK,WAAW,cAAoB,KAAK,WAAW,YAAYkE,GAAM4B,GAAIxE,GAAKtB,CAAO,IACtG,KAAK,cAAc,YAAYkE,GAAM4B,GAAIxE,GAAKtB,CAAO;AAAA,EAChE;AAAA,EACE,uBAAuB;AACrB,QAAIA,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,UAAMyK,IAAc,CAAC,gBAAgB,WAAW,WAAW,WAAW,OAAO,QAAQ,eAAe,MAAM,gBAAgB,eAAe,iBAAiB,iBAAiB,cAAc,eAAe,eAAe,GACjNC,IAA2B1K,EAAQ,WAAW,CAACS,EAAST,EAAQ,OAAO;AAC7E,QAAIoC,IAAOsI,IAA2B1K,EAAQ,UAAUA;AAUxD,QATI0K,KAA4B,OAAO1K,EAAQ,SAAU,gBACvDoC,EAAK,QAAQpC,EAAQ,QAEnB,KAAK,QAAQ,cAAc,qBAC7BoC,IAAOlE,IAAA,IACF,KAAK,QAAQ,cAAc,mBAC3BkE,KAGH,CAACsI,GAA0B;AAC7B,MAAAtI,IAAOlE,EAAA,IACFkE;AAEL,iBAAWd,KAAOmJ;AAChB,eAAOrI,EAAKd,CAAG;AAAA,IAEvB;AACI,WAAOc;AAAA,EACX;AAAA,EACE,OAAO,gBAAgBpC,GAAS;AAC9B,UAAMiF,IAAS;AACf,eAAW0F,KAAU3K;AACnB,UAAI,OAAO,UAAU,eAAe,KAAKA,GAAS2K,CAAM,KAAK1F,MAAW0F,EAAO,UAAU,GAAG1F,EAAO,MAAM,KAAmBjF,EAAQ2K,CAAM,MAA5B;AAC5G,eAAO;AAGX,WAAO;AAAA,EACX;AACA;AAEA,MAAMC,KAAa,CAAAC,MAAUA,EAAO,OAAO,CAAC,EAAE,gBAAgBA,EAAO,MAAM,CAAC;AAC5E,MAAMC,GAAa;AAAA,EACjB,YAAY9K,GAAS;AACnB,SAAK,UAAUA,GACf,KAAK,gBAAgB,KAAK,QAAQ,iBAAiB,IACnD,KAAK,SAASoF,GAAW,OAAO,eAAe;AAAA,EACnD;AAAA,EACE,sBAAsBlB,GAAM;AAE1B,QADAA,IAAOD,GAAeC,CAAI,GACtB,CAACA,KAAQA,EAAK,QAAQ,GAAG,IAAI,EAAG,QAAO;AAC3C,UAAM7G,IAAI6G,EAAK,MAAM,GAAG;AAGxB,WAFI7G,EAAE,WAAW,MACjBA,EAAE,IAAK,GACHA,EAAEA,EAAE,SAAS,CAAC,EAAE,YAAa,MAAK,OAAY,OAC3C,KAAK,mBAAmBA,EAAE,KAAK,GAAG,CAAC;AAAA,EAC9C;AAAA,EACE,wBAAwB6G,GAAM;AAE5B,QADAA,IAAOD,GAAeC,CAAI,GACtB,CAACA,KAAQA,EAAK,QAAQ,GAAG,IAAI,EAAG,QAAOA;AAC3C,UAAM7G,IAAI6G,EAAK,MAAM,GAAG;AACxB,WAAO,KAAK,mBAAmB7G,EAAE,CAAC,CAAC;AAAA,EACvC;AAAA,EACE,mBAAmB6G,GAAM;AACvB,QAAIzD,EAASyD,CAAI,KAAKA,EAAK,QAAQ,GAAG,IAAI,IAAI;AAC5C,UAAI,OAAO,QAAS,eAAe,OAAO,KAAK,uBAAwB;AACrE,YAAI;AACF,cAAI6G,IAAgB,KAAK,oBAAoB7G,CAAI,EAAE,CAAC;AAIpD,cAHI6G,KAAiB,KAAK,QAAQ,iBAChCA,IAAgBA,EAAc,YAAa,IAEzCA,EAAe,QAAOA;AAAA,QAC3B,SAAQrO,GAAG;AAAA,QAAA;AAEd,YAAMsO,IAAe,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,MAAM;AAC5E,UAAI3N,IAAI6G,EAAK,MAAM,GAAG;AACtB,aAAI,KAAK,QAAQ,eACf7G,IAAIA,EAAE,IAAI,CAAA4N,MAAQA,EAAK,YAAW,CAAE,IAC3B5N,EAAE,WAAW,KACtBA,EAAE,CAAC,IAAIA,EAAE,CAAC,EAAE,YAAa,GACzBA,EAAE,CAAC,IAAIA,EAAE,CAAC,EAAE,YAAa,GACrB2N,EAAa,QAAQ3N,EAAE,CAAC,EAAE,YAAW,CAAE,IAAI,OAAIA,EAAE,CAAC,IAAIuN,GAAWvN,EAAE,CAAC,EAAE,aAAa,MAC9EA,EAAE,WAAW,MACtBA,EAAE,CAAC,IAAIA,EAAE,CAAC,EAAE,YAAa,GACrBA,EAAE,CAAC,EAAE,WAAW,MAAGA,EAAE,CAAC,IAAIA,EAAE,CAAC,EAAE,YAAa,IAC5CA,EAAE,CAAC,MAAM,SAASA,EAAE,CAAC,EAAE,WAAW,MAAGA,EAAE,CAAC,IAAIA,EAAE,CAAC,EAAE,YAAa,IAC9D2N,EAAa,QAAQ3N,EAAE,CAAC,EAAE,YAAW,CAAE,IAAI,OAAIA,EAAE,CAAC,IAAIuN,GAAWvN,EAAE,CAAC,EAAE,aAAa,IACnF2N,EAAa,QAAQ3N,EAAE,CAAC,EAAE,YAAW,CAAE,IAAI,OAAIA,EAAE,CAAC,IAAIuN,GAAWvN,EAAE,CAAC,EAAE,aAAa,KAElFA,EAAE,KAAK,GAAG;AAAA,IACvB;AACI,WAAO,KAAK,QAAQ,aAAa,KAAK,QAAQ,eAAe6G,EAAK,YAAW,IAAKA;AAAA,EACtF;AAAA,EACE,gBAAgBA,GAAM;AACpB,YAAI,KAAK,QAAQ,SAAS,kBAAkB,KAAK,QAAQ,8BACvDA,IAAO,KAAK,wBAAwBA,CAAI,IAEnC,CAAC,KAAK,iBAAiB,CAAC,KAAK,cAAc,UAAU,KAAK,cAAc,QAAQA,CAAI,IAAI;AAAA,EACnG;AAAA,EACE,sBAAsBgG,GAAO;AAC3B,QAAI,CAACA,EAAO,QAAO;AACnB,QAAIN;AACJ,WAAAM,EAAM,QAAQ,CAAAhG,MAAQ;AACpB,UAAI0F,EAAO;AACX,YAAMsB,IAAa,KAAK,mBAAmBhH,CAAI;AAC/C,OAAI,CAAC,KAAK,QAAQ,iBAAiB,KAAK,gBAAgBgH,CAAU,OAAGtB,IAAQsB;AAAA,IACnF,CAAK,GACG,CAACtB,KAAS,KAAK,QAAQ,iBACzBM,EAAM,QAAQ,CAAAhG,MAAQ;AACpB,UAAI0F,EAAO;AACX,YAAMuB,IAAU,KAAK,wBAAwBjH,CAAI;AACjD,UAAI,KAAK,gBAAgBiH,CAAO,EAAG,QAAOvB,IAAQuB;AAClD,MAAAvB,IAAQ,KAAK,QAAQ,cAAc,KAAK,CAAAwB,MAAgB;AACtD,YAAIA,MAAiBD,EAAS,QAAOC;AACrC,YAAI,EAAAA,EAAa,QAAQ,GAAG,IAAI,KAAKD,EAAQ,QAAQ,GAAG,IAAI,OACxDC,EAAa,QAAQ,GAAG,IAAI,KAAKD,EAAQ,QAAQ,GAAG,IAAI,KAAKC,EAAa,UAAU,GAAGA,EAAa,QAAQ,GAAG,CAAC,MAAMD,KACtHC,EAAa,QAAQD,CAAO,MAAM,KAAKA,EAAQ,SAAS;AAAG,iBAAOC;AAAA,MAChF,CAAS;AAAA,IACT,CAAO,GAEExB,MAAOA,IAAQ,KAAK,iBAAiB,KAAK,QAAQ,WAAW,EAAE,CAAC,IAC9DA;AAAA,EACX;AAAA,EACE,iBAAiByB,GAAWnH,GAAM;AAChC,QAAI,CAACmH,EAAW,QAAO,CAAE;AAGzB,QAFI,OAAOA,KAAc,eAAYA,IAAYA,EAAUnH,CAAI,IAC3DzD,EAAS4K,CAAS,MAAGA,IAAY,CAACA,CAAS,IAC3C,MAAM,QAAQA,CAAS,EAAG,QAAOA;AACrC,QAAI,CAACnH,EAAM,QAAOmH,EAAU,WAAW,CAAE;AACzC,QAAIzB,IAAQyB,EAAUnH,CAAI;AAC1B,WAAK0F,MAAOA,IAAQyB,EAAU,KAAK,sBAAsBnH,CAAI,CAAC,IACzD0F,MAAOA,IAAQyB,EAAU,KAAK,mBAAmBnH,CAAI,CAAC,IACtD0F,MAAOA,IAAQyB,EAAU,KAAK,wBAAwBnH,CAAI,CAAC,IAC3D0F,MAAOA,IAAQyB,EAAU,UACvBzB,KAAS,CAAE;AAAA,EACtB;AAAA,EACE,mBAAmB1F,GAAMoH,GAAc;AACrC,UAAMC,IAAgB,KAAK,iBAAiBD,KAAgB,KAAK,QAAQ,eAAe,CAAE,GAAEpH,CAAI,GAC1FgG,IAAQ,CAAE,GACVsB,IAAU,CAAAvO,MAAK;AACnB,MAAKA,MACD,KAAK,gBAAgBA,CAAC,IACxBiN,EAAM,KAAKjN,CAAC,IAEZ,KAAK,OAAO,KAAK,uDAAuDA,CAAC,EAAE;AAAA,IAE9E;AACD,WAAIwD,EAASyD,CAAI,MAAMA,EAAK,QAAQ,GAAG,IAAI,MAAMA,EAAK,QAAQ,GAAG,IAAI,OAC/D,KAAK,QAAQ,SAAS,kBAAgBsH,EAAQ,KAAK,mBAAmBtH,CAAI,CAAC,GAC3E,KAAK,QAAQ,SAAS,kBAAkB,KAAK,QAAQ,SAAS,iBAAesH,EAAQ,KAAK,sBAAsBtH,CAAI,CAAC,GACrH,KAAK,QAAQ,SAAS,iBAAesH,EAAQ,KAAK,wBAAwBtH,CAAI,CAAC,KAC1EzD,EAASyD,CAAI,KACtBsH,EAAQ,KAAK,mBAAmBtH,CAAI,CAAC,GAEvCqH,EAAc,QAAQ,CAAAE,MAAM;AAC1B,MAAIvB,EAAM,QAAQuB,CAAE,IAAI,KAAGD,EAAQ,KAAK,mBAAmBC,CAAE,CAAC;AAAA,IACpE,CAAK,GACMvB;AAAA,EACX;AACA;AAEA,IAAIwB,KAAO,CAAC;AAAA,EACV,MAAM,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,SAAS,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,EACrI,IAAI,CAAC,GAAG,CAAC;AAAA,EACT,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,SAAS,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,EAC7Y,IAAI,CAAC,GAAG,CAAC;AAAA,EACT,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,EAC5I,IAAI,CAAC,CAAC;AAAA,EACN,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,EACtD,IAAI,CAAC,GAAG,GAAG,CAAC;AAAA,EACZ,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG;AAAA,EACxB,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,IAAI,CAAC,GAAG,GAAG,CAAC;AAAA,EACZ,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,OAAO,IAAI;AAAA,EAClB,IAAI,CAAC,GAAG,GAAG,CAAC;AAAA,EACZ,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,EACf,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,CAAC;AAAA,EACT,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE;AAAA,EACnB,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE;AAAA,EAChB,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,CAAC;AAAA,EACT,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,CAAC;AAAA,EACT,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,EACf,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,GAAG,EAAE;AAAA,EACb,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,GAAG,CAAC;AAAA,EACZ,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,CAAC;AAAA,EACT,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,KAAK;AAAA,EACZ,IAAI,CAAC,GAAG,GAAG,CAAC;AAAA,EACZ,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE;AAAA,EACjB,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,CAAC;AAAA,EACT,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,GAAG,EAAE;AAAA,EACb,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,IAAI;AAAA,EACX,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,EACf,IAAI;AACN,GAAG;AAAA,EACD,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE;AAAA,EACjB,IAAI;AACN,CAAC,GACGC,KAAqB;AAAA,EACvB,GAAG,CAAA7O,MAAK,EAAOA,IAAI;AAAA,EACnB,GAAG,CAAAA,MAAK,EAAOA,KAAK;AAAA,EACpB,GAAG,CAAAA,MAAK;AAAA,EACR,GAAG,CAAAA,MAAYA,IAAI,MAAM,KAAKA,IAAI,OAAO,KAAK,IAAIA,IAAI,MAAM,KAAKA,IAAI,MAAM,MAAMA,IAAI,MAAM,MAAMA,IAAI,OAAO,MAAM,IAAI;AAAA,EACtH,GAAG,CAAAA,MAAYA,KAAK,IAAI,IAAIA,KAAK,IAAI,IAAIA,KAAK,IAAI,IAAIA,IAAI,OAAO,KAAKA,IAAI,OAAO,KAAK,IAAIA,IAAI,OAAO,KAAK,IAAI;AAAA,EAC9G,GAAG,CAAAA,MAAYA,KAAK,IAAI,IAAIA,KAAK,KAAKA,KAAK,IAAI,IAAI;AAAA,EACnD,GAAG,CAAAA,MAAYA,KAAK,IAAI,IAAIA,IAAI,MAAM,KAAKA,IAAI,MAAM,MAAMA,IAAI,MAAM,MAAMA,IAAI,OAAO,MAAM,IAAI;AAAA,EAChG,GAAG,CAAAA,MAAYA,KAAK,IAAI,IAAIA,KAAK,IAAI,IAAIA,KAAK,KAAKA,KAAK,KAAK,IAAI;AAAA,EACjE,GAAG,CAAAA,MAAK,EAAOA,KAAK;AAAA,EACpB,IAAI,CAAAA,MAAYA,KAAK,IAAI,IAAIA,KAAK,IAAI,IAAIA,IAAI,IAAI,IAAIA,IAAI,KAAK,IAAI;AAAA,EACnE,IAAI,CAAAA,MAAYA,KAAK,KAAKA,KAAK,KAAK,IAAIA,KAAK,KAAKA,KAAK,KAAK,IAAIA,IAAI,KAAKA,IAAI,KAAK,IAAI;AAAA,EACtF,IAAI,CAAAA,MAAK,EAAOA,IAAI,MAAM,KAAKA,IAAI,OAAO;AAAA,EAC1C,IAAI,CAAAA,MAAK,EAAOA,MAAM;AAAA,EACtB,IAAI,CAAAA,MAAYA,KAAK,IAAI,IAAIA,KAAK,IAAI,IAAIA,KAAK,IAAI,IAAI;AAAA,EACvD,IAAI,CAAAA,MAAYA,IAAI,MAAM,KAAKA,IAAI,OAAO,KAAK,IAAIA,IAAI,MAAM,MAAMA,IAAI,MAAM,MAAMA,IAAI,OAAO,MAAM,IAAI;AAAA,EACxG,IAAI,CAAAA,MAAYA,IAAI,MAAM,KAAKA,IAAI,OAAO,KAAK,IAAIA,MAAM,IAAI,IAAI;AAAA,EACjE,IAAI,CAAAA,MAAYA,KAAK,KAAKA,IAAI,MAAM,KAAKA,IAAI,OAAO,KAAK,IAAI;AAAA,EAC7D,IAAI,CAAAA,MAAYA,KAAK,IAAI,IAAIA,KAAK,IAAI,IAAI;AAAA,EAC1C,IAAI,CAAAA,MAAYA,KAAK,IAAI,IAAIA,KAAK,KAAKA,IAAI,MAAM,KAAKA,IAAI,MAAM,KAAK,IAAIA,IAAI,MAAM,MAAMA,IAAI,MAAM,KAAK,IAAI;AAAA,EAC5G,IAAI,CAAAA,MAAYA,KAAK,IAAI,IAAIA,KAAK,KAAKA,IAAI,MAAM,KAAKA,IAAI,MAAM,KAAK,IAAI;AAAA,EACzE,IAAI,CAAAA,MAAYA,IAAI,OAAO,IAAI,IAAIA,IAAI,OAAO,IAAI,IAAIA,IAAI,OAAO,KAAKA,IAAI,OAAO,IAAI,IAAI;AAAA,EACzF,IAAI,CAAAA,MAAYA,KAAK,IAAI,IAAIA,KAAK,IAAI,KAAKA,IAAI,KAAKA,IAAI,OAAOA,IAAI,MAAM,IAAI,IAAI;AACnF;AACA,MAAM8O,KAAkB,CAAC,MAAM,MAAM,IAAI,GACnCC,KAAe,CAAC,IAAI,GACpBC,KAAgB;AAAA,EACpB,MAAM;AAAA,EACN,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,OAAO;AACT,GACMC,KAAc,MAAM;AACxB,QAAMC,IAAQ,CAAE;AAChB,SAAAN,GAAK,QAAQ,CAAAO,MAAO;AAClB,IAAAA,EAAI,KAAK,QAAQ,CAAA7O,MAAK;AACpB,MAAA4O,EAAM5O,CAAC,IAAI;AAAA,QACT,SAAS6O,EAAI;AAAA,QACb,SAASN,GAAmBM,EAAI,EAAE;AAAA,MACnC;AAAA,IACP,CAAK;AAAA,EACL,CAAG,GACMD;AACT;AACA,MAAME,GAAe;AAAA,EACnB,YAAYC,GAAe;AACzB,QAAInM,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,SAAK,gBAAgBmM,GACrB,KAAK,UAAUnM,GACf,KAAK,SAASoF,GAAW,OAAO,gBAAgB,IAC3C,CAAC,KAAK,QAAQ,qBAAqByG,GAAa,SAAS,KAAK,QAAQ,iBAAiB,OAAO,OAAO,QAAS,eAAe,CAAC,KAAK,iBACtI,KAAK,QAAQ,oBAAoB,MACjC,KAAK,OAAO,MAAM,oJAAoJ,IAExK,KAAK,QAAQE,GAAa,GAC1B,KAAK,mBAAmB,CAAE;AAAA,EAC9B;AAAA,EACE,QAAQ/F,GAAKtF,GAAK;AAChB,SAAK,MAAMsF,CAAG,IAAItF;AAAA,EACtB;AAAA,EACE,aAAa;AACX,SAAK,mBAAmB,CAAE;AAAA,EAC9B;AAAA,EACE,QAAQwD,GAAM;AACZ,QAAIlE,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,QAAI,KAAK,oBAAoB;AAC3B,YAAMoM,IAAcnI,GAAeC,MAAS,QAAQ,OAAOA,CAAI,GACzDG,IAAOrE,EAAQ,UAAU,YAAY,YACrCqM,IAAW,KAAK,UAAU;AAAA,QAC9B,aAAAD;AAAA,QACA,MAAA/H;AAAA,MACR,CAAO;AACD,UAAIgI,KAAY,KAAK;AACnB,eAAO,KAAK,iBAAiBA,CAAQ;AAEvC,UAAIC;AACJ,UAAI;AACF,QAAAA,IAAO,IAAI,KAAK,YAAYF,GAAa;AAAA,UACvC,MAAA/H;AAAA,QACV,CAAS;AAAA,MACF,SAAQkI,GAAK;AACZ,YAAI,CAACrI,EAAK,MAAM,KAAK,EAAG;AACxB,cAAMsI,IAAU,KAAK,cAAc,wBAAwBtI,CAAI;AAC/D,QAAAoI,IAAO,KAAK,QAAQE,GAASxM,CAAO;AAAA,MAC5C;AACM,kBAAK,iBAAiBqM,CAAQ,IAAIC,GAC3BA;AAAA,IACb;AACI,WAAO,KAAK,MAAMpI,CAAI,KAAK,KAAK,MAAM,KAAK,cAAc,wBAAwBA,CAAI,CAAC;AAAA,EAC1F;AAAA,EACE,YAAYA,GAAM;AAChB,QAAIlE,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,UAAMsM,IAAO,KAAK,QAAQpI,GAAMlE,CAAO;AACvC,WAAI,KAAK,qBACAsM,KAAQA,EAAK,gBAAiB,EAAC,iBAAiB,SAAS,IAE3DA,KAAQA,EAAK,QAAQ,SAAS;AAAA,EACzC;AAAA,EACE,oBAAoBpI,GAAM5C,GAAK;AAC7B,QAAItB,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,WAAO,KAAK,YAAYkE,GAAMlE,CAAO,EAAE,IAAI,CAAAmJ,MAAU,GAAG7H,CAAG,GAAG6H,CAAM,EAAE;AAAA,EAC1E;AAAA,EACE,YAAYjF,GAAM;AAChB,QAAIlE,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,UAAMsM,IAAO,KAAK,QAAQpI,GAAMlE,CAAO;AACvC,WAAKsM,IAGD,KAAK,qBACAA,EAAK,gBAAiB,EAAC,iBAAiB,KAAK,CAACG,GAAiBC,MAAoBZ,GAAcW,CAAe,IAAIX,GAAcY,CAAe,CAAC,EAAE,IAAI,CAAAC,MAAkB,GAAG,KAAK,QAAQ,OAAO,GAAG3M,EAAQ,UAAU,UAAU,KAAK,QAAQ,OAAO,KAAK,EAAE,GAAG2M,CAAc,EAAE,IAEhRL,EAAK,QAAQ,IAAI,CAAAM,MAAU,KAAK,UAAU1I,GAAM0I,GAAQ5M,CAAO,CAAC,IAL9D,CAAE;AAAA,EAMf;AAAA,EACE,UAAUkE,GAAM2I,GAAO;AACrB,QAAI7M,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,UAAMsM,IAAO,KAAK,QAAQpI,GAAMlE,CAAO;AACvC,WAAIsM,IACE,KAAK,qBACA,GAAG,KAAK,QAAQ,OAAO,GAAGtM,EAAQ,UAAU,UAAU,KAAK,QAAQ,OAAO,KAAK,EAAE,GAAGsM,EAAK,OAAOO,CAAK,CAAC,KAExG,KAAK,yBAAyBP,GAAMO,CAAK,KAElD,KAAK,OAAO,KAAK,6BAA6B3I,CAAI,EAAE,GAC7C;AAAA,EACX;AAAA,EACE,yBAAyBoI,GAAMO,GAAO;AACpC,UAAMC,IAAMR,EAAK,QAAQA,EAAK,QAAQO,CAAK,IAAIP,EAAK,QAAQ,KAAK,IAAIO,CAAK,CAAC;AAC3E,QAAI1D,IAASmD,EAAK,QAAQQ,CAAG;AAC7B,IAAI,KAAK,QAAQ,wBAAwBR,EAAK,QAAQ,WAAW,KAAKA,EAAK,QAAQ,CAAC,MAAM,MACpFnD,MAAW,IACbA,IAAS,WACAA,MAAW,MACpBA,IAAS;AAGb,UAAM4D,IAAe,MAAM,KAAK,QAAQ,WAAW5D,EAAO,SAAQ,IAAK,KAAK,QAAQ,UAAUA,EAAO,SAAU,IAAGA,EAAO,SAAU;AACnI,WAAI,KAAK,QAAQ,sBAAsB,OACjCA,MAAW,IAAU,KACrB,OAAOA,KAAW,WAAiB,WAAWA,EAAO,SAAQ,CAAE,KAC5D4D,EAAc,IACZ,KAAK,QAAQ,sBAAsB,QAEnC,KAAK,QAAQ,wBAAwBT,EAAK,QAAQ,WAAW,KAAKA,EAAK,QAAQ,CAAC,MAAM,IADxFS,EAAc,IAIhB,KAAK,QAAQ,WAAWD,EAAI,SAAQ,IAAK,KAAK,QAAQ,UAAUA,EAAI,SAAQ,IAAKA,EAAI,SAAU;AAAA,EAC1G;AAAA,EACE,mBAAmB;AACjB,WAAO,CAAClB,GAAgB,SAAS,KAAK,QAAQ,iBAAiB;AAAA,EACnE;AACA;AAEA,MAAMoB,KAAuB,SAAU5K,GAAMC,GAAaf,GAAK;AAC7D,MAAIkC,IAAe,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,KACnFyC,IAAsB,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,IAC1FxE,IAAOU,GAAoBC,GAAMC,GAAaf,CAAG;AACrD,SAAI,CAACG,KAAQwE,KAAuBxF,EAASa,CAAG,MAC9CG,IAAOmC,GAASxB,GAAMd,GAAKkC,CAAY,GACnC/B,MAAS,WAAWA,IAAOmC,GAASvB,GAAaf,GAAKkC,CAAY,KAEjE/B;AACT,GACMwL,KAAY,CAAAC,MAAOA,EAAI,QAAQ,OAAO,MAAM;AAClD,MAAMC,GAAa;AAAA,EACjB,cAAc;AACZ,QAAInN,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,SAAK,SAASoF,GAAW,OAAO,cAAc,GAC9C,KAAK,UAAUpF,GACf,KAAK,SAASA,EAAQ,iBAAiBA,EAAQ,cAAc,WAAW,CAAAD,MAASA,IACjF,KAAK,KAAKC,CAAO;AAAA,EACrB;AAAA,EACE,OAAO;AACL,QAAIA,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,IAAKA,EAAQ,kBAAeA,EAAQ,gBAAgB;AAAA,MAClD,aAAa;AAAA,IACd;AACD,UAAM;AAAA,MACJ,QAAQoN;AAAA,MACR,aAAAC;AAAA,MACA,qBAAAC;AAAA,MACA,QAAArI;AAAA,MACA,eAAAsI;AAAA,MACA,QAAApE;AAAA,MACA,eAAAqE;AAAA,MACA,iBAAAC;AAAA,MACA,gBAAAC;AAAA,MACA,gBAAAC;AAAA,MACA,eAAAC;AAAA,MACA,sBAAAC;AAAA,MACA,eAAAC;AAAA,MACA,sBAAAC;AAAA,MACA,yBAAAC;AAAA,MACA,aAAAC;AAAA,MACA,cAAAC;AAAA,IACD,IAAGlO,EAAQ;AACZ,SAAK,SAASoN,MAAa,SAAYA,IAAWtK,IAClD,KAAK,cAAcuK,MAAgB,SAAYA,IAAc,IAC7D,KAAK,sBAAsBC,MAAwB,SAAYA,IAAsB,IACrF,KAAK,SAASrI,IAAStC,GAAYsC,CAAM,IAAIsI,KAAiB,MAC9D,KAAK,SAASpE,IAASxG,GAAYwG,CAAM,IAAIqE,KAAiB,MAC9D,KAAK,kBAAkBC,KAAmB,KAC1C,KAAK,iBAAiBC,IAAiB,KAAKC,KAAkB,KAC9D,KAAK,iBAAiB,KAAK,iBAAiB,KAAKD,KAAkB,IACnE,KAAK,gBAAgBE,IAAgBjL,GAAYiL,CAAa,IAAIC,KAAwBlL,GAAY,KAAK,GAC3G,KAAK,gBAAgBmL,IAAgBnL,GAAYmL,CAAa,IAAIC,KAAwBpL,GAAY,GAAG,GACzG,KAAK,0BAA0BqL,KAA2B,KAC1D,KAAK,cAAcC,KAAe,KAClC,KAAK,eAAeC,MAAiB,SAAYA,IAAe,IAChE,KAAK,YAAa;AAAA,EACtB;AAAA,EACE,QAAQ;AACN,IAAI,KAAK,WAAS,KAAK,KAAK,KAAK,OAAO;AAAA,EAC5C;AAAA,EACE,cAAc;AACZ,UAAMC,IAAmB,CAACC,GAAgBnL,MACpCmL,KAAkBA,EAAe,WAAWnL,KAC9CmL,EAAe,YAAY,GACpBA,KAEF,IAAI,OAAOnL,GAAS,GAAG;AAEhC,SAAK,SAASkL,EAAiB,KAAK,QAAQ,GAAG,KAAK,MAAM,QAAQ,KAAK,MAAM,EAAE,GAC/E,KAAK,iBAAiBA,EAAiB,KAAK,gBAAgB,GAAG,KAAK,MAAM,GAAG,KAAK,cAAc,QAAQ,KAAK,cAAc,GAAG,KAAK,MAAM,EAAE,GAC3I,KAAK,gBAAgBA,EAAiB,KAAK,eAAe,GAAG,KAAK,aAAa,QAAQ,KAAK,aAAa,EAAE;AAAA,EAC/G;AAAA,EACE,YAAYvL,GAAKR,GAAM4D,GAAKhG,GAAS;AACnC,QAAIqO,GACAtO,GACAuO;AACJ,UAAMjM,IAAc,KAAK,WAAW,KAAK,QAAQ,iBAAiB,KAAK,QAAQ,cAAc,oBAAoB,CAAE,GAC7GkM,IAAe,CAAAjN,MAAO;AAC1B,UAAIA,EAAI,QAAQ,KAAK,eAAe,IAAI,GAAG;AACzC,cAAMG,IAAOuL,GAAqB5K,GAAMC,GAAaf,GAAK,KAAK,QAAQ,cAAc,KAAK,QAAQ,mBAAmB;AACrH,eAAO,KAAK,eAAe,KAAK,OAAOG,GAAM,QAAWuE,GAAK/H,EAAAC,IAAA,IACxD8B,IACAoC,IAFwD;AAAA,UAG3D,kBAAkBd;AAAA,QACnB,EAAA,IAAIG;AAAA,MACb;AACM,YAAMpE,IAAIiE,EAAI,MAAM,KAAK,eAAe,GAClC,IAAIjE,EAAE,MAAK,EAAG,KAAM,GACpBG,IAAIH,EAAE,KAAK,KAAK,eAAe,EAAE,KAAM;AAC7C,aAAO,KAAK,OAAO2P,GAAqB5K,GAAMC,GAAa,GAAG,KAAK,QAAQ,cAAc,KAAK,QAAQ,mBAAmB,GAAG7E,GAAGwI,GAAK/H,EAAAC,IAAA,IAC/H8B,IACAoC,IAF+H;AAAA,QAGlI,kBAAkB;AAAA,MAC1B,EAAO;AAAA,IACF;AACD,SAAK,YAAa;AAClB,UAAMoM,IAA8BxO,KAAWA,EAAQ,+BAA+B,KAAK,QAAQ,6BAC7FqJ,IAAkBrJ,KAAWA,EAAQ,iBAAiBA,EAAQ,cAAc,oBAAoB,SAAYA,EAAQ,cAAc,kBAAkB,KAAK,QAAQ,cAAc;AAQrL,WAPc,CAAC;AAAA,MACb,OAAO,KAAK;AAAA,MACZ,WAAW,CAAAkN,MAAOD,GAAUC,CAAG;AAAA,IACrC,GAAO;AAAA,MACD,OAAO,KAAK;AAAA,MACZ,WAAW,CAAAA,MAAO,KAAK,cAAcD,GAAU,KAAK,OAAOC,CAAG,CAAC,IAAID,GAAUC,CAAG;AAAA,IACtF,CAAK,EACK,QAAQ,CAAAuB,MAAQ;AAEpB,WADAH,IAAW,GACJD,IAAQI,EAAK,MAAM,KAAK7L,CAAG,KAAG;AACnC,cAAM8L,IAAaL,EAAM,CAAC,EAAE,KAAM;AAElC,YADAtO,IAAQwO,EAAaG,CAAU,GAC3B3O,MAAU;AACZ,cAAI,OAAOyO,KAAgC,YAAY;AACrD,kBAAMG,IAAOH,EAA4B5L,GAAKyL,GAAOrO,CAAO;AAC5D,YAAAD,IAAQU,EAASkO,CAAI,IAAIA,IAAO;AAAA,UAC5C,WAAqB3O,KAAW,OAAO,UAAU,eAAe,KAAKA,GAAS0O,CAAU;AAC5E,YAAA3O,IAAQ;AAAA,mBACCsJ,GAAiB;AAC1B,YAAAtJ,IAAQsO,EAAM,CAAC;AACf;AAAA,UACZ;AACY,iBAAK,OAAO,KAAK,8BAA8BK,CAAU,sBAAsB9L,CAAG,EAAE,GACpF7C,IAAQ;AAAA,YAEL,CAAI,CAACU,EAASV,CAAK,KAAK,CAAC,KAAK,wBACnCA,IAAQkB,GAAWlB,CAAK;AAE1B,cAAM6O,IAAYH,EAAK,UAAU1O,CAAK;AAStC,YARA6C,IAAMA,EAAI,QAAQyL,EAAM,CAAC,GAAGO,CAAS,GACjCvF,KACFoF,EAAK,MAAM,aAAa1O,EAAM,QAC9B0O,EAAK,MAAM,aAAaJ,EAAM,CAAC,EAAE,UAEjCI,EAAK,MAAM,YAAY,GAEzBH,KACIA,KAAY,KAAK;AACnB;AAAA,MAEV;AAAA,IACA,CAAK,GACM1L;AAAA,EACX;AAAA,EACE,KAAKA,GAAK6I,GAAI;AACZ,QAAIzL,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE,GAChFqO,GACAtO,GACA8O;AACJ,UAAMC,IAAmB,CAACxN,GAAKyN,MAAqB;AAClD,YAAMC,IAAM,KAAK;AACjB,UAAI1N,EAAI,QAAQ0N,CAAG,IAAI,EAAG,QAAO1N;AACjC,YAAMrE,IAAIqE,EAAI,MAAM,IAAI,OAAO,GAAG0N,CAAG,OAAO,CAAC;AAC7C,UAAIC,IAAgB,IAAIhS,EAAE,CAAC,CAAC;AAC5B,MAAAqE,IAAMrE,EAAE,CAAC,GACTgS,IAAgB,KAAK,YAAYA,GAAeJ,CAAa;AAC7D,YAAMK,IAAsBD,EAAc,MAAM,IAAI,GAC9CE,IAAsBF,EAAc,MAAM,IAAI;AACpD,OAAIC,KAAuBA,EAAoB,SAAS,MAAM,KAAK,CAACC,KAAuBA,EAAoB,SAAS,MAAM,OAC5HF,IAAgBA,EAAc,QAAQ,MAAM,GAAG;AAEjD,UAAI;AACF,QAAAJ,IAAgB,KAAK,MAAMI,CAAa,GACpCF,MAAkBF,IAAgB3Q,IAAA,IACjC6Q,IACAF;AAAA,MAEN,SAAQnS,GAAG;AACV,oBAAK,OAAO,KAAK,oDAAoD4E,CAAG,IAAI5E,CAAC,GACtE,GAAG4E,CAAG,GAAG0N,CAAG,GAAGC,CAAa;AAAA,MAC3C;AACM,aAAIJ,EAAc,gBAAgBA,EAAc,aAAa,QAAQ,KAAK,MAAM,IAAI,MAAI,OAAOA,EAAc,cACtGvN;AAAA,IACR;AACD,WAAO+M,IAAQ,KAAK,cAAc,KAAKzL,CAAG,KAAG;AAC3C,UAAIwM,IAAa,CAAE;AACnB,MAAAP,IAAgB3Q,EAAA,IACX8B,IAEL6O,IAAgBA,EAAc,WAAW,CAACpO,EAASoO,EAAc,OAAO,IAAIA,EAAc,UAAUA,GACpGA,EAAc,qBAAqB,IACnC,OAAOA,EAAc;AACrB,UAAIQ,IAAW;AACf,UAAIhB,EAAM,CAAC,EAAE,QAAQ,KAAK,eAAe,MAAM,MAAM,CAAC,OAAO,KAAKA,EAAM,CAAC,CAAC,GAAG;AAC3E,cAAMxR,IAAIwR,EAAM,CAAC,EAAE,MAAM,KAAK,eAAe,EAAE,IAAI,CAAAiB,MAAQA,EAAK,KAAI,CAAE;AACtE,QAAAjB,EAAM,CAAC,IAAIxR,EAAE,MAAO,GACpBuS,IAAavS,GACbwS,IAAW;AAAA,MACnB;AAEM,UADAtP,IAAQ0L,EAAGqD,EAAiB,KAAK,MAAMT,EAAM,CAAC,EAAE,KAAI,GAAIQ,CAAa,GAAGA,CAAa,GACjF9O,KAASsO,EAAM,CAAC,MAAMzL,KAAO,CAACnC,EAASV,CAAK,EAAG,QAAOA;AAC1D,MAAKU,EAASV,CAAK,MAAGA,IAAQkB,GAAWlB,CAAK,IACzCA,MACH,KAAK,OAAO,KAAK,qBAAqBsO,EAAM,CAAC,CAAC,gBAAgBzL,CAAG,EAAE,GACnE7C,IAAQ,KAENsP,MACFtP,IAAQqP,EAAW,OAAO,CAAChR,GAAGZ,MAAM,KAAK,OAAOY,GAAGZ,GAAGwC,EAAQ,KAAK/B,EAAAC,EAAA,IAC9D8B,IAD8D;AAAA,QAEjE,kBAAkBqO,EAAM,CAAC,EAAE,KAAI;AAAA,MACzC,EAAS,GAAGtO,EAAM,MAAM,IAElB6C,IAAMA,EAAI,QAAQyL,EAAM,CAAC,GAAGtO,CAAK,GACjC,KAAK,OAAO,YAAY;AAAA,IAC9B;AACI,WAAO6C;AAAA,EACX;AACA;AAEA,MAAM2M,KAAiB,CAAAC,MAAa;AAClC,MAAIC,IAAaD,EAAU,YAAW,EAAG,KAAM;AAC/C,QAAME,IAAgB,CAAE;AACxB,MAAIF,EAAU,QAAQ,GAAG,IAAI,IAAI;AAC/B,UAAMnS,IAAImS,EAAU,MAAM,GAAG;AAC7B,IAAAC,IAAapS,EAAE,CAAC,EAAE,YAAW,EAAG,KAAM;AACtC,UAAMsS,IAAStS,EAAE,CAAC,EAAE,UAAU,GAAGA,EAAE,CAAC,EAAE,SAAS,CAAC;AAChD,IAAIoS,MAAe,cAAcE,EAAO,QAAQ,GAAG,IAAI,IAChDD,EAAc,aAAUA,EAAc,WAAWC,EAAO,KAAM,KAC1DF,MAAe,kBAAkBE,EAAO,QAAQ,GAAG,IAAI,IAC3DD,EAAc,UAAOA,EAAc,QAAQC,EAAO,KAAM,KAEhDA,EAAO,MAAM,GAAG,EACxB,QAAQ,CAAAC,MAAO;AAClB,UAAIA,GAAK;AACP,cAAM,CAACtO,GAAK,GAAGuO,CAAI,IAAID,EAAI,MAAM,GAAG,GAC9B1C,IAAM2C,EAAK,KAAK,GAAG,EAAE,OAAO,QAAQ,YAAY,EAAE,GAClDC,IAAaxO,EAAI,KAAM;AAC7B,QAAKoO,EAAcI,CAAU,MAAGJ,EAAcI,CAAU,IAAI5C,IACxDA,MAAQ,YAASwC,EAAcI,CAAU,IAAI,KAC7C5C,MAAQ,WAAQwC,EAAcI,CAAU,IAAI,KAC3C,MAAM5C,CAAG,MAAGwC,EAAcI,CAAU,IAAI,SAAS5C,GAAK,EAAE;AAAA,MACvE;AAAA,IACA,CAAO;AAAA,EAEP;AACE,SAAO;AAAA,IACL,YAAAuC;AAAA,IACA,eAAAC;AAAA,EACD;AACH,GACMK,KAAwB,CAAAC,MAAM;AAClC,QAAMC,IAAQ,CAAE;AAChB,SAAO,CAAC/C,GAAKlH,GAAKhG,MAAY;AAC5B,QAAIkQ,IAAclQ;AAClB,IAAIA,KAAWA,EAAQ,oBAAoBA,EAAQ,gBAAgBA,EAAQ,aAAaA,EAAQ,gBAAgB,KAAKA,EAAQA,EAAQ,gBAAgB,MACnJkQ,IAAcjS,EAAAC,EAAA,IACTgS,IADS;AAAA,MAEZ,CAAClQ,EAAQ,gBAAgB,GAAG;AAAA,IAC7B;AAEH,UAAMsB,IAAM0E,IAAM,KAAK,UAAUkK,CAAW;AAC5C,QAAIC,IAAYF,EAAM3O,CAAG;AACzB,WAAK6O,MACHA,IAAYH,EAAG/L,GAAe+B,CAAG,GAAGhG,CAAO,GAC3CiQ,EAAM3O,CAAG,IAAI6O,IAERA,EAAUjD,CAAG;AAAA,EACrB;AACH;AACA,MAAMkD,GAAU;AAAA,EACd,cAAc;AACZ,QAAIpQ,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,SAAK,SAASoF,GAAW,OAAO,WAAW,GAC3C,KAAK,UAAUpF,GACf,KAAK,UAAU;AAAA,MACb,QAAQ+P,GAAsB,CAAC/J,GAAK4J,MAAQ;AAC1C,cAAMO,IAAY,IAAI,KAAK,aAAanK,GAAK9H,EAAA,IACxC0R,EACJ;AACD,eAAO,CAAA1C,MAAOiD,EAAU,OAAOjD,CAAG;AAAA,MAC1C,CAAO;AAAA,MACD,UAAU6C,GAAsB,CAAC/J,GAAK4J,MAAQ;AAC5C,cAAMO,IAAY,IAAI,KAAK,aAAanK,GAAK/H,EAAAC,EAAA,IACxC0R,IADwC;AAAA,UAE3C,OAAO;AAAA,QACjB,EAAS;AACD,eAAO,CAAA1C,MAAOiD,EAAU,OAAOjD,CAAG;AAAA,MAC1C,CAAO;AAAA,MACD,UAAU6C,GAAsB,CAAC/J,GAAK4J,MAAQ;AAC5C,cAAMO,IAAY,IAAI,KAAK,eAAenK,GAAK9H,EAAA,IAC1C0R,EACJ;AACD,eAAO,CAAA1C,MAAOiD,EAAU,OAAOjD,CAAG;AAAA,MAC1C,CAAO;AAAA,MACD,cAAc6C,GAAsB,CAAC/J,GAAK4J,MAAQ;AAChD,cAAMO,IAAY,IAAI,KAAK,mBAAmBnK,GAAK9H,EAAA,IAC9C0R,EACJ;AACD,eAAO,CAAA1C,MAAOiD,EAAU,OAAOjD,GAAK0C,EAAI,SAAS,KAAK;AAAA,MAC9D,CAAO;AAAA,MACD,MAAMG,GAAsB,CAAC/J,GAAK4J,MAAQ;AACxC,cAAMO,IAAY,IAAI,KAAK,WAAWnK,GAAK9H,EAAA,IACtC0R,EACJ;AACD,eAAO,CAAA1C,MAAOiD,EAAU,OAAOjD,CAAG;AAAA,MACnC,CAAA;AAAA,IACF,GACD,KAAK,KAAKlN,CAAO;AAAA,EACrB;AAAA,EACE,KAAK4G,GAAU;AACb,QAAI5G,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAAA,MAChF,eAAe,CAAA;AAAA,IAChB;AACD,SAAK,kBAAkBA,EAAQ,cAAc,mBAAmB;AAAA,EACpE;AAAA,EACE,IAAIF,GAAM2L,GAAI;AACZ,SAAK,QAAQ3L,EAAK,YAAW,EAAG,KAAM,CAAA,IAAI2L;AAAA,EAC9C;AAAA,EACE,UAAU3L,GAAM2L,GAAI;AAClB,SAAK,QAAQ3L,EAAK,YAAW,EAAG,MAAM,IAAIiQ,GAAsBtE,CAAE;AAAA,EACtE;AAAA,EACE,OAAO1L,GAAOsQ,GAAQrK,GAAK;AACzB,QAAIhG,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,UAAMsQ,IAAUD,EAAO,MAAM,KAAK,eAAe;AACjD,QAAIC,EAAQ,SAAS,KAAKA,EAAQ,CAAC,EAAE,QAAQ,GAAG,IAAI,KAAKA,EAAQ,CAAC,EAAE,QAAQ,GAAG,IAAI,KAAKA,EAAQ,KAAK,CAAA9S,MAAKA,EAAE,QAAQ,GAAG,IAAI,EAAE,GAAG;AAC9H,YAAM+S,IAAYD,EAAQ,UAAU,CAAA9S,MAAKA,EAAE,QAAQ,GAAG,IAAI,EAAE;AAC5D,MAAA8S,EAAQ,CAAC,IAAI,CAACA,EAAQ,CAAC,GAAG,GAAGA,EAAQ,OAAO,GAAGC,CAAS,CAAC,EAAE,KAAK,KAAK,eAAe;AAAA,IAC1F;AAyBI,WAxBeD,EAAQ,OAAO,CAACE,GAAKhT,MAAM;AACxC,YAAM;AAAA,QACJ,YAAAiS;AAAA,QACA,eAAAC;AAAA,MACR,IAAUH,GAAe/R,CAAC;AACpB,UAAI,KAAK,QAAQiS,CAAU,GAAG;AAC5B,YAAIgB,IAAYD;AAChB,YAAI;AACF,gBAAME,IAAa1Q,KAAWA,EAAQ,gBAAgBA,EAAQ,aAAaA,EAAQ,gBAAgB,KAAK,CAAE,GACpG5C,IAAIsT,EAAW,UAAUA,EAAW,OAAO1Q,EAAQ,UAAUA,EAAQ,OAAOgG;AAClF,UAAAyK,IAAY,KAAK,QAAQhB,CAAU,EAAEe,GAAKpT,GAAGc,MAAA,IACxCwR,IACA1P,IACA0Q,EACJ;AAAA,QACF,SAAQC,GAAO;AACd,eAAK,OAAO,KAAKA,CAAK;AAAA,QAChC;AACQ,eAAOF;AAAA,MACf;AACQ,aAAK,OAAO,KAAK,oCAAoChB,CAAU,EAAE;AAEnE,aAAOe;AAAA,IACR,GAAEzQ,CAAK;AAAA,EAEZ;AACA;AAEA,MAAM6Q,KAAgB,CAACC,GAAG/Q,MAAS;AACjC,EAAI+Q,EAAE,QAAQ/Q,CAAI,MAAM,WACtB,OAAO+Q,EAAE,QAAQ/Q,CAAI,GACrB+Q,EAAE;AAEN;AACA,MAAMC,WAAkBzL,GAAa;AAAA,EACnC,YAAY0L,GAASC,GAAOpK,GAAU;AACpC,QAAI5G,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,UAAO,GACP,KAAK,UAAU+Q,GACf,KAAK,QAAQC,GACb,KAAK,WAAWpK,GAChB,KAAK,gBAAgBA,EAAS,eAC9B,KAAK,UAAU5G,GACf,KAAK,SAASoF,GAAW,OAAO,kBAAkB,GAClD,KAAK,eAAe,CAAE,GACtB,KAAK,mBAAmBpF,EAAQ,oBAAoB,IACpD,KAAK,eAAe,GACpB,KAAK,aAAaA,EAAQ,cAAc,IAAIA,EAAQ,aAAa,GACjE,KAAK,eAAeA,EAAQ,gBAAgB,IAAIA,EAAQ,eAAe,KACvE,KAAK,QAAQ,CAAE,GACf,KAAK,QAAQ,CAAE,GACX,KAAK,WAAW,KAAK,QAAQ,QAC/B,KAAK,QAAQ,KAAK4G,GAAU5G,EAAQ,SAASA,CAAO;AAAA,EAE1D;AAAA,EACE,UAAUiR,GAAWnK,GAAY9G,GAASkR,GAAU;AAClD,UAAMC,IAAS,CAAE,GACXC,IAAU,CAAE,GACZC,IAAkB,CAAE,GACpBC,IAAmB,CAAE;AAC3B,WAAAL,EAAU,QAAQ,CAAAjL,MAAO;AACvB,UAAIuL,IAAmB;AACvB,MAAAzK,EAAW,QAAQ,CAAAhB,MAAM;AACvB,cAAMhG,IAAO,GAAGkG,CAAG,IAAIF,CAAE;AACzB,QAAI,CAAC9F,EAAQ,UAAU,KAAK,MAAM,kBAAkBgG,GAAKF,CAAE,IACzD,KAAK,MAAMhG,CAAI,IAAI,IACV,KAAK,MAAMA,CAAI,IAAI,MAAc,KAAK,MAAMA,CAAI,MAAM,IAC3DsR,EAAQtR,CAAI,MAAM,WAAWsR,EAAQtR,CAAI,IAAI,OAEjD,KAAK,MAAMA,CAAI,IAAI,GACnByR,IAAmB,IACfH,EAAQtR,CAAI,MAAM,WAAWsR,EAAQtR,CAAI,IAAI,KAC7CqR,EAAOrR,CAAI,MAAM,WAAWqR,EAAOrR,CAAI,IAAI,KAC3CwR,EAAiBxL,CAAE,MAAM,WAAWwL,EAAiBxL,CAAE,IAAI;AAAA,MAEzE,CAAO,GACIyL,MAAkBF,EAAgBrL,CAAG,IAAI;AAAA,IACpD,CAAK,IACG,OAAO,KAAKmL,CAAM,EAAE,UAAU,OAAO,KAAKC,CAAO,EAAE,WACrD,KAAK,MAAM,KAAK;AAAA,MACd,SAAAA;AAAA,MACA,cAAc,OAAO,KAAKA,CAAO,EAAE;AAAA,MACnC,QAAQ,CAAE;AAAA,MACV,QAAQ,CAAE;AAAA,MACV,UAAAF;AAAA,IACR,CAAO,GAEI;AAAA,MACL,QAAQ,OAAO,KAAKC,CAAM;AAAA,MAC1B,SAAS,OAAO,KAAKC,CAAO;AAAA,MAC5B,iBAAiB,OAAO,KAAKC,CAAe;AAAA,MAC5C,kBAAkB,OAAO,KAAKC,CAAgB;AAAA,IAC/C;AAAA,EACL;AAAA,EACE,OAAOxR,GAAMyM,GAAKnK,GAAM;AACtB,UAAMzF,IAAImD,EAAK,MAAM,GAAG,GAClBkG,IAAMrJ,EAAE,CAAC,GACTmJ,IAAKnJ,EAAE,CAAC;AACd,IAAI4P,KAAK,KAAK,KAAK,iBAAiBvG,GAAKF,GAAIyG,CAAG,GAC5C,CAACA,KAAOnK,KACV,KAAK,MAAM,kBAAkB4D,GAAKF,GAAI1D,GAAM,QAAW,QAAW;AAAA,MAChE,UAAU;AAAA,IAClB,CAAO,GAEH,KAAK,MAAMtC,CAAI,IAAIyM,IAAM,KAAK,GAC1BA,KAAOnK,MAAM,KAAK,MAAMtC,CAAI,IAAI;AACpC,UAAM0R,IAAS,CAAE;AACjB,SAAK,MAAM,QAAQ,CAAAX,MAAK;AACtB,MAAA7O,GAAS6O,EAAE,QAAQ,CAAC7K,CAAG,GAAGF,CAAE,GAC5B8K,GAAcC,GAAG/Q,CAAI,GACjByM,KAAKsE,EAAE,OAAO,KAAKtE,CAAG,GACtBsE,EAAE,iBAAiB,KAAK,CAACA,EAAE,SAC7B,OAAO,KAAKA,EAAE,MAAM,EAAE,QAAQ,CAAAzT,MAAK;AACjC,QAAKoU,EAAOpU,CAAC,MAAGoU,EAAOpU,CAAC,IAAI,CAAE;AAC9B,cAAMqU,IAAaZ,EAAE,OAAOzT,CAAC;AAC7B,QAAIqU,EAAW,UACbA,EAAW,QAAQ,CAAA3U,MAAK;AACtB,UAAI0U,EAAOpU,CAAC,EAAEN,CAAC,MAAM,WAAW0U,EAAOpU,CAAC,EAAEN,CAAC,IAAI;AAAA,QAC7D,CAAa;AAAA,MAEb,CAAS,GACD+T,EAAE,OAAO,IACLA,EAAE,OAAO,SACXA,EAAE,SAASA,EAAE,MAAM,IAEnBA,EAAE,SAAU;AAAA,IAGtB,CAAK,GACD,KAAK,KAAK,UAAUW,CAAM,GAC1B,KAAK,QAAQ,KAAK,MAAM,OAAO,CAAAX,MAAK,CAACA,EAAE,IAAI;AAAA,EAC/C;AAAA,EACE,KAAK7K,GAAKF,GAAI4L,GAAQ;AACpB,QAAIC,IAAQ,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,GAC5EC,IAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,KAAK,cAChFV,IAAW,UAAU,SAAS,IAAI,UAAU,CAAC,IAAI;AACrD,QAAI,CAAClL,EAAI,OAAQ,QAAOkL,EAAS,MAAM,CAAA,CAAE;AACzC,QAAI,KAAK,gBAAgB,KAAK,kBAAkB;AAC9C,WAAK,aAAa,KAAK;AAAA,QACrB,KAAAlL;AAAA,QACA,IAAAF;AAAA,QACA,QAAA4L;AAAA,QACA,OAAAC;AAAA,QACA,MAAAC;AAAA,QACA,UAAAV;AAAA,MACR,CAAO;AACD;AAAA,IACN;AACI,SAAK;AACL,UAAMW,IAAW,CAACtF,GAAKnK,MAAS;AAE9B,UADA,KAAK,gBACD,KAAK,aAAa,SAAS,GAAG;AAChC,cAAM2B,IAAO,KAAK,aAAa,MAAO;AACtC,aAAK,KAAKA,EAAK,KAAKA,EAAK,IAAIA,EAAK,QAAQA,EAAK,OAAOA,EAAK,MAAMA,EAAK,QAAQ;AAAA,MACtF;AACM,UAAIwI,KAAOnK,KAAQuP,IAAQ,KAAK,YAAY;AAC1C,mBAAW,MAAM;AACf,eAAK,KAAK,KAAK,MAAM3L,GAAKF,GAAI4L,GAAQC,IAAQ,GAAGC,IAAO,GAAGV,CAAQ;AAAA,QACpE,GAAEU,CAAI;AACP;AAAA,MACR;AACM,MAAAV,EAAS3E,GAAKnK,CAAI;AAAA,IACnB,GACKqJ,IAAK,KAAK,QAAQiG,CAAM,EAAE,KAAK,KAAK,OAAO;AACjD,QAAIjG,EAAG,WAAW,GAAG;AACnB,UAAI;AACF,cAAM5O,IAAI4O,EAAGzF,GAAKF,CAAE;AACpB,QAAIjJ,KAAK,OAAOA,EAAE,QAAS,aACzBA,EAAE,KAAK,CAAAuF,MAAQyP,EAAS,MAAMzP,CAAI,CAAC,EAAE,MAAMyP,CAAQ,IAEnDA,EAAS,MAAMhV,CAAC;AAAA,MAEnB,SAAQ0P,GAAK;AACZ,QAAAsF,EAAStF,CAAG;AAAA,MACpB;AACM;AAAA,IACN;AACI,WAAOd,EAAGzF,GAAKF,GAAI+L,CAAQ;AAAA,EAC/B;AAAA,EACE,eAAeZ,GAAWnK,GAAY;AACpC,QAAI9G,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE,GAChFkR,IAAW,UAAU,SAAS,IAAI,UAAU,CAAC,IAAI;AACrD,QAAI,CAAC,KAAK;AACR,kBAAK,OAAO,KAAK,gEAAgE,GAC1EA,KAAYA,EAAU;AAE/B,IAAIzQ,EAASwQ,CAAS,MAAGA,IAAY,KAAK,cAAc,mBAAmBA,CAAS,IAChFxQ,EAASqG,CAAU,MAAGA,IAAa,CAACA,CAAU;AAClD,UAAMqK,IAAS,KAAK,UAAUF,GAAWnK,GAAY9G,GAASkR,CAAQ;AACtE,QAAI,CAACC,EAAO,OAAO;AACjB,aAAKA,EAAO,QAAQ,UAAQD,EAAU,GAC/B;AAET,IAAAC,EAAO,OAAO,QAAQ,CAAArR,MAAQ;AAC5B,WAAK,QAAQA,CAAI;AAAA,IACvB,CAAK;AAAA,EACL;AAAA,EACE,KAAKmR,GAAWnK,GAAYoK,GAAU;AACpC,SAAK,eAAeD,GAAWnK,GAAY,CAAA,GAAIoK,CAAQ;AAAA,EAC3D;AAAA,EACE,OAAOD,GAAWnK,GAAYoK,GAAU;AACtC,SAAK,eAAeD,GAAWnK,GAAY;AAAA,MACzC,QAAQ;AAAA,IACT,GAAEoK,CAAQ;AAAA,EACf;AAAA,EACE,QAAQpR,GAAM;AACZ,QAAImF,IAAS,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AACjF,UAAMtI,IAAImD,EAAK,MAAM,GAAG,GAClBkG,IAAMrJ,EAAE,CAAC,GACTmJ,IAAKnJ,EAAE,CAAC;AACd,SAAK,KAAKqJ,GAAKF,GAAI,QAAQ,QAAW,QAAW,CAACyG,GAAKnK,MAAS;AAC9D,MAAImK,KAAK,KAAK,OAAO,KAAK,GAAGtH,CAAM,qBAAqBa,CAAE,iBAAiBE,CAAG,WAAWuG,CAAG,GACxF,CAACA,KAAOnK,KAAM,KAAK,OAAO,IAAI,GAAG6C,CAAM,oBAAoBa,CAAE,iBAAiBE,CAAG,IAAI5D,CAAI,GAC7F,KAAK,OAAOtC,GAAMyM,GAAKnK,CAAI;AAAA,IACjC,CAAK;AAAA,EACL;AAAA,EACE,YAAY6O,GAAW5J,GAAW/F,GAAKwQ,GAAeC,GAAU;AAC9D,QAAI/R,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE,GAChFgS,IAAM,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,MAAM;AAAA,IAAE;AACtF,QAAI,KAAK,SAAS,SAAS,KAAK,SAAS,MAAM,sBAAsB,CAAC,KAAK,SAAS,MAAM,mBAAmB3K,CAAS,GAAG;AACvH,WAAK,OAAO,KAAK,qBAAqB/F,CAAG,uBAAuB+F,CAAS,wBAAwB,0NAA0N;AAC3T;AAAA,IACN;AACI,QAAI,EAAqB/F,KAAQ,QAAQA,MAAQ,KACjD;AAAA,UAAI,KAAK,WAAW,KAAK,QAAQ,QAAQ;AACvC,cAAM2Q,IAAOhU,EAAAC,EAAA,IACR8B,IADQ;AAAA,UAEX,UAAA+R;AAAA,QACD,IACKtG,IAAK,KAAK,QAAQ,OAAO,KAAK,KAAK,OAAO;AAChD,YAAIA,EAAG,SAAS;AACd,cAAI;AACF,gBAAI5O;AACJ,YAAI4O,EAAG,WAAW,IAChB5O,IAAI4O,EAAGwF,GAAW5J,GAAW/F,GAAKwQ,GAAeG,CAAI,IAErDpV,IAAI4O,EAAGwF,GAAW5J,GAAW/F,GAAKwQ,CAAa,GAE7CjV,KAAK,OAAOA,EAAE,QAAS,aACzBA,EAAE,KAAK,CAAAuF,MAAQ4P,EAAI,MAAM5P,CAAI,CAAC,EAAE,MAAM4P,CAAG,IAEzCA,EAAI,MAAMnV,CAAC;AAAA,UAEd,SAAQ0P,GAAK;AACZ,YAAAyF,EAAIzF,CAAG;AAAA,UACjB;AAAA;AAEQ,UAAAd,EAAGwF,GAAW5J,GAAW/F,GAAKwQ,GAAeE,GAAKC,CAAI;AAAA,MAE9D;AACI,MAAI,CAAChB,KAAa,CAACA,EAAU,CAAC,KAC9B,KAAK,MAAM,YAAYA,EAAU,CAAC,GAAG5J,GAAW/F,GAAKwQ,CAAa;AAAA;AAAA,EACtE;AACA;AAEA,MAAMI,KAAM,OAAO;AAAA,EACjB,OAAO;AAAA,EACP,eAAe;AAAA,EACf,IAAI,CAAC,aAAa;AAAA,EAClB,WAAW,CAAC,aAAa;AAAA,EACzB,aAAa,CAAC,KAAK;AAAA,EACnB,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,0BAA0B;AAAA,EAC1B,MAAM;AAAA,EACN,SAAS;AAAA,EACT,sBAAsB;AAAA,EACtB,cAAc;AAAA,EACd,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,yBAAyB;AAAA,EACzB,aAAa;AAAA,EACb,eAAe;AAAA,EACf,eAAe;AAAA,EACf,oBAAoB;AAAA,EACpB,mBAAmB;AAAA,EACnB,6BAA6B;AAAA,EAC7B,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,YAAY;AAAA,EACZ,mBAAmB;AAAA,EACnB,eAAe;AAAA,EACf,YAAY;AAAA,EACZ,uBAAuB;AAAA,EACvB,wBAAwB;AAAA,EACxB,6BAA6B;AAAA,EAC7B,yBAAyB;AAAA,EACzB,kCAAkC,CAAA9N,MAAQ;AACxC,QAAI+N,IAAM,CAAE;AAIZ,QAHI,OAAO/N,EAAK,CAAC,KAAM,aAAU+N,IAAM/N,EAAK,CAAC,IACzC3D,EAAS2D,EAAK,CAAC,CAAC,MAAG+N,EAAI,eAAe/N,EAAK,CAAC,IAC5C3D,EAAS2D,EAAK,CAAC,CAAC,MAAG+N,EAAI,eAAe/N,EAAK,CAAC,IAC5C,OAAOA,EAAK,CAAC,KAAM,YAAY,OAAOA,EAAK,CAAC,KAAM,UAAU;AAC9D,YAAMpE,IAAUoE,EAAK,CAAC,KAAKA,EAAK,CAAC;AACjC,aAAO,KAAKpE,CAAO,EAAE,QAAQ,CAAAsB,MAAO;AAClC,QAAA6Q,EAAI7Q,CAAG,IAAItB,EAAQsB,CAAG;AAAA,MAC9B,CAAO;AAAA,IACP;AACI,WAAO6Q;AAAA,EACR;AAAA,EACD,eAAe;AAAA,IACb,aAAa;AAAA,IACb,QAAQ,CAAApS,MAASA;AAAA,IACjB,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,eAAe;AAAA,IACf,yBAAyB;AAAA,IACzB,aAAa;AAAA,IACb,iBAAiB;AAAA,EACrB;AACA,IACMqS,KAAmB,CAAApS,OACnBS,EAAST,EAAQ,EAAE,MAAGA,EAAQ,KAAK,CAACA,EAAQ,EAAE,IAC9CS,EAAST,EAAQ,WAAW,MAAGA,EAAQ,cAAc,CAACA,EAAQ,WAAW,IACzES,EAAST,EAAQ,UAAU,MAAGA,EAAQ,aAAa,CAACA,EAAQ,UAAU,IACtEA,EAAQ,iBAAiBA,EAAQ,cAAc,QAAQ,QAAQ,IAAI,MACrEA,EAAQ,gBAAgBA,EAAQ,cAAc,OAAO,CAAC,QAAQ,CAAC,IAE1DA,IAGHqS,KAAO,MAAM;AAAE,GACfC,KAAsB,CAAAC,MAAQ;AAElC,EADa,OAAO,oBAAoB,OAAO,eAAeA,CAAI,CAAC,EAC9D,QAAQ,CAAA/B,MAAO;AAClB,IAAI,OAAO+B,EAAK/B,CAAG,KAAM,eACvB+B,EAAK/B,CAAG,IAAI+B,EAAK/B,CAAG,EAAE,KAAK+B,CAAI;AAAA,EAErC,CAAG;AACH;AACA,MAAMC,WAAanN,GAAa;AAAA,EAC9B,cAAc;AACZ,QAAIrF,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE,GAChFkR,IAAW,UAAU,SAAS,IAAI,UAAU,CAAC,IAAI;AASrD,QARA,MAAO,GACP,KAAK,UAAUkB,GAAiBpS,CAAO,GACvC,KAAK,WAAW,CAAE,GAClB,KAAK,SAASoF,IACd,KAAK,UAAU;AAAA,MACb,UAAU,CAAA;AAAA,IACX,GACDkN,GAAoB,IAAI,GACpBpB,KAAY,CAAC,KAAK,iBAAiB,CAAClR,EAAQ,SAAS;AACvD,UAAI,CAAC,KAAK,QAAQ;AAChB,oBAAK,KAAKA,GAASkR,CAAQ,GACpB;AAET,iBAAW,MAAM;AACf,aAAK,KAAKlR,GAASkR,CAAQ;AAAA,MAC5B,GAAE,CAAC;AAAA,IACV;AAAA,EACA;AAAA,EACE,OAAO;AACL,QAAI9H,IAAQ;AACZ,QAAIpJ,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE,GAChFkR,IAAW,UAAU,SAAS,IAAI,UAAU,CAAC,IAAI;AACrD,SAAK,iBAAiB,IAClB,OAAOlR,KAAY,eACrBkR,IAAWlR,GACXA,IAAU,CAAE,IAEV,CAACA,EAAQ,aAAaA,EAAQ,cAAc,MAASA,EAAQ,OAC3DS,EAAST,EAAQ,EAAE,IACrBA,EAAQ,YAAYA,EAAQ,KACnBA,EAAQ,GAAG,QAAQ,aAAa,IAAI,MAC7CA,EAAQ,YAAYA,EAAQ,GAAG,CAAC;AAGpC,UAAMyS,IAAUP,GAAK;AACrB,SAAK,UAAUhU,MAAA,IACVuU,IACA,KAAK,UACLL,GAAiBpS,CAAO,IAEzB,KAAK,QAAQ,qBAAqB,SACpC,KAAK,QAAQ,gBAAgB9B,IAAA,IACxBuU,EAAQ,gBACR,KAAK,QAAQ,iBAGhBzS,EAAQ,iBAAiB,WAC3B,KAAK,QAAQ,0BAA0BA,EAAQ,eAE7CA,EAAQ,gBAAgB,WAC1B,KAAK,QAAQ,yBAAyBA,EAAQ;AAEhD,UAAM0S,IAAsB,CAAAC,MACrBA,IACD,OAAOA,KAAkB,aAAmB,IAAIA,EAAe,IAC5DA,IAFoB;AAI7B,QAAI,CAAC,KAAK,QAAQ,SAAS;AACzB,MAAI,KAAK,QAAQ,SACfvN,GAAW,KAAKsN,EAAoB,KAAK,QAAQ,MAAM,GAAG,KAAK,OAAO,IAEtEtN,GAAW,KAAK,MAAM,KAAK,OAAO;AAEpC,UAAI+K;AACJ,MAAI,KAAK,QAAQ,YACfA,IAAY,KAAK,QAAQ,YAChB,OAAO,QAAS,gBACzBA,IAAYC;AAEd,YAAMwC,IAAK,IAAI9H,GAAa,KAAK,OAAO;AACxC,WAAK,QAAQ,IAAIjF,GAAc,KAAK,QAAQ,WAAW,KAAK,OAAO;AACnE,YAAMlJ,IAAI,KAAK;AACf,MAAAA,EAAE,SAASyI,IACXzI,EAAE,gBAAgB,KAAK,OACvBA,EAAE,gBAAgBiW,GAClBjW,EAAE,iBAAiB,IAAIuP,GAAe0G,GAAI;AAAA,QACxC,SAAS,KAAK,QAAQ;AAAA,QACtB,mBAAmB,KAAK,QAAQ;AAAA,QAChC,sBAAsB,KAAK,QAAQ;AAAA,MAC3C,CAAO,GACGzC,MAAc,CAAC,KAAK,QAAQ,cAAc,UAAU,KAAK,QAAQ,cAAc,WAAWsC,EAAQ,cAAc,YAClH9V,EAAE,YAAY+V,EAAoBvC,CAAS,GAC3CxT,EAAE,UAAU,KAAKA,GAAG,KAAK,OAAO,GAChC,KAAK,QAAQ,cAAc,SAASA,EAAE,UAAU,OAAO,KAAKA,EAAE,SAAS,IAEzEA,EAAE,eAAe,IAAIwQ,GAAa,KAAK,OAAO,GAC9CxQ,EAAE,QAAQ;AAAA,QACR,oBAAoB,KAAK,mBAAmB,KAAK,IAAI;AAAA,MACtD,GACDA,EAAE,mBAAmB,IAAImU,GAAU4B,EAAoB,KAAK,QAAQ,OAAO,GAAG/V,EAAE,eAAeA,GAAG,KAAK,OAAO,GAC9GA,EAAE,iBAAiB,GAAG,KAAK,SAAUsD,GAAO;AAC1C,iBAASuE,IAAO,UAAU,QAAQJ,IAAO,IAAI,MAAMI,IAAO,IAAIA,IAAO,IAAI,CAAC,GAAGC,IAAO,GAAGA,IAAOD,GAAMC;AAClG,UAAAL,EAAKK,IAAO,CAAC,IAAI,UAAUA,CAAI;AAEjC,QAAA2E,EAAM,KAAKnJ,GAAO,GAAGmE,CAAI;AAAA,MACjC,CAAO,GACG,KAAK,QAAQ,qBACfzH,EAAE,mBAAmB+V,EAAoB,KAAK,QAAQ,gBAAgB,GAClE/V,EAAE,iBAAiB,QAAMA,EAAE,iBAAiB,KAAKA,GAAG,KAAK,QAAQ,WAAW,KAAK,OAAO,IAE1F,KAAK,QAAQ,eACfA,EAAE,aAAa+V,EAAoB,KAAK,QAAQ,UAAU,GACtD/V,EAAE,WAAW,QAAMA,EAAE,WAAW,KAAK,IAAI,IAE/C,KAAK,aAAa,IAAIgK,GAAW,KAAK,UAAU,KAAK,OAAO,GAC5D,KAAK,WAAW,GAAG,KAAK,SAAU1G,GAAO;AACvC,iBAASyE,IAAQ,UAAU,QAAQN,IAAO,IAAI,MAAMM,IAAQ,IAAIA,IAAQ,IAAI,CAAC,GAAGC,IAAQ,GAAGA,IAAQD,GAAOC;AACxG,UAAAP,EAAKO,IAAQ,CAAC,IAAI,UAAUA,CAAK;AAEnC,QAAAyE,EAAM,KAAKnJ,GAAO,GAAGmE,CAAI;AAAA,MACjC,CAAO,GACD,KAAK,QAAQ,SAAS,QAAQ,CAAA9F,MAAK;AACjC,QAAIA,EAAE,QAAMA,EAAE,KAAK,IAAI;AAAA,MAC/B,CAAO;AAAA,IACP;AAGI,QAFA,KAAK,SAAS,KAAK,QAAQ,cAAc,QACpC4S,MAAUA,IAAWmB,KACtB,KAAK,QAAQ,eAAe,CAAC,KAAK,SAAS,oBAAoB,CAAC,KAAK,QAAQ,KAAK;AACpF,YAAMnI,IAAQ,KAAK,SAAS,cAAc,iBAAiB,KAAK,QAAQ,WAAW;AACnF,MAAIA,EAAM,SAAS,KAAKA,EAAM,CAAC,MAAM,UAAO,KAAK,QAAQ,MAAMA,EAAM,CAAC;AAAA,IAC5E;AACI,IAAI,CAAC,KAAK,SAAS,oBAAoB,CAAC,KAAK,QAAQ,OACnD,KAAK,OAAO,KAAK,yDAAyD,GAE3D,CAAC,eAAe,qBAAqB,qBAAqB,mBAAmB,EACrF,QAAQ,CAAAwH,MAAU;AACzB,WAAKA,CAAM,IAAI,WAAY;AACzB,eAAOtI,EAAM,MAAMsI,CAAM,EAAE,GAAG,SAAS;AAAA,MACxC;AAAA,IACP,CAAK,GACuB,CAAC,eAAe,gBAAgB,qBAAqB,sBAAsB,EACnF,QAAQ,CAAAA,MAAU;AAChC,WAAKA,CAAM,IAAI,WAAY;AACzB,eAAAtI,EAAM,MAAMsI,CAAM,EAAE,GAAG,SAAS,GACzBtI;AAAA,MACR;AAAA,IACP,CAAK;AACD,UAAMyJ,IAAWlS,GAAO,GAClBmS,IAAO,MAAM;AACjB,YAAMC,IAAS,CAACxG,GAAK/P,MAAM;AACzB,aAAK,iBAAiB,IAClB,KAAK,iBAAiB,CAAC,KAAK,wBAAsB,KAAK,OAAO,KAAK,uEAAuE,GAC9I,KAAK,gBAAgB,IAChB,KAAK,QAAQ,WAAS,KAAK,OAAO,IAAI,eAAe,KAAK,OAAO,GACtE,KAAK,KAAK,eAAe,KAAK,OAAO,GACrCqW,EAAS,QAAQrW,CAAC,GAClB0U,EAAS3E,GAAK/P,CAAC;AAAA,MAChB;AACD,UAAI,KAAK,aAAa,KAAK,QAAQ,qBAAqB,QAAQ,CAAC,KAAK,cAAe,QAAOuW,EAAO,MAAM,KAAK,EAAE,KAAK,IAAI,CAAC;AAC1H,WAAK,eAAe,KAAK,QAAQ,KAAKA,CAAM;AAAA,IAC7C;AACD,WAAI,KAAK,QAAQ,aAAa,CAAC,KAAK,QAAQ,gBAC1CD,EAAM,IAEN,WAAWA,GAAM,CAAC,GAEbD;AAAA,EACX;AAAA,EACE,cAAc5J,GAAU;AAEtB,QAAI+J,IADW,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAIX;AAEnF,UAAMvI,IAAUrJ,EAASwI,CAAQ,IAAIA,IAAW,KAAK;AAErD,QADI,OAAOA,KAAa,eAAY+J,IAAe/J,IAC/C,CAAC,KAAK,QAAQ,aAAa,KAAK,QAAQ,yBAAyB;AACnE,UAAIa,KAAWA,EAAQ,YAAa,MAAK,aAAa,CAAC,KAAK,QAAQ,WAAW,KAAK,QAAQ,QAAQ,WAAW,GAAI,QAAOkJ,EAAc;AACxI,YAAM7B,IAAS,CAAE,GACX8B,IAAS,CAAAjN,MAAO;AAEpB,YADI,CAACA,KACDA,MAAQ,SAAU;AAEtB,QADa,KAAK,SAAS,cAAc,mBAAmBA,CAAG,EAC1D,QAAQ,CAAA5I,MAAK;AAChB,UAAIA,MAAM,YACN+T,EAAO,QAAQ/T,CAAC,IAAI,KAAG+T,EAAO,KAAK/T,CAAC;AAAA,QAClD,CAAS;AAAA,MACF;AACD,MAAK0M,IAIHmJ,EAAOnJ,CAAO,IAHI,KAAK,SAAS,cAAc,iBAAiB,KAAK,QAAQ,WAAW,EAC7E,QAAQ,OAAKmJ,EAAO,CAAC,CAAC,GAI9B,KAAK,QAAQ,WACf,KAAK,QAAQ,QAAQ,QAAQ,CAAA7V,MAAK6V,EAAO7V,CAAC,CAAC,GAE7C,KAAK,SAAS,iBAAiB,KAAK+T,GAAQ,KAAK,QAAQ,IAAI,CAAAzU,MAAK;AAChE,QAAI,CAACA,KAAK,CAAC,KAAK,oBAAoB,KAAK,YAAU,KAAK,oBAAoB,KAAK,QAAQ,GACzFsW,EAAatW,CAAC;AAAA,MACtB,CAAO;AAAA,IACP;AACM,MAAAsW,EAAa,IAAI;AAAA,EAEvB;AAAA,EACE,gBAAgBpK,GAAM9C,GAAIoL,GAAU;AAClC,UAAM2B,IAAWlS,GAAO;AACxB,WAAI,OAAOiI,KAAS,eAClBsI,IAAWtI,GACXA,IAAO,SAEL,OAAO9C,KAAO,eAChBoL,IAAWpL,GACXA,IAAK,SAEF8C,MAAMA,IAAO,KAAK,YAClB9C,MAAIA,IAAK,KAAK,QAAQ,KACtBoL,MAAUA,IAAWmB,KAC1B,KAAK,SAAS,iBAAiB,OAAOzJ,GAAM9C,GAAI,CAAAyG,MAAO;AACrD,MAAAsG,EAAS,QAAS,GAClB3B,EAAS3E,CAAG;AAAA,IAClB,CAAK,GACMsG;AAAA,EACX;AAAA,EACE,IAAI3S,GAAQ;AACV,QAAI,CAACA,EAAQ,OAAM,IAAI,MAAM,+FAA+F;AAC5H,QAAI,CAACA,EAAO,KAAM,OAAM,IAAI,MAAM,0FAA0F;AAC5H,WAAIA,EAAO,SAAS,cAClB,KAAK,QAAQ,UAAUA,KAErBA,EAAO,SAAS,YAAYA,EAAO,OAAOA,EAAO,QAAQA,EAAO,WAClE,KAAK,QAAQ,SAASA,IAEpBA,EAAO,SAAS,uBAClB,KAAK,QAAQ,mBAAmBA,IAE9BA,EAAO,SAAS,iBAClB,KAAK,QAAQ,aAAaA,IAExBA,EAAO,SAAS,mBAClBoG,GAAc,iBAAiBpG,CAAM,GAEnCA,EAAO,SAAS,gBAClB,KAAK,QAAQ,YAAYA,IAEvBA,EAAO,SAAS,cAClB,KAAK,QAAQ,SAAS,KAAKA,CAAM,GAE5B;AAAA,EACX;AAAA,EACE,oBAAoB9C,GAAG;AACrB,QAAI,GAACA,KAAK,CAAC,KAAK,cACZ,GAAC,UAAU,KAAK,EAAE,QAAQA,CAAC,IAAI;AACnC,eAAS8V,IAAK,GAAGA,IAAK,KAAK,UAAU,QAAQA,KAAM;AACjD,cAAMC,IAAY,KAAK,UAAUD,CAAE;AACnC,YAAI,GAAC,UAAU,KAAK,EAAE,QAAQC,CAAS,IAAI,OACvC,KAAK,MAAM,4BAA4BA,CAAS,GAAG;AACrD,eAAK,mBAAmBA;AACxB;AAAA,QACR;AAAA,MACA;AAAA,EACA;AAAA,EACE,eAAenN,GAAKkL,GAAU;AAC5B,QAAIkC,IAAS;AACb,SAAK,uBAAuBpN;AAC5B,UAAM6M,IAAWlS,GAAO;AACxB,SAAK,KAAK,oBAAoBqF,CAAG;AACjC,UAAMqN,IAAc,OAAK;AACvB,WAAK,WAAW,GAChB,KAAK,YAAY,KAAK,SAAS,cAAc,mBAAmB,CAAC,GACjE,KAAK,mBAAmB,QACxB,KAAK,oBAAoB,CAAC;AAAA,IAC3B,GACKC,IAAO,CAAC/G,GAAKnP,MAAM;AACvB,MAAIA,KACFiW,EAAYjW,CAAC,GACb,KAAK,WAAW,eAAeA,CAAC,GAChC,KAAK,uBAAuB,QAC5B,KAAK,KAAK,mBAAmBA,CAAC,GAC9B,KAAK,OAAO,IAAI,mBAAmBA,CAAC,KAEpC,KAAK,uBAAuB,QAE9ByV,EAAS,QAAQ,WAAY;AAC3B,eAAOO,EAAO,EAAE,GAAG,SAAS;AAAA,MACpC,CAAO,GACGlC,KAAUA,EAAS3E,GAAK,WAAY;AACtC,eAAO6G,EAAO,EAAE,GAAG,SAAS;AAAA,MACpC,CAAO;AAAA,IACF,GACKG,IAAS,CAAA3K,MAAQ;AACrB,MAAI,CAAC5C,KAAO,CAAC4C,KAAQ,KAAK,SAAS,qBAAkBA,IAAO,CAAE;AAC9D,YAAMxL,IAAIqD,EAASmI,CAAI,IAAIA,IAAO,KAAK,SAAS,cAAc,sBAAsBA,CAAI;AACxF,MAAIxL,MACG,KAAK,YACRiW,EAAYjW,CAAC,GAEV,KAAK,WAAW,YAAU,KAAK,WAAW,eAAeA,CAAC,GAC3D,KAAK,SAAS,oBAAoB,KAAK,SAAS,iBAAiB,qBAAmB,KAAK,SAAS,iBAAiB,kBAAkBA,CAAC,IAE5I,KAAK,cAAcA,GAAG,CAAAmP,MAAO;AAC3B,QAAA+G,EAAK/G,GAAKnP,CAAC;AAAA,MACnB,CAAO;AAAA,IACF;AACD,WAAI,CAAC4I,KAAO,KAAK,SAAS,oBAAoB,CAAC,KAAK,SAAS,iBAAiB,QAC5EuN,EAAO,KAAK,SAAS,iBAAiB,OAAM,CAAE,IACrC,CAACvN,KAAO,KAAK,SAAS,oBAAoB,KAAK,SAAS,iBAAiB,QAC9E,KAAK,SAAS,iBAAiB,OAAO,WAAW,IACnD,KAAK,SAAS,iBAAiB,OAAM,EAAG,KAAKuN,CAAM,IAEnD,KAAK,SAAS,iBAAiB,OAAOA,CAAM,IAG9CA,EAAOvN,CAAG,GAEL6M;AAAA,EACX;AAAA,EACE,UAAU7M,GAAKF,GAAI0N,GAAW;AAC5B,QAAIC,IAAS;AACb,UAAMC,IAAS,SAAUpS,GAAK2Q,GAAM;AAClC,UAAIjS;AACJ,UAAI,OAAOiS,KAAS,UAAU;AAC5B,iBAASrN,IAAQ,UAAU,QAAQiL,IAAO,IAAI,MAAMjL,IAAQ,IAAIA,IAAQ,IAAI,CAAC,GAAGC,IAAQ,GAAGA,IAAQD,GAAOC;AACxG,UAAAgL,EAAKhL,IAAQ,CAAC,IAAI,UAAUA,CAAK;AAEnC,QAAA7E,IAAUyT,EAAO,QAAQ,iCAAiC,CAACnS,GAAK2Q,CAAI,EAAE,OAAOpC,CAAI,CAAC;AAAA,MAC1F;AACQ,QAAA7P,IAAU9B,EAAA,IACL+T;AAGP,MAAAjS,EAAQ,MAAMA,EAAQ,OAAO0T,EAAO,KACpC1T,EAAQ,OAAOA,EAAQ,QAAQ0T,EAAO,MACtC1T,EAAQ,KAAKA,EAAQ,MAAM0T,EAAO,IAC9B1T,EAAQ,cAAc,OAAIA,EAAQ,YAAYA,EAAQ,aAAawT,KAAaE,EAAO;AAC3F,YAAMlQ,IAAeiQ,EAAO,QAAQ,gBAAgB;AACpD,UAAIE;AACJ,aAAI3T,EAAQ,aAAa,MAAM,QAAQsB,CAAG,IACxCqS,IAAYrS,EAAI,IAAI,CAAAlC,MAAK,GAAGY,EAAQ,SAAS,GAAGwD,CAAY,GAAGpE,CAAC,EAAE,IAElEuU,IAAY3T,EAAQ,YAAY,GAAGA,EAAQ,SAAS,GAAGwD,CAAY,GAAGlC,CAAG,KAAKA,GAEzEmS,EAAO,EAAEE,GAAW3T,CAAO;AAAA,IACnC;AACD,WAAIS,EAASuF,CAAG,IACd0N,EAAO,MAAM1N,IAEb0N,EAAO,OAAO1N,GAEhB0N,EAAO,KAAK5N,GACZ4N,EAAO,YAAYF,GACZE;AAAA,EACX;AAAA,EACE,IAAI;AACF,WAAO,KAAK,cAAc,KAAK,WAAW,UAAU,GAAG,SAAS;AAAA,EACpE;AAAA,EACE,SAAS;AACP,WAAO,KAAK,cAAc,KAAK,WAAW,OAAO,GAAG,SAAS;AAAA,EACjE;AAAA,EACE,oBAAoB5N,GAAI;AACtB,SAAK,QAAQ,YAAYA;AAAA,EAC7B;AAAA,EACE,mBAAmBA,GAAI;AACrB,QAAI9F,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,QAAI,CAAC,KAAK;AACR,kBAAK,OAAO,KAAK,mDAAmD,KAAK,SAAS,GAC3E;AAET,QAAI,CAAC,KAAK,aAAa,CAAC,KAAK,UAAU;AACrC,kBAAK,OAAO,KAAK,8DAA8D,KAAK,SAAS,GACtF;AAET,UAAMgG,IAAMhG,EAAQ,OAAO,KAAK,oBAAoB,KAAK,UAAU,CAAC,GAC9D4T,IAAc,KAAK,UAAU,KAAK,QAAQ,cAAc,IACxDC,IAAU,KAAK,UAAU,KAAK,UAAU,SAAS,CAAC;AACxD,QAAI7N,EAAI,kBAAkB,SAAU,QAAO;AAC3C,UAAM8N,IAAiB,CAAC1W,GAAGN,MAAM;AAC/B,YAAMiX,IAAY,KAAK,SAAS,iBAAiB,MAAM,GAAG3W,CAAC,IAAIN,CAAC,EAAE;AAClE,aAAOiX,MAAc,MAAMA,MAAc,KAAKA,MAAc;AAAA,IAC7D;AACD,QAAI/T,EAAQ,UAAU;AACpB,YAAMgU,IAAYhU,EAAQ,SAAS,MAAM8T,CAAc;AACvD,UAAIE,MAAc,OAAW,QAAOA;AAAA,IAC1C;AAGI,WAFI,QAAK,kBAAkBhO,GAAKF,CAAE,KAC9B,CAAC,KAAK,SAAS,iBAAiB,WAAW,KAAK,QAAQ,aAAa,CAAC,KAAK,QAAQ,2BACnFgO,EAAe9N,GAAKF,CAAE,MAAM,CAAC8N,KAAeE,EAAeD,GAAS/N,CAAE;AAAA,EAE9E;AAAA,EACE,eAAeA,GAAIoL,GAAU;AAC3B,UAAM2B,IAAWlS,GAAO;AACxB,WAAK,KAAK,QAAQ,MAIdF,EAASqF,CAAE,MAAGA,IAAK,CAACA,CAAE,IAC1BA,EAAG,QAAQ,CAAAhJ,MAAK;AACd,MAAI,KAAK,QAAQ,GAAG,QAAQA,CAAC,IAAI,KAAG,KAAK,QAAQ,GAAG,KAAKA,CAAC;AAAA,IAChE,CAAK,GACD,KAAK,cAAc,CAAAyP,MAAO;AACxB,MAAAsG,EAAS,QAAS,GACd3B,KAAUA,EAAS3E,CAAG;AAAA,IAChC,CAAK,GACMsG,MAXD3B,KAAUA,EAAU,GACjB,QAAQ,QAAS;AAAA,EAW9B;AAAA,EACE,cAActI,GAAMsI,GAAU;AAC5B,UAAM2B,IAAWlS,GAAO;AACxB,IAAIF,EAASmI,CAAI,MAAGA,IAAO,CAACA,CAAI;AAChC,UAAMqL,IAAY,KAAK,QAAQ,WAAW,CAAE,GACtCC,IAAUtL,EAAK,OAAO,CAAA5C,MAAOiO,EAAU,QAAQjO,CAAG,IAAI,KAAK,KAAK,SAAS,cAAc,gBAAgBA,CAAG,CAAC;AACjH,WAAKkO,EAAQ,UAIb,KAAK,QAAQ,UAAUD,EAAU,OAAOC,CAAO,GAC/C,KAAK,cAAc,CAAA3H,MAAO;AACxB,MAAAsG,EAAS,QAAS,GACd3B,KAAUA,EAAS3E,CAAG;AAAA,IAChC,CAAK,GACMsG,MARD3B,KAAUA,EAAU,GACjB,QAAQ,QAAS;AAAA,EAQ9B;AAAA,EACE,IAAIlL,GAAK;AAEP,QADKA,MAAKA,IAAM,KAAK,qBAAqB,KAAK,aAAa,KAAK,UAAU,SAAS,IAAI,KAAK,UAAU,CAAC,IAAI,KAAK,YAC7G,CAACA,EAAK,QAAO;AACjB,UAAMmO,IAAU,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,KAAK,GACjbhI,IAAgB,KAAK,YAAY,KAAK,SAAS,iBAAiB,IAAIrB,GAAaoH,IAAK;AAC5F,WAAOiC,EAAQ,QAAQhI,EAAc,wBAAwBnG,CAAG,CAAC,IAAI,MAAMA,EAAI,YAAa,EAAC,QAAQ,OAAO,IAAI,IAAI,QAAQ;AAAA,EAChI;AAAA,EACE,OAAO,iBAAiB;AACtB,QAAIhG,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE,GAChFkR,IAAW,UAAU,SAAS,IAAI,UAAU,CAAC,IAAI;AACrD,WAAO,IAAIsB,GAAKxS,GAASkR,CAAQ;AAAA,EACrC;AAAA,EACE,gBAAgB;AACd,QAAIlR,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE,GAChFkR,IAAW,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAImB;AACnF,UAAM+B,IAAoBpU,EAAQ;AAClC,IAAIoU,KAAmB,OAAOpU,EAAQ;AACtC,UAAMqU,IAAgBpW,EAAAC,IAAA,IACjB,KAAK,UACL8B,IAFiB;AAAA,MAIlB,SAAS;AAAA,IAEZ,IACKsU,IAAQ,IAAI9B,GAAK6B,CAAa;AACpC,YAAIrU,EAAQ,UAAU,UAAaA,EAAQ,WAAW,YACpDsU,EAAM,SAASA,EAAM,OAAO,MAAMtU,CAAO,IAErB,CAAC,SAAS,YAAY,UAAU,EACxC,QAAQ,CAAA1B,MAAK;AACzB,MAAAgW,EAAMhW,CAAC,IAAI,KAAKA,CAAC;AAAA,IACvB,CAAK,GACDgW,EAAM,WAAWpW,EAAA,IACZ,KAAK,WAEVoW,EAAM,SAAS,QAAQ;AAAA,MACrB,oBAAoBA,EAAM,mBAAmB,KAAKA,CAAK;AAAA,IACxD,GACGF,MACFE,EAAM,QAAQ,IAAIzO,GAAc,KAAK,MAAM,MAAMwO,CAAa,GAC9DC,EAAM,SAAS,gBAAgBA,EAAM,QAEvCA,EAAM,aAAa,IAAI3N,GAAW2N,EAAM,UAAUD,CAAa,GAC/DC,EAAM,WAAW,GAAG,KAAK,SAAUrU,GAAO;AACxC,eAAS6E,IAAQ,UAAU,QAAQV,IAAO,IAAI,MAAMU,IAAQ,IAAIA,IAAQ,IAAI,CAAC,GAAGC,IAAQ,GAAGA,IAAQD,GAAOC;AACxG,QAAAX,EAAKW,IAAQ,CAAC,IAAI,UAAUA,CAAK;AAEnC,MAAAuP,EAAM,KAAKrU,GAAO,GAAGmE,CAAI;AAAA,IAC/B,CAAK,GACDkQ,EAAM,KAAKD,GAAenD,CAAQ,GAClCoD,EAAM,WAAW,UAAUD,GAC3BC,EAAM,WAAW,iBAAiB,SAAS,QAAQ;AAAA,MACjD,oBAAoBA,EAAM,mBAAmB,KAAKA,CAAK;AAAA,IACxD,GACMA;AAAA,EACX;AAAA,EACE,SAAS;AACP,WAAO;AAAA,MACL,SAAS,KAAK;AAAA,MACd,OAAO,KAAK;AAAA,MACZ,UAAU,KAAK;AAAA,MACf,WAAW,KAAK;AAAA,MAChB,kBAAkB,KAAK;AAAA,IACxB;AAAA,EACL;AACA;AACA,MAAMC,KAAW/B,GAAK,eAAgB;AACtC+B,GAAS,iBAAiB/B,GAAK;AAER+B,GAAS;AACpBA,GAAS;AACRA,GAAS;AACAA,GAAS;AACPA,GAAS;AACrBA,GAAS;AACEA,GAAS;AACdA,GAAS;AAC3B,MAAM/X,IAAI+X,GAAS;AACJA,GAAS;AACIA,GAAS;AACVA,GAAS;AACbA,GAAS;AACVA,GAAS;AC30E/B,SAASC,GAAgBrX,GAAGL,GAAG;AAC7B,MAAI,EAAEK,aAAaL,GAAI,OAAM,IAAI,UAAU,mCAAmC;AAChF;ACFA,SAAS2X,GAAQhY,GAAG;AAClB;AAEA,SAAOgY,KAAwB,OAAO,UAArB,cAA2C,OAAO,OAAO,YAA1B,WAAqC,SAAUhY,GAAG;AAChG,WAAO,OAAOA;AAAA,EACf,IAAG,SAAUA,GAAG;AACf,WAAOA,KAAmB,OAAO,UAArB,cAA+BA,EAAE,gBAAgB,UAAUA,MAAM,OAAO,YAAY,WAAW,OAAOA;AAAA,EACtH,GAAKgY,GAAQhY,CAAC;AACd;ACPA,SAASiY,GAAY,GAAG7X,GAAG;AACzB,MAAgB4X,GAAQ,CAAC,KAArB,YAA0B,CAAC,EAAG,QAAO;AACzC,MAAI/X,IAAI,EAAE,OAAO,WAAW;AAC5B,MAAeA,MAAX,QAAc;AAChB,QAAIK,IAAIL,EAAE,KAAK,GAAGG,CAAc;AAChC,QAAgB4X,GAAQ1X,CAAC,KAArB,SAAwB,QAAOA;AACnC,UAAM,IAAI,UAAU,8CAA8C;AAAA,EACtE;AACE,SAAyB,OAAiB,CAAC;AAC7C;ACRA,SAAS4X,GAAc,GAAG;AACxB,MAAI5X,IAAI2X,GAAY,GAAG,QAAQ;AAC/B,SAAmBD,GAAQ1X,CAAC,KAArB,WAAyBA,IAAIA,IAAI;AAC1C;ACJA,SAAS6X,GAAkBlY,GAAGG,GAAG;AAC/B,WAASL,IAAI,GAAGA,IAAIK,EAAE,QAAQL,KAAK;AACjC,QAAI,IAAIK,EAAEL,CAAC;AACX,MAAE,aAAa,EAAE,cAAc,IAAI,EAAE,eAAe,IAAI,WAAW,MAAM,EAAE,WAAW,KAAK,OAAO,eAAeE,GAAGiY,GAAc,EAAE,GAAG,GAAG,CAAC;AAAA,EAC/I;AACA;AACA,SAASE,GAAanY,GAAGG,GAAGL,GAAG;AAC7B,SAAOK,KAAK+X,GAAkBlY,EAAE,WAAWG,CAAC,GAAiC,OAAO,eAAeH,GAAG,aAAa;AAAA,IACjH,UAAU;AAAA,EACX,CAAA,GAAGA;AACN;ACRA,IAAIoY,KAAM,CAAE,GACRC,KAAOD,GAAI,SACXE,KAAQF,GAAI;AAChB,SAASG,GAASvU,GAAK;AACrB,SAAAqU,GAAK,KAAKC,GAAM,KAAK,WAAW,CAAC,GAAG,SAAUxS,GAAQ;AACpD,QAAIA;AACF,eAASE,KAAQF;AACf,QAAI9B,EAAIgC,CAAI,MAAM,WAAWhC,EAAIgC,CAAI,IAAIF,EAAOE,CAAI;AAAA,EAG5D,CAAG,GACMhC;AACT;AAGA,IAAIwU,KAAqB,yCACrBC,KAAkB,SAAyBrV,GAAMoN,GAAKlN,GAAS;AACjE,MAAI4P,IAAM5P,KAAW,CAAE;AACvB,EAAA4P,EAAI,OAAOA,EAAI,QAAQ;AACvB,MAAI7P,IAAQ,mBAAmBmN,CAAG,GAC9BtK,IAAM,GAAG,OAAO9C,GAAM,GAAG,EAAE,OAAOC,CAAK;AAC3C,MAAI6P,EAAI,SAAS,GAAG;AAClB,QAAIwF,IAASxF,EAAI,SAAS;AAC1B,QAAI,OAAO,MAAMwF,CAAM,EAAG,OAAM,IAAI,MAAM,2BAA2B;AACrE,IAAAxS,KAAO,aAAa,OAAO,KAAK,MAAMwS,CAAM,CAAC;AAAA,EACjD;AACE,MAAIxF,EAAI,QAAQ;AACd,QAAI,CAACsF,GAAmB,KAAKtF,EAAI,MAAM;AACrC,YAAM,IAAI,UAAU,0BAA0B;AAEhD,IAAAhN,KAAO,YAAY,OAAOgN,EAAI,MAAM;AAAA,EACxC;AACE,MAAIA,EAAI,MAAM;AACZ,QAAI,CAACsF,GAAmB,KAAKtF,EAAI,IAAI;AACnC,YAAM,IAAI,UAAU,wBAAwB;AAE9C,IAAAhN,KAAO,UAAU,OAAOgN,EAAI,IAAI;AAAA,EACpC;AACE,MAAIA,EAAI,SAAS;AACf,QAAI,OAAOA,EAAI,QAAQ,eAAgB;AACrC,YAAM,IAAI,UAAU,2BAA2B;AAEjD,IAAAhN,KAAO,aAAa,OAAOgN,EAAI,QAAQ,YAAW,CAAE;AAAA,EACxD;AAGE,MAFIA,EAAI,aAAUhN,KAAO,eACrBgN,EAAI,WAAQhN,KAAO,aACnBgN,EAAI,UAAU;AAChB,QAAIyF,IAAW,OAAOzF,EAAI,YAAa,WAAWA,EAAI,SAAS,gBAAgBA,EAAI;AACnF,YAAQyF,GAAQ;AAAA,MACd,KAAK;AACH,QAAAzS,KAAO;AACP;AAAA,MACF,KAAK;AACH,QAAAA,KAAO;AACP;AAAA,MACF,KAAK;AACH,QAAAA,KAAO;AACP;AAAA,MACF,KAAK;AACH,QAAAA,KAAO;AACP;AAAA,MACF;AACE,cAAM,IAAI,UAAU,4BAA4B;AAAA,IACxD;AAAA,EACA;AACE,SAAOA;AACT,GACI0S,KAAS;AAAA,EACX,QAAQ,SAAgBxV,GAAMC,GAAOwV,GAASC,GAAQ;AACpD,QAAIC,IAAgB,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAAA,MACtF,MAAM;AAAA,MACN,UAAU;AAAA,IACX;AACD,IAAIF,MACFE,EAAc,UAAU,oBAAI,KAAM,GAClCA,EAAc,QAAQ,QAAQA,EAAc,QAAQ,YAAYF,IAAU,KAAK,GAAI,IAEjFC,MAAQC,EAAc,SAASD,IACnC,SAAS,SAASL,GAAgBrV,GAAM,mBAAmBC,CAAK,GAAG0V,CAAa;AAAA,EACjF;AAAA,EACD,MAAM,SAAc3V,GAAM;AAGxB,aAFI4V,IAAS,GAAG,OAAO5V,GAAM,GAAG,GAC5B6V,IAAK,SAAS,OAAO,MAAM,GAAG,GACzB5Y,IAAI,GAAGA,IAAI4Y,EAAG,QAAQ5Y,KAAK;AAElC,eADIE,IAAI0Y,EAAG5Y,CAAC,GACLE,EAAE,OAAO,CAAC,MAAM,MAAK,CAAAA,IAAIA,EAAE,UAAU,GAAGA,EAAE,MAAM;AACvD,UAAIA,EAAE,QAAQyY,CAAM,MAAM,EAAG,QAAOzY,EAAE,UAAUyY,EAAO,QAAQzY,EAAE,MAAM;AAAA,IAC7E;AACI,WAAO;AAAA,EACR;AAAA,EACD,QAAQ,SAAgB6C,GAAM;AAC5B,SAAK,OAAOA,GAAM,IAAI,EAAE;AAAA,EAC5B;AACA,GACI8V,KAAW;AAAA,EACb,MAAM;AAAA,EACN,QAAQ,SAAgB5V,GAAS;AAC/B,QAAI4J;AACJ,QAAI5J,EAAQ,gBAAgB,OAAO,YAAa,aAAa;AAC3D,UAAI/C,IAAIqY,GAAO,KAAKtV,EAAQ,YAAY;AACxC,MAAI/C,MAAG2M,IAAQ3M;AAAA,IACrB;AACI,WAAO2M;AAAA,EACR;AAAA,EACD,mBAAmB,SAA2B5D,GAAKhG,GAAS;AAC1D,IAAIA,EAAQ,gBAAgB,OAAO,YAAa,eAC9CsV,GAAO,OAAOtV,EAAQ,cAAcgG,GAAKhG,EAAQ,eAAeA,EAAQ,cAAcA,EAAQ,aAAa;AAAA,EAEjH;AACA,GAEI6V,KAAc;AAAA,EAChB,MAAM;AAAA,EACN,QAAQ,SAAgB7V,GAAS;AAC/B,QAAI4J;AACJ,QAAI,OAAO,UAAW,aAAa;AACjC,UAAIkM,IAAS,OAAO,SAAS;AAC7B,MAAI,CAAC,OAAO,SAAS,UAAU,OAAO,SAAS,QAAQ,OAAO,SAAS,KAAK,QAAQ,GAAG,IAAI,OACzFA,IAAS,OAAO,SAAS,KAAK,UAAU,OAAO,SAAS,KAAK,QAAQ,GAAG,CAAC;AAI3E,eAFIC,IAAQD,EAAO,UAAU,CAAC,GAC1BE,IAASD,EAAM,MAAM,GAAG,GACnBhZ,IAAI,GAAGA,IAAIiZ,EAAO,QAAQjZ,KAAK;AACtC,YAAIkZ,IAAMD,EAAOjZ,CAAC,EAAE,QAAQ,GAAG;AAC/B,YAAIkZ,IAAM,GAAG;AACX,cAAI3U,IAAM0U,EAAOjZ,CAAC,EAAE,UAAU,GAAGkZ,CAAG;AACpC,UAAI3U,MAAQtB,EAAQ,sBAClB4J,IAAQoM,EAAOjZ,CAAC,EAAE,UAAUkZ,IAAM,CAAC;AAAA,QAE/C;AAAA,MACA;AAAA,IACA;AACI,WAAOrM;AAAA,EACX;AACA,GAEIsM,KAAyB,MACzBC,KAAwB,WAAiC;AAC3D,MAAID,OAA2B,KAAM,QAAOA;AAC5C,MAAI;AACF,IAAAA,KAAyB,WAAW,eAAe,OAAO,iBAAiB;AAC3E,QAAIE,IAAU;AACd,WAAO,aAAa,QAAQA,GAAS,KAAK,GAC1C,OAAO,aAAa,WAAWA,CAAO;AAAA,EACvC,SAAQ1Z,GAAG;AACV,IAAAwZ,KAAyB;AAAA,EAC7B;AACE,SAAOA;AACT,GACIG,KAAe;AAAA,EACjB,MAAM;AAAA,EACN,QAAQ,SAAgBrW,GAAS;AAC/B,QAAI4J;AACJ,QAAI5J,EAAQ,sBAAsBmW,MAAyB;AACzD,UAAInQ,IAAM,OAAO,aAAa,QAAQhG,EAAQ,kBAAkB;AAChE,MAAIgG,MAAK4D,IAAQ5D;AAAA,IACvB;AACI,WAAO4D;AAAA,EACR;AAAA,EACD,mBAAmB,SAA2B5D,GAAKhG,GAAS;AAC1D,IAAIA,EAAQ,sBAAsBmW,QAChC,OAAO,aAAa,QAAQnW,EAAQ,oBAAoBgG,CAAG;AAAA,EAEjE;AACA,GAEIsQ,KAA2B,MAC3BC,KAA0B,WAAmC;AAC/D,MAAID,OAA6B,KAAM,QAAOA;AAC9C,MAAI;AACF,IAAAA,KAA2B,WAAW,eAAe,OAAO,mBAAmB;AAC/E,QAAIF,IAAU;AACd,WAAO,eAAe,QAAQA,GAAS,KAAK,GAC5C,OAAO,eAAe,WAAWA,CAAO;AAAA,EACzC,SAAQ1Z,GAAG;AACV,IAAA4Z,KAA2B;AAAA,EAC/B;AACE,SAAOA;AACT,GACIE,KAAiB;AAAA,EACnB,MAAM;AAAA,EACN,QAAQ,SAAgBxW,GAAS;AAC/B,QAAI4J;AACJ,QAAI5J,EAAQ,wBAAwBuW,MAA2B;AAC7D,UAAIvQ,IAAM,OAAO,eAAe,QAAQhG,EAAQ,oBAAoB;AACpE,MAAIgG,MAAK4D,IAAQ5D;AAAA,IACvB;AACI,WAAO4D;AAAA,EACR;AAAA,EACD,mBAAmB,SAA2B5D,GAAKhG,GAAS;AAC1D,IAAIA,EAAQ,wBAAwBuW,QAClC,OAAO,eAAe,QAAQvW,EAAQ,sBAAsBgG,CAAG;AAAA,EAErE;AACA,GAEIyQ,KAAc;AAAA,EAChB,MAAM;AAAA,EACN,QAAQ,SAAgBzW,GAAS;AAC/B,QAAI4J,IAAQ,CAAE;AACd,QAAI,OAAO,aAAc,aAAa;AACpC,UAAI,UAAU;AAEZ,iBAAS7M,IAAI,GAAGA,IAAI,UAAU,UAAU,QAAQA;AAC9C,UAAA6M,EAAM,KAAK,UAAU,UAAU7M,CAAC,CAAC;AAGrC,MAAI,UAAU,gBACZ6M,EAAM,KAAK,UAAU,YAAY,GAE/B,UAAU,YACZA,EAAM,KAAK,UAAU,QAAQ;AAAA,IAErC;AACI,WAAOA,EAAM,SAAS,IAAIA,IAAQ;AAAA,EACtC;AACA,GAEI8M,KAAU;AAAA,EACZ,MAAM;AAAA,EACN,QAAQ,SAAgB1W,GAAS;AAC/B,QAAI4J,GACA8M,IAAU1W,EAAQ,YAAY,OAAO,YAAa,cAAc,SAAS,kBAAkB;AAC/F,WAAI0W,KAAW,OAAOA,EAAQ,gBAAiB,eAC7C9M,IAAQ8M,EAAQ,aAAa,MAAM,IAE9B9M;AAAA,EACX;AACA,GAEInI,KAAO;AAAA,EACT,MAAM;AAAA,EACN,QAAQ,SAAgBzB,GAAS;AAC/B,QAAI4J;AACJ,QAAI,OAAO,UAAW,aAAa;AACjC,UAAIX,IAAW,OAAO,SAAS,SAAS,MAAM,iBAAiB;AAC/D,UAAIA,aAAoB;AACtB,YAAI,OAAOjJ,EAAQ,uBAAwB,UAAU;AACnD,cAAI,OAAOiJ,EAASjJ,EAAQ,mBAAmB,KAAM;AACnD;AAEF,UAAA4J,IAAQX,EAASjJ,EAAQ,mBAAmB,EAAE,QAAQ,KAAK,EAAE;AAAA,QACvE;AACU,UAAA4J,IAAQX,EAAS,CAAC,EAAE,QAAQ,KAAK,EAAE;AAAA,IAG7C;AACI,WAAOW;AAAA,EACX;AACA,GAEI+M,KAAY;AAAA,EACd,MAAM;AAAA,EACN,QAAQ,SAAgB3W,GAAS;AAE/B,QAAI4W,IAA2B,OAAO5W,EAAQ,4BAA6B,WAAWA,EAAQ,2BAA2B,IAAI,GAIzHiJ,IAAW,OAAO,UAAW,eAAe,OAAO,YAAY,OAAO,SAAS,YAAY,OAAO,SAAS,SAAS,MAAM,wDAAwD;AAGtL,QAAKA;AAEL,aAAOA,EAAS2N,CAAwB;AAAA,EAC5C;AACA,GAGIC,KAAa;AACjB,IAAI;AAEF,WAAS,QACTA,KAAa;AAEf,SAASna,GAAG;AAAA;AACZ,IAAIoa,KAAQ,CAAC,eAAe,UAAU,gBAAgB,kBAAkB,aAAa,SAAS;AACzFD,MAAYC,GAAM,OAAO,GAAG,CAAC;AAClC,SAASC,KAAc;AACrB,SAAO;AAAA,IACL,OAAOD;AAAA,IACP,mBAAmB;AAAA,IACnB,cAAc;AAAA,IACd,oBAAoB;AAAA,IACpB,sBAAsB;AAAA;AAAA,IAEtB,QAAQ,CAAC,cAAc;AAAA,IACvB,iBAAiB,CAAC,QAAQ;AAAA;AAAA;AAAA,IAI1B,yBAAyB,SAAiC1Z,GAAG;AAC3D,aAAOA;AAAA,IACb;AAAA,EACG;AACH;AACA,IAAI4Z,KAAuB,2BAAY;AACrC,WAASA,EAAQpQ,GAAU;AACzB,QAAI5G,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,IAAAwU,GAAgB,MAAMwC,CAAO,GAC7B,KAAK,OAAO,oBACZ,KAAK,YAAY,CAAE,GACnB,KAAK,KAAKpQ,GAAU5G,CAAO;AAAA,EAC/B;AACE,SAAO6U,GAAamC,GAAS,CAAC;AAAA,IAC5B,KAAK;AAAA,IACL,OAAO,SAAcpQ,GAAU;AAC7B,UAAI5G,IAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE,GAChFiX,IAAc,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACxF,WAAK,WAAWrQ,KAAY;AAAA,QAC1B,eAAe,CAAA;AAAA,MACvB,GACM,KAAK,UAAUqO,GAASjV,GAAS,KAAK,WAAW,CAAA,GAAI+W,IAAa,GAC9D,OAAO,KAAK,QAAQ,2BAA4B,YAAY,KAAK,QAAQ,wBAAwB,QAAQ,OAAO,IAAI,OACtH,KAAK,QAAQ,0BAA0B,SAAU3Z,GAAG;AAClD,eAAOA,EAAE,QAAQ,KAAK,GAAG;AAAA,MAC1B,IAIC,KAAK,QAAQ,uBAAoB,KAAK,QAAQ,sBAAsB,KAAK,QAAQ,qBACrF,KAAK,cAAc6Z,GACnB,KAAK,YAAYrB,EAAQ,GACzB,KAAK,YAAYC,EAAW,GAC5B,KAAK,YAAYQ,EAAY,GAC7B,KAAK,YAAYG,EAAc,GAC/B,KAAK,YAAYC,EAAW,GAC5B,KAAK,YAAYC,EAAO,GACxB,KAAK,YAAYjV,EAAI,GACrB,KAAK,YAAYkV,EAAS;AAAA,IAChC;AAAA,EACA,GAAK;AAAA,IACD,KAAK;AAAA,IACL,OAAO,SAAqBO,GAAU;AACpC,kBAAK,UAAUA,EAAS,IAAI,IAAIA,GACzB;AAAA,IACb;AAAA,EACA,GAAK;AAAA,IACD,KAAK;AAAA,IACL,OAAO,SAAgBC,GAAgB;AACrC,UAAI/N,IAAQ;AACZ,MAAK+N,MAAgBA,IAAiB,KAAK,QAAQ;AACnD,UAAIC,IAAW,CAAE;AAWjB,aAVAD,EAAe,QAAQ,SAAUE,GAAc;AAC7C,YAAIjO,EAAM,UAAUiO,CAAY,GAAG;AACjC,cAAIC,IAASlO,EAAM,UAAUiO,CAAY,EAAE,OAAOjO,EAAM,OAAO;AAC/D,UAAIkO,KAAU,OAAOA,KAAW,aAAUA,IAAS,CAACA,CAAM,IACtDA,MAAQF,IAAWA,EAAS,OAAOE,CAAM;AAAA,QACvD;AAAA,MACA,CAAO,GACDF,IAAWA,EAAS,IAAI,SAAU9Z,GAAG;AACnC,eAAO8L,EAAM,QAAQ,wBAAwB9L,CAAC;AAAA,MACtD,CAAO,GACG,KAAK,SAAS,cAAc,wBAA8B8Z,IACvDA,EAAS,SAAS,IAAIA,EAAS,CAAC,IAAI;AAAA,IACjD;AAAA,EACA,GAAK;AAAA,IACD,KAAK;AAAA,IACL,OAAO,SAA2BpR,GAAKuR,GAAQ;AAC7C,UAAInE,IAAS;AAEb,MADKmE,MAAQA,IAAS,KAAK,QAAQ,SAC9BA,MACD,KAAK,QAAQ,mBAAmB,KAAK,QAAQ,gBAAgB,QAAQvR,CAAG,IAAI,MAChFuR,EAAO,QAAQ,SAAUC,GAAW;AAClC,QAAIpE,EAAO,UAAUoE,CAAS,KAAGpE,EAAO,UAAUoE,CAAS,EAAE,kBAAkBxR,GAAKoN,EAAO,OAAO;AAAA,MAC1G,CAAO;AAAA,IACP;AAAA,EACA,CAAG,CAAC;AACJ,EAAG;AACH4D,GAAQ,OAAO;ACnXf;AAAA;AAAA;AAAA;AAAA;AAIO,MAAC,EAAC,GAAExa,GAAC,IAAEC,IAAsOe,KAAE,CAAAf,MAAYA,EAAE,YAAX,QAAmBE,KAAE,MAAI,SAAS,cAAc,EAAE,GAAEE,KAAE,CAACJ,GAAEM,GAAED,MAAI;A7BLxT,MAAAY;A6BKyT,QAAMhB,IAAED,EAAE,KAAK,YAAWW,IAAWL,MAAT,SAAWN,EAAE,OAAKM,EAAE;AAAK,MAAYD,MAAT,QAAW;AAAC,UAAMC,IAAEL,EAAE,aAAaC,GAAC,GAAGS,CAAC,GAAEH,IAAEP,EAAE,aAAaC,GAAG,GAACS,CAAC;AAAE,IAAAN,IAAE,IAAIN,GAAEO,GAAEE,GAAER,GAAEA,EAAE,OAAO;AAAA,EAAC,OAAK;AAAC,UAAMD,IAAEM,EAAE,KAAK,aAAYC,IAAED,EAAE,MAAKG,IAAEF,MAAIN;AAAE,QAAGQ,GAAE;AAAC,UAAIT;AAAE,OAAAkB,IAAAZ,EAAE,SAAF,QAAAY,EAAA,KAAAZ,GAASL,IAAGK,EAAE,OAAKL,GAAWK,EAAE,SAAX,WAAkBN,IAAEC,EAAE,UAAQM,EAAE,QAAMD,EAAE,KAAKN,CAAC;AAAA,IAAC;AAAC,QAAGA,MAAIY,KAAGH,GAAE;AAAC,UAAIR,IAAEK,EAAE;AAAK,aAAKL,MAAID,KAAG;AAAC,cAAMA,IAAEC,EAAE;AAAY,QAAAC,EAAE,aAAaD,GAAEW,CAAC,GAAEX,IAAED;AAAA,MAAC;AAAA,IAAC;AAAA,EAAC;AAAC,SAAOM;AAAC,GAAEsB,KAAE,CAAC3B,GAAED,GAAE,IAAEC,OAAKA,EAAE,KAAKD,GAAE,CAAC,GAAEC,IAAGc,KAAE,CAAA,GAAGe,KAAE,CAAC7B,GAAED,IAAEe,OAAId,EAAE,OAAKD,GAAEa,KAAE,CAAAZ,MAAGA,EAAE,MAAK+C,KAAE,CAAA/C,MAAG;A7BLtvB,MAAAiB;A6BKuvB,GAAAA,IAAAjB,EAAE,SAAF,QAAAiB,EAAA,KAAAjB,GAAS,IAAG;AAAI,MAAID,IAAEC,EAAE;AAAK,QAAM,IAAEA,EAAE,KAAK;AAAY,SAAKD,MAAI,KAAG;AAAC,UAAMC,IAAED,EAAE;AAAY,IAAAA,EAAE,OAAQ,GAACA,IAAEC;AAAA,EAAC;AAAC;ACLj2B;AAAA;AAAA;AAAA;AAAA;AAKA,MAAMD,KAAE,EAAC,WAAU,GAAE,OAAM,GAAE,UAAS,GAAE,mBAAkB,GAAE,OAAM,GAAE,SAAQ,EAAC,GAAEE,KAAE,OAAG,IAAI,OAAK,EAAC,iBAAgB,GAAE,QAAO,EAAC;AAAG,IAAA+a,KAAA,MAAO;AAAA,EAAC,YAAYjb,GAAE;AAAA,EAAE;AAAA,EAAA,IAAI,OAAM;AAAC,WAAO,KAAK,KAAK;AAAA,EAAI;AAAA,EAAC,KAAKA,GAAEE,GAAEK,GAAE;AAAC,SAAK,OAAKP,GAAE,KAAK,OAAKE,GAAE,KAAK,OAAKK;AAAA,EAAC;AAAA,EAAC,KAAKP,GAAEE,GAAE;AAAC,WAAO,KAAK,OAAOF,GAAEE,CAAC;AAAA,EAAC;AAAA,EAAC,OAAOF,GAAEE,GAAE;AAAC,WAAO,KAAK,OAAO,GAAGA,CAAC;AAAA,EAAC;AAAC;ACJ3S;AAAA;AAAA;AAAA;AAAA;AAIG,MAAMC,KAAE,CAACI,GAAEP,MAAI;A/BLlB,MAAAkB;A+BKmB,QAAMhB,IAAEK,EAAE;AAAK,MAAYL,MAAT,OAAW,QAAM;AAAG,aAAUK,KAAKL,EAAE,EAAAgB,IAAAX,EAAE,SAAF,QAAAW,EAAA,KAAAX,GAASP,GAAE,KAAIG,GAAEI,GAAEP,CAAC;AAAE,SAAQ;AAAA,GAAEC,KAAE,CAAAM,MAAG;AAAC,MAAIP,GAAEE;AAAE,KAAE;AAAC,SAAaF,IAAEO,EAAE,UAAd,OAAoB;AAAM,IAAAL,IAAEF,EAAE,MAAKE,EAAE,OAAOK,CAAC,GAAEA,IAAEP;AAAA,EAAC,UAAWE,KAAA,gBAAAA,EAAG,UAAP;AAAY,GAAEG,KAAE,CAAAE,MAAG;AAAC,WAAQP,GAAEA,IAAEO,EAAE,MAAKA,IAAEP,GAAE;AAAC,QAAIE,IAAEF,EAAE;AAAK,QAAYE,MAAT,OAAW,CAAAF,EAAE,OAAKE,IAAE,oBAAI;AAAA,aAAYA,EAAE,IAAIK,CAAC,EAAE;AAAM,IAAAL,EAAE,IAAIK,CAAC,GAAEE,GAAET,CAAC;AAAA,EAAC;AAAC;AAAE,SAASU,GAAEH,GAAE;AAAC,EAAS,KAAK,SAAd,UAAoBN,GAAE,IAAI,GAAE,KAAK,OAAKM,GAAEF,GAAE,IAAI,KAAG,KAAK,OAAKE;AAAC;AAAC,SAASD,GAAEC,GAAEP,IAAE,IAAGE,IAAE,GAAE;AAAC,QAAMG,IAAE,KAAK,MAAKK,IAAE,KAAK;AAAK,MAAYA,MAAT,UAAgBA,EAAE,SAAN,EAAW,KAAGV,EAAE,KAAG,MAAM,QAAQK,CAAC,EAAE,UAAQE,IAAEL,GAAEK,IAAEF,EAAE,QAAOE,IAAI,CAAAJ,GAAEE,EAAEE,CAAC,GAAE,EAAE,GAAEN,GAAEI,EAAEE,CAAC,CAAC;AAAA,MAAO,CAAMF,KAAN,SAAUF,GAAEE,GAAE,EAAE,GAAEJ,GAAEI,CAAC;AAAA,MAAQ,CAAAF,GAAE,MAAKI,CAAC;AAAC;AAAC,MAAME,KAAE,CAAAF,MAAG;A/BL9kB,MAAAW,GAAAC;A+BK+kB,EAAAZ,EAAE,QAAML,GAAE,WAAQgB,IAAAX,EAAE,SAAF,SAAAA,EAAE,OAAOD,MAAEa,IAAAZ,EAAE,SAAF,SAAAA,EAAE,OAAOG;AAAE;AAAE,MAAMM,WAAUhB,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK;AAAA,EAAM;AAAA,EAAC,KAAKO,GAAEP,GAAEE,GAAE;AAAC,UAAM,KAAKK,GAAEP,GAAEE,CAAC,GAAEG,GAAE,IAAI,GAAE,KAAK,cAAYE,EAAE;AAAA,EAAI;AAAA,EAAC,KAAKA,GAAEP,IAAE,IAAG;A/BLxwB,QAAAkB,GAAAC;A+BKywB,IAAAZ,MAAI,KAAK,gBAAc,KAAK,cAAYA,GAAEA,KAAEW,IAAA,KAAK,gBAAL,QAAAA,EAAA,cAAqBC,IAAA,KAAK,iBAAL,QAAAA,EAAA,aAAuBnB,MAAIG,GAAE,MAAKI,CAAC,GAAEN,GAAE,IAAI;AAAA,EAAE;AAAA,EAAC,SAASD,GAAE;AAAC,QAAGO,GAAE,KAAK,IAAI,EAAE,MAAK,KAAK,KAAKP,GAAE,IAAI;AAAA,SAAM;AAAC,YAAM,IAAE,CAAC,GAAG,KAAK,KAAK,IAAI;AAAE,QAAE,KAAK,IAAI,IAAEA,GAAE,KAAK,KAAK,KAAK,GAAE,MAAK,CAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,eAAc;AAAA,EAAA;AAAA,EAAE,cAAa;AAAA,EAAE;AAAA;ACCphC,IAAIkb,KAAO,MAGPC,KAAe,MAAM;AAAA;AAEzB,MAAMC,KAAc,IAAI,QAAQ,CAAChX,MAAQ;AACrC,EAAA+W,KAAe/W;AACnB,CAAC,GAGYiX,KAAc;AAAA,EACvB,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,EAMN,KAAKC,GAAiB;AAClB,IAAAC,GAAQD,CAAe;AAAA,EAC1B;AACL,GAWaC,KAAU,CAACD,MAAoB;AACxC,EAAAJ,KAAOI,GACPH,GAAaD,EAAI;AACrB,GAMaM,KAAW,oBAAI,OAMfC,KAAkB,MAAM;AACjC,EAAAD,GAAS,QAAQ,CAACE,GAASjN,MAAS;AAChC,KAAIA,EAAK,gBAAgB,MAASkN,GAAYlN,CAAI,MAAM,OACpD+M,GAAS,OAAO/M,CAAI;AAAA,EAEhC,CAAK;AACL;AAGA,YAAYgN,IAAiB,GAAK;AAElC,IAAIG,KAAc;AAGlB,MAAMC,KAAY,MAAM;AACpB,EAAAL,GAAS,QAAQ,CAACE,GAASjN,MAAS;AAChC,QAAIA,EAAK,eAAekN,GAAYlN,CAAI,GAAG;AACvC,YAAMqN,IAAcC,GAAiBL,EAAQ,MAAMA,EAAQ,OAAO;AAClE,MAAAjN,EAAK,SAASqN,CAAW;AAAA,IAC5B;AAAA,EACT,CAAK;AACL;AASA,SAASC,GAAiBrR,GAAM+K,GAAM;AAClC,MAAI,CAACyF;AACD,WAAO;AAGX,EAAIU,OAAgB,OAEhBV,GAAK,GAAG,mBAAmBW,EAAS,GAEpCX,GAAK,MAAM,GAAG,SAASW,EAAS,GAChCD,KAAc;AAGlB,QAAME,IAAcZ,GAAK,EAAExQ,GAAM+K,CAAI;AAErC,SAAI,OAAOqG,KAAgB,WAChBA,IAGJ;AACX;AAMA,MAAMH,KAAc,CAACK,MAAuB;AAExC,QAAMvN;AAAA;AAAA,IAA4DuN,EAAmB;AAAA;AACrF,MAAIvN,EAAK,SAASwN,GAAS,UAAW,QAAOxN,EAAK,QAAQ;AAC1D,MAAIA,EAAK,SAASwN,GAAS,MAAO,QAAOxN,EAAK,aAAaA,EAAK,WAAW,cAAc;AAIzF,MAHIA,EAAK,SAASwN,GAAS,YACvBxN,EAAK,SAASwN,GAAS,qBACvBxN,EAAK,SAASwN,GAAS,SACvBxN,EAAK,SAASwN,GAAS,QAAS,QAAOxN,EAAK,QAAQ;AACxD,QAAM,IAAI,MAAM,kBAAkB;AACtC;AAGA,MAAMyN,WAAsBC,GAAe;AAAA;AAAA,EAEvC,SAAS;AAAA,EAAE;AAAA;AAAA,EAGX,YAAY1N,GAAM;AACd,UAAMA,CAAI,GAEV,KAAK,QAAQ,IAEb,KAAK,OAAOA;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,UAAU/D,GAAMlH,GAAS;AACrB,QAAIiS,IAAOjS;AACX,IAAAgY,GAAS,IAAI,MAAM,EAAE,MAAA9Q,GAAM,SAAS+K,EAAI,CAAE,GAEtC,OAAOjS,KAAY,eACnBiS,IAAOjS,EAAO;AAGlB,UAAMsY,IAAcC,GAAiBrR,GAAM+K,CAAI;AAE/C,WAAI,KAAK,gBAAgB,MAASqG,MAAgB,UAAa,KAAK,UAAUA,IACnEM,KAGJN;AAAA,EACV;AAAA;AAAA,EAGD,eAAe;AACX,IAAAN,GAAS,OAAO,IAAI;AAAA,EACvB;AACL;AAGA,MAAMa,WAAkBH,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlC,OAAOxR,GAAMlH,GAAS;AAClB,WAAA4X,MAAA,QAAAA,GAAa,KAAK,MAAM;AACpB,WAAK,SAAS,KAAK,UAAU1Q,GAAMlH,CAAO,CAAC;AAAA,IACvD,IACe4Y;AAAAA,EACV;AACL;AAyCO,MAAME,KAAYC,GAAUF,EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzM5CG,EAAM,OAAOC,EAAU;AACvBD,EAAM,OAAOE,EAAO;AACpBF,EAAM,OAAOG,EAAe;AAC5BH,EAAM,OAAOI,EAAiB;AAE9B,MAAMC,KAAiB,MAEjBC,KAAiB,MAAM;AAC3B,MAAIC,IACF,SAAS,gBAAgB,QAAQ,UAAU,YAAYF;AAClD,SAAAE,IAAAA,EAAK,MAAM,GAAG,CAAC,GACfA;AACT;AAEAC,GACG,IAAIC,EAAgB,EACpB,IAAI5B,EAAW,EACf,KAAK;AAAA,EACJ,aAAa;AAAA,EACb,eAAe;AAAA,IACb,aAAa;AAAA,EACf;AAAA,EACA,WAAW;AAAA,IACT,IAAI;AAAA,MACF,aAAa3Z,EAAA,IACRwb;AAAA,IAEP;AAAA,IACA,IAAI;AAAA,MACF,aAAaxb,EAAA,IACRyb;AAAA,IACL;AAAA,EACF;AAEJ,CAAC;AAEHX,EAAM,OAAOM,IAAgB;AAC7BE,GAAQ,eAAeF,IAAgB;AAEvC,MAAMM,KAA0B,IAAI,iBAAiBC,EAAM;AAC3DD,GAAwB,QAAQ,SAAS,iBAAiB;AAAA,EACxD,YAAY;AAAA,EACZ,iBAAiB,CAAC,OAAO,MAAM;AACjC,CAAC;AAEM,SAASC,KAAS;AACvB,QAAMN,IAAOD,GAAe;AAE5B,EAAAN,EAAM,OAAOO,CAAI,GACjBC,GAAQ,eAAeD,CAAI;AAC7B;AAQO,SAASO,GAAwBC,GAA+B;AACjE,MAAA;AAEI,UAAAC,IAAgBhB,EAAM,OAAO;AACnC,IAAAA,EAAM,OAAOe,CAAM;AAEb,UAAAE,IADcjB,EAAM,WAAW,EACF,eAAe,IAAI;AAMlD,QAHJA,EAAM,OAAOgB,CAAa,GAGtBC,KAAkBA,MAAmB,MAAM;AAE7C,UAAIA,EAAe,SAAS,GAAG,KAAKA,EAAe,SAAS,GAAG;AACtD,eAAA;AAIT,UAAIA,EAAe,SAAS,MAAM,KAAKA,EAAe,SAAS,OAAO;AAC7D,eAAA;AAGL,UAAAA,EAAe,SAAS,MAAM;AACzB,eAAA;AAAA,IACT;AAII,UAAAC,IAAcH,EAAO,YAAY;AAErC,WAAAG,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,IAEpB,QAIF;AAAA,WACAvJ,GAAO;AAER,UAAAuJ,IAAcH,EAAO,YAAY;AAErC,WAAAG,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,KAC3BA,EAAY,WAAW,IAAI,IAEpB,QAIF;AAAA,EAAA;AAEX;;;;;;;AC3HA,IAAIC,KAAmB;AAEhB,MAAMC,KAAN,MAAMA,WAA6Bxa,EAAW;AAAA,EAkDnD,cAAc;AACN,UAAA,GAzCuC,KAAA,OAAA,MAMlB,KAAA,eAAA,GAGwB,KAAA,SAAA,IAGE,KAAA,WAAA,IAGD,KAAA,UAAA,IAWK,KAAA,eAAA,SAKH,KAAA,UAAA,WAGhB,KAAA,WAAA,IAQtCua,MACK,KAAA,cAAc,aAAaA,EAAgB,IAC3C,KAAA,WAAW,GAAG,KAAK,WAAW,WAC9B,KAAA,YAAY,GAAG,KAAK,WAAW;AAAA,EAAA;AAAA,EAGtC,gBAAgB;AACP,WAAAE,SAAY,KAAK,OAAO;AAAA,EAAA;AAAA,EAGjC,gBAAgB;AACP,WAAAA;AAAAA,EAAA;AAAA,EAGT,oBAAoB;AAClB,UAAM,kBAAkB;AAAA,EAAA;AAAA,EAG1B,qBAA2B;AACzB,KAAI,KAAK,eAAe,KAAK,KAAK,eAAe,MAC/C,QAAQ,KAAK,sCAAsC,GAIlD,CAAC,WAAW,aAAa,SAAS,iBAAiB,EAAE;AAAA,MACpD,KAAK;AAAA,IAAA,KAGP,QAAQ,KAAK,2CAA2C;AAAA,EAC1D;AAAA,EAGQ,aACRC,GACM;AACN,UAAM,aAAaA,CAAkB,GACrC,KAAK,mBAAmB;AAAA,EAAA;AAAA,EAGlB,WAAiB;AACnB,QAAA;AACF,MAAI,KAAK,SACP,KAAK,KAAK,cAAc;AAAA,QACtB,MAAM;AAAA,QACN,MAAM;AAAA,MAAA,CACiB,IAEzB,KAAK,KAAK,cAAc;AAAA,QACtB,MAAM;AAAA,QACN,MAAM;AAAA,MAAA,CACiB;AAAA,aAEpB3J,GAAO;AACN,cAAA,MAAM,mCAAmCA,CAAK;AAAA,IAAA;AAAA,EACxD;AAAA,EAGM,SAAe;AACjB,IAAA,KAAK,YAAY,KAAK,YAIrB,KAAA,SAAS,CAAC,KAAK,QACpB,KAAK,SAAS;AAAA,EAAA;AAAA,EAGR,cAAc1Q,GAA4B;AAC5C,IAAA,KAAK,YAAY,KAAK,YAItBA,EAAM,QAAQ,WAAWA,EAAM,QAAQ,SACzCA,EAAM,eAAe,GACrB,KAAK,OAAO;AAAA,EACd;AAAA,EAGM,YAAYA,GAAoB;AAClC,QAAA,KAAK,YAAY,KAAK,SAAS;AACjC,MAAAA,EAAM,eAAe;AACrB;AAAA,IAAA;AAGF,SAAK,OAAO;AAAA,EAAA;AAAA,EAGN,gBAAgB;AlCtK1B,QAAAvC,GAAAC;AkCuKW,WAAA0c;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,cAKG,KAAK,QAAQ;AAAA,yBACF,KAAK,SAAS;AAAA,yBACd,KAAK,MAAM;AAAA,yBACX,KAAK,QAAQ;AAAA,qBACjBE,GAAU7c,IAAA,KAAK,cAAL,OAAAA,IAAkB,KAAK,OAAO,CAAC;AAAA,4BAClC6c,EAAU,KAAK,eAAe,CAAC;AAAA,qBACtC,KAAK,QAAQ;AAAA,kBAChB,KAAK,WAAW;AAAA,oBACd,KAAK,aAAa;AAAA,UAC5B,KAAK,UACHF;AAAAA;AAAAA,6BAEgB1c,IAAA,KAAK,qBAAL,OAAAA,IAAyBnB,EAAE,SAAS,CAAC;AAAA;AAAA;AAAA,uBAIrD6d;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,0BAOc,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOT,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA,oBAIf;AAAA;AAAA,kCAEc,KAAK,eAAe;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAM5C,gBAAgB;AACf,WAAAA;AAAAA;AAAAA;AAAAA;AAAAA,cAIG,KAAK,SAAS;AAAA,2BACD,KAAK,QAAQ;AAAA;AAAA,uBAEjB,CAAC,KAAK,MAAM;AAAA;AAAA;AAAA,YAGvB,KAAK,cAAe,CAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAMtB,gBAAgC;AAC/B,WAAAA;AAAAA;AAAAA,SAEFG,GAAa,IAAI,KAAK,YAAY,EAAE,CAAC;AAAA;AAAA,UAEpC,KAAK,cAAe,CAAA;AAAA,UACpBA,GAAa,IAAI,KAAK,YAAY,EAAE,CAAC;AAAA;AAAA;AAAA,EAAA;AAAA,EAK7C,kBAAkB;AACT,WAAAH;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,aAAa;AAAA,MACxB,qBAAqB,KAAK;AAAA,MAC1B,uBAAuB,KAAK;AAAA,MAC5B,sBAAsB,KAAK;AAAA,MAC3B,iBAAiB,KAAK,SAAS;AAAA,MAC/B,iBAAiB,KAAK,SAAS;AAAA,MAC/B,wBAAwB,KAAK,iBAAiB;AAAA,MAC9C,yBAAyB,KAAK,iBAAiB;AAAA,MAC/C,CAAC,cAAc,KAAK,OAAO,EAAE,GAAG,KAAK;AAAA,MACrC,wBAAwB,KAAK;AAAA,IAAA,CAC9B,CAAC;AAAA,UACA,KAAK,cAAc,CAAC,IAAI,KAAK,cAAe,CAAA;AAAA;AAAA;AAAA,EAAA;AAItD;AAxOkBic,GAAA,SAASK,EAAUC,EAAM;AADpC,IAAMC,KAANP;AAUuBQ,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAVfF,GAUiB,WAAA,MAAA;AAM5BC,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAffF,GAgBX,WAAA,cAAA;AAG4CC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAnB/BF,GAmBiC,WAAA,QAAA;AAGAC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAtB/BF,GAsBiC,WAAA,UAAA;AAGAC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAzB/BF,GAyBiC,WAAA,SAAA;AAGhBC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA5BfF,GA4BiB,WAAA,SAAA;AAGAC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA/BfF,GA+BiB,WAAA,kBAAA;AAKAC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GApCfF,GAoCiB,WAAA,cAAA;AAKAC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAzCfF,GAyCiB,WAAA,SAAA;AAGCC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA5ChBF,GA4CkB,WAAA,UAAA;AAI7BC,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAQ,WAAW,mBAAoB,CAAA;AAAA,GA/C9CF,GAgDX,WAAA,iBAAA;;;;;;ACjBmB,IAAAG,KAArB,cAA4CH,GAAqB;AAAA,EAC/D,SAAS;AACP,WAAO,KAAK,gBAAgB;AAAA,EAAA;AAEhC;AAJqBG,KAArBF,GAAA;AAAA,EADCG,EAAc,kBAAkB;AAAA,GACZD,EAAA;;;;;;;AC3BA,IAAAE,KAArB,cAAiDpb,EAAW;AAAA,EAA5D,cAAA;AAAA,UAAA,GAAA,SAAA,GAK0C,KAAA,YAAA,QAKgB,KAAA,UAAA,WAIxD,KAAiB,yBAAyB,KAAK,kBAAkB,KAAK,IAAI,GAC1E,KAAiB,oBAAoB,KAAK,aAAa,KAAK,IAAI;AAAA,EAAA;AAAA,EAEhE,oBAA0B;AACxB,UAAM,kBAAkB,GACnB,KAAA,iBAAiB,cAAc,KAAK,iBAAiB;AAAA,EAAA;AAAA,EAG5D,uBAA6B;AAC3B,UAAM,qBAAqB,GACtB,KAAA,oBAAoB,cAAc,KAAK,iBAAiB,GACxD,KAAA,WAAW,QAAQ,CAAaqb,MAAA;AACzB,MAAAA,EAAA,oBAAoB,cAAc,KAAK,sBAAsB;AAAA,IAAA,CACxE;AAAA,EAAA;AAAA,EAGO,aACRX,GAGM;AACN,SAAK,gBAAgB;AAAA,EAAA;AAAA,EAGf,eAAqB;AAC3B,SAAK,gBAAgB;AAAA,EAAA;AAAA,EAGf,kBAAwB;AAC9B,SAAK,WAAW,QAAQ,CAACW,GAAWlV,MAAU;AAC5C,MAAAkV,EAAU,UAAU,KAAK,SACzBA,EAAU,WAAWlV,MAAU,KAAK,WAAW,SAAS,GAE9CkV,EAAA,oBAAoB,cAAc,KAAK,sBAAsB,GAC7DA,EAAA,iBAAiB,cAAc,KAAK,sBAAsB;AAAA,IAAA,CACrE;AAAA,EAAA;AAAA,EAGK,kBAAkBhb,GAA0B;AAC5C,UAAAib,IAAkBjb,EAAM,OAAO;AAEjC,IAAA,KAAK,cAAc,UAChB,KAAA,WAAW,QAAQ,CAAagb,MAAA;AACnC,MAAIC,MAAoBD,KACtBA,EAAU,gBAAgB,QAAQ;AAAA,IACpC,CACD;AAAA,EACH;AAAA,EAGF,SAAS;AACA,WAAAZ;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,mBAAmB,oBAAoB,KAAK,OAAO,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA,EAAA;AAK3E;AAzEqB6c,GAYH,SAASP,EAAUC,EAAM;AAVxBE,GAAA;AAAA,EADhBO,GAAsB,EAAE,UAAU,mBAAoB,CAAA;AAAA,GADpCH,GAEF,WAAA,cAAA,CAAA;AAGWJ,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GALPG,GAKS,WAAA,aAAA,CAAA;AAKAJ,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAVPG,GAUS,WAAA,WAAA,CAAA;AAVTA,KAArBJ,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClBC,EAAA;AC/BrB,IAAII,KAAa,OAAO,UAAU,YAAY,UAAU,OAAO,WAAW,UAAU,QCEhFC,KAAW,OAAO,QAAQ,YAAY,QAAQ,KAAK,WAAW,UAAU,MAGxEC,KAAOF,MAAcC,MAAY,SAAS,aAAa,EAAG,GCH1DE,KAASD,GAAK,QCAdE,KAAc,OAAO,WAGrBC,KAAiBD,GAAY,gBAO7BE,KAAuBF,GAAY,UAGnCG,KAAiBJ,KAASA,GAAO,cAAc;AASnD,SAASK,GAAU7b,GAAO;AACxB,MAAI8b,IAAQJ,GAAe,KAAK1b,GAAO4b,EAAc,GACjDG,IAAM/b,EAAM4b,EAAc;AAE9B,MAAI;AACF,IAAA5b,EAAM4b,EAAc,IAAI;AACxB,QAAII,IAAW;AAAA,EAChB,SAAQrf,GAAG;AAAA,EAAA;AAEZ,MAAIwJ,IAASwV,GAAqB,KAAK3b,CAAK;AAC5C,SAAIgc,MACEF,IACF9b,EAAM4b,EAAc,IAAIG,IAExB,OAAO/b,EAAM4b,EAAc,IAGxBzV;AACT;AC1CA,IAAIsV,KAAc,OAAO,WAOrBE,KAAuBF,GAAY;AASvC,SAASQ,GAAejc,GAAO;AAC7B,SAAO2b,GAAqB,KAAK3b,CAAK;AACxC;ACdA,IAAIkc,KAAU,iBACVC,KAAe,sBAGfP,KAAiBJ,KAASA,GAAO,cAAc;AASnD,SAASY,GAAWpc,GAAO;AACzB,SAAIA,KAAS,OACJA,MAAU,SAAYmc,KAAeD,KAEtCN,MAAkBA,MAAkB,OAAO5b,CAAK,IACpD6b,GAAU7b,CAAK,IACfic,GAAejc,CAAK;AAC1B;ACDA,SAASqc,GAAarc,GAAO;AAC3B,SAAOA,KAAS,QAAQ,OAAOA,KAAS;AAC1C;ACtBA,IAAIsc,KAAY;AAmBhB,SAASC,GAASvc,GAAO;AACvB,SAAO,OAAOA,KAAS,YACpBqc,GAAarc,CAAK,KAAKoc,GAAWpc,CAAK,KAAKsc;AACjD;ACjBA,SAASE,GAASC,GAAOC,GAAU;AAKjC,WAJI1W,IAAQ,IACR2W,IAASF,KAAS,OAAO,IAAIA,EAAM,QACnCtW,IAAS,MAAMwW,CAAM,GAElB,EAAE3W,IAAQ2W;AACf,IAAAxW,EAAOH,CAAK,IAAI0W,EAASD,EAAMzW,CAAK,GAAGA,GAAOyW,CAAK;AAErD,SAAOtW;AACT;ACKA,IAAIyW,KAAU,MAAM,SCdhBC,KAAcrB,KAASA,GAAO,YAAY,QAC1CsB,KAAiBD,KAAcA,GAAY,WAAW;AAU1D,SAASE,GAAa/c,GAAO;AAE3B,MAAI,OAAOA,KAAS;AAClB,WAAOA;AAET,MAAI4c,GAAQ5c,CAAK;AAEf,WAAOwc,GAASxc,GAAO+c,EAAY,IAAI;AAEzC,MAAIR,GAASvc,CAAK;AAChB,WAAO8c,KAAiBA,GAAe,KAAK9c,CAAK,IAAI;AAEvD,MAAImG,IAAUnG,IAAQ;AACtB,SAAQmG,KAAU,OAAQ,IAAInG,KAAU,SAAa,OAAOmG;AAC9D;ACXA,SAAS6W,GAAShd,GAAO;AACvB,SAAOA,KAAS,OAAO,KAAK+c,GAAa/c,CAAK;AAChD;ACbA,SAASid,GAAYR,GAAOC,GAAUQ,GAAaC,GAAW;AAO5D,WANInX,IAAQ,IACR2W,IAASF,KAAS,OAAO,IAAIA,EAAM,QAKhC,EAAEzW,IAAQ2W;AACf,IAAAO,IAAcR,EAASQ,GAAaT,EAAMzW,CAAK,GAAGA,GAAOyW,CAAK;AAEhE,SAAOS;AACT;AChBA,SAASE,GAAejc,GAAQ;AAC9B,SAAO,SAASI,GAAK;AACnB,WAAOJ,KAAU,OAAO,SAAYA,EAAOI,CAAG;AAAA,EAC/C;AACH;ACRA,IAAI8b,KAAkB;AAAA;AAAA,EAEpB,GAAQ;AAAA,EAAM,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAC1E,GAAQ;AAAA,EAAM,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAC1E,GAAQ;AAAA,EAAM,GAAQ;AAAA,EACtB,GAAQ;AAAA,EAAM,GAAQ;AAAA,EACtB,GAAQ;AAAA,EAAM,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAChD,GAAQ;AAAA,EAAM,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAChD,GAAQ;AAAA,EAAM,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAChD,GAAQ;AAAA,EAAM,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAChD,GAAQ;AAAA,EAAM,GAAQ;AAAA,EACtB,GAAQ;AAAA,EAAM,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAC1E,GAAQ;AAAA,EAAM,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAC1E,GAAQ;AAAA,EAAM,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAChD,GAAQ;AAAA,EAAM,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAAK,GAAQ;AAAA,EAChD,GAAQ;AAAA,EAAM,GAAQ;AAAA,EAAK,GAAQ;AAAA,EACnC,GAAQ;AAAA,EAAM,GAAQ;AAAA,EACtB,GAAQ;AAAA,EAAM,GAAQ;AAAA,EACtB,GAAQ;AAAA;AAAA,EAER,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EACzC,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EACzC,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACxD,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACxD,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACxD,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACvE,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACvE,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACxD,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACxD,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACxD,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACvE,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACvE,GAAU;AAAA,EAAM,GAAU;AAAA,EAC1B,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EACzC,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACvE,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACvE,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACxD,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACxD,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EACzC,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EACzC,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EACzC,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EACzC,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACxD,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACxD,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EACzC,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EACzC,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACtF,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EAAK,GAAU;AAAA,EACtF,GAAU;AAAA,EAAM,GAAU;AAAA,EAC1B,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EACzC,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EACzC,GAAU;AAAA,EAAM,GAAU;AAAA,EAAK,GAAU;AAAA,EACzC,GAAU;AAAA,EAAM,GAAU;AAAA,EAC1B,GAAU;AAAA,EAAM,GAAU;AAAA,EAC1B,GAAU;AAAA,EAAM,GAAU;AAC5B,GAUIC,KAAeF,GAAeC,EAAe,GChE7CE,KAAU,+CAGVC,KAAoB,mBACpBC,KAAwB,mBACxBC,KAAsB,mBACtBC,KAAeH,KAAoBC,KAAwBC,IAG3DE,KAAU,MAAMD,KAAe,KAM/BE,KAAc,OAAOD,IAAS,GAAG;AAoBrC,SAASE,GAAOhT,GAAQ;AACtB,SAAAA,IAASkS,GAASlS,CAAM,GACjBA,KAAUA,EAAO,QAAQyS,IAASD,EAAY,EAAE,QAAQO,IAAa,EAAE;AAChF;ACzCA,IAAIE,KAAc;AASlB,SAASC,GAAWlT,GAAQ;AAC1B,SAAOA,EAAO,MAAMiT,EAAW,KAAK,CAAE;AACxC;ACXA,IAAIE,KAAmB;AASvB,SAASC,GAAepT,GAAQ;AAC9B,SAAOmT,GAAiB,KAAKnT,CAAM;AACrC;ACXA,IAAIqT,KAAgB,mBAChBX,KAAoB,mBACpBC,KAAwB,mBACxBC,KAAsB,mBACtBC,KAAeH,KAAoBC,KAAwBC,IAC3DU,KAAiB,mBACjBC,KAAe,6BACfC,KAAgB,wBAChBC,KAAiB,gDACjBC,KAAqB,mBACrBC,KAAe,gKACfC,KAAe,6BACfC,KAAa,kBACbC,KAAeN,KAAgBC,KAAiBC,KAAqBC,IAGrEI,KAAS,QACTC,KAAU,MAAMF,KAAe,KAC/BhB,KAAU,MAAMD,KAAe,KAC/BoB,KAAW,QACXC,KAAY,MAAMZ,KAAiB,KACnCa,KAAU,MAAMZ,KAAe,KAC/Ba,KAAS,OAAOf,KAAgBS,KAAeG,KAAWX,KAAiBC,KAAeK,KAAe,KACzGS,KAAS,4BACTC,KAAa,QAAQxB,KAAU,MAAMuB,KAAS,KAC9CE,KAAc,OAAOlB,KAAgB,KACrCmB,KAAa,mCACbC,KAAa,sCACbC,KAAU,MAAMd,KAAe,KAC/Be,KAAQ,WAGRC,KAAc,QAAQT,KAAU,MAAMC,KAAS,KAC/CS,KAAc,QAAQH,KAAU,MAAMN,KAAS,KAC/CU,KAAkB,QAAQf,KAAS,0BACnCgB,KAAkB,QAAQhB,KAAS,0BACnCiB,KAAWV,KAAa,KACxBW,KAAW,MAAMpB,KAAa,MAC9BqB,KAAY,QAAQP,KAAQ,QAAQ,CAACJ,IAAaC,IAAYC,EAAU,EAAE,KAAK,GAAG,IAAI,MAAMQ,KAAWD,KAAW,MAClHG,KAAa,oDACbC,KAAa,oDACbC,KAAQJ,KAAWD,KAAWE,IAC9BI,KAAU,QAAQ,CAACpB,IAAWM,IAAYC,EAAU,EAAE,KAAK,GAAG,IAAI,MAAMY,IAGxEE,KAAgB,OAAO;AAAA,EACzBb,KAAU,MAAMP,KAAU,MAAMW,KAAkB,QAAQ,CAACd,IAASU,IAAS,GAAG,EAAE,KAAK,GAAG,IAAI;AAAA,EAC9FG,KAAc,MAAME,KAAkB,QAAQ,CAACf,IAASU,KAAUE,IAAa,GAAG,EAAE,KAAK,GAAG,IAAI;AAAA,EAChGF,KAAU,MAAME,KAAc,MAAME;AAAA,EACpCJ,KAAU,MAAMK;AAAA,EAChBK;AAAA,EACAD;AAAA,EACAlB;AAAA,EACAqB;AACF,EAAE,KAAK,GAAG,GAAG,GAAG;AAShB,SAASE,GAAaxV,GAAQ;AAC5B,SAAOA,EAAO,MAAMuV,EAAa,KAAK,CAAE;AAC1C;AC1CA,SAASE,GAAMzV,GAAQ5H,GAASsd,GAAO;AAIrC,SAHA1V,IAASkS,GAASlS,CAAM,GACxB5H,IAA8BA,GAE1BA,MAAY,SACPgb,GAAepT,CAAM,IAAIwV,GAAaxV,CAAM,IAAIkT,GAAWlT,CAAM,IAEnEA,EAAO,MAAM5H,CAAO,KAAK,CAAE;AACpC;AC3BA,IAAI2b,KAAS,QAGT4B,KAAS,OAAO5B,IAAQ,GAAG;AAS/B,SAAS6B,GAAiBvP,GAAU;AAClC,SAAO,SAASrG,GAAQ;AACtB,WAAOmS,GAAYsD,GAAMzC,GAAOhT,CAAM,EAAE,QAAQ2V,IAAQ,EAAE,CAAC,GAAGtP,GAAU,EAAE;AAAA,EAC3E;AACH;ACEA,IAAIwP,KAAYD,GAAiB,SAASva,GAAQya,GAAM5a,GAAO;AAC7D,SAAOG,KAAUH,IAAQ,MAAM,MAAM4a,EAAK,YAAa;AACzD,CAAC;ACzBM,MAAMC,KAAc,cCAdC,KAAmB,CAACC,MAAyB;AACxD,QAAMC,IAAS,QACTC,IACJD,EAAO,eACNA,EAAO,aAAa,UAAaA,EAAO,SAAS,iBAClD,wBAAwB,SAAS,aACjC,aAAa,cAAc,WAEvBrG,IAAUoG,EAAQ,YAAoB,QAEtCG,IAAe,IAAI,cAAc;AACvC,EAAAA,EAAa,QAAQvG,CAAM,GAEvBsG,IACF,SAAS,qBAAqB,CAAC,GAAG,SAAS,oBAAoBC,CAAY,IAEpEvG,EAAA,QAAQ,CAAC,MAAW;AACnB,UAAAwG,IAAQ,SAAS,cAAc,OAAO,GACtCC,IAASJ,EAAe;AAC9B,IAAII,MAAU,UACND,EAAA,aAAa,SAASC,CAAK,GAEnCD,EAAM,cAAc,EAAE,SACb,SAAA,KAAK,YAAYA,CAAK;AAAA,EAAA,CAChC;AAEL;;;;;;ACaqB,IAAAE,KAArB,cAAgDxhB,EAAW;AAAA,EAMzD,mBAAmB;AACjB,WAAAihB,GAAiB,IAAI,GACd;AAAA,EAAA;AAAA,EAGT,IAAI,YAAY;AACd,WAAO,KAAK,KAAK,KAAK,KAAKH,GAAU,KAAK,KAAK;AAAA,EAAA;AAAA,EAGjD,IAAI,cAAc;AACT,WAAA,WAAW,KAAK,KAAK;AAAA,EAAA;AAAA,EAG9B,SAAS;AACA,WAAArG;AAAAA,OACJG,GAAa,KAAK,OAAO,CAAC;AAAA,WACtB,KAAK,SAAS;AAAA;AAAA,cAEXrc,EAAKyiB,IAAa,EAAE,CAAC,cAAc,KAAK,OAAO,EAAE,GAAG,KAAK,SAAS,CAAC;AAAA;AAAA,QAEzE,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,eAKH,IAAI,KAAK,SAAS,EAAE;AAAA,qBACd,KAAK,WAAW;AAAA,gBACrB,KAAK,WAAW;AAAA;AAAA;AAAA,QAGxBpG,GAAa,KAAK,OAAO,CAAC;AAAA;AAAA,EAAA;AAGlC;AAvCqB4G,GAIH,SAAS,CAAC3G,EAAUC,EAAM,GAAGD,EAAU4G,EAAgB,CAAC;AAH5DzG,GAAA;AAAA,EAAXC,EAAS;AAAA,GADSuG,GACP,WAAA,WAAA,CAAA;AACAxG,GAAA;AAAA,EAAXC,EAAS;AAAA,GAFSuG,GAEP,WAAA,SAAA,CAAA;AAFOA,KAArBxG,GAAA;AAAA,EADCG,EAAc,uBAAuB;AAAA,GACjBqG,EAAA;;;;;;;ACYA,IAAAE,KAArB,cAAyC1hB,EAAW;AAAA,EAApD,cAAA;AAAA,UAAA,GAAA,SAAA,GAa4C,KAAA,OAAA,MAWQ,KAAA,QAAA,UAWI,KAAA,UAAA,SAUf,KAAA,UAAA,IAEmB,KAAA,cAAA,IAMjD,KAAQ,gBAAgB,IACxB,KAAQ,iBAAiB,IAIlC,KAAQ,kBAAkB,MAAM;AAC9B,WAAK,iBAAiB,IACtB,KAAK,gBAAgB,IACrB,KAAK,KAAK,UAAU;AAAA,IACtB,GAEA,KAAQ,mBAAmB,MAAM;AAC/B,WAAK,iBAAiB,IACtB,KAAK,gBAAgB,IACrB,KAAK,KAAK,WAAW;AAAA,IACvB,GAEQ,KAAA,cAAc,CAACK,MAAiB;AACtC,MAAI,KAAK,eACP,KAAK,KAAK,aAAa,EAAE,eAAeA,GAAO;AAAA,IAEnD;AAAA,EAAA;AAAA,EAEQ,iBAAiBshB,GAA2B;AAClD,WAAI,CAACA,KAAY,CAACA,EAAS,KAAA,IAAe,KACnCA,EACJ,OACA,MAAM,GAAG,EACT,OAAO,CAAQZ,MAAAA,EAAK,SAAS,CAAC,EAC9B,IAAI,OAAQA,EAAK,OAAO,CAAC,CAAC,EAC1B,KAAK,EAAE,EACP,YAAY,EACZ,MAAM,GAAG,CAAC;AAAA,EAAA;AAAA,EAGP,qBACNa,GAC0C;AAC1C,YAAQA,GAAM;AAAA,MACZ,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT;AACS,eAAA;AAAA,IAAA;AAAA,EACX;AAAA,EAGM,cAAc;AACpB,WAAI,CAAC,KAAK,OAAO,KAAK,gBAAsBC,IAErCpH;AAAAA;AAAAA,gBAEKlc,EAAK,eAAe,gBAAgB,KAAK,IAAI,EAAE,CAAC;AAAA,gBAChD,KAAK,SAAS,KAAK,SACvB,UAAU,KAAK,KAAK,eAAe,KAAK,MAAM,QAC9C,EAAE;AAAA;AAAA,cAEAoc,EAAU,KAAK,GAAG,CAAC;AAAA,cACnB,KAAK,GAAG;AAAA;AAAA,gBAEN,KAAK,eAAe;AAAA,iBACnB,KAAK,gBAAgB;AAAA;AAAA,EAAA;AAAA,EAI5B,iBAAiB;AACvB,UAAMmH,IAAkB,KAAK,iBAAiB,KAAK,QAAQ;AACvD,WAACA,IAEErH;AAAAA;AAAAA,gBAEKlc,EAAK,oBAAoB,qBAAqB,KAAK,IAAI,EAAE,CAAC;AAAA;AAAA,qBAErDoc,EAAU,KAAK,SAAS,cAAc,KAAK,QAAQ,EAAE,CAAC;AAAA,UACjEmH,CAAe;AAAA;AAAA,QAPQ;AAAA,EAOR;AAAA,EAKf,aAAa;AACZ,WAAArH;AAAAA;AAAAA,gBAEKlc,EAAK,gBAAgB,iBAAiB,KAAK,IAAI,EAAE,CAAC;AAAA;AAAA,qBAE7Coc,EAAU,KAAK,SAAS,aAAa,CAAC;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAMjD,iBAAiB;AAChB,WAAAF;AAAAA;AAAAA,gBAEKlc,EAAK,oBAAoB,qBAAqB,KAAK,IAAI,EAAE,CAAC;AAAA;AAAA,qBAErDoc,EAAU,KAAK,SAAS,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAQ5C,gBAAgB;AACtB,WAAI,CAAC,KAAK,WAAW,CAAC,KAAK,iBAAuBkH,IAE3CpH;AAAAA;AAAAA,gBAEKlc,EAAK,mBAAmB,oBAAoB,KAAK,IAAI,EAAE,CAAC;AAAA;AAAA,qBAEnDoc,EAAU,KAAK,SAAS,gBAAgB,CAAC;AAAA;AAAA,iBAE7C,KAAK,qBAAqB,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAM3C,gBAAgB;AACtB,QAAI,KAAK,WAAW,KAAK,kBAAkB,KAAK,YAAY;AAC1D,aAAO,KAAK,cAAc;AAG5B,YAAQ,KAAK,SAAS;AAAA,MACpB,KAAK;AACH,eAAI,KAAK,OAAO,CAAC,KAAK,gBACb,KAAK,YAAY,IACf,KAAK,WACP,KAAK,eAAe,IAEpB,KAAK,eAAe;AAAA,MAE/B,KAAK;AACH,eAAO,KAAK,oBAAoB,KAAK,eAAe;AAAA,MACtD,KAAK;AACH,eAAO,KAAK,WAAW;AAAA,MACzB;AACE,eAAO,KAAK,eAAe;AAAA,IAAA;AAAA,EAC/B;AAAA,EAGF,SAAS;AACP,UAAMoH,IAAcxjB;AAAA,MAClB;AAAA,MACA,WAAW,KAAK,IAAI;AAAA,MACpB,WAAW,KAAK,KAAK;AAAA,MACrB,WAAW,KAAK,OAAO;AAAA,MACvB;AAAA,QACE,uBAAuB,KAAK;AAAA,QAC5B,mBAAmB,KAAK,WAAW,KAAK;AAAA,QACxC,iBAAiB,KAAK;AAAA,MAAA;AAAA,IAE1B;AAEO,WAAAkc;AAAAA;AAAAA,gBAEKsH,CAAW;AAAA;AAAA,eAEZpH,EAAU,KAAK,cAAc,WAAW,MAAS,CAAC;AAAA,mBAC9CA,EAAU,KAAK,cAAc,IAAI,MAAS,CAAC;AAAA,iBAC7C,KAAK,WAAW;AAAA,mBACd,CAAC,MAAqB;AAC/B,MAAI,KAAK,gBAAgB,EAAE,QAAQ,WAAW,EAAE,QAAQ,SACtD,EAAE,eAAe,GACjB,KAAK,YAAY,CAAC;AAAA,IACpB,CACD;AAAA,UACC,KAAK,cAAe,CAAA;AAAA;AAAA;AAAA,EAAA;AAI9B;AAvOqB+G,GAwDH,SAAS7G,EAAUC,EAAM;AA3CZE,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAbRyG,GAaU,WAAA,QAAA,CAAA;AAWA1G,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAxBRyG,GAwBU,WAAA,SAAA,CAAA;AAWA1G,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAnCRyG,GAmCU,WAAA,WAAA,CAAA;AAEjB1G,GAAA;AAAA,EAAXC,EAAS;AAAA,GArCSyG,GAqCP,WAAA,OAAA,CAAA;AAEA1G,GAAA;AAAA,EAAXC,EAAS;AAAA,GAvCSyG,GAuCP,WAAA,OAAA,CAAA;AAEA1G,GAAA;AAAA,EAAXC,EAAS;AAAA,GAzCSyG,GAyCP,WAAA,YAAA,CAAA;AAEA1G,GAAA;AAAA,EAAXC,EAAS;AAAA,GA3CSyG,GA2CP,WAAA,SAAA,CAAA;AAEiB1G,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA7CRyG,GA6CU,WAAA,WAAA,CAAA;AAEe1G,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GA/CvByG,GA+CyB,WAAA,eAAA,CAAA;AAEhB1G,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAjDPyG,GAiDS,WAAA,SAAA,CAAA;AAEA1G,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAnDPyG,GAmDS,WAAA,UAAA,CAAA;AAEX1G,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GArDYN,GAqDF,WAAA,iBAAA,CAAA;AACA1G,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAtDYN,GAsDF,WAAA,kBAAA,CAAA;AAtDEA,KAArB1G,GAAA;AAAA,EADCG,EAAc,eAAe;AAAA,GACTuG,EAAA;;;;;;;ACJA,IAAAO,KAArB,cAA8CjiB,EAAW;AAAA,EAAzD,cAAA;AAAA,UAAA,GAAA,SAAA,GAgB4C,KAAA,OAAA,MAWe,KAAA,SAAA,SAGf,KAAA,MAAA,GAIxC,KAAA,YAAA,IAI6B,KAAA,sBAAA,IAyCvB,KAAA,sBAAsB,CAACK,MAAiB;AAC9C,MAAI,KAAK,uBACP,KAAK,KAAK,sBAAsB,EAAE,eAAeA,GAAO;AAAA,IAE5D;AAAA,EAAA;AAAA,EAnCA,oBAAoB;AAClB,UAAM,kBAAkB,GACnB,KAAA,eAAe,KAAK,MAAM;AAC7B,WAAK,oBAAoB;AAAA,IAAA,CAC1B;AAAA,EAAA;AAAA,EAGH,eAAe;A/DtGjB,QAAAvC;A+DuGI,SAAK,oBAAoB;AAEzB,UAAMokB,KAAOpkB,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc;AAC5C,IAAIokB,KACGA,EAAA,iBAAiB,cAAc,MAAM;AACxC,WAAK,oBAAoB,GACzB,KAAK,cAAc;AAAA,IAAA,CACpB;AAAA,EACH;AAAA,EAGF,QAAQC,GAA2D;AACjE,UAAM,QAAQA,CAAiB,IAG7BA,EAAkB,IAAI,QAAQ,KAC9BA,EAAkB,IAAI,MAAM,KAC5BA,EAAkB,IAAI,KAAK,MAE3B,KAAK,oBAAoB;AAAA,EAC3B;AAAA,EASM,wBAAwBC,GAAqBC,GAAoB;AACnE,QAAAD,KAAe,EAAU,QAAAP;AAEvB,UAAAS,IAAc,KAAK,YACrB,IAAID,IAAa,KAAK,GAAG,KACzB,IAAID,CAAW,IACbG,IACJ,KAAK,iBACL3lB,EAAE,+BAA+B;AAAA,MAC/B,OAAOwlB;AAAA,IAAA,CACR;AAEI,WAAA3H;AAAAA;AAAAA;AAAAA,gBAGKlc;AAAA,MACN;AAAA,MACA,2BAA2B,KAAK,IAAI;AAAA,MACpC;AAAA,QACE,uCAAuC,KAAK;AAAA,MAAA;AAAA,IAE/C,CAAA;AAAA,eACMoc,EAAU,KAAK,sBAAsB,WAAW,MAAS,CAAC;AAAA,mBACtDA,EAAU,KAAK,sBAAsB,IAAI,MAAS,CAAC;AAAA,qBACjD4H,CAAS;AAAA,iBACb,KAAK,mBAAmB;AAAA,mBACtB,CAACzlB,MAAqB;AAC/B,MACE,KAAK,wBACJA,EAAE,QAAQ,WAAWA,EAAE,QAAQ,SAEhCA,EAAE,eAAe,GACjB,KAAK,oBAAoBA,CAAC;AAAA,IAC5B,CACD;AAAA,UACCwlB,CAAW;AAAA;AAAA;AAAA,EAAA;AAAA,EAKX,sBAAsB;AAC5B,SAAK,QAAQ,QAAQ,CAACE,GAAQrc,MAAU;AAC/B,MAAAqc,EAAA,aAAa,QAAQ,KAAK,IAAI,GAEjC,KAAK,WAAW,WAClBA,EAAO,MAAM;AAAA,QACX;AAAA,QACA;AAAA,MACF,GACAA,EAAO,MAAM;AAAA,QACX;AAAA,QACA;AAAA,MACF,GACAA,EAAO,MAAM,SAAS,OAAO,KAAK,QAAQ,SAASrc,CAAK,GAEpDA,IAAQ,IACVqc,EAAO,MAAM,aAAa,oCAE1BA,EAAO,MAAM,aAAa,OAI5BA,EAAO,MAAM,aAAa,IAC1BA,EAAO,MAAM,SAAS,KAGpBrc,KAAS,KAAK,MAChBqc,EAAO,MAAM,UAAU,SAEvBA,EAAO,MAAM,UAAU;AAAA,IACzB,CACD;AAAA,EAAA;AAAA,EAGH,SAAS;AACD,UAAAH,IAAa,KAAK,QAAQ,QAC1BD,IAAc,KAAK,IAAI,GAAGC,IAAa,KAAK,GAAG,GAE/CN,IAAcxjB;AAAA,MAClB;AAAA,MACA,iBAAiB,KAAK,MAAM;AAAA,MAC5B,iBAAiB,KAAK,IAAI;AAAA,IAC5B;AAEO,WAAAkc;AAAAA;AAAAA;AAAAA,gBAGKsH,CAAW;AAAA;AAAA,qBAENpH;AAAAA,MACX,KAAK,SACH,YAAY0H,CAAU,UAAUA,MAAe,IAAI,MAAM,EAAE;AAAA,IAAA,CAC9D;AAAA;AAAA;AAAA;AAAA,UAIC,KAAK,wBAAwBD,GAAaC,CAAU,CAAC;AAAA;AAAA;AAAA,EAAA;AAI/D;AAzLqBJ,GA8CH,SAASpH,EAAUC,EAAM;AA5CjCE,GAAA;AAAA,EADPO,GAAsB,EAAE,SAAS,GAAM,CAAA;AAAA,GADrB0G,GAEX,WAAA,WAAA,CAAA;AAcqBjH,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAhBRgH,GAgBU,WAAA,QAAA,CAAA;AAWAjH,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GA3BRgH,GA2BU,WAAA,UAAA,CAAA;AAGDjH,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA9BPgH,GA8BS,WAAA,OAAA,CAAA;AAG0BjH,GAAA;AAAA,EAArDC,EAAS,EAAE,MAAM,SAAS,WAAW,aAAc,CAAA;AAAA,GAjCjCgH,GAiCmC,WAAA,aAAA,CAAA;AAKtDjH,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,SAAS,WAAW,uBAAwB,CAAA;AAAA,GArC3CgH,GAsCnB,WAAA,uBAAA,CAAA;AAGYjH,GAAA;AAAA,EAAXC,EAAS;AAAA,GAzCSgH,GAyCP,WAAA,SAAA,CAAA;AAG+BjH,GAAA;AAAA,EAA1CC,EAAS,EAAE,WAAW,iBAAkB,CAAA;AAAA,GA5CtBgH,GA4CwB,WAAA,iBAAA,CAAA;AA5CxBA,KAArBjH,GAAA;AAAA,EADCG,EAAc,qBAAqB;AAAA,GACf8G,EAAA;;;;;;;ACsBA,IAAAQ,KAArB,cAAwCziB,EAAW;AAAA,EAAnD,cAAA;AAAA,UAAA,GAAA,SAAA,GAIgC,KAAA,OAAA,WAKA,KAAA,OAAA,MAMM,KAAA,OAAA,IAEpC,KAAQ,kBAAkB,IAC1B,KAAQ,kBAAkB;AAAA,EAAA;AAAA,EAIhB,aACR0a,GACM;AACN,UAAM,aAAaA,CAAkB,GACrC,KAAK,2BAA2B,GAEhC,KAAK,kBAAkB,KAAK,YAAY,KAAK,IAAI,GACjD,KAAK,mBAAmB,GACxB,KAAK,eAAe;AAAA,EAAA;AAAA,EAGZ,QACRA,GACM;AACN,UAAM,QAAQA,CAAkB,GAE5BA,EAAmB,IAAI,MAAM,MAC/B,KAAK,kBAAkB,KAAK,YAAY,KAAK,IAAI,GACjD,KAAK,eAAe,IAGlBA,EAAmB,IAAI,MAAM,KAC/B,KAAK,2BAA2B,GAG9BA,EAAmB,IAAI,MAAM,KAC/B,KAAK,aAAa;AAAA,EACpB;AAAA,EAGM,6BAAmC;AACzC,IAAI,KAAK,QACF,KAAA,aAAa,QAAQ,QAAQ,GAC7B,KAAA,aAAa,aAAa,QAAQ,MAElC,KAAA,aAAa,QAAQ,KAAK,GAC/B,KAAK,gBAAgB,WAAW;AAAA,EAClC;AAAA,EAGM,eAAqB;AACvB,IAAA,KAAK,QAAQ,OAAO,KAAK,QAAS,YAAY,KAAK,KAAK,KAAK,MAAM,MACrE,QAAQ,KAAK,iCAAiC;AAAA,EAChD;AAAA,EAGM,qBAA2B;AAC7B,QAAA;AACE,UAAA,CAAC,KAAK,WAAY;AAEhB,YAAAgI,IAAW,KAAK,WAAW;AAAA,QAC/B;AAAA,MACF;AAEA,UAAI,CAACA,EAAU;AAEN,MAAAA,EAAA,iBAAiB,cAAc,MAAM;AAC5C,aAAK,eAAe,GACpB,KAAK,cAAc;AAAA,MAAA,CACpB;AAAA,aACM3R,GAAO;AACN,cAAA,KAAK,mCAAmCA,CAAK;AAAA,IAAA;AAAA,EACvD;AAAA,EAGM,iBAAuB;AACzB,QAAA;AACE,UAAA,CAAC,KAAK,WAAY;AAEhB,YAAA2R,IAAW,KAAK,WAAW;AAAA,QAC/B;AAAA,MACF;AAEA,UAAI,CAACA,GAAU;AACb,aAAK,kBAAkB;AACvB;AAAA,MAAA;AAGI,YAAAC,IAAmBD,EAAS,iBAAiB;AAC9C,WAAA,kBAAkBC,EAAiB,SAAS,GAE7CA,EAAiB,SAAS,KAC5BA,EAAiB,CAAC,EAAE;AAAA,QAClB;AAAA,QACA,KAAK,gBAAgB,SAAS;AAAA,MAChC;AAAA,aAEK5R,GAAO;AACN,cAAA,KAAK,+BAA+BA,CAAK,GACjD,KAAK,kBAAkB;AAAA,IAAA;AAAA,EACzB;AAAA,EAGM,YAAY6Q,GAAyB;AACpC,WAAAA,MAAS,OAAO,KAAK;AAAA,EAAA;AAAA,EAGtB,aAAa;AACnB,WAAI,KAAK,OACAnH;AAAAA;AAAAA;AAAAA;AAAAA,kBAIK,KAAK,IAAI;AAAA,uBACJ,KAAK,eAAe;AAAA;AAAA,UAKhCA;AAAAA,EAAA;AAAA,EAGT,SAAS;AACD,UAAAmI,IAAU,KAAK,QAAQ,KAAK;AAE3B,WAAAnI;AAAAA;AAAAA;AAAAA,gBAGKlc;AAAA,MACN;AAAA,MACA,UAAU,KAAK,IAAI;AAAA,MACnB,UAAU,KAAK,IAAI;AAAA,MACnBqkB,KAAW;AAAA,IAAA,CACZ;AAAA;AAAA,YAEGA,IAAU,KAAK,WAAW,IAAIf,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAMjD;AAzJqBY,GAoBH,SAAS5H,EAAUC,EAAM;AAhB7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAJSwH,GAIP,WAAA,QAAA,CAAA;AAKAzH,GAAA;AAAA,EAAXC,EAAS;AAAA,GATSwH,GASP,WAAA,QAAA,CAAA;AAGAzH,GAAA;AAAA,EAAXC,EAAS;AAAA,GAZSwH,GAYP,WAAA,QAAA,CAAA;AAGiBzH,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAfRwH,GAeU,WAAA,QAAA,CAAA;AAfVA,KAArBzH,GAAA;AAAA,EADCG,EAAc,cAAc;AAAA,GACRsH,EAAA;;;;;;;AC7CrB,MAAMI,KAAc;AAAA,EAClB,OAAO;AAAA,EACP,MAAM;AAAA,EACN,UAAU;AAAA,EACV,SAAS;AAAA,EACT,UAAU;AACZ;AAuDqB,IAAAC,KAArB,cAAyC9iB,EAAW;AAAA,EAApD,cAAA;AAAA,UAAA,GAAA,SAAA,GASuC,KAAA,UAAA,SAMS,KAAA,SAAA,QAI3B,KAAA,mBAAA;AAAA,EAAA;AAAA,EAOT,aACR0a,GAGM;AjEnHV,QAAA5c,GAAAC;AiEoHQ,KAAAD,IAAA,KAAK,eAAL,QAAAA,EAAiB,YACfC,IAAA,KAAK,eAAL,QAAAA,EAAiB,UAAU,KAAK,YAAY,YACzC,KAAA,WAAW,QAAQ,CAAWmjB,MAAA;AACzB,MAAAA,EAAA,aAAa,WAAW,UAAU;AAAA,IAAA,CAC3C,IAEI,KAAA,WAAW,QAAQ,CAAWA,MAAA;AACzB,MAAAA,EAAA,aAAa,WAAW,SAAS;AAAA,IAAA,CAC1C,IAID,KAAK,cAAc,CAAC,KAAK,WAAW,UAAU,KAAK,oBAChD,KAAA,gBAAgB,MAAM,UAAU;AAAA,EACvC;AAAA,EAGM,eAAe;AACrB,SAAK,KAAK,WAAW;AAAA,EAAA;AAAA,EAGvB,SAAS;AjEzIX,QAAApjB;AiE0IU,UAAAilB,IAAOF,GAAY,KAAK,OAAO;AAEjC,WAAA,KAAK,WAAW,UACXhB,IAEFpH;AAAAA;AAAAA;AAAAA,kBAGOlc,EAAK,WAAW,KAAK,OAAO,EAAE,CAAC;AAAA;AAAA;AAAA,uBAG1BA,EAAK,UAAU,WAAW,KAAK,OAAO,EAAE,CAAC;AAAA;AAAA,gBAEhD,KAAK,QAAQwkB,IACXtI;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,8BAMY,KAAK,QAAQsI,CAAI;AAAA;AAAA,8BAG7BtI,wCAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAU/C,KAAK,YACHA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,8BAUc,KAAK,YAAY;AAAA,kCACd3c,IAAA,KAAK,qBAAL,OAAAA,IAAyBob,GAAU,OAAO,CAAC;AAAA;AAAA,oBAG5D2I,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAMvB;AA3GqBiB,GAwBH,SAASjI,EAAUC,EAAM;AAtBGE,GAAA;AAAA,EAA3CO,GAAsB,EAAE,MAAM,UAAW,CAAA;AAAA,GAFvBuH,GAEyB,WAAA,cAAA,CAAA;AAEjB9H,GAAA;AAAA,EAA1B7E,GAAM,kBAAkB;AAAA,GAJN2M,GAIQ,WAAA,mBAAA,CAAA;AAKf9H,GAAA;AAAA,EAAXC,EAAS;AAAA,GATS6H,GASP,WAAA,WAAA,CAAA;AAGiB9H,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAZR6H,GAYU,WAAA,aAAA,CAAA;AAGA9H,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAfR6H,GAeU,WAAA,UAAA,CAAA;AAI7B9H,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAlBP6H,GAmBnB,WAAA,oBAAA,CAAA;AAG4B9H,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtBP6H,GAsBS,WAAA,QAAA,CAAA;AAtBTA,KAArB9H,GAAA;AAAA,EADCG,EAAc,eAAe;AAAA,GACT2H,EAAA;;;;;;;ACzCA,IAAAE,KAArB,cAAiDhjB,EAAW;AAAA,EAA5D,cAAA;AAAA,UAAA,GAAA,SAAA,GAQoB,KAAA,MAAA,uBAEsB,KAAA,WAAA,IAIa,KAAA,UAAA;AAAA,EAAA;AAAA,EAIrD,SAAS;AACA,WAAAya;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,mBAAmB;AAAA,MAC9B,6BAA6B,KAAK,YAAY;AAAA,IAAA,CAC/C,CAAC;AAAA,UACA,KAAK,OACHkc;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,uBAMW,KAAK,IAAI;AAAA,yBACPE,EAAU,KAAK,MAAM,CAAC;AAAA,sBACzBA;AAAAA,MACJ,KAAK,kBAAA,IAAsB,KAAK,MAAM;AAAA,IACvC,CAAA;AAAA,4BACW,KAAK,QAAQ;AAAA;AAAA;AAAA,gBAI7BF;AAAAA;AAAAA,oBAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAeV,oBAA6B;AAC/B,WAAC,KAAK,OAEH,KAAK,WAAW,UAAa,KAAK,KAAK,WAAW,MAAM,IAFxC;AAAA,EAEwC;AAEnE;AA/DqBuI,GAgBH,SAASnI,EAAUC,EAAM;AAd7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAFS+H,GAEP,WAAA,QAAA,CAAA;AAIAhI,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS+H,GAMP,WAAA,UAAA,CAAA;AAEAhI,GAAA;AAAA,EAAXC,EAAS;AAAA,GARS+H,GAQP,WAAA,OAAA,CAAA;AAEiBhI,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAVR+H,GAUU,WAAA,YAAA,CAAA;AAIchI,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAdtB+H,GAcwB,WAAA,WAAA,CAAA;AAdxBA,KAArBhI,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClB6H,EAAA;;;;;;;ACZA,IAAAC,KAArB,cAA6CjjB,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAUwC,KAAA,UAAA,UAGA,KAAA,SAAA,IAMtC,KAAQ,eAAsC,CAAC;AAAA,EAAA;AAAA,EAGvC,iBAAiB;AAKjB,UAAA0U,IAJY,KAAK,cAAc,iBAAiB;AAAA,MACpD,SAAS;AAAA,IACV,CAAA,EAAE,CAAC,EAEoB,UAAU,EAAI;AACtC,WAAAA,EAAM,OAAO,aAENA;AAAA,EAAA;AAAA,EAGD,mBAAyB;AAC/B,IAAI,KAAK,oBACP,aAAa,KAAK,gBAAgB,GAG/B,KAAA,mBAAmB,OAAO,WAAW,MAAM;AAC9C,WAAK,uBAAuB;AAAA,OAC3B,EAAE;AAAA,EAAA;AAAA,EAGC,yBAA+B;AACrC,UAAMwO,IAAQ,MAAM;AAAA,MAClB,KAAK,YAAY,iBAAiB,EAAE,SAAS,GAAM,CAAA;AAAA,IAAA,EACnD;AAAA,MACA,CAACC,MAAkCA,aAAcH;AAAA,IACnD;AAOA,KAHEE,EAAM,WAAW,KAAK,aAAa,UACnCA,EAAM,KAAK,CAACE,GAAMjd,MAAUid,MAAS,KAAK,aAAajd,CAAK,CAAC,OAI/D,KAAK,eAAe+c,GAEdA,EAAA,QAAQ,CAACE,GAAMjd,MAAU;AACvB,YAAAkd,IAASld,MAAU+c,EAAM,SAAS;AAExC,UAAI,KAAK,UAAU/c,MAAU,KAAK,CAACkd,GAAQ;AACzC,QAAAD,EAAK,MAAM,UAAU;AACrB;AAAA,MAAA;AAEA,QAAAA,EAAK,MAAM,UAAU;AAGvB,MAAAA,EAAK,gBAAgB,YAAY,KAAK,YAAY,UAAU,GAC5DA,EAAK,UAAU,KAAK,SAChBC,IACGD,EAAA,aAAa,gBAAgB,MAAM,IAExCA,EAAK,gBAAgB,cAAc,GAEhCA,EAAA,gBAAgB,YAAYC,CAAM;AAEjC,YAAAC,IAAYF,EAAK,cAAc,oBAAoB;AACrD,MAAA,CAACC,KAAU,CAACC,KACTF,EAAA,OAAO,KAAK,gBAAgB;AAAA,IACnC,CACD;AAAA,EAAA;AAAA,EAGH,SAAS;AACA,WAAA3I;AAAAA;AAAAA;AAAAA,sBAGWE,EAAU,KAAK,SAAS,KAAK,EAAE;AAAA,2BAC1BA,EAAU,KAAK,cAAc,KAAK,EAAE;AAAA,iBAC9Cpc,EAAK,YAAY,CAAC;AAAA;AAAA,+BAEJ,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAQpD;AArGqB0kB,GACH,SAASpI,EAAUC,EAAM;AAE1BE,GAAA;AAAA,EAAd7E,GAAM,MAAM;AAAA,GAHM8M,GAGJ,WAAA,eAAA,CAAA;AAEkBjI,GAAA;AAAA,EAAhC7E,GAAM,wBAAwB;AAAA,GALZ8M,GAKc,WAAA,iBAAA,CAAA;AAKLjI,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAVPgI,GAUS,WAAA,WAAA,CAAA;AAGCjI,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAbRgI,GAaU,WAAA,UAAA,CAAA;AAI7BjI,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAQ,WAAW,kBAAmB,CAAA;AAAA,GAhBrCgI,GAiBnB,WAAA,kBAAA,CAAA;AAjBmBA,KAArBjI,GAAA;AAAA,EADCG,EAAc,mBAAmB;AAAA,GACb8H,EAAA;;;;;;ACTd,SAASM,GACdC,GAC2C;AAAA,EAC3C,MAAMC,UAAwBD,EAAY;AAAA,IAA1C,cAAA;AAAA,YAAA,GAAA,SAAA,GACoC,KAAA,eAAA,MAEO,KAAA,eAAA,YACoB,KAAA,iBAAA,IACb,KAAA,mBAAA;AAAA,IAAA;AAAA,IAGhD,iBAAiB;AACR,aAAA/I;AAAAA;AAAAA,gBAEGlc;AAAA,QACN;AAAA,QACA,aAAa,KAAK,YAAY;AAAA,QAC9B,aAAa,KAAK,YAAY;AAAA,QAC9B;AAAA,UACE,oBAAoB,KAAK;AAAA,UACzB,uBAAuB,KAAK;AAAA,QAAA;AAAA,MAC9B,CACD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKWoc,EAAU,KAAK,YAAY,CAAe;AAAA,oBAC1C,KAAK,UAAU,KAAK,YAAY,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAA;AAAA,IASzC,UAAUlW,GAA4B;AAC5C,cAAQA,GAAM;AAAA,QACZ,KAAK;AACH,iBAAO,mBAAmB,KAAK,iBAAiB,SAAS,MAAM;AAAA,QACjE,KAAK;AACH,iBAAO,iBAAiB,KAAK,iBAAiB,SAAS,MAAM;AAAA,QAC/D,KAAK;AACH,iBAAO,SAAS,KAAK,iBAAiB,SAAS,MAAM;AAAA,QACvD;AACE,iBAAO,eAAe,KAAK,iBAAiB,SAAS,MAAM;AAAA,MAAA;AAAA,IAC/D;AAAA,EACF;AA5CYuW,SAAAA,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GADNwI,EACQ,WAAA,cAAA,GACAzI,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GAFNwI,EAEQ,WAAA,UAAA,GACAzI,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GAHNwI,EAGQ,WAAA,cAAA,GACgCzI,GAAA;AAAA,IAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,EAAA,GAJtCwI,EAIwC,WAAA,gBAAA,GACfzI,GAAA;AAAA,IAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,EAAA,GALvBwI,EAKyB,WAAA,kBAAA,GACjBzI,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GANNwI,EAMQ,WAAA,YAAA,GAyCPA;AACT;;;;;;ACvDO,SAASC,GACdF,GAC4C;AAAA,EAC5C,MAAMG,UAAyBH,EAAY;AAAA,IAA3C,cAAA;AAAA,YAAA,GAAA,SAAA,GAEE,KAAO,WAAW,IAElB,KAAgB,YAAY;AAAA,IAAA;AAAA,IAE5B,IAAI,eAAmC;AAC/B,YAAA,IAAI,MAAM,qCAAqC;AAAA,IAAA;AAAA,IAGvC,MAAMpjB,GAA8B;AAClD,MAAI,KAAK,YAAY,CAAC,KAAK,iBAIvB,KAAK,iBAAiB,OACnB,KAAA,aAAa,MAAMA,CAAO,IAE/B,YAAY,UAAU,MAAM,MAAM,MAAM,CAACA,CAAO,CAAC;AAAA,IACnD;AAAA,IAGc,OAAa;AACrB,YAAAwjB,IAAe,KAAK,gBAAgB;AAC1C,MAAIA,MAAiB,OACnBA,EAAa,KAAK,IAEN,YAAA,UAAU,KAAK,MAAM,IAAI;AAAA,IACvC;AAAA,IAGc,QAAc;AAC5B,UAAI,KAAK;AACP;AAGI,YAAAA,IAAe,KAAK,gBAAgB;AAC1C,MAAIA,MAAiB,OACnBA,EAAa,MAAM,IAEP,YAAA,UAAU,MAAM,MAAM,IAAI;AAAA,IACxC;AAAA,EACF;AAxCO5I,SAAAA,GAAA;AAAA,IADNC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,EAAA,GADtC0I,EAEG,WAAA,UAAA,GAES3I,GAAA;AAAA,IADfC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,EAAA,GAHvB0I,EAIY,WAAA,WAAA,GAyCXA;AACT;;;;;;AC7DA,MAAME,KAAoB;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAmCO,SAASC,GACdN,GACuC;AAAA,EACvC,MAAMO,UAAoBP,EAAY;AAAA,IA2BpC,eAAehf,GAAa;AAC1B,YAAM,GAAGA,CAAI,GAvBwC,KAAA,WAAA,IAErD,KAAA,WAAA,IACqD,KAAA,WAAA,IACjB,KAAA,SAAA,IACgB,KAAA,UAAA,IAE3B,KAAA,eAAA,OAK3B,KAAO,cAAkD,MAYlD,KAAA,YAAY,KAAK,gBAAgB;AAAA,IAAA;AAAA,IAVxC,IAAW,aAAa;AACtB,aAAO,KAAK;AAAA,IAAA;AAAA,IAGd,WAAW,iBAAiB;AACnB,aAAA;AAAA,IAAA;AAAA,IAQT,oBAAoB;AAClB,YAAM,kBAAkB,GACnB,KAAA,cAAc,KAAK,QAAQ,MAAM,GACjC,KAAK,iBACR,KAAK,eAAe,KAAK;AAAA,IAC3B;AAAA,IAGF,yBAAyBtE,GAAc8jB,GAAe9hB,GAAe;AAEnE,UADM,MAAA,yBAAyBhC,GAAM8jB,GAAU9hB,CAAQ,GACnD2hB,GAAkB,SAAS3jB,CAAI,KAAKgC,MAAa8hB;AACnD,gBAAQ9jB,GAAM;AAAA,UACZ,KAAK;AACC,YAAA,KAAK,aAAa,mBACf,KAAA,UAAU,aAAagC,CAAQ;AAEtC;AAAA,UACF,KAAK;AACH,iBAAK,UAAU,aAAaA,MAAa,OAAO,OAAO,IAAI;AAAA,QAAA;AAAA,IAEjE;AAAA,IAGF,oBAAoB;AACb,WAAA,UAAU,YAAY,EAAE,GACxB,KAAA,UAAU,aAAa,KAAK,YAAY;AAAA,IAAA;AAAA,IAG/C,UAAU;AACR,WAAK,KAAK,aAAa,EAAE,OAAO,KAAK,OAAO,OAAO;AAAA,IAAA;AAAA,IAGrD,SAAS;AACP,WAAK,KAAK,UAAU;AAAA,IAAA;AAAA,IAGtB,UAAU;AACR,WAAK,KAAK,WAAW;AAAA,IAAA;AAAA,IAGvB,WAAW;AACT,WAAK,KAAK,cAAc,EAAE,OAAO,KAAK,OAAO,OAAO;AAAA,IAAA;AAAA,IAGtD,UAAU7B,GAAsB;AACzB,WAAA,KAAK,eAAe,EAAE,OAAO,KAAK,OAAO,OAAO,OAAAA,GAAO;AAAA,IAAA;AAAA,IAG9D,cAAcA,GAAc;AAC1B,MAAI,KAAK,UACPA,EAAM,eAAe;AAAA,IACvB;AAAA,IAGc,aACdqa,GACA;AAAA,aAAAvc,EAAA;AtE3IN,YAAAL;AsE4IM,aAAK,UAASA,IAAA,KAAK,eAAL,gBAAAA,EAAiB,eAAe,UAE1C,KAAK,aAAa,oBACf,KAAA,UAAU,aAAa,KAAK,KAAK,GACtC,KAAK,YAAY;AAAA,MACnB;AAAA;AAAA,IAGF,cAAc;AACZ,MAAI,KAAK,WACF,KAAK,OAAO,kBAOV,KAAA,UAAU,YAAY,EAAE,IAN7B,KAAK,UAAU;AAAA,QACb,KAAK,OAAO;AAAA,QACZ,KAAK;AAAA,QACL,KAAK;AAAA,MACP;AAAA,IAIJ;AAAA,IAGF,IAAW,WAAW;AACpB,aAAO,KAAK,OAAO;AAAA,IAAA;AAAA,IAGrB,IAAW,oBAAoB;AACtB,aAAA;AAAA,IAAA;AAAA,IAGT,IAAW,eAAe;AACxB,aAAO,KAAK,OAAO;AAAA,IAAA;AAAA,IAGd,gBAAgB;AACd,aAAA,KAAK,OAAO,cAAc;AAAA,IAAA;AAAA,IAG5B,iBAAiB;AACf,aAAA,KAAK,OAAO,eAAe;AAAA,IAAA;AAAA,EACpC;AA/H6Bkd,SAAAA,GAAA;AAAA,IAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,EAAA,GAFvB8I,EAEyB,WAAA,MAAA,GACjB/I,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GAHN8I,EAGQ,WAAA,cAAA,GACiB/I,GAAA;AAAA,IAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,EAAA,GAJvB8I,EAIyB,WAAA,MAAA,GACe/I,GAAA;AAAA,IAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,EAAA,GALtC8I,EAKwC,WAAA,UAAA,GACiB/I,GAAA;AAAA,IAA5DC,EAAS,EAAE,MAAM,SAAS,SAAS,IAAM,WAAW,GAAM,CAAA;AAAA,EAAA,GANvD8I,EAMyD,WAAA,UAAA,GAEjB/I,GAAA;AAAA,IAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,EAAA,GARtC8I,EAQwC,WAAA,UAAA,GACf/I,GAAA;AAAA,IAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,EAAA,GATvB8I,EASyB,WAAA,QAAA,GACe/I,GAAA;AAAA,IAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,EAAA,GAVtC8I,EAUwC,WAAA,SAAA,GACf/I,GAAA;AAAA,IAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,EAAA,GAXvB8I,EAWyB,WAAA,QAAA,GACjB/I,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GAZN8I,EAYQ,WAAA,cAAA,GAEkC/I,GAAA;AAAA,IAA7CC,EAAS,EAAE,WAAW,IAAM,SAAS,GAAM,CAAA;AAAA,EAAA,GAdxC8I,EAc0C,WAAA,OAAA,GAEd/I,GAAA;AAAA,IAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,EAAA,GAhB1B8I,EAgB4B,WAAA,WAAA,GAoH3BA;AACT;;;;;;AC5Ja,MAAAE,KAAiB,CAAoCC,MAAY;AAAA,EAC5E,MAAMC,UAAyBD,EAAK;AAAA,IAApC,cAAA;AAAA,YAAA,GAAA,SAAA,GAIiD,KAAA,mBAAA,UACtB,KAAA,OAAA,MAC8B,KAAA,WAAA,IAC3C,KAAA,gBAAgBtnB,EAAE,gBAAgB,GACO,KAAA,SAAA,IACE,KAAA,WAAA,IACA,KAAA,WAAA,IAC3B,KAAA,mBAAmBA,EAAE,eAAe;AAAA,IAAA;AAAA,IAEhE,YAAYwnB,GAAaC,GAAmB;AACnC,aAAA5J;AAAAA,QAEL,KAAK,SACLA;AAAAA;AAAAA,eAEO2J,KAAA,OAAAA,IAAM,OAAO;AAAA;AAAA,kBAEV,KAAK,IAAI;AAAA,sBACL,KAAK,QAAQ;AAAA,sBACb,KAAK,QAAQ;AAAA,oBACf,KAAK,MAAM;AAAA,sBACT,KAAK,QAAQ;AAAA,2BACR,KAAK,aAAa;AAAA,kBAC3B7lB,EAAK,OAAO,CAAC;AAAA;AAAA,kBAEboc,EAAU,KAAK,KAAK,CAAC,uBACjC;AAAA;AAAA,QAGE,KAAK,WACLF;AAAAA;AAAAA,oBAEY,KAAK,OAAO;AAAA;AAAA,sBAEV,KAAK,gBAAgB;AAAA;AAAA;AAAA,mBAGxB,KAAK,IAAiC;AAAA,uBAClC,KAAK,SAAS,OAAO,OAAO,IAAI;AAAA;AAAA,yBAE9B,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOxC;AAAA;AAAA,MAGA,KAAK,eACLA;AAAAA;AAAAA;AAAAA;AAAAA,iBAIWE,EAAU,KAAK,IAA6B,CAAC;AAAA;AAAA,YAElD,KAAK,WAAW;AAAA;AAAA,OAGxB;AAAA,QACI0J,CAAO;AAAA,IAAA;AAAA,EACX;AAjEYrJ,SAAAA,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GADNkJ,EACQ,WAAA,OAAA,GACAnJ,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GAFNkJ,EAEQ,WAAA,aAAA,GACAnJ,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GAHNkJ,EAGQ,WAAA,SAAA,GACAnJ,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GAJNkJ,EAIQ,WAAA,kBAAA,GACAnJ,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GALNkJ,EAKQ,WAAA,MAAA,GACgCnJ,GAAA;AAAA,IAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,EAAA,GANtCkJ,EAMwC,WAAA,UAAA,GAChCnJ,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GAPNkJ,EAOQ,WAAA,eAAA,GACgCnJ,GAAA;AAAA,IAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,EAAA,GARtCkJ,EAQwC,WAAA,QAAA,GACAnJ,GAAA;AAAA,IAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,EAAA,GATtCkJ,EASwC,WAAA,UAAA,GACAnJ,GAAA;AAAA,IAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,EAAA,GAVtCkJ,EAUwC,WAAA,UAAA,GAChBnJ,GAAA;AAAA,IAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,EAAA,GAXtBkJ,EAWwB,WAAA,kBAAA,GA0DvBA;AACT;ACnG+B,OAAO;AAAA,EACpC;AACF,EAAE;AAcK,SAASG,GAAkBpD,GAAsB;AxEhBxD,MAAApjB;AwEiBE,QAAM8jB,KAAO9jB,IAAAojB,EAAQ,QAAQ,aAAa,MAA7B,gBAAApjB,EAAgC,aAAa;AAClD,EAAAojB,EAAA,aAAa,QAAQU,KAAA,OAAAA,IAAQ,IAAI;AAC3C;AAMa,MAAA2C,KAAsB,CAACpkB,MAAyB;AAC3D,MAAIqkB,IAAiB,CAAC;AAClB,MAAA;AACe,IAAAA,IAAA,KAAK,MAAMrkB,KAAA,OAAAA,IAAS,EAAE;AAAA,WAChC4Q,GAAO;AACd,YAAQ,MAAM,8BAA8B;AAAA,MAC1C,MAAM5Q;AAAA,IAAA,CACP;AAAA,EAAA;AAGI,SAAAqkB;AACT;AAEO,SAASC,GAAuBzC,GAA+B;AAC7D,SAAA1jB,EAAA;AAAA,IACL,UAAU;AAAA,IACV,aAAa;AAAA,IACb,iBAAiB;AAAA,IACjB,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,SAAS;AAAA,IACT,UAAU;AAAA,IACV,cAAc;AAAA,IACd,OAAO;AAAA,IACP,cAAc;AAAA,KACX0jB;AAEP;;;;;;ACpCO,SAAS0C,GACdlB,GACwC;AAAA,EACxC,MAAMmB,UAAqBnB,EAAY;AAAA,IAAvC,cAAA;AAAA,YAAA,GAAA,SAAA,GAC2B,KAAA,OAAA,MACC,KAAA,cAAA,SACY,KAAA,UAAA;AAAA,IAAA;AAAA,IAEnB,OAAOoB,GAA+B;AACvD,MAAK,KAAK,aAAa,MAAM,KACtB,KAAA,aAAa,QAAQ,KAAK,IAAI,GAGjC,KAAK,gBAAgB,UACvBN,GAAkB,IAAI,GAGxB,MAAM,OAAOM,CAAO;AAAA,IAAA;AAAA,EACtB;AAdY5J,SAAAA,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GADN0J,EACQ,WAAA,MAAA,GACA3J,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GAFN0J,EAEQ,WAAA,aAAA,GACA3J,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GAHN0J,EAGQ,WAAA,SAAA,GAcPA;AACT;AC/BO,MAAME,KAAqBtB;AAAA,EAChCG,GAAeO,GAAeS,GAAWZ,GAAiB9jB,CAAU,CAAC,CAAC,CAAC;AACzE,gj9BCMM8kB,KAAgB,CAAC3kB,MAAQ,OAAOA,KAAU,YAAY,GAAGA,CAAK,KAAKA,MAAU,IAAI,MAAMA,GAChF4kB,KAAKxmB,GACLymB,KAAM,CAACd,GAAMe,MAAS,CAACC,MAAQ;AACpC,MAAIC;AACJ,OAAKF,KAAW,OAA4B,SAASA,EAAO,aAAa,KAAM,QAAOF,GAAGb,GAAMgB,KAAU,OAA2B,SAASA,EAAM,OAAOA,KAAU,OAA2B,SAASA,EAAM,SAAS;AACvN,QAAM,EAAE,UAAAE,GAAU,iBAAAC,EAAe,IAAKJ,GAChCK,IAAuB,OAAO,KAAKF,CAAQ,EAAE,IAAI,CAACG,MAAU;AAC9D,UAAMC,IAAcN,KAAU,OAA2B,SAASA,EAAMK,CAAO,GACzEE,IAAqBJ,KAAoB,OAAqC,SAASA,EAAgBE,CAAO;AACpH,QAAIC,MAAgB,KAAM,QAAO;AACjC,UAAME,IAAaZ,GAAcU,CAAW,KAAKV,GAAcW,CAAkB;AACjF,WAAOL,EAASG,CAAO,EAAEG,CAAU;AAAA,EAC/C,CAAS,GACKC,IAAwBT,KAAS,OAAO,QAAQA,CAAK,EAAE,OAAO,CAACU,GAAKC,MAAQ;AAC9E,QAAI,CAACnkB,GAAKvB,CAAK,IAAI0lB;AACnB,WAAI1lB,MAAU,WAGdylB,EAAIlkB,CAAG,IAAIvB,IACJylB;AAAA,EACV,GAAE,EAAE,GACCE,IAA+Bb,KAAW,SAAsCE,IAA2BF,EAAO,sBAAsB,QAAQE,MAA6B,SAAvG,SAAyHA,EAAyB,OAAO,CAACS,GAAKC,MAAQ;AAC/O,QAA4E/nB,IAAA+nB,GAAtE,SAAOE,GAAS,WAAWC,E3ErC7C,I2EqCwFloB,GAA3BmoB,IAAAC,GAA2BpoB,GAA3B,CAA3C,SAAgB;AACtB,WAAO,OAAO,QAAQmoB,CAAsB,EAAE,MAAM,CAACJ,MAAQ;AACzD,UAAI,CAACnkB,GAAKvB,CAAK,IAAI0lB;AACnB,aAAO,MAAM,QAAQ1lB,CAAK,IAAIA,EAAM,SAAS7B,IAAA,IACtC+mB,IACAM,GACLjkB,CAAG,CAAC,IAAKpD,IAAA,IACJ+mB,IACAM,GACJjkB,CAAG,MAAMvB;AAAA,IAC5B,CAAa,IAAI;AAAA,MACD,GAAGylB;AAAA,MACHG;AAAA,MACAC;AAAA,IAChB,IAAgBJ;AAAA,EACP,GAAE,EAAE;AACL,SAAOb,GAAGb,GAAMoB,GAAsBQ,GAA8BZ,KAAU,OAA2B,SAASA,EAAM,OAAOA,KAAU,OAA2B,SAASA,EAAM,SAAS;AAC/L,GCpDQiB,KAAiBnB,GAAI,UAAU;AAAA,EAC1C,UAAU;AAAA,IACR,QAAQ;AAAA,MACN,SAAW;AAAA,MACX,SAAW;AAAA,MACX,QAAU;AAAA,MACV,OAAS;AAAA,MACT,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,mBAAmB;AAAA,MACnB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,gBAAgB;AAAA,MAChB,yBAAyB;AAAA,MACzB,eAAe;AAAA,MACf,oBAAoB;AAAA,IACtB;AAAA,IACA,MAAM;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACN;AAAA,IACA,OAAO;AAAA,MACL,QAAQ;AAAA,MACR,QAAQ;AAAA,IAAA;AAAA,EAEZ;AAAA,EACA,kBAAkB;AAAA,IAChB,EAAE,OAAO,UAAU,MAAM,MAAM,OAAO,oBAAoB;AAAA,IAC1D,EAAE,OAAO,UAAU,MAAM,MAAM,OAAO,oBAAoB;AAAA,IAC1D,EAAE,OAAO,UAAU,MAAM,MAAM,OAAO,oBAAoB;AAAA,EAC5D;AAAA,EACA,iBAAiB;AAAA,IACf,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,EAAA;AAEX,CAAC;;;;;;ACVD,MAAMoB,KAAqB;AAAA,EACzB,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACN;AA6IqB,IAAAC,KAArB,cAAyCxB,GAAmB;AAAA,EAA5D,cAAA;AAAA,UAAA,GAAA,SAAA,GAiBwD,KAAA,UAAA,WAcN,KAAA,OAAA,MAUM,KAAA,UAAA,IAWhB,KAAA,SAAA,IAaY,KAAA,QAAA,UAcX,KAAA,WAAA,UAqBN,KAAA,SAAA,SAqCY,KAAA,iBAAA,GAMF,KAAA,KAAA,IASI,KAAA,SAAA;AAAA,EAAA;AAAA,EAMvC,eAAuB;A7E9UjC,QAAA/mB,GAAAC;A6E+UQ,WAAA,KAAK,WAAW,YACXD,IAAA,KAAK,QAAL,OAAAA,IAAY,yBAEdC,IAAA,KAAK,QAAL,OAAAA,IAAY;AAAA,EAAA;AAAA,EAGb,uBAAkD;AACpD,QAAA,KAAK,gBAAgB,CAAC,CAAC,QAAQ,OAAO,EAAE,SAAS,KAAK,YAAY,GAAG;AACvE,cAAQ,KAAK,yCAAyC;AAC/C;AAAA,IAAA;AAGT,WAAO,KAAK;AAAA,EAAA;AAAA,EAGN,sBAAiD;AAErD,QAAA,KAAK,eACL,CAAC,CAAC,QAAQ,SAAS,OAAO,EAAE,SAAS,KAAK,WAAW,GACrD;AACA,cAAQ,KAAK,kDAAkD;AACxD;AAAA,IAAA;AAGT,WAAO,KAAK;AAAA,EAAA;AAAA,EAGN,qBAA2B;A7E1WrC,QAAAD;A6E4WM,IAAA,KAAK,UAAU,YACf,CAAC,KAAK,aACN,GAACA,IAAA,KAAK,gBAAL,QAAAA,EAAkB,WAEX,QAAA;AAAA,MACN;AAAA,IACF,GAGE,KAAK,QAAQ,KAAK,aAAa,YACzB,QAAA;AAAA,MACN;AAAA,IACF,GAGE,KAAK,QAAQ,CAAC,KAAK,WAAW,KAAK,IAAI,KACzC,QAAQ,KAAK,yCAAyC;AAAA,EACxD;AAAA,EAGM,WAAWwoB,GAAsB;AACnC,QAAA;AAEA,aAAAA,EAAI,WAAW,GAAG,KAClBA,EAAI,WAAW,IAAI,KACnBA,EAAI,WAAW,KAAK,KAItB,IAAI,IAAIA,CAAG,GACJ;AAAA,IAAA,SACD;AACC,aAAA;AAAA,IAAA;AAAA,EACT;AAAA,EAGM,cAAuB;AACzB,QAAA,KAAK,YAAY,KAAK;AACjB,aAAA;AAGT,QAAIC,IAAU;AACV,QAAA,KAAK,aAAa,UAAU;AACxB,YAAAC,IAAQ,SAAS,cAAc,QAAQ;AAC7C,MAAAA,EAAM,OAAO,KAAK,UACb,KAAA,sBAAsB,YAAYA,CAAK,GAE5CA,EAAM,MAAM,GACZA,EAAM,OAAO,GACHD,IAAA;AAAA,IAAA;AAGZ,WAAI,KAAK,MACP,KAAK,mBAAmB,GAGnBA;AAAA,EAAA;AAAA,EAGD,qBAA2B;AACxB,aAAA,KAAK,UAAU,OAAO,qBAAqB;AAAA,EAAA;AAAA,EAG9C,sBAA4B;AAC9B,IAAA,KAAK,iBAAiB,MACnB,KAAA,eAAe,OAAO,WAAW,MAAM;AAC1C,WAAK,UAAU,IACV,KAAA;AAAA,QACH;AAAA,QACA;AAAA,UACE,SAAS,KAAK;AAAA,QAChB;AAAA,QACA;AAAA,UACE,SAAS;AAAA,QAAA;AAAA,MAEb;AAAA,IAAA,GACC,KAAK,cAAc;AAAA,EACxB;AAAA,EAGM,sBAA4B;AAClC,IAAI,KAAK,iBACP,aAAa,KAAK,YAAY,GAC9B,KAAK,eAAe;AAAA,EACtB;AAAA,EAGF,MAAMnmB,GAAwB;AACvB,SAAA,OAAO,MAAMA,CAAO;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAM3B,IAAW,eAAe;AACxB,WAAO,KAAK;AAAA,EAAA;AAAA,EAGJ,QACR+hB,GACM;AACN,UAAM,QAAQA,CAAiB,GAE3BA,EAAkB,IAAI,SAAS,MAC7B,KAAK,UACP,KAAK,oBAAoB,IAEzB,KAAK,oBAAoB;AAAA,EAE7B;AAAA,EAGQ,aACRzH,GACM;AACN,UAAM,aAAaA,CAAkB,GACrC,KAAK,mBAAmB;AAAA,EAAA;AAAA,EAG1B,uBAA6B;AAC3B,UAAM,qBAAqB,GAC3B,KAAK,oBAAoB;AAAA,EAAA;AAAA,EAG3B,SAAS;AACA,WAAAD;AAAAA,SACFG,GAAa,KAAK,OAAO,MAAM,QAAQ,CAAC;AAAA;AAAA,oBAE7B,KAAK,QAAQ;AAAA,wBACT,KAAK,QAAQ;AAAA,qBAChBD,EAAU,KAAK,SAAS,CAAC;AAAA,sBACxBA,EAAU,KAAK,UAAU,CAAC;AAAA,wBACxBA,EAAU,KAAK,sBAAsB,CAAC;AAAA,wBACtCA,EAAU,KAAK,YAAY,CAAC;AAAA,wBAC5BA,EAAU,KAAK,YAAY,CAAC;AAAA,2BACzBA,EAAU,KAAK,eAAe,CAAC;AAAA,uBACnCA,EAAU,KAAK,qBAAqB,CAAC;AAAA,qBACvC,KAAK,SAAS;AAAA,eACpBA,EAAU,KAAK,OAAO,OAAO,KAAK,QAAQ,CAAC;AAAA,eAC3CA,EAAU,KAAK,IAAI,CAAC;AAAA,eACpBA,EAAU,KAAK,IAAI,CAAC;AAAA,iBAClBA,EAAU,KAAK,MAAM,CAAC;AAAA,cACzBA,EAAU,KAAK,cAAc,CAAC;AAAA,gBAC5Bpc;AAAA,MACN4nB,GAAe;AAAA,QACb,QAAQ,KAAK;AAAA,QACb,MAAM,KAAK;AAAA,QACX,OAAO,KAAK;AAAA,MAAA,CACb;AAAA,MACD;AAAA,QACE,sBAAsB,KAAK;AAAA,QAC3B,uBAAuB,KAAK;AAAA,QAC5B,sBAAsB,KAAK;AAAA,MAAA;AAAA,IAE9B,CAAA;AAAA,iBACQ,KAAK,WAAW;AAAA;AAAA,UAGvB,KAAK,UACD,KAAK,mBAAA,IACL1L;AAAAA;AAAAA,sBAGN;AAAA,UACEG,GAAa,KAAK,OAAO,MAAM,QAAQ,CAAC;AAAA;AAAA,EAAA;AAAA,EAIxC,mBAAmBgH,GAA0B;AAC5C,WAAAwE,GAAmBxE,CAAI,KAAKwE,GAAmB;AAAA,EAAA;AAAA,EAGhD,qBAAqB;AACpB,WAAA3L;AAAAA;AAAAA;AAAAA,iBAGM,KAAK,mBAAmB,KAAK,IAAI,CAAC;AAAA,uBAC5B7d,EAAE,SAAS,CAAC;AAAA;AAAA,+BAEJA,EAAE,SAAS,CAAC;AAAA;AAAA,EAAA;AAG3C;AAlXqBypB,GA0JH,SAASxL,EAAUC,EAAM;AAtJdE,GAAA;AAAA,EAA1B7E,GAAM,SAAS;AAAA,GAJGkQ,GAIQ,WAAA,UAAA,CAAA;AAaErL,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAjBRoL,GAiBU,WAAA,WAAA,CAAA;AAcArL,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GA/BRoL,GA+BU,WAAA,QAAA,CAAA;AAUerL,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAzCvBoL,GAyCyB,WAAA,WAAA,CAAA;AAWfrL,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GApDRoL,GAoDU,WAAA,UAAA,CAAA;AAaArL,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAjERoL,GAiEU,WAAA,SAAA,CAAA;AAcjBrL,GAAA;AAAA,EAAXC,EAAS;AAAA,GA/ESoL,GA+EP,WAAA,YAAA,CAAA;AAUArL,GAAA;AAAA,EAAXC,EAAS;AAAA,GAzFSoL,GAyFP,WAAA,QAAA,CAAA;AAWArL,GAAA;AAAA,EAAXC,EAAS;AAAA,GApGSoL,GAoGP,WAAA,UAAA,CAAA;AAUArL,GAAA;AAAA,EAAXC,EAAS;AAAA,GA9GSoL,GA8GP,WAAA,OAAA,CAAA;AAU4CrL,GAAA;AAAA,EAAvDC,EAAS,EAAE,MAAM,QAAQ,WAAW,gBAAiB,CAAA;AAAA,GAxHnCoL,GAwHqC,WAAA,gBAAA,CAAA;AAWxDrL,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAQ,WAAW,mBAAoB,CAAA;AAAA,GAlItCoL,GAmInB,WAAA,mBAAA,CAAA;AAM4BrL,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAzIPoL,GAyIS,WAAA,kBAAA,CAAA;AAMCrL,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA/IRoL,GA+IU,WAAA,MAAA,CAAA;AASArL,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAxJRoL,GAwJU,WAAA,UAAA,CAAA;AAxJVA,KAArBrL,GAAA;AAAA,EADCG,EAAc,eAAe;AAAA,GACTkL,EAAA;;;;;;;ACtJrB,IAAqBI,KAArB,cAA+C/C,GAAe1jB,CAAU,EAAE;AAAA,EAA1E,cAAA;AAAA,UAAA,GAAA,SAAA,GAImD,KAAA,WAAA,IAEG,KAAA,cAAA,IAEN,KAAA,QAAA,IAEK,KAAA,aAAA,IAEJ,KAAA,SAAA,IAEC,KAAA,UAAA,IAEhD,KAAQ,eAAuB,IAC/B,KAAQ,mBAA2B;AAAA,EAAA;AAAA,EAInC,IAAI,QAAgB;AAClB,QAAI,KAAK,OAAO;AACR,YAAA0mB,IAAc,KAAK,IAAI;AAI3B,UAAA,KAAK,iBAAiB,MACtB,KAAK,qBAAqB,KAC1BA,IAAc,KAAK,mBAAmB,KACtC;AAEA,cAAMC,IAAYvN,EAAM,KAAK,KAAK,EAAE,OAAO,UAAU,GAC/CwN,IAAa,KAAK,QAAQhqB,EAAE,gBAAgB,IAAI,IAChDiqB,IAAgB,KAAK,WAAWjqB,EAAE,UAAU,IAAI;AACjD,aAAA,eAAe,GAAG+pB,CAAS,IAAIC,CAAU,IAAIC,CAAa,GAAG,KAAK,GACvE,KAAK,mBAAmBH;AAAA,MAAA;AAG1B,aAAO,KAAK;AAAA,IAAA;AAGP,WAAA;AAAA,EAAA;AAAA,EAGT,IAAW,eAA4B;AAC9B,WAAA;AAAA,EAAA;AAAA,EAGC,aACRhM,GACM;AACN,UAAM,aAAaA,CAAkB,GAEhC,KAAA,aAAa,cAAc,KAAK,KAAK;AAAA,EAAA;AAAA,EAGlC,QACRA,GACM;AACN,UAAM,QAAQA,CAAkB,GAE5BA,EAAmB,IAAI,aAAa,KACtC,KAAK,aAAa,iBAAiB,KAAK,cAAc,SAAS,OAAO,GAGpEA,EAAmB,IAAI,UAAU,MAC/B,KAAK,SAAS,YAChB,KAAK,aAAa,iBAAiB,KAAK,WAAW,SAAS,OAAO,GAEhE,KAAA,aAAa,cAAc,KAAK,KAAK;AAAA,EAC5C;AAAA,EAGF,WAAWoM,GAAiB3M,GAAgB;AAE1C,WADa,IAAI,KAAK2M,CAAO,EACjB,mBAAmB3M,GAAQ,EAAE,SAAS,QAAQ;AAAA,EAAA;AAAA,EAG5D,SAAS;AACA,WAAAM;AAAAA;AAAAA;AAAAA,gBAGKlc;AAAA,MACN;AAAA,MACA,EAAE,2BAA2B,KAAK,SAAS;AAAA,MAC3C,EAAE,2BAA2B,KAAK,YAAY;AAAA,MAC9C,EAAE,wBAAwB,KAAK,MAAM;AAAA,MACrC,EAAE,+BAA+B,KAAK,WAAW;AAAA,MACjD,EAAE,yBAAyB,KAAK,OAAO;AAAA,MACvC,EAAE,0BAA0B,KAAK,QAAQ;AAAA,IAAA,CAC1C;AAAA;AAAA,UAEC,KAAK,QACHkc;AAAAA;AAAAA,2DAGAoH,CAAO;AAAA;AAAA;AAAA,EAAA;AAInB;AArGqB4E,GAmBH,SAAS5L,EAAUC,EAAM;AAjBTE,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAFXwL,GAEa,WAAA,SAAA,CAAA;AAEHzL,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAJRwL,GAIU,WAAA,YAAA,CAAA;AAEAzL,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GANRwL,GAMU,WAAA,eAAA,CAAA;AAEAzL,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRwL,GAQU,WAAA,SAAA,CAAA;AAEAzL,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAVRwL,GAUU,WAAA,cAAA,CAAA;AAEAzL,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAZRwL,GAYU,WAAA,UAAA,CAAA;AAEAzL,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAdRwL,GAcU,WAAA,WAAA,CAAA;AAdVA,KAArBzL,GAAA;AAAA,EADCG,EAAc,sBAAsB;AAAA,GAChBsL,EAAA;;;;;;ACgCA,IAAAM,KAArB,MAAAvd,UAA2CxJ,EAAW;AAAA,EAAtD,cAAA;AAAA,UAAA,GAAA,SAAA,GAgBkC,KAAA,cAAcoZ,EAAM,GAMpB,KAAA,UAAUA,EAAM,EAAE,SAAS,IAAI,MAAM,GAMrC,KAAA,UAAUA,EAAM,EAAE,IAAI,IAAI,MAAM,GAMhC,KAAA,eAAe,CAAC4N,MACvC,CAACA,GAOmB,KAAA,SAAiB5N,EAAM,OAAO,GAGlD,KAAQ,qBAAqB,IAE9B,KAAA,oBAAoBA,EAAM,EAAE,WAAW,GAuE9B,KAAA,eAAe,CAACe,MAA2B;AAC1D,MAAKA,KAGH,KAAK,oBAAoBf,EAAM,EAAE,OAAOe,CAAM,EAAE,WAAW,GAC3D,KAAK,SAASA,GAGT,KAAA,eAAe,KAAK,MAAM;A/ExLrC,YAAArc;A+EyLa,SAAAA,IAAA,KAAA,gBAAA,QAAAA,EACD,iBAAiB,sBAClB,QAAQ,CAAQslB,MAAAA,EAAK,WAEH,KAAK;AAAA,UACxBhK,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM;AAAA,QAAA,EAC1C,IAAI,CAAS6N,MAAA;AACP,gBAAAlc,IAAS,SAAS,cAAc,oBAAoB;AACnD,iBAAAA,EAAA,QAAQ,GAAG,KAAK,kBAAkB,OAAS,EAAA,QAAQkc,CAAK,IAAI,CAAC,IACpElc,EAAO,YAAY,SAAS,eAAekc,CAAK,CAAC,GAC1Clc;AAAA,QAAA,CACR,EAEY;AAAA,UAAQ,CACnBmc,MAAA;A/EvMV,gBAAAppB;A+EuMU,oBAAAA,IAAA,KAAK,gBAAL,gBAAAA,EAAkB,YAAYopB;AAAA;AAAA,QAChC;AAAA,MAAA,CACD,KAvBI,KAAA,SAAS9N,EAAM,OAAO;AAAA,IA0B/B,GAEiB,KAAA,uBAAuB,CAAC+N,MAAsB;AACxD,WAAA,aAAaA,EAAa,CAAC,EAAE,OAAOA,EAAa,CAAC,EAAE,aAAa,CAAC;AAAA,IACzE,GAwBiB,KAAA,kBAAkB,CAACH,MAAgB;AAC5C,YAAAI,IAAOJ,EAAK,YAAY,GACxB1N,IAAU0N,EAAK,QAAQ;AAE7B,aAAO,KAAK,MAAMI,IAAO9N,KAAW,CAAC;AAAA,IACvC;AAAA,EAAA;AAAA,EAlIM,oBAAmC;AAAA,WAAAnb,EAAA;AACvC,MAAAkpB,GAAA7d,EAAA,iBAAM,0BAAN,IAAwB,GAEnB4P,EAAM,QAAQ,KAAK,WAAW,MAC5B,KAAA,cAAcA,EAAM,KAAK,WAAW,IAGvC,KAAK,WACP,KAAK,oBAAoBA,EAAM,EAAE,OAAO,KAAK,MAAM,EAAE,WAAW,GAChE,KAAK,cAAcA,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM;AAAA,IAE/D;AAAA;AAAA,EAKF,IAAI,YAAY;AACd,WAAIA,EAAM,QAAQ,KAAK,WAAW,IACzBA,EAAM,KAAK,YAAY,OAAQ,CAAA,EACnC,OAAO,KAAK,MAAM,EAClB,QAAQ,OAAO,IAEbA,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,EAAE,QAAQ,OAAO;AAAA,EAAA;AAAA,EAGpE,IAAI,UAAU;AACL,WAAAA,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,EAAE,MAAM,OAAO;AAAA,EAAA;AAAA,EAGxD,aACRsB,GACM;AACN,UAAM,aAAaA,CAAkB,GACL,IAAI;AAAA,MAClC,KAAK;AAAA,IACP,EAEwB,QAAQ,SAAS,iBAAiB;AAAA,MACxD,YAAY;AAAA,MACZ,iBAAiB,CAAC,OAAO,MAAM;AAAA,IAAA,CAChC,GAEI,KAAA,SAAS,KAAK,OAAO,EAAK,GAI/B,WAAW,MAAM,KAAK,gBAAgB,GAAG,GAAG;AAAA,EAAA;AAAA,EAGpC,QACRA,GACM;AACN,UAAM,QAAQA,CAAkB,GAE5BA,EAAmB,IAAI,OAAO,KAC3B,KAAA,SAAS,KAAK,OAAO,EAAK;AAAA,EACjC;AAAA,EAGF,yBACExa,GACAonB,GACAnnB,GACM;AACN,IAAID,MAAS,YACX,KAAK,aAAaC,CAAK;AAAA,EACzB;AAAA,EAqCF,SAASA,GAAeonB,IAAW,IAAM;AACvC,QAAIpnB;AACF,UACE,KAAK;AAAA,QACHiZ,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM;AAAA,QAC1CA,EAAMjZ,CAAK;AAAA,MAAA;AAGb,aAAK,qBAAqB;AAAA,WACrB;AACL,cAAMqnB,IAAe,KAAK,cAAcpO,EAAMjZ,CAAK,CAAC;AAC/C,aAAA,eAAeqnB,GAAeD,CAAQ;AAAA,MAAA;AAAA,QAG7C,CAAA,KAAK,aAAanO,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,GAAGA,EAAO,CAAA,IAEtE,KAAK,4BAA4B,IAEjC,KAAK,WAAW;AAAA,EAClB;AAAA,EAUM,kBAAkB;AACpB,IAAC,KAAK,uBACR,KAAK,qBAAqB,IAE1B,KAAK,cAAc;AAAA,EACrB;AAAA,EAGF,aAAaqO,GAAoBT,GAAa;AACrC,WAAA,CAAC5N,EAAMqO,CAAW,EAAE,OAAO,KAAK,MAAM,EAAE,OAAOT,GAAM,OAAO;AAAA,EAAA;AAAA,EAGrE,QAAQA,GAAa;AACnB,WAAOA,EAAK,OAAW,oBAAA,KAAA,GAAQ,KAAK;AAAA,EAAA;AAAA,EAGtC,WAAWA,GAAa;AAClB,WAAC,KAAK,QAIHA,EAAK,OAAO,KAAK,OAAO,KAAK,IAH3B;AAAA,EAG2B;AAAA,EAGtC,eAAeU,GAAcC,GAAa;AACxC,QAAIX,IAAOW,EAAK,QAAQ,MAAM,EAAE,IAAID,GAAM,MAAM;AAChD,UAAME,IAAiB,CAAC;AAEjB,WAAAA,EAAM,SAAS,KAAG;AACvB,MAAAA,EAAM,KAAKZ,CAAI;AACf,YAAMa,IAAWb,EAAK,IAAI,GAAG,KAAK;AAClC,UAAIA,EAAK,OAAOW,EAAK,MAAM,OAAO,CAAC;AACjC;AAEK,MAAAX,IAAAa;AAAA,IAAA;AAGF,WAAAD;AAAA,EAAA;AAAA,EAGT,qBAAqBZ,GAAa;AAEhC,UAAMc,IAAU1O,EAAM,KAAK,OAAO,EAAE,OAAO,KAAK,MAAM,GAChD2O,IAAU3O,EAAM,KAAK,OAAO,EAAE,OAAO,KAAK,MAAM,GAChD4O,IAAUF,EAAQ,KAAK,GACvBG,IAAUF,EAAQ,KAAK,GACvBG,IAAWJ,EAAQ,MAAM,GACzBK,IAAWJ,EAAQ,MAAM;AAU/B,WARI,EAAAf,EAAK,SAASgB,KAAWhB,EAAK,SAASiB,KAIvCjB,EAAK,WAAWgB,KAAWhB,EAAK,UAAUkB,KAI1ClB,EAAK,WAAWgB,KAAWhB,EAAK,UAAUmB;AAAA,EAIvC;AAAA,EAGT,sBAAsBC,GAAcnB,GAAe;AAC1C,WAAA,KAAK,qBAAqB7N,EAAM,IAAI,KAAKgP,GAAMnB,GAAO,CAAC,CAAC,CAAC;AAAA,EAAA;AAAA,EAGlE,2BAA2BmB,GAAcnB,GAAeD,GAAc;AAC7D,WAAA,KAAK,qBAAqB5N,EAAM,IAAI,KAAKgP,GAAMnB,GAAOD,CAAI,CAAC,CAAC;AAAA,EAAA;AAAA,EAGrE,iBAAiBS,GAAoB;AACnC,UAAMK,IAAU1O,EAAM,KAAK,OAAO,EAAE,OAAO,KAAK,MAAM,GAChD2O,IAAU3O,EAAM,KAAK,OAAO,EAAE,OAAO,KAAK,MAAM,GAChD4O,IAAUF,EAAQ,KAAK,GACvBG,IAAUF,EAAQ,KAAK,GACvBG,IAAWJ,EAAQ,MAAM,GACzBK,IAAWJ,EAAQ,MAAM;AAE/B,WAAIN,EAAY,WAAWO,KAAWP,EAAY,WAAWQ,IACpD,MAAM;AAAA,MACX,EAAE,QAAQE,IAAWD,IAAW,EAAE;AAAA,MAClC,CAACzpB,GAAGtB,MAAM,KAAK,kBAAkB,OAAO,EAAEA,IAAI+qB,CAAQ;AAAA,IACxD,IAGET,EAAY,KAAK,MAAMO,IAClB,MAAM;AAAA,MACX,EAAE,QAAQ,KAAKE,EAAS;AAAA,MACxB,CAACzpB,GAAGtB,MAAM,KAAK,kBAAkB,OAAO,EAAEA,IAAI+qB,CAAQ;AAAA,IACxD,IAGET,EAAY,KAAK,MAAMQ,IAClB,MAAM;AAAA,MACX,EAAE,QAAQE,IAAW,EAAE;AAAA,MACvB,CAAC1pB,GAAGtB,MAAM,KAAK,kBAAkB,SAASA,CAAC;AAAA,IAC7C,IAGa,MAAM;AAAA,MACnB,EAAE,QAAQ,GAAG;AAAA,MACb,CAACsB,GAAGtB,MAAM,KAAK,kBAAkB,SAASA,CAAC;AAAA,IAC7C;AAAA,EAEO;AAAA,EAGT,SAAS8pB,GAAe;AACtB,QACEA,IAAQ,KACR,KAAK,sBAAsB7N,EAAM,KAAK,WAAW,EAAE,KAAK,IAAI,GAAG,EAAE,GACjE;AACK,WAAA,QAAQA,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,EAAE,KAAK,IAAI,CAAC,GAC9D,KAAA,cAAc,KAAK,YAAY,OAAO,KAAK,MAAM,EAAE,IAAI,SAAS,EAAE;AACvE;AAAA,IAAA;AAIA,QAAA6N,IAAQ,MACR,KAAK;AAAA,MACH7N,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,EAAE,KAAA,IAAS;AAAA,MACrD;AAAA,IAAA,GAEF;AACA,WAAK,QAAQA,EAAM,KAAK,WAAW,EAAE,SAAS,CAAC,GAC/C,KAAK,cAAc,KAAK,YAAY,IAAI,SAAS,CAAC;AAClD;AAAA,IAAA;AAGF,IACG,KAAK;AAAA,MACJA,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,EAAE,KAAK;AAAA,MACjD6N;AAAA,IAAA,MAMC,KAAA,cAAc7N,EAAM,KAAK,WAAW,EACtC,OAAO,KAAK,MAAM,EAClB,IAAI,SAAS6N,CAAK;AAAA,EAAA;AAAA,EAIvB,OAAOoB,GAAa;AAClB,UAAMrB,IAAO5N,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM;AAEnD,IAAC,KAAK,2BAA2B4N,EAAK,QAAQA,EAAK,SAASqB,CAAG,MAInE,KAAK,cAAcrB,EAAK,IAAI,QAAQqB,CAAG;AAAA,EAAA;AAAA,EAIzC,QAAQD,GAAc;AACpB,UAAMpB,IAAO5N,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM;AAEvD,SAAK,cAAc4N,EAAK,IAAI,QAAQoB,CAAI;AAAA,EAAA;AAAA,EAI1C,gBAAgBpB,GAAa;AACvB,IAAA,KAAK,aAAaA,CAAI,KAIrB,KAAK,qBAAqBA,CAAI,MAI/B,KAAK,aAAa5N,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,GAAG4N,CAAI,KAChE,KAAA,SAASA,EAAK,OAAO,GAG5B,KAAK,QAAQA,GACb,KAAK,eAAe,KAAK,cAAcA,CAAI,CAAE,GAE7C,KAAK,KAAK,cAAc;AAAA,MACtB,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,IAAA,CACP;AAAA,EAAA;AAAA,EAGH,yBAAyB;AACvB,WAAO,CAAC,GAAG,KAAK,KAAK,EAAE,KAAK,CAAQsB,MAC3BlP,EAAMkP,EAAK,KAAK,EAAE,OAAO,KAAK,MAAM,EAAE,OAAO,KAAK,WAAW,KAAK,CAC1E;AAAA,EAAA;AAAA,EAGH,cAActB,GAAa;AACzB,WAAO,CAAC,GAAG,KAAK,KAAK,EAAE,KAAK,CAAQsB,MAC3BlP,EAAMkP,EAAK,KAAK,EAAE,OAAO,KAAK,MAAM,EAAE,OAAOtB,GAAM,KAAK,CAChE;AAAA,EAAA;AAAA,EAGH,cAAc3mB,GAAsB;AAC9B,QAAAA,EAAM,QAAQ;AAChB;AAGF,IAAAA,EAAM,eAAe;AACrB,UAAM6gB,IAAU7gB,EAAM,aAAa,EAAE,CAAC;AACtC,QAAI6gB,aAAmBuF;AACrB,cAAQpmB,EAAM,MAAM;AAAA,QAClB,KAAK;AACE,eAAA,cAAc6gB,GAAS,EAAE;AAC9B;AAAA,QACF,KAAK;AACE,eAAA,cAAcA,GAAS,CAAC;AAC7B;AAAA,QACF,KAAK;AACE,eAAA,cAAcA,GAAS,EAAE;AAC9B;AAAA,QACF,KAAK;AACE,eAAA,cAAcA,GAAS,CAAC;AAC7B;AAAA,QACF,KAAK;AACE,eAAA,SAAS9H,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,EAAE,MAAM,IAAI,CAAC;AACrE;AAAA,QACF,KAAK;AACE,eAAA,SAASA,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,EAAE,MAAM,IAAI,CAAC;AACrE;AAAA,QACF,KAAK;AACE,eAAA,gBAAgB8H,EAAQ,KAAK;AAClC;AAAA,QACF,KAAK;AACH,eAAK,KAAK,WAAW;AACrB;AAAA,MAAA;AAAA,QAEN,CAAW7gB,EAAM,QAAQ,YACvB,KAAK,KAAK,WAAW;AAAA,EACvB;AAAA,EAGF,eAAeioB,GAAyBf,IAAW,IAAM;AACvD,IAAI,KAAK,gBACF,KAAA,aAAa,aAAa,YAAY,IAAI,GAEjD,KAAK,eAAee,GAChB,KAAK,gBACF,KAAA,aAAa,aAAa,YAAY,GAAG,GAG5Cf,KAAY,KAAK,gBACnB,KAAK,sBAAsB;AAAA,EAC7B;AAAA,EAGF,wBAAwB;AACtB,SAAK,aAAa,MAAM;AAAA,EAAA;AAAA,EAG1B,uBAAuB;AACf,UAAAgB,IAAkB,KAAK,uBAAuB;AACnC,IAAAA,KAAA,QAAAA,EAAA,aAAa,YAAY,MAC1C,KAAK,eAAeA;AAAA,EAAA;AAAA,EAGtB,aAAa;AACX,UAAMC,IAAQ,KAAK,cAAcpP,EAAA,CAAO;AACjC,IAAAoP,KAAA,QAAAA,EAAA,aAAa,YAAY,MAChC,KAAK,eAAeA;AAAA,EAAA;AAAA,EAGtB,4BAA4Bf,IAAc,KAAK,aAAa;AAC1D,UAAMgB,IAAkB,KAAK;AAAA,MAC3BrP,EAAMqO,CAAW,EAAE,OAAO,KAAK,MAAM,EAAE,QAAQ,OAAO;AAAA,IACxD;AACiB,IAAAgB,KAAA,QAAAA,EAAA,aAAa,YAAY,MAC1C,KAAK,eAAeA;AAAA,EAAA;AAAA,EAGtB,cAAcvH,GAA4BwH,GAAgB;AAExD,UAAMC,IADQ,CAAC,GAAG,KAAK,KAAK,EAAE,QAAQzH,CAAO,IACnBwH,GACpBE,IAAexP,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,EAAE,MAAM;AAEvE,QAAIuP,KAAa,KAAKA,IAAY,KAAK,MAAM,QAAQ;AAC7C,YAAAL,IAAO,KAAK,MAAMK,CAAS;AACjC,WAAK,eAAeL,CAAI;AAAA,IAAA,MAC1B,CAAWK,IAAY,KAChB,KAAA,SAASC,IAAe,CAAC,GAE1B,KAAK,YAAY,MAAM,IAAIA,KACxB,KAAA,eAAe,KAAK,MAAM;AACvB,YAAAC,IAAUzP,EAAM,KAAK,WAAW,EACnC,OAAO,KAAK,MAAM,EAClB,MAAM,OAAO,GACV0P,IAAc,KAAK,cAAcD,CAAO;AAC9C,WAAK,eAAeC,CAAY;AAAA,IAAA,CACjC,KAEMH,KAAa,KAAK,MAAM,WAC5B,KAAA,SAASC,IAAe,CAAC,GAE1B,KAAK,YAAY,MAAM,IAAIA,KACxB,KAAA,eAAe,KAAK,MAAM;AACvB,YAAAG,IAAW3P,EAAM,KAAK,WAAW,EACpC,OAAO,KAAK,MAAM,EAClB,QAAQ,OAAO,GACZ4P,IAAe,KAAK,cAAcD,CAAQ;AAChD,WAAK,eAAeC,CAAa;AAAA,IAAA,CAClC;AAAA,EAEL;AAAA,EAGK,eAAqB;AAC1B,SAAK,MAAM,GACX,KAAK,sBAAsB;AAAA,EAAA;AAAA,EAGrB,iBAAiB;AACjB,UAAAD,IAAW,KAAK,kBAAkB,eAAe,GACjDE,IAAW,KAAK,kBAAkB,YAAY;AAC7C,WAAAA,EAAS,MAAMF,CAAQ,EAAE,OAAOE,EAAS,MAAM,GAAGF,CAAQ,CAAC;AAAA,EAAA;AAAA,EAGpE,2BAA2B;AAClB,WAAAtO;AAAAA;AAAAA,UAED,KAAK,iBAAiB;AAAA,MACtB,CACE4N,MAAA5N;AAAAA,6CACiC4N,CAAG;AAAA;AAAA,IAEvC,CAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAKP,uBAAuBrB,GAAa;AAC3B,WAAAvM;AAAAA,QACH;AAAA,MACA,GAAG,IAAI;AAAA,QACL,KAAK,gBAAgBuM,KAAQ5N,IAAQ,OAAO,KAAK,MAAM,CAAC;AAAA,MAAA,EACxD,KAAK;AAAA,IAAA,EACP;AAAA,MACA,CACEsO,MAAAjN;AAAAA,cACI,KAAK,eAAeiN,GAAMV,CAAI,EAAE,IAAI,CAAKtpB,MAAA;AACnC,cAAAwrB,IACJ,CAAC,KAAK,qBAAqBxrB,CAAC,KAAK,KAAK,aAAaA,CAAC;AAEtD,eAAO+c,sCAAyCyO,CAAU;AAAA;AAAA,gCAExC,KAAK,aAAa,KAAK,aAAaxrB,CAAC,CAAC;AAAA,2BAC3C,KAAK,QAAQA,CAAC,CAAC;AAAA,8BACZ,KAAK,WAAWA,CAAC,CAAC;AAAA,2BACrBA,CAAC;AAAA,iCACKwrB,CAAU;AAAA;AAAA,iCAEV,KAAK,WAAWxrB,CAAC,CAAC;AAAA,kCACjBwrB,CAAU;AAAA,2BACjB,MAAM,CAACA,KAAc,KAAK,gBAAgBxrB,CAAC,CAAC;AAAA,6BAC1C,KAAK,aAAa;AAAA,qBAC1BA,EAAE,MAAM;AAAA;AAAA;AAAA,MAAA,CAGhB,CAAC;AAAA;AAAA,IAEP,CAAA;AAAA;AAAA,EAAA;AAAA,EAIL,uBAAuB;AACd,WAAA+c;AAAAA;AAAAA;AAAAA;AAAAA,mBAIQ,KAAK,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAOhB,KAAK,aAAa;AAAA,uBAChBvB,GAAU,oBAAoB,CAAC;AAAA,mBACnC,MAAM;AACb,WAAK,SAAS,KAAK,YAAY,MAAA,IAAU,CAAC;AAAA,IAAA,CAC3C;AAAA;AAAA;AAAA;AAAA,kBAIO3a;AAAA,MACN;AAAA,MACA;AAAA,IACD,CAAA;AAAA,yBACc,KAAK,aAAa;AAAA;AAAA;AAAA,uBAGpB2a,GAAU,eAAe,CAAC;AAAA,kBAC/BE,EAAM,KAAK,WAAW,EAAE,KAAM,CAAA;AAAA,wBACxB,CAAC,MAAmB;AAChC,QAAE,eAAe,GACjB,EAAE,gBAAgB,GAEhB,EAAE,OAAO,SACT,CAAC,MAAM,SAAS,EAAE,OAAO,KAAK,CAAC,KAC/B,SAAS,EAAE,OAAO,KAAK,MACrBA,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,EAAE,KAAA,MAE9C,KAAK,cAAcA,EAAM,KAAK,WAAW,EACtC,OAAO,KAAK,MAAM,EAClB,IAAI,QAAQ,SAAS,EAAE,OAAO,KAAK,CAAC;AAAA,IAEzC,CACD;AAAA;AAAA;AAAA;AAAA,YAIC,KAAK,qBACH;AAAA,MACE,GAAG,IAAI;AAAA,QACLA,EAAM,KAAK,OAAO,EAAE,OAAO,KAAK,MAAM,EAAE,KAAA,IACtCA,EAAM,KAAK,OAAO,EAAE,OAAO,KAAK,MAAM,EAAE,SACxC;AAAA,MAAA,EACF,KAAK;AAAA,IAAA,EACP;AAAA,MACA,CACEgP,MAAA3N;AAAAA,4BACUrB,EAAM,KAAK,OAAO,EAAE,OAAO,KAAK,MAAM,EAAE,KAAK,IACrDgP,CAAI;AAAA,sBACFhP,EAAM,KAAK,OAAO,EAAE,OAAO,KAAK,MAAM,EAAE,KAAK,IAAIgP,CAAI;AAAA;AAAA,IAAA,IAG7D3N,8BAAiCrB,EAAM,KAAK,WAAW,EAAE,MAAM;AAAA,kBAC3DA,EAAM,KAAK,WAAW,EAAE,KAAM,CAAA;AAAA,oCACZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKlB7a;AAAA,MACN;AAAA,MACA;AAAA,IACD,CAAA;AAAA;AAAA;AAAA,uBAGY2a,GAAU,gBAAgB,CAAC;AAAA,kBAChCE,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,EAAE,MAAM,IAAI,CAAC;AAAA,wBACjD,CAAC,MAAmB;AAChC,QAAE,eAAe,GACjB,EAAE,gBAAgB,GAGhB,EAAE,OAAO,SACT,CAAC,MAAM,SAAS,EAAE,OAAO,KAAK,CAAC,KAC/B,SAAS,EAAE,OAAO,KAAK,MACrBA,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,EAAE,MAAM,IAAI,KAExD,KAAK,SAAS,SAAS,EAAE,OAAO,KAAK,IAAI,CAAC;AAAA,IAC5C,CACD;AAAA;AAAA;AAAA;AAAA,YAIC,KAAK;AAAA,MACLA,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM;AAAA,IAAA,EAC1C;AAAA,MACA,CACE6N,MAAAxM;AAAAA,wBACU,KAAK,kBAAkB,OAAA,EAAS,QAAQwM,CAAK,IAAI,CAAC;AAAA,kBACxDA,CAAK;AAAA;AAAA,IAEZ,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQY/N,GAAU,oBAAoB,CAAC;AAAA,mBACnC,MAAM;AACR,WAAA;AAAA,QACHE,EAAM,KAAK,WAAW,EAAE,OAAO,KAAK,MAAM,EAAE,UAAU;AAAA,MACxD;AAAA,IAAA,CACD;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAMT,SAAS;AACA,WAAAqB;AAAAA,QACH,KAAK,qBAAsB,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKd,GAAG,KAAK,QAAQrB,EAAM,KAAK,KAAK,EAAE,OAAO,KAAK,MAAM,EAAE,OAAO,UAAU,IAAI,EAAE,EAAE;AAAA,UAC1F,KAAK,yBAA0B,CAAA;AAAA,UAC/B,KAAK,uBAAuB,KAAK,SAAS,CAAC;AAAA;AAAA;AAAA,EAAA;AAIrD;AA1qBqB2N,GA+DH,SAASlM,EAAUC,EAAM;AA7DxBE,GAAA;AAAA,EADhBmO,GAAS,oCAAoC;AAAA,GAD3BpC,GAEF,WAAA,SAAA,CAAA;AAGA/L,GAAA;AAAA,EADhB7E,GAAM,cAAc;AAAA,GAJF4Q,GAKF,WAAA,eAAA,CAAA;AAKe/L,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAVX8L,GAUa,WAAA,SAAA,CAAA;AAMA/L,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAhBX8L,GAgBa,WAAA,eAAA,CAAA;AAMA/L,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAtBX8L,GAsBa,WAAA,WAAA,CAAA;AAMA/L,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GA5BX8L,GA4Ba,WAAA,WAAA,CAAA;AAMA/L,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAlCX8L,GAkCa,WAAA,gBAAA,CAAA;AAQH/L,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GA1CR8L,GA0CU,WAAA,UAAA,CAAA;AAEZ/L,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GA5CY+E,GA4CF,WAAA,gBAAA,CAAA;AACA/L,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GA7CY+E,GA6CF,WAAA,sBAAA,CAAA;AA7CEA,KAArB/L,GAAA;AAAA,EADCG,EAAc,iBAAiB;AAAA,GACX4L,EAAA;;;;;;;ACkCA,IAAAqC,KAArB,cAA0CppB,EAAW;AAAA,EAArD,cAAA;AAAA,UAAA,GAAA,SAAA,GAOwC,KAAA,UAAA,SAKH,KAAA,YAAA,cAKE,KAAA,QAAA,QAGU,KAAA,WAAA,QAGG,KAAA,YAAA,IASJ,KAAA,SAAA;AAAA,EAAA;AAAA,EAI9C,IAAY,aAAsB;AAChC,WAAO,KAAK,cAAc,KAAK,WAAW,SAAS;AAAA,EAAA;AAAA,EAgBrD,eAAeulB,GAAyB;AhFjJ1C,QAAAznB;AgFkJI,YAAOA,IAAAsrB,GAAa,aAAa7D,CAAO,MAAjC,OAAAznB,IAAsCsrB,GAAa,aAAa;AAAA,EAAA;AAAA,EAGzE,cAAc;AACZ,SAAK,KAAK,WAAW;AAAA,EAAA;AAAA,EAGf,cAAc/oB,GAAsB;AAC1C,IAAIA,EAAM,QAAQ,YAAY,KAAK,cACjCA,EAAM,eAAe,GACrB,KAAK,YAAY;AAAA,EACnB;AAAA,EAGF,SAAS;AACA,WAAA,KAAK,WAAW,UACnBoa;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,8BAKsB,KAAK,QAAQ,kBAAkBoH,CAAO;AAAA,uBAC7C,KAAK,aAAa;AAAA,wBACjB,KAAK,aAAa,MAAM;AAAA,oBAC5BtjB;AAAA,MACN;AAAA,MACA,YAAY,KAAK,OAAO;AAAA,MACxB,YAAY,KAAK,SAAS;AAAA,MAC1B,YAAY,KAAK,KAAK;AAAA,MACtB,EAAG,mBAAoB,KAAK,aAAa,QAAQ;AAAA,IAAA,CAClD;AAAA;AAAA;AAAA;AAAA,oBAIO,KAAK,eAAe,KAAK,OAAO,CAAC;AAAA;AAAA;AAAA;AAAA,kBAInC,KAAK,QACHkc;AAAAA;AAAAA;AAAAA;AAAAA,2CAIuB,KAAK,KAAK;AAAA,+BAEjCoH,CAAO;AAAA;AAAA;AAAA;AAAA,kBAIT,KAAK,aACHpH;AAAAA;AAAAA,+BAGAoH,CAAO;AAAA;AAAA,gBAEX,KAAK,YACHpH;AAAAA;AAAAA;AAAAA;AAAAA,qCAImB,KAAK,mBACd,KAAK,mBACLvB,GAAU,OAAO,CAAC;AAAA,iCACb,KAAK,WAAW;AAAA;AAAA;AAAA;AAAA,6BAK/B2I,CAAO;AAAA;AAAA;AAAA,YAIjBA;AAAAA,EAAA;AAER;AAhIqBuH,GAkCH,SAASvO,EAAUC,EAAM;AAlCtBsO,GAwCK,eAAe;AAAA,EACrC,OAAO3O;AAAAA;AAAAA,EAEP,MAAMA;AAAAA;AAAAA,EAEN,UAAUA;AAAAA;AAAAA,EAEV,SAASA;AAAAA;AAAAA,EAET,UAAUA;AAAAA;AAEZ;AAjD4CO,GAAA;AAAA,EAA3CO,GAAsB,EAAE,MAAM,UAAW,CAAA;AAAA,GAFvB6N,GAEyB,WAAA,cAAA,CAAA;AAKhCpO,GAAA;AAAA,EAAXC,EAAS;AAAA,GAPSmO,GAOP,WAAA,WAAA,CAAA;AAKApO,GAAA;AAAA,EAAXC,EAAS;AAAA,GAZSmO,GAYP,WAAA,aAAA,CAAA;AAKApO,GAAA;AAAA,EAAXC,EAAS;AAAA,GAjBSmO,GAiBP,WAAA,SAAA,CAAA;AAGgBpO,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GApBPmO,GAoBS,WAAA,YAAA,CAAA;AAGCpO,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAvBRmO,GAuBU,WAAA,aAAA,CAAA;AAGjBpO,GAAA;AAAA,EAAXC,EAAS;AAAA,GA1BSmO,GA0BP,WAAA,SAAA,CAAA;AAGApO,GAAA;AAAA,EAAXC,EAAS;AAAA,GA7BSmO,GA6BP,WAAA,oBAAA,CAAA;AAGiBpO,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAhCRmO,GAgCU,WAAA,UAAA,CAAA;AAhCVA,KAArBpO,GAAA;AAAA,EADCG,EAAc,gBAAgB;AAAA,GACViO,EAAA;;;;;;;ACvDrB,IAAqBC,KAArB,cAAuC3E,GAAW1kB,CAAU,EAAE;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAE6C,KAAA,cAAA,IAKY,KAAA,WAAA,KAEA,KAAA,WAAA,IAEf,KAAA,WAAA,IAEC,KAAA,YAAA,IAKR,KAAA,SAAA,SAMf,KAAA,MAAA;AAAA,EAAA;AAAA,EAIT,MAAMI,GAAwB;AjFjEzC,QAAAtC,GAAAC;AiFkEI,IAAI,KAAK,iBACLA,KAAAD,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc,aAA/B,QAAAC,EAAyD,MAAMqC;AAAA,EACnE;AAAA,EAGF,SAAS;AACA,WAAAqa;AAAAA,QACH,KAAK,cACHA,KAAQG,GAAa,KAAK,QAAQ,CAAC;AAAA;AAAA,oBAEzBrc,EAAK,QAAQ;AAAA,MACnB,qBAAqB;AAAA,MACrB,kBAAkB,KAAK;AAAA,MACvB,mBAAmB,KAAK;AAAA,MACxB,oBAAoB,KAAK;AAAA,MACzB,CAAC,SAAS,KAAK,IAAI,EAAE,GAAG;AAAA,IAAA,CACzB,CAAC;AAAA,yBACWoc,EAAU,KAAK,SAAS,KAAK,EAAE;AAAA,qBACnC,KAAK,MAAM;AAAA,mBACbA,EAAU,KAAK,IAAI,CAAC;AAAA,kBACrB,KAAK,MAAM;AAAA;AAAA;AAAA,sBAGPpc,EAAK;AAAA,MACX,oBAAsB;AAAA,MACtB,6BAA6B;AAAA,MAC5B,gCAAiC,CAAC,KAAK;AAAA,IAAA,CACzC,CAAC;AAAA;AAAA;AAAA,cAGFqc,GAAa,KAAK,QAAQ,CAAC,MAC/BH;AAAAA;AAAAA,qBAEWlc,EAAK,QAAQ;AAAA,MACpB,CAAC,SAAS,KAAK,IAAI,EAAE,GAAG;AAAA,MACxB,kBAAkB,KAAK;AAAA,MACvB,mBAAmB,KAAK;AAAA,IAAA,CACzB,CAAC;AAAA;AAAA;AAAA,sBAGQA,EAAK;AAAA,MACX,oBAAsB;AAAA,MACtB,6BAA6B;AAAA,MAC5B,gCAAiC,CAAC,KAAK;AAAA,IAAA,CACzC,CAAC;AAAA;AAAA,iBAEC;AAAA;AAAA,EAAA;AAGjB;AA9EqB8qB,GA0BH,SAASxO,EAAUC,EAAM;AAxBZE,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAFRoO,GAEU,WAAA,eAAA,CAAA;AAKDrO,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAPPoO,GAOS,WAAA,YAAA,CAAA;AAEgBrO,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GATvBoO,GASyB,WAAA,YAAA,CAAA;AAEfrO,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAXRoO,GAWU,WAAA,YAAA,CAAA;AAEArO,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAbRoO,GAaU,WAAA,aAAA,CAAA;AAKjBrO,GAAA;AAAA,EAAXC,EAAS;AAAA,GAlBSoO,GAkBP,WAAA,UAAA,CAAA;AAGArO,GAAA;AAAA,EAAXC,EAAS;AAAA,GArBSoO,GAqBP,WAAA,QAAA,CAAA;AAGArO,GAAA;AAAA,EAAXC,EAAS;AAAA,GAxBSoO,GAwBP,WAAA,OAAA,CAAA;AAxBOA,KAArBrO,GAAA;AAAA,EADCG,EAAc,aAAa;AAAA,GACPkO,EAAA;;;;;;;ACJrB,IAAqBC,KAArB,cAA8C5E,GAAW1kB,CAAU,EAAE;AAAA,EAMnE,cAAc;AACN,UAAA,GAL0B,KAAA,cAAA,QAMhC,KAAK,UAAU;AAAA,EAAA;AAAA,EAGjB,SAAS;AACA,WAAAya;AAAAA;AAAAA;AAAAA,gBAGKlc;AAAA,MACN;AAAA,MACA,iBAAiB,KAAK,IAAI;AAAA,MAC1B,yBAAyB,KAAK,OAAO;AAAA,IAAA,CACtC;AAAA;AAAA;AAAA;AAAA,EAAA;AAKT;AAxBqB+qB,GAIH,SAASzO,EAAUC,EAAM;AAF7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAFSqO,GAEP,WAAA,eAAA,CAAA;AAFOA,KAArBtO,GAAA;AAAA,EADCG,EAAc,qBAAqB;AAAA,GACfmO,EAAA;;;;;;;ACErB,IAAqBC,KAArB,cAA8C7E,GAAW1kB,CAAU,EAAE;AAAA,EAQnE,cAAc;AACN,UAAA,GAPe,KAAA,WAAA,OAEW,KAAA,cAAA,QAMhC,KAAK,UAAU;AAAA,EAAA;AAAA,EAGjB,SAAS;AACA,WAAAya;AAAAA,SACFG,GAAa,KAAK,QAAQ,CAAC,sBAAsBrc;AAAA,MAClD;AAAA,MACA,iBAAiB,KAAK,IAAI;AAAA,MAC1B,yBAAyB,KAAK,OAAO;AAAA,IAAA,CACtC;AAAA;AAAA,UAEGqc,GAAa,KAAK,QAAQ,CAAC;AAAA;AAAA,EAAA;AAGrC;AAxBqB2O,GAMH,SAAS1O,EAAUC,EAAM;AAJ7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAFSsO,GAEP,WAAA,YAAA,CAAA;AAEAvO,GAAA;AAAA,EAAXC,EAAS;AAAA,GAJSsO,GAIP,WAAA,eAAA,CAAA;AAJOA,KAArBvO,GAAA;AAAA,EADCG,EAAc,qBAAqB;AAAA,GACfoO,EAAA;;;;;;;ACRA,IAAAC,KAArB,cAA4CxpB,EAAW;AAAA,EAYrD,SAAS;AACA,WAAAya;AAAAA;AAAAA;AAAAA;AAAAA,gBAIK,UAAU,KAAK,KAAK,eAAe,KAAK,MAAM,KAAK;AAAA,cACrD,KAAK,GAAG;AAAA,cACR,KAAK,GAAG;AAAA;AAAA,EAAA;AAGtB;AAtBqB+O,GAUH,SAAS3O,EAAUC,EAAM;AAR7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAFSuO,GAEP,WAAA,OAAA,CAAA;AAEAxO,GAAA;AAAA,EAAXC,EAAS;AAAA,GAJSuO,GAIP,WAAA,OAAA,CAAA;AAEgBxO,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GANPuO,GAMS,WAAA,SAAA,CAAA;AAEAxO,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GARPuO,GAQS,WAAA,UAAA,CAAA;AARTA,KAArBxO,GAAA;AAAA,EADCG,EAAc,mBAAmB;AAAA,GACbqO,EAAA;;;;;;;ACuBrB,IAAqBC,KAArB,cAA+C/E,GAAW1kB,CAAU,EAAE;AAAA,EAQpE,cAAc;AACN,UAAA,GAPe,KAAA,WAAA,QAEW,KAAA,cAAA,QAMhC,KAAK,UAAU;AAAA,EAAA;AAAA,EAGjB,SAAS;AACA,WAAAya;AAAAA,SACFG,GAAa,KAAK,QAAQ,CAAC,sBAAsBrc;AAAA,MAClD;AAAA,MACA,kBAAkB,KAAK,IAAI;AAAA,MAC3B,0BAA0B,KAAK,OAAO;AAAA;AAAA,IAAA,CAEvC;AAAA;AAAA,UAEGqc,GAAa,KAAK,QAAQ,CAAC;AAAA;AAAA,EAAA;AAGrC;AAzBqB6O,GAMH,SAAS5O,EAAUC,EAAM;AAJ7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAFSwO,GAEP,WAAA,YAAA,CAAA;AAEAzO,GAAA;AAAA,EAAXC,EAAS;AAAA,GAJSwO,GAIP,WAAA,eAAA,CAAA;AAJOA,KAArBzO,GAAA;AAAA,EADCG,EAAc,sBAAsB;AAAA,GAChBsO,EAAA;;;;;;;ACHrB,IAAqBC,KAArB,cAA4ChF,GAAW1kB,CAAU,EAAE;AAAA,EAUjE,cAAc;AACN,UAAA,GATe,KAAA,WAAA,QAEW,KAAA,cAAA,QAQhC,KAAK,UAAU;AAAA,EAAA;AAAA,EAGjB,SAAS;AACA,WAAAya;AAAAA,SACFG,GAAa,KAAK,QAAQ,CAAC,sBAAsBrc;AAAA,MAClD;AAAA,MACA,eAAe,KAAK,IAAI;AAAA,MACxB,uBAAuB,KAAK,OAAO;AAAA,MACnC;AAAA,QACE,0BAA0B,KAAK;AAAA,MAAA;AAAA,IACjC,CACD;AAAA;AAAA,UAEGqc,GAAa,KAAK,QAAQ,CAAC;AAAA;AAAA,EAAA;AAGrC;AA7BqB8O,GAQH,SAAS7O,EAAUC,EAAM;AAN7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAFSyO,GAEP,WAAA,YAAA,CAAA;AAEA1O,GAAA;AAAA,EAAXC,EAAS;AAAA,GAJSyO,GAIP,WAAA,eAAA,CAAA;AAEiB1O,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GANRyO,GAMU,WAAA,aAAA,CAAA;AANVA,KAArB1O,GAAA;AAAA,EADCG,EAAc,mBAAmB;AAAA,GACbuO,EAAA;;;;;;ACnCd,SAASC,GACdnG,GAC8C;AAAA,EAC9C,MAAMoG,UAAsBpG,EAAY;AAAA,IAAxC,cAAA;AAAA,YAAA,GAAA,SAAA,GACwD,KAAA,UAAA;AAAA,IAAA;AAAA,EAAA;AAAVxI,SAAAA,GAAA;AAAA,IAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,EAAA,GADtC2O,EACwC,WAAA,SAAA,GAGvCA;AACT;;;;;;ACLO,SAASC,GACdrG,GACkD;AAAA,EAClD,MAAMsG,UAA+BtG,EAAY;AAAA,IAAjD,cAAA;AAAA,YAAA,GAAA,SAAA,GAC+C,KAAA,iBAAA,SAEA,KAAA,uBAAA;AAAA,IAAA;AAAA,EAAA;AAFjCxI,SAAAA,GAAA;AAAA,IAAXC,EAAS;AAAA,EAAA,GADN6O,EACQ,WAAA,gBAAA,GAEZ9O,GAAA;AAAA,IADCC,EAAS;AAAA,EAAA,GAFN6O,EAGJ,WAAA,sBAAA,GAEKA;AAET;AChBO,MAAMC,KAAuBxG;AAAA,EAClCsG;AAAA,IACEF;AAAA,MACEjG,GAAeO,GAAeS,GAAWZ,GAAiB9jB,CAAU,CAAC,CAAC,CAAC;AAAA,IAAA;AAAA,EACzE;AAEJ;;;;;;ACgEqB,IAAAgqB,KAArB,cAA2CD,GAAqB;AAAA,EAAhE,cAAA;AAAA,UAAA,GAAA,SAAA,GAI8D,KAAA,gBAAA,IAGU,KAAA,iBAAA,IAGvB,KAAA,SAAA,IAGiB,KAAA,WAAA,IAKJ,KAAA,OAAA;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQpD,qBAA2B;AAE7B,IAAA,KAAK,WAAW,KAAK,iBACf,QAAA;AAAA,MACN;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQM,qBAAyC;AAC/C,UAAME,IAAgB,CAAC;AAEvB,WAAI,KAAK,eACPA,EAAI,KAAK,aAAa,GAGpB,KAAK,YACPA,EAAI,KAAK,UAAU,GAGdA,EAAI,SAAS,IAAIA,EAAI,KAAK,GAAG,IAAI;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQlC,iBAA6C;AACnD,WAAI,KAAK,gBACA,UAEF,KAAK,UAAU,SAAS;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQzB,YAAY5pB,GAAe;AAEjC,QAAI,KAAK,kBAAkB,KAAK,YAAY,KAAK,UAAU;AACrD,MAAA,KAAK,YAAYA,MACnBA,EAAM,eAAe,GACrBA,EAAM,gBAAgB;AAExB;AAAA,IAAA;AAIF,SAAK,mBAAmB,GAGpB,KAAK,iBACP,KAAK,gBAAgB,IACrB,KAAK,UAAU,MAEV,KAAA,UAAU,CAAC,KAAK;AAGvB,UAAM,EAAE,SAAA6pB,GAAS,eAAAC,GAAe,OAAAhqB,GAAO,UAAAiqB,EAAa,IAAA;AAGhD,QAAA;AACF,WAAK,KAAK,cAAc;AAAA,QACtB,SAAAF;AAAA,QACA,eAAAC;AAAA,QACA,OAAOhqB,MAAU+pB,IAAU,OAAO;AAAA,QAClC,UAAAE;AAAA,QACA,UAAU,KAAK;AAAA,QACf,MAAM;AAAA,MAAA,CACP;AAAA,aACMrZ,GAAO;AACN,cAAA,MAAM,yCAAyCA,CAAK;AAAA,IAAA;AAI1D,QAAA;AACF,WAAK,YAAY;AAAA,aACVA,GAAO;AACN,cAAA,MAAM,oCAAoCA,CAAK;AAAA,IAAA;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQM,cAAc;AACpB,UAAM,EAAE,SAAAmZ,GAAS,eAAAC,GAAe,OAAAhqB,GAAO,UAAAiqB,EAAa,IAAA,MAE9C/pB,IAAQ,IAAI,YAAY,aAAa;AAAA,MACzC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,QAAQ;AAAA,QACN,SAAA6pB;AAAA,QACA,eAAAC;AAAA,QACA,OAAAhqB;AAAA,QACA,UAAAiqB;AAAA,QACA,UAAU,KAAK;AAAA,MAAA;AAAA,IACjB,CACD;AAED,SAAK,cAAc/pB,CAAK;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASlB,cAAcA,GAA4B;AAEhD,IAAI,KAAK,YAKLA,EAAM,SAAS,WAOfA,EAAM,SAAS,YACjBA,EAAM,eAAe,GACrB,KAAK,YAAY;AAAA,EACnB;AAAA,EAGF,IAAW,eAAiC;AACtC,QAAA,CAAC,KAAK;AACR,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAEF,WAAO,KAAK;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOP,QAAc;AACnB,IAAI,KAAK,SAAS,CAAC,KAAK,YAAY,CAAC,KAAK,YACxC,KAAK,MAAM,MAAM;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA,EAOK,OAAa;AAClB,IAAI,KAAK,SACP,KAAK,MAAM,KAAK;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQF,aAAa;AACX,WAAI,KAAK,gBACAoa;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UASL,KAAK,UACAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UASF;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAST,cAAcpa,GAAc;AAC1B,IAAAA,EAAM,eAAe,GAEhB,KAAK,YACR,KAAK,UAAU;AAAA,EACjB;AAAA,EAGF,SAAS;AACA,WAAAoa;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,kBAKOlc,EAAK,mBAAmB,aAAa,KAAK,IAAI,IAAI;AAAA,MACxD,qBAAqB,KAAK;AAAA,MAC1B,sBAAsB,KAAK;AAAA,MAC3B,sBAAsB,KAAK;AAAA,MAC3B,2BAA2B,KAAK;AAAA,MAChC,sBAAsB,KAAK;AAAA,MAC3B,oBAAoB,KAAK;AAAA,MACzB,oBAAoB,KAAK;AAAA,MACzB,wBAAwB,KAAK,mBAAmB;AAAA,MAChD,uBAAuB,KAAK,mBAAmB;AAAA,IAAA,CAChD,CAAC;AAAA;AAAA;AAAA,oBAGQA,EAAK,kBAAkB;AAAA,MAC7B,8BAA8B,KAAK,SAAS;AAAA,MAC5C,0BAA0B,KAAK;AAAA,IAAA,CAChC,CAAC;AAAA;AAAA;AAAA;AAAA,sBAIQA,EAAK,SAAS;AAAA,MACpB,qBAAqB,KAAK,SAAS;AAAA,IAAA,CACpC,CAAC;AAAA,qBACKoc,EAAU,KAAK,OAAO,KAAK,OAAO,MAAS,CAAC;AAAA;AAAA,+BAElC,KAAK,aAAa;AAAA,yBACxB,KAAK,OAAO;AAAA,0BACX,KAAK,QAAQ;AAAA,0BACb,KAAK,QAAQ;AAAA,2BACZA,EAAU,KAAK,SAAS,KAAK,EAAE;AAAA,iCACzBA,EAAU,KAAK,oBAAoB,CAAC;AAAA,6BACxC,KAAK,eAAgB,CAAA;AAAA,8BACpB,KAAK,UAAU,SAAS,IAAI;AAAA,yBACjC,KAAK,aAAa;AAAA,uBACpB,KAAK,WAAW;AAAA,uBAChB,KAAK,WAAW;AAAA,yBACd,KAAK,aAAa;AAAA,sBACrB,MAAM,MAAM;AAAA,uBACX,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA,sBAIdpc,EAAK,kBAAkB,mBAAmB,KAAK,IAAI,IAAI;AAAA,MAC7D,2BAA2B,KAAK;AAAA,MAChC,4BAA4B,KAAK;AAAA,MACjC,4BAA4B,KAAK;AAAA,MACjC,iCAAiC,KAAK;AAAA,MACtC,2BAA2B,KAAK;AAAA,IAAA,CACjC,CAAC;AAAA;AAAA;AAAA,wBAGQA;AAAA,MACN;AAAA,MACA,iCAAiC,KAAK,IAAI;AAAA,MAC1C;AAAA,QACE,0CAA0C,KAAK;AAAA,QAC/C,0CAA0C,KAAK;AAAA,MAAA;AAAA,IACjD,CACD;AAAA,0CACyB,KAAK,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKrCA,EAAK,2BAA2B;AAAA,MACtC,qCAAqC,KAAK;AAAA,MAC1C,qCAAqC,KAAK;AAAA,MAC1C,yBAAyB,KAAK,yBAAyB;AAAA,MACvD,sBAAsB,KAAK,yBAAyB;AAAA,IAAA,CACrD,CAAC;AAAA,gBACA,KAAK,SACPkc;AAAAA;AAAAA;AAAAA;AAAAA,wBAIU,KAAK,IAAI;AAAA,4BACL,KAAK,QAAQ;AAAA,4BACb,KAAK,QAAQ;AAAA,iCACR,KAAK,aAAa;AAAA,4BACvB,KAAK,YAAY,KAAK,QAAQ;AAAA,4BAC9B,KAAK,QAAQ;AAAA,wBACjBE,EAAU,KAAK,KAAK,CAAC;AAAA;AAAA;AAAA,mCAGV;AAAA,gBACnB,KAAK,eACPF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,yBAKWE,EAAU,KAAK,IAA6B,CAAC;AAAA;AAAA,oBAElD,KAAK,WAAW;AAAA;AAAA,eAErB;AAAA;AAAA;AAAA,YAGH,KAAK,YACPF;AAAAA;AAAAA;AAAAA,6BAGmBE,EAAU,KAAK,YAAY,CAAC;AAAA,6BAC5BA,EAAU,KAAK,IAAI,CAAe;AAAA;AAAA,wBAEvC,KAAK,MAAM;AAAA,gBACnB,KAAK,QAAQ;AAAA;AAAA,WAElB;AAAA;AAAA;AAAA;AAAA,EAAA;AAKX;AArWqBqP,GAoBH,SAASnP,EAAUC,EAAM;AAnBPE,GAAA;AAAA,EAAjC7E,GAAM,QAAQ;AAAA,GADI6T,GACe,WAAA,SAAA,CAAA;AAGUhP,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB+O,GAIyB,WAAA,iBAAA,CAAA;AAGAhP,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAPvB+O,GAOyB,WAAA,kBAAA,CAAA;AAGfhP,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAVR+O,GAUU,WAAA,UAAA,CAAA;AAGehP,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAbvB+O,GAayB,WAAA,YAAA,CAAA;AAKhBhP,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAlBP+O,GAkBS,WAAA,QAAA,CAAA;AAlBTA,KAArBhP,GAAA;AAAA,EADCG,EAAc,iBAAiB;AAAA,GACX6O,EAAA;;;;;;;ACjErB,MAAqBK,KAArB,MAAqBA,WAA4BxF,GAAmB;AAAA,EAApE,cAAA;AAAA,UAAA,GAAA,SAAA,GAG2D,KAAA,YAAA,gBACJ,KAAA,SAAA,IAEnD,KAAA,aAAA,gBACoC,KAAA,SAAA,IACH,KAAA,cAAA,QAGuB,KAAA,mBAAA,IACH,KAAA,gBAAA,IACP,KAAA,mBAAA,SACC,KAAA,UAAA,IACC,KAAA,aAAA,QACG,KAAA,cAAA,IACC,KAAA,eAAA,IACD,KAAA,cAAA,IAQrD,KAAQ,qBAA8C,MACtD,KAAQ,oBAA6B,IAwQrC,KAAA,cAAc,MAAM;AAClB,MAAI,CAAC,KAAK,mBAAA,EAAqB,UAAU,CAAC,KAAK,cAC7C,KAAK,aAAa,IAElB,KAAK,SAAS,KAAK,aAAa,IAAI,KAAK,aAAa;AAAA,IAE1D,GAoGA,KAAA,gBAAgB,CAAOxkB,MAAyBlC,EAAA;A3F3ZlD,UAAAL;A2F4ZQ,UAAAuC,EAAM,QAAQ,OAId;AAAA,YAAAA,EAAM,QAAQ;AACT,iBAAA,KAAK,eAAeA,CAAK;AAG9B,YAAAA,EAAM,QAAQ;AAChB,sBAAK,aAAa,GACX,KAAK,MAAM;AAGpB,aACGA,EAAM,QAAQ,eACbA,EAAM,QAAQ,aACdA,EAAM,QAAQ,eACdA,EAAM,QAAQ,iBAChB,KAAK;AAEE,iBAAA,KAAK,gBAAgBA,CAAK;AAInC,YAAI,KAAK,oBAAkBvC,IAAA,KAAK,iBAAL,QAAAA,EAAmB,UAAS,CAAC,KAAK,QAAQ;AACnE,gBAAMwsB,IAAa,KAAK,mBAAmB,EAAE,SAAS;AAClD,WAAA,KAAK,eAAeA,MACtB,KAAK,aAAa;AAAA,QACpB;AAAA;AAAA,IAEJ,IAEA,KAAA,cAAc,CAAOjqB,MAAsBlC,EAAA;AACzC,YAAMosB,IAAQ,KAAK;AA6BnB,UA1BA,KAAK,oBAAoB,IAEvBlqB,EAAM,cAAc,2BACnBA,EAAM,cAAc,2BAA2B,KAAK,oBAErD,KAAK,eAAekqB,EAAM,OACtB,KAAK,WACP,KAAK,QAAQA,EAAM,UAEZ,KAAK,UACd,KAAK,eAAeA,EAAM,OAC1B,KAAK,QAAQA,EAAM,SAEnBA,EAAM,UAAU,MAChBlqB,EAAM,cAAc,2BAEpB,KAAK,eAAe,GAGjB,KAAA,KAAK,aAAa,EAAE,OAAOkqB,EAAM,OAAO,eAAelqB,GAAO,GACnE,KAAK,YAAY,GAGjB,KAAK,cAAc,GAGf,KAAK,kBAAkBkqB,EAAM,SAAS,CAAC,KAAK,QAAQ;AACtD,cAAMD,IAAa,KAAK,mBAAmB,EAAE,SAAS;AAClD,SAAA,KAAK,eAAeA,MACtB,KAAK,aAAa;AAAA,MACpB;AAAA,IAEJ,IAqBA,KAAA,oBAAoB,CAACjqB,MAAuB;AACtC,MAAAA,EAAM,OAAO,QAAQ,aACvB,KAAK,aAAa,GAClB,KAAK,cAAc,KAAK,cACxB,KAAK,eAAe,IACf,KAAA,aAAa,QAAQ,KAAK,aAAa,MAC5C,KAAK,aAAa,MAAM;AAAA,IAE5B,GAEA,KAAA,0BAA0B,CAACA,MAAsB;AACzC,YAAAwB,IAAOxB,EAAM,aAAa;AAChC,MAAI,QAAQ,CAACwB,EAAK,SAAS,IAAI,KAC7B,KAAK,aAAa;AAAA,IAEtB,GAEA,KAAA,cAAc,MAAM;AAClB,WAAK,KAAK,WAAW;AAAA,IACvB,GAEA,KAAA,aAAa,MAAM;AACjB,WAAK,KAAK,UAAU;AAAA,IACtB,GAwCA,KAAA,uBAAuB,CAAOxB,MAAuBlC,EAAA;A3FpjBvD,UAAAL;A2FqjBI,MAAAuC,EAAM,eAAe,GACrBA,EAAM,gBAAgB,GAElB,KAAK,iBACF,KAAA,eAAeA,EAAM,OAAO,MAC5B,KAAA,QAAQA,EAAM,OAAO,MACrB,KAAA,aAAa,QAAQA,EAAM,OAAO,MAEvC,KAAK,KAAK,cAAc,EAAE,QAAQ,KAAK,cAAc,GAGrD,KAAK,cAAc,GAEnB,KAAK,YAAY,MAEjB,KAAK,eAAeA,EAAM,QACrB,KAAA,eAAeA,EAAM,OAAO,MAE7B,KAAK,YAAUvC,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,WAC/B,KAAA,aAAa,QAAQuC,EAAM,OAAO,MAClC,KAAA,QAAQ,KAAK,aAAa,OAC1B,KAAA,KAAK,cAAc,KAAK,YAAY,GAGzC,KAAK,cAAc,GAEnB,MAAM,KAAK,gBAEP,KAAK,gBACF,KAAA,aAAa,QAAQ,KAAK,YAAY,OAE7C,KAAK,aAAa,MAAM,GACxB,KAAK,YAAY,KAIrB,KAAK,aAAa;AAAA,IACpB,IAEA,KAAA,uBAAuB,CAACA,MAAuB;AAC7C,MAAAA,EAAM,eAAe,GACrBA,EAAM,gBAAgB,GAEtB,KAAK,eAAe,MACpB,KAAK,eAAe,IACpB,KAAK,QAAQ,QACb,KAAK,aAAa,QAAQ,IACrB,KAAA,KAAK,cAAc,IAAI,GAG5B,KAAK,cAAc,GAEnB,KAAK,YAAY;AAAA,IACnB,GAEA,KAAA,4BAA4B,CAACA,MAAuB;AAClD,WAAK,cAAcA,EAAM,QAErBA,EAAM,WAEN,KAAK,gBACL,KAAK,eAAe,YACpB,KAAK,eAAe,WAEf,KAAA,aAAa,QAAQA,EAAM,OAAO,OAIvC,KAAK,kBACL,KAAK,gBACL,KAAK,iBAAiB,MACtB,CAAC,KAAK,oBACN,KAAK,iBAEA,KAAA,aAAa,QAAQA,EAAM,OAAO,MAClC,KAAA;AAAA,QACH,KAAK,aAAa;AAAA,QAClB,KAAK,aAAa,MAAM;AAAA,MAC1B;AAAA,IAGN,GAEA,KAAA,oBAAoB,CAACA,MAAuB;AAC1C,MAAI,CAACA,EAAM,OAAO,SAAS,UAAU,CAAC,KAAK,eACzC,KAAK,aAAa;AAAA,IAEtB,GAEA,KAAA,mBAAmB,MAAM;AACnB,MAAC,KAAK,aACR,KAAK,eAAe,GAEpB,KAAK,aAAa,MAAM,GACxB,KAAK,YAAY,GAEZ,KAAK,eACR,KAAK,aAAa,GAGpB,KAAK,KAAK,WAAW;AAAA,IAEzB,GAEA,KAAA,oBAAoB,CAACA,MAAsB;AACzC,MAAAA,EAAM,gBAAgB,GACtBA,EAAM,eAAe,GAErB,KAAK,YAAY,GACjB,KAAK,KAAK,cAAc,EAAE,QAAQ,KAAK,cAAc;AAAA,IACvD;AAAA,EAAA;AAAA,EAtnBgB,aACdqa,GACe;AAAA,WAAAvc,EAAA;A3F/CnB,UAAAL;A2FgDI,MAAAupB,GAAAgD,GAAA,iBAAM,qBAAN,MAAmB3P,CAAkB,GAErC,MAAM,KAAK,WAAW,gBAElB,KAAK,UAEF,KAAA,gBAAe5c,IAAA,KAAK,eAAL,gBAAAA,EAChB,gBACD,KAAK,CAAUiN,MAAAA,EAAO,UAAU,KAAK,QAEpC,KAAK,eACF,KAAA,eAAe,KAAK,aAAa,cAAc,KAIpD,KAAK,eAAe,IAIpB,CAAC,KAAK,iBACL,KAAK,oBAAoB,KAAK,eAAe,YAE9C,KAAK,eAAe,KAAK,SAK7B,KAAK,wBAAwB;AAAA,IAAA;AAAA;AAAA,EAGrB,QACR2P,GACM;AAKF,QAJJ,MAAM,QAAQA,CAAkB,GAI5BA,EAAmB,IAAI,OAAO,KAAK,KAAK,gBAAgB,CAAC,KAAK,QAAQ;AACxE,YAAMxY,IAAW,KAAK;AACtB,MAAIA,IACF,KAAK,kBAAkBA,CAAQ,IAE/B,KAAK,eAAe;AAAA,IACtB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAOM,kBAAkBA,GAAwB;AAChD,QAAI,CAACA,EAAU;AAGf,SAAK,oBAAoB;AAGnB,UAAA6I,IAAS,KAAK,qBAAqB,KAAK,CAAOiF,MAAAA,EAAI,UAAU9N,CAAQ;AAE3E,IAAI6I,KAEF,KAAK,eAAeA,GACpB,KAAK,eAAeA,EAAO,cAAcA,EAAO,eAAe,IAG3D,KAAK,iBACF,KAAA,aAAa,QAAQ,KAAK,eAIjC,KAAK,cAAc,MAGnB,KAAK,eAAe,MAIf,KAAK,WACR,KAAK,eAAe,IAGhB,KAAK,iBACP,KAAK,aAAa,QAAQ,MAK9B,KAAK,cAAc;AAAA,EACrB;AAAA,EAGM,0BAAgC;AAClC,IAAC,KAAK,eAGN,KAAK,sBACP,KAAK,mBAAmB,WAAW,GAIhC,KAAA,qBAAqB,IAAI,iBAAiB,CAAayf,MAAA;AAC1D,UAAIC,IAAoB;AAExB,MAAAD,EAAU,QAAQ,CAAYE,MAAA;AACxB,YAAAA,EAAS,SAAS,aAAa;AAEjC,gBAAMC,IAAe,MAAM,KAAKD,EAAS,UAAU,EAAE;AAAA,YACnD,CAAAE,MAAQA,EAAK,aAAa;AAAA,UAC5B,GACMC,IAAiB,MAAM,KAAKH,EAAS,YAAY,EAAE;AAAA,YACvD,CAAAE,MAAQA,EAAK,aAAa;AAAA,UAC5B;AAEA,WAAID,KAAgBE,OACEJ,IAAA;AAAA,QACtB;AAAA,MACF,CACD,GAEGA,KAEF,KAAK,oBAAoB;AAAA,IAC3B,CACD,GAII,KAAA,mBAAmB,QAAQ,MAAM;AAAA,MACpC,WAAW;AAAA,MACX,SAAS;AAAA,IAAA,CACV;AAAA,EAAA;AAAA,EAGK,sBAA4B;AAElC,0BAAsB,MAAM;A3FxLhC,UAAA3sB;A2FyLM,YAAMwsB,IAAa,KAAK,mBAAmB,EAAE,SAAS,GAChDQ,MACJhtB,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,UAAS,KAAK,aAAa,MAAM,WAAW;AAKjE,MACEwsB,KACAQ,MACC,KAAK,kBAAkB,KAAK,WAC7B,KAAK,oBAEA,KAAK,UACR,KAAK,aAAa,IAEX,CAACR,KAAc,CAAC,KAAK,eAAeQ,KAG7C,KAAK,aAAa,GAKhB,KAAK,SAAS,CAAC,KAAK,gBAAgBR,KACtC,KAAK,yBAAyB;AAAA,IAChC,CACD;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOK,2BAAiC;AACnC,QAAA,CAAC,KAAK,MAAO;AAGjB,SAAK,oBAAoB;AAEnB,UAAAvf,IAAS,KAAK,mBAAA,EAAqB;AAAA,MACvC,CAAAiF,MAAOA,EAAI,UAAU,KAAK;AAAA,IAC5B;AAEA,IAAIjF,MACF,KAAK,eAAeA,GACpB,KAAK,eAAeA,EAAO,cAAcA,EAAO,eAAe,IAG3D,KAAK,iBACF,KAAA,aAAa,QAAQ,KAAK,eAIjC,KAAK,cAAc;AAAA,EACrB;AAAA,EAGM,4BAAkC;AACxC,IAAI,KAAK,uBACP,KAAK,mBAAmB,WAAW,GACnC,KAAK,qBAAqB;AAAA,EAC5B;AAAA,EAGF,uBAA6B;AAC3B,UAAM,qBAAqB,GAC3B,KAAK,0BAA0B;AAAA,EAAA;AAAA,EAGjC,yBACE7K,GACAonB,GACAnnB,GACM;AACF,IAAAD,MAAS,WAAW,CAACC,KACvB,KAAK,eAAe,GAGhB,MAAA,yBAAyBD,GAAMonB,GAAMnnB,CAAK;AAAA,EAAA;AAAA,EAGlD,IAAI,iBAAiB;AACnB,WAAO,KAAK,eAAe,kBAAkB,KAAK,eAAe;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO3D,qBAA4B;AAClC,WAAO,MAAM,KAAK,KAAK,iBAAiB,oBAAoB,CAAC;AAAA,EAAA;AAAA,EAG/D,IAAI,gBAAgB;AAEhB,WAAA,KAAK,eACJ,CAAC,KAAK,eAAe,KAAK,qBAAqB,SAAS;AAAA,EAAA;AAAA,EAI7D,IAAI,uBAAuB;AAClB,WAAA,KAAK,kBAAkB,KAAK;AAAA,EAAA;AAAA,EAGrC,IAAI,sBAAsB;A3FlS5B,QAAArC;A2FoSU,UAAAitB,MAAajtB,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,UAAS;AAK/C,WAJuB,KAAK,eAAe,KAAK,YAAY,WAAW,KAK9D,KAIFitB,MAAe;AAAA,EAAA;AAAA,EAWV,eAAe1qB,GAAsB;AAAA,WAAAlC,EAAA;AAIjD,aAHAkC,EAAM,eAAe,GACrBA,EAAM,gBAAgB,GAElB,KAAK,mBACA,KAAK,kBAAkB,IAG5B,KAAK,eAAe,KAAK,SACpB,KAAK,uBAAuB,IAGjC,KAAK,UAAU,CAAC,KAAK,iBAChB,KAAK,kBAAkB,IAGzB,KAAK,mBAAmB;AAAA,IAAA;AAAA;AAAA,EAGnB,yBAAyB;AAAA,WAAAlC,EAAA;A3F5UzC,UAAAL,GAAAC;A2F6UI,UAAI,KAAK,YAAY,YAAUD,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,QAAO;AACvD,aAAK,aAAa,GACb,KAAA,aAAa,QAAQ,KAAK,aAAa,MAC5C,KAAK,aAAa,MAAM;AACxB;AAAA,MAAA;AAGF,MAAI,KAAK,YAAY,YAAUC,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,WAC3C,KAAK,gBAGR,MAAM,KAAK,iBAAiB,KAAK,YAAY,IAAI,IAF3C,MAAA,KAAK,yBAAyB,KAAK,WAAW;AAAA,IAIxD;AAAA;AAAA,EAGY,oBAAoB;AAAA,WAAAI,EAAA;AAChC,kBAAK,KAAK,cAAc,EAAE,QAAQ,KAAK,cAAc,GACrD,KAAK,YAAY,GACV,KAAK,aAAa;AAAA,IAAA;AAAA;AAAA,EAGb,qBAAqB;AAAA,WAAAA,EAAA;AACjC,aAAI,KAAK,SACA,KAAK,aAAa,KAKtB,KAAK,eACJ,KAAK,mBAAA,EAAqB,UAC1B,KAAK,mBACP,KAAK,aAAa;AAAA,IAEtB;AAAA;AAAA,EAGY,yBAAyBilB,GAAW;AAAA,WAAAjlB,EAAA;AAChD,WAAK,eAAeilB,GACf,KAAA,KAAK,cAAc,KAAK,YAAY,GACzC,MAAM,KAAK,gBACN,KAAA,QAAQ,KAAK,aAAa,OAC1B,KAAA,eAAe,KAAK,YAAY,MAChC,KAAA,aAAa,QAAQ,KAAK,YAAY,MAC3C,KAAK,aAAa,MAAM,GACxB,KAAK,YAAY;AAAA,IAAA;AAAA;AAAA,EAGL,iBAAiB4H,GAAc;AAAA,WAAA7sB,EAAA;AAC3C,WAAK,QAAQ6sB,GACb,KAAK,eAAeA,GACpB,KAAK,aAAa,QAAQA,GAC1B,KAAK,aAAa,MAAM,GACxB,KAAK,KAAK,cAAc,EAAE,QAAQA,GAAM,GACxC,KAAK,YAAY;AAAA,IAAA;AAAA;AAAA,EAGL,gBAAgB3qB,GAAsB;AAAA,WAAAlC,EAAA;AAG9C,UAFJkC,EAAM,eAAe,GAEjB,CAAC,KAAK;AAGR,YACE,KAAK,eACL,KAAK,qBAAqB,UAC1B,KAAK;AAEL,eAAK,aAAa;AAAA;AAElB;AAIJ,YAAM,KAAK,gBACN,KAAA,WAAW,aAAaA,EAAM,GAAG;AAAA,IAAA;AAAA;AAAA,EA0ElC,iBAAiB;AAAA,WAAAlC,EAAA;AAErB,WAAK,oBAAoB,IACrB,KAAK,iBACP,KAAK,aAAa,QAAQ,KAE5B,KAAK,eAAe,IACpB,KAAK,eAAe,MAEpB,KAAK,QAAQ,QAGb,KAAK,cAAc,GAEnB,MAAM,KAAK,gBAEN,KAAA,KAAK,cAAc,KAAK,YAAY;AAAA,IAAA;AAAA;AAAA,EA4BrC,eAAe;AAAA,WAAAA,EAAA;AACf,MAAA,KAAK,YAAY,KAAK,YAAY,CAAC,KAAK,kBAAkB,KAAK,UAOjE,CAAC,KAAK,eACN,CAAC,KAAK,qBAAqB,UAC3B,CAAC,KAAK,mBAKR,KAAK,SAAS,IAEL,SAAA,iBAAiB,aAAa,KAAK,uBAAuB;AAAA,IAAA;AAAA;AAAA,EAG/D,eAAe;AAAA,WAAAA,EAAA;AACf,MAAC,KAAK,WAIV,KAAK,SAAS,IAEL,SAAA,oBAAoB,aAAa,KAAK,uBAAuB,GAEtE,MAAM,KAAK,gBACX,KAAK,MAAM,GACX,KAAK,oBAAoB;AAAA,IAAA;AAAA;AAAA,EAG3B,IAAW,eAAe;AACxB,WAAO,KAAK;AAAA,EAAA;AAAA,EAoHN,kBAAkB8sB,GAAeC,GAAa;AAC/C,SAAA,aAAa,kBAAkBD,GAAOC,CAAG;AAAA,EAAA;AAAA,EAGxC,sBAAsB;AACtB,UAAAC,IAAqB,KAAK,aAAa,MAAM;AAE9C,SAAA,kBAAkBA,GAAoBA,CAAkB;AAAA,EAAA;AAAA,EAG/D,cAAc;AACZ,WAAI,KAAK,iBACA,KAAK,wBAAwB,IAE/B,KAAK,iBAAiB;AAAA,EAAA;AAAA,EAG/B,oBAAoB;AACb,SAAA,UAAU,YAAY,EAAE,GACxB,KAAA,UAAU,aAAa,KAAK,YAAY,GAC7C,KAAK,QAAQ,KAAK,cAClB,KAAK,eAAe,KAAK;AAAA,EAAA;AAAA,EAGnB,0BAAmC;AACzC,WAAI,KAAK,mBACA,KAAK,uBAAuB,IAEjC,KAAK,gBACA,KAAK,sBAAsB,IAE7B,KAAK,wBAAwB;AAAA,EAAA;AAAA,EAG9B,yBAAkC;AAEtC,WAAA,KAAK,aAAa,UAAU,MAC3B,KAAK,iBAAiB,QAAQ,KAAK,iBAAiB;AAAA,EAAA;AAAA,EAIjD,wBAAiC;AAChC,WAAA,KAAK,aAAa,UAAU;AAAA,EAAA;AAAA,EAG7B,0BAAmC;AAClC,WAAA,CAAC,CAAC,KAAK;AAAA,EAAA;AAAA,EAGR,mBAA4B;AAC3B,WAAA,KAAK,aAAa,UAAU;AAAA,EAAA;AAAA;AAAA,EAIrC,IAAI,WAA0B;AACxB,WAAA,KAAK,UAAU,WACV,KAAK,UAAU,WAEf1G,GAAuB;AAAA,MAC5B,cAAc,KAAK,YAAY,CAAC,KAAK,YAAY;AAAA,IAAA,CAClD;AAAA,EACH;AAAA,EAGF,IAAI,oBAA4B;AAC9B,WAAO7nB,EAAE,+BAA+B;AAAA,EAAA;AAAA,EAG1C,gBAAgB;AACd,WAAO,KAAK,WAAW,KAAK,YAAgB,IAAA;AAAA,EAAA;AAAA,EAG9C,iBAAiB;AACf,WAAO,KAAK,WAAW,KAAK,cAAkB,IAAA;AAAA,EAAA;AAAA,EAGhD,cAAc;AACR,IAAC,KAAK,kBASH,KAAA,UAAU,YAAY,EAAE,IAR7B,KAAK,UAAU;AAAA,MACb;AAAA,QACE,cAAc,KAAK,YAAY,CAAC,KAAK,YAAY;AAAA,MACnD;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAAA,EAGF;AAAA,EAGF,cAAcyD,GAAc;AAC1B,IAAAA,EAAM,eAAe;AAAA,EAAA;AAAA,EAGvB,sBAAsB;A3FnwBxB,QAAAvC;A2FowBQ,WAAC,KAAK,UAIWA,IAAA,KAAK,eAAL,gBAAAA,EAAiB,oBAH7B,KAAK;AAAA,EAIP;AAAA,EAGT,kBAAkB8jB,GAAc;AAC9B,YAAQA,GAAM;AAAA,MACZ,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT;AACS,eAAA;AAAA,IAAA;AAAA,EACX;AAAA,EAGF,iBAAiBA,GAAc;AAC7B,YAAQA,GAAM;AAAA,MACZ,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT;AACS,eAAA;AAAA,IAAA;AAAA,EACX;AAAA,EAGM,cAAc;A3FtyBxB,QAAA9jB,GAAAC,GAAAE;A2FuyBW,WAAAwc;AAAAA;AAAAA,eAEIlc,EAAK,SAAS,UAAU,KAAK,IAAI,IAAI;AAAA,MAC5C,mBAAmB,KAAK;AAAA,MACxB,mBAAmB,KAAK;AAAA,IAAA,CACzB,CAAC;AAAA,sBACc,KAAK,MAAM;AAAA;AAAA;AAAA,sCAGK,KAAK,WAAW,aAAa,EAAE;AAAA,sBAC/C,KAAK,QAAQ;AAAA;AAAA;AAAA,8BAGLoc,GAAU7c,IAAA,KAAK,oBAAoB,MAAzB,gBAAAA,EAA4B,EAAE,CAAC;AAAA,kBACrD,KAAK,QAAQ;AAAA,kBACb,KAAK,QAAQ;AAAA,mBACZ,KAAK,SAAS;AAAA,qBACZ,KAAK,YAAmB;AAAA,kBAC3B,KAAK,QAAQ;AAAA,cACjB,KAAK,iBAAiB,KAC1B,KAAK,iBACLC,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,SAAQ,EAAE;AAAA,oBACnB4c,GAAU1c,IAAA,KAAK,gBAAL,OAAAA,IAAoB,EAAE,CAAC;AAAA,aACxC,KAAK,SAAS,WAAW,MAAM;AAAA,cAC9B,KAAK,UAAU;AAAA,eACd,KAAK,WAAW;AAAA,eAChB,KAAK,WAAW;AAAA,iBACd,KAAK,aAAa;AAAA,eACpB,KAAK,WAAW;AAAA,EAAA;AAAA,EAGrB,oBAAoB;AAC1B,WAAI,KAAK,gBAAgB,UAAU,KAAK,WAAiB4jB,IAElDpH;AAAAA,eACIlc,EAAK,cAAc;AAAA,MAC1B,sBAAsB,KAAK;AAAA,IAAA,CAC5B,CAAC;AAAA;AAAA;AAAA,qBAGa2a,GAAU,OAAO,CAAC;AAAA,oBACnB,KAAK,QAAQ;AAAA,iBAChB,KAAK,gBAAgB;AAAA;AAAA,EAAA;AAAA,EAI5B,sBAAsB;A3Fr1BhC,QAAApb;A2Fs1BI,UAAMstB,IACJ,KAAK,eAAe,kBAAkB,KAAK,eAAe,UACtDC,IAAqB,KAAK,UAC5B5Q,iEACA;AAEA,WAAA2Q,KAA0B,CAAC,KAAK,SAC3B3Q;AAAAA,iBACIlc,EAAK,kBAAkB;AAAA,MAC9B,2BAA2B,KAAK;AAAA,IAAA,CACjC,CAAC;AAAA,UACA8sB,KACF5Q;AAAAA;AAAAA,mBAEW,KAAK,WAAW;AAAA,0CACO;AAAA,gBAIlC,KAAK,SACAA;AAAAA,iBACIlc,EAAK,kBAAkB;AAAA,MAC9B,2BAA2B,KAAK;AAAA,IAAA,CACjC,CAAC;AAAA,UACA8sB,KACF5Q;AAAAA,iBACS,KAAK,kBAAkB,KAAK,IAAI,CAAC;AAAA,oBAC9B,KAAK,SAAS,YAAY,gBAAgB;AAAA;AAAA,wBAEvC3c,IAAA,KAAK,0BAAL,OAAAA,IAA8Bob,GAAU,QAAQ,CAAC;AAAA,mBACrD,KAAK,iBAAiB;AAAA,8BACX;AAAA,gBAInB2I;AAAAA,EAAA;AAAA,EAGD,sBAAsB;AACrB,WAAApH;AAAAA,eACIlc,EAAK,iBAAiB,kBAAkB,KAAK,IAAI,IAAI;AAAA,MAC5D,2BAA2B,KAAK;AAAA,MAChC,2BAA2B,KAAK;AAAA,MAChC,yBAAyB,KAAK;AAAA,IAAA,CAC/B,CAAC;AAAA,QACA,KAAK,kBAAkB,CAAC,IAAI,KAAK,oBAAqB,CAAA;AAAA;AAAA,EAAA;AAAA,EAIpD,mBAAmB;AAClB,WAAAkc;AAAAA;AAAAA;AAAAA;AAAAA,gBAIK,KAAK,MAAM;AAAA,mBACR,KAAK,mBAAmB,SAAS,KAAK,UAAU;AAAA,yBAC1C,KAAK,qBAAqB,MAAM;AAAA,mBACtC,KAAK,YAAY;AAAA,aACvBE,EAAU,KAAK,IAAI,CAAC;AAAA,cACnBA,EAAU,KAAK,KAAK,CAAC;AAAA,mBAChBA,EAAU,KAAK,UAAU,CAAC;AAAA,2BAClB,KAAK,oBAAoB;AAAA,6BACvB,KAAK,oBAAoB;AAAA,qBACjC,KAAK,iBAAiB;AAAA,4BACf,KAAK,yBAAyB;AAAA,0BAChC,KAAK,iBAAiB;AAAA;AAAA;AAAA,EAAA;AAAA,EAK9C,iBAAiB;AACf,WAAOF,KAAe,KAAK,YAAc,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMzB,KAAK,MAAM;AAAA,sBACT,EAAK;AAAA,sBACL,KAAK,SAAS;AAAA;AAAA;AAAA,kBAGlB,KAAK,IAAI;AAAA,wBACH,KAAK,YAAY;AAAA,wBACjB,KAAK,YAAY;AAAA;AAAA;AAAA;AAAA,qBAIpBlc,EAAK,UAAU,WAAW,KAAK,IAAI,IAAI;AAAA,MAC9C,oBAAoB,KAAK;AAAA,MACzB,oBAAoB,KAAK;AAAA,MACzB,kBAAkB,KAAK;AAAA,MACvB,mBAAmB,KAAK;AAAA,MACxB,mBAAmB,KAAK,WAAW;AAAA,MACnC,iBAAiB,KAAK,WAAW;AAAA,MACjC,wBAAwB,KAAK;AAAA,IAAA,CAC9B,CAAC;AAAA,cACA,KAAK,YAAY,CAAC,IAAI,KAAK,oBAAqB,CAAA;AAAA;AAAA,YAElD,KAAK,iBAAkB,CAAA;AAAA;AAAA,UAEzB,KAAK,YACPkc;AAAAA;AAAAA,yBAEiBE,EAAU,KAAK,YAAY,CAAC;AAAA,0BAC3BA,EAAU,KAAK,IAA0B,CAAC;AAAA;AAAA,YAExD,KAAK,QAAQ;AAAA,2BACE;AAAA;AAAA,EAAA;AAG3B;AA15BkB0P,GAAA,SAASxP,EAAUC,EAAM;AA7B3C,IAAqBwQ,KAArBjB;AAC2BrP,GAAA;AAAA,EAAxB7E,GAAM,OAAO;AAAA,GADKmV,GACM,WAAA,cAAA;AACatQ,GAAA;AAAA,EAArC7E,GAAM,oBAAoB;AAAA,GAFRmV,GAEmB,WAAA,YAAA;AACTtQ,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAHRqQ,GAGU,WAAA,WAAA;AACetQ,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBqQ,GAIyB,WAAA,QAAA;AAChCtQ,GAAA;AAAA,EAAXC,EAAS;AAAA,GALSqQ,GAKP,WAAA,YAAA;AAEiBtQ,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAPRqQ,GAOU,WAAA,QAAA;AACjBtQ,GAAA;AAAA,EAAXC,EAAS;AAAA,GARSqQ,GAQP,WAAA,aAAA;AACAtQ,GAAA;AAAA,EAAXC,EAAS;AAAA,GATSqQ,GASP,WAAA,aAAA;AACiBtQ,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAVRqQ,GAUU,WAAA,MAAA;AACAtQ,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAXRqQ,GAWU,WAAA,kBAAA;AACAtQ,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAZRqQ,GAYU,WAAA,eAAA;AACDtQ,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAbPqQ,GAaS,WAAA,kBAAA;AACCtQ,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAdRqQ,GAcU,WAAA,SAAA;AACDtQ,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAfPqQ,GAeS,WAAA,YAAA;AACCtQ,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAhBRqQ,GAgBU,WAAA,aAAA;AACAtQ,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAjBRqQ,GAiBU,WAAA,cAAA;AACAtQ,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAlBRqQ,GAkBU,WAAA,aAAA;AACjBtQ,GAAA;AAAA,EAAXC,EAAS;AAAA,GAnBSqQ,GAmBP,WAAA,uBAAA;AACiBtQ,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GApBRqQ,GAoBU,WAAA,QAAA;AAEpBtQ,GAAA;AAAA,EAARgH,EAAM;AAAA,GAtBYsJ,GAsBV,WAAA,cAAA;AACAtQ,GAAA;AAAA,EAARgH,EAAM;AAAA,GAvBYsJ,GAuBV,WAAA,aAAA;AACAtQ,GAAA;AAAA,EAARgH,EAAM;AAAA,GAxBYsJ,GAwBV,WAAA,cAAA;;;;;;AC2CU,IAAAC,KAArB,cAA2CD,GAAoB;AAAA,EAC7D,SAAS;AACP,WAAO,KAAK,eAAe;AAAA,EAAA;AAE/B;AAJqBC,KAArBvQ,GAAA;AAAA,EADCG,EAAc,iBAAiB;AAAA,GACXoQ,EAAA;AChEd,MAAMC,GAA0B;AAAA,EAQrC,YAAYC,GAAoBrrB,GAAoC;AAPpE,SAAQ,eAA2C,MACnD,KAAQ,oBAAoB,IAC5B,KAAQ,eAAmC,MAC3C,KAAQ,gBAAgB,IAKtB,KAAK,aAAaqrB,GAClB,KAAK,WAAWrrB;AAAA,EAAA;AAAA,EAGlB,kBAAkB;AAChB,SAAK,eAAe,MACpB,KAAK,oBAAoB;AAAA,EAAA;AAAA,EAG3B,kBAA6B;AAC3B,YAAI,KAAK,qBAAqB,CAAC,KAAK,kBAC7B,KAAA,eAAe,KAAK,WAAW;AAAA,MAClC,KAAK,SAAS;AAAA,IAChB,GACA,KAAK,oBAAoB,KAEpB,MAAM,KAAK,KAAK,YAAY;AAAA,EAAA;AAAA,EAGrC,eAAe+F,GAAe;A7F7ChC,QAAArI,GAAAC;A6F8CU,UAAAmlB,IAAQ,KAAK,gBAAgB;AAGnC,IAAI,KAAK,iBACF,KAAA,aAAa,aAAa,YAAY,IAAI,GAC1C,KAAA,aAAa,aAAa,iBAAiB,OAAO,IAIrD/c,IAAQ,IACVA,IAAQ+c,EAAM,SAAS,IACd/c,KAAS+c,EAAM,WAChB/c,IAAA,IAIV,KAAK,gBAAgBA,GAChB,KAAA,eAAe+c,EAAM/c,CAAK,GAE3B,KAAK,iBACF,KAAA,aAAa,aAAa,YAAY,GAAG,GACzC,KAAA,aAAa,aAAa,iBAAiB,MAAM,GACtD,KAAK,aAAa,MAAM,IAGxBpI,KAAAD,IAAA,KAAK,UAAS,sBAAd,QAAAC,EAAA;AAAA,MAAAD;AAAA,MACE,KAAK;AAAA,MACLqI,IAAQ;AAAA,MACR+c,EAAM;AAAA;AAAA,EAEV;AAAA,EAGF,gBAAgBwI,GAA+B;AACvC,UAAAxI,IAAQ,KAAK,gBAAgB;AAGnC,IAAAA,EAAM,QAAQ,CAAQE,MAAA;AACpB,YAAMuI,IAAWvI;AACR,MAAAuI,EAAA,aAAa,YAAY,IAAI,GAC7BA,EAAA,aAAa,QAAQ,UAAU,GAC/BA,EAAA,aAAa,iBAAiB,OAAO;AAAA,IAAA,CAC/C;AAGD,QAAIC,IAAa;AACjB,QAAIF,GAAiB;AACb,YAAAG,IAAmB3I,EAAM,QAAQwI,CAAe;AACtD,MAAIG,MAAqB,OACVD,IAAAC;AAAA,IACf;AAGE,IAAA3I,EAAM,SAAS,KACjB,KAAK,eAAe0I,CAAU;AAAA,EAChC;AAAA,EAGF,cAAcvrB,GAA+B;A7FxG/C,QAAAvC,GAAAC;A6FyGI,YAAQsC,EAAM,KAAK;AAAA,MACjB,KAAK;AACH,eAAAA,EAAM,eAAe,GAChB,KAAA,eAAe,KAAK,gBAAgB,CAAC,GACnC;AAAA,MAET,KAAK;AACH,eAAAA,EAAM,eAAe,GAChB,KAAA,eAAe,KAAK,gBAAgB,CAAC,GACnC;AAAA,MAET,KAAK;AACH,eAAAA,EAAM,eAAe,GAEjBA,EAAM,WACH,KAAA,eAAe,KAAK,gBAAgB,CAAC,IAErC,KAAA,eAAe,KAAK,gBAAgB,CAAC,GAErC;AAAA,MAET,KAAK;AACH,eAAAA,EAAM,eAAe,GACrB,KAAK,eAAe,CAAC,GACd;AAAA,MAET,KAAK;AACH,eAAAA,EAAM,eAAe,GACrB,KAAK,eAAe,KAAK,gBAAgB,EAAE,SAAS,CAAC,GAC9C;AAAA,MAET,KAAK;AAAA,MACL,KAAK;AACH,eAAAA,EAAM,eAAe,GACjB,KAAK,iBACP,KAAK,aAAa,MAAM,IACnBtC,KAAAD,IAAA,KAAA,UAAS,gBAAT,QAAAC,EAAA,KAAAD,GAAuB,KAAK,gBAE5B;AAAA,MAET;AACS,eAAA;AAAA,IAAA;AAAA,EACX;AAAA,EAGF,QAAQ;AACN,SAAK,eAAe,MACpB,KAAK,gBAAgB;AAAA,EAAA;AAAA,EAGvB,IAAI,cAAc;AAChB,WAAO,KAAK;AAAA,EAAA;AAAA,EAGd,IAAI,eAAe;AACjB,WAAO,KAAK;AAAA,EAAA;AAEhB;AAKgB,SAAAguB,GACdL,GACAM,GACM;AACF,MAAAC,IAAaP,EAAU,cAAc,aAAa;AACtD,EAAKO,MACUA,IAAA,SAAS,cAAc,KAAK,GAC9BA,EAAA,aAAa,aAAa,QAAQ,GAClCA,EAAA,aAAa,eAAe,MAAM,GAC7CA,EAAW,MAAM,WAAW,YAC5BA,EAAW,MAAM,OAAO,YACxBA,EAAW,MAAM,QAAQ,OACzBA,EAAW,MAAM,SAAS,OAC1BA,EAAW,MAAM,WAAW,UAC5BP,EAAU,YAAYO,CAAU,IAGlCA,EAAW,cAAcD;AAC3B;AAKO,SAASE,GACdR,GACArI,GACA8I,GACAC,GACM;A7FnMR,MAAAruB;A6FqME,QAAMiuB,IAAe,KADRjuB,IAAAslB,EAAK,gBAAL,gBAAAtlB,EAAkB,WAAU,EACb,KAAKouB,CAAQ,OAAOC,CAAK;AACrD,EAAAL,GAAyBL,GAAWM,CAAY;AAClD;AAKgB,SAAAK,GACdX,GACArrB,GACA;AACM,QAAAisB,IAAU,IAAIb,GAA0BC,GAAWptB,EAAAC,EAAA,IACpD8B,IADoD;AAAA,IAEvD,mBAAmB,CAACgjB,GAAM8I,GAAUC,MAAU;A7FlNlD,UAAAruB;A6FmNwB,MAAAmuB,GAAAR,GAAWrI,GAAM8I,GAAUC,CAAK,IAC1CruB,IAAAsC,EAAA,sBAAA,QAAAtC,EAAA,KAAAsC,GAAoBgjB,GAAM8I,GAAUC;AAAA,IAAK;AAAA,EACnD,EACD;AAEM,SAAA;AAAA,IACL,SAAAE;AAAA,IACA,eAAe,CAAChsB,MAAyBgsB,EAAQ,cAAchsB,CAAK;AAAA,IACpE,iBAAiB,MAAMgsB,EAAQ,gBAAgB;AAAA,IAC/C,iBAAiB,CAACX,MAChBW,EAAQ,gBAAgBX,CAAe;AAAA,IACzC,OAAO,MAAMW,EAAQ,MAAM;AAAA,EAC7B;AACF;ACxNA,MAAMC,KAAM,KAAK,KACXC,KAAM,KAAK,KACXC,KAAQ,KAAK,OACbC,KAAQ,KAAK,OACbC,KAAe,CAAAluB,OAAM;AAAA,EACzB,GAAGA;AAAA,EACH,GAAGA;AACL,IACMmuB,KAAkB;AAAA,EACtB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,KAAK;AACP,GACMC,KAAuB;AAAA,EAC3B,OAAO;AAAA,EACP,KAAK;AACP;AACA,SAASC,GAAM5B,GAAO9qB,GAAO+qB,GAAK;AAChC,SAAOqB,GAAItB,GAAOqB,GAAInsB,GAAO+qB,CAAG,CAAC;AACnC;AACA,SAAS4B,GAAS3sB,GAAO0lB,GAAO;AAC9B,SAAO,OAAO1lB,KAAU,aAAaA,EAAM0lB,CAAK,IAAI1lB;AACtD;AACA,SAAS4sB,GAAQC,GAAW;AAC1B,SAAOA,EAAU,MAAM,GAAG,EAAE,CAAC;AAC/B;AACA,SAASC,GAAaD,GAAW;AAC/B,SAAOA,EAAU,MAAM,GAAG,EAAE,CAAC;AAC/B;AACA,SAASE,GAAgBC,GAAM;AAC7B,SAAOA,MAAS,MAAM,MAAM;AAC9B;AACA,SAASC,GAAcD,GAAM;AAC3B,SAAOA,MAAS,MAAM,WAAW;AACnC;AACA,MAAME,KAA0B,oBAAI,IAAI,CAAC,OAAO,QAAQ,CAAC;AACzD,SAASC,GAAYN,GAAW;AAC9B,SAAOK,GAAW,IAAIN,GAAQC,CAAS,CAAC,IAAI,MAAM;AACpD;AACA,SAASO,GAAiBP,GAAW;AACnC,SAAOE,GAAgBI,GAAYN,CAAS,CAAC;AAC/C;AACA,SAASQ,GAAkBR,GAAWS,GAAOC,GAAK;AAChD,EAAIA,MAAQ,WACVA,IAAM;AAER,QAAMC,IAAYV,GAAaD,CAAS,GAClCY,IAAgBL,GAAiBP,CAAS,GAC1ClQ,IAASsQ,GAAcQ,CAAa;AAC1C,MAAIC,IAAoBD,MAAkB,MAAMD,OAAeD,IAAM,QAAQ,WAAW,UAAU,SAASC,MAAc,UAAU,WAAW;AAC9I,SAAIF,EAAM,UAAU3Q,CAAM,IAAI2Q,EAAM,SAAS3Q,CAAM,MACjD+Q,IAAoBC,GAAqBD,CAAiB,IAErD,CAACA,GAAmBC,GAAqBD,CAAiB,CAAC;AACpE;AACA,SAASE,GAAsBf,GAAW;AACxC,QAAMgB,IAAoBF,GAAqBd,CAAS;AACxD,SAAO,CAACiB,GAA8BjB,CAAS,GAAGgB,GAAmBC,GAA8BD,CAAiB,CAAC;AACvH;AACA,SAASC,GAA8BjB,GAAW;AAChD,SAAOA,EAAU,QAAQ,cAAc,CAAAW,MAAaf,GAAqBe,CAAS,CAAC;AACrF;AACA,MAAMO,KAAc,CAAC,QAAQ,OAAO,GAC9BC,KAAc,CAAC,SAAS,MAAM,GAC9BC,KAAc,CAAC,OAAO,QAAQ,GAC9BC,KAAc,CAAC,UAAU,KAAK;AACpC,SAASC,GAAYC,GAAMC,GAASd,GAAK;AACvC,UAAQa,GAAI;AAAA,IACV,KAAK;AAAA,IACL,KAAK;AACH,aAAIb,IAAYc,IAAUL,KAAcD,KACjCM,IAAUN,KAAcC;AAAA,IACjC,KAAK;AAAA,IACL,KAAK;AACH,aAAOK,IAAUJ,KAAcC;AAAA,IACjC;AACE,aAAO,CAAE;AAAA,EACf;AACA;AACA,SAASI,GAA0BzB,GAAW0B,GAAeC,GAAWjB,GAAK;AAC3E,QAAMC,IAAYV,GAAaD,CAAS;AACxC,MAAI4B,IAAON,GAAYvB,GAAQC,CAAS,GAAG2B,MAAc,SAASjB,CAAG;AACrE,SAAIC,MACFiB,IAAOA,EAAK,IAAI,CAAAL,MAAQA,IAAO,MAAMZ,CAAS,GAC1Ce,MACFE,IAAOA,EAAK,OAAOA,EAAK,IAAIX,EAA6B,CAAC,KAGvDW;AACT;AACA,SAASd,GAAqBd,GAAW;AACvC,SAAOA,EAAU,QAAQ,0BAA0B,CAAAuB,MAAQ5B,GAAgB4B,CAAI,CAAC;AAClF;AACA,SAASM,GAAoBC,GAAS;AACpC,SAAOxwB,EAAA;AAAA,IACL,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,KACHwwB;AAEP;AACA,SAASC,GAAiBD,GAAS;AACjC,SAAO,OAAOA,KAAY,WAAWD,GAAoBC,CAAO,IAAI;AAAA,IAClE,KAAKA;AAAA,IACL,OAAOA;AAAA,IACP,QAAQA;AAAA,IACR,MAAMA;AAAA,EACP;AACH;AACA,SAASE,GAAiBC,GAAM;AAC9B,QAAM;AAAA,IACJ,GAAApwB;AAAA,IACA,GAAAT;AAAA,IACA,OAAA8wB;AAAA,IACA,QAAAC;AAAA,EACJ,IAAMF;AACJ,SAAO;AAAA,IACL,OAAAC;AAAA,IACA,QAAAC;AAAA,IACA,KAAK/wB;AAAA,IACL,MAAMS;AAAA,IACN,OAAOA,IAAIqwB;AAAA,IACX,QAAQ9wB,IAAI+wB;AAAA,IACZ,GAAAtwB;AAAA,IACA,GAAAT;AAAA,EACD;AACH;ACrIA,SAASgxB,GAA2BvpB,GAAMmnB,GAAWU,GAAK;AACxD,MAAI;AAAA,IACF,WAAA2B;AAAA,IACA,UAAAC;AAAA,EACJ,IAAMzpB;AACJ,QAAM0pB,IAAWjC,GAAYN,CAAS,GAChCY,IAAgBL,GAAiBP,CAAS,GAC1CwC,IAAcpC,GAAcQ,CAAa,GACzCW,IAAOxB,GAAQC,CAAS,GACxByC,IAAaF,MAAa,KAC1BG,IAAUL,EAAU,IAAIA,EAAU,QAAQ,IAAIC,EAAS,QAAQ,GAC/DK,IAAUN,EAAU,IAAIA,EAAU,SAAS,IAAIC,EAAS,SAAS,GACjEM,IAAcP,EAAUG,CAAW,IAAI,IAAIF,EAASE,CAAW,IAAI;AACzE,MAAIK;AACJ,UAAQtB,GAAI;AAAA,IACV,KAAK;AACH,MAAAsB,IAAS;AAAA,QACP,GAAGH;AAAA,QACH,GAAGL,EAAU,IAAIC,EAAS;AAAA,MAC3B;AACD;AAAA,IACF,KAAK;AACH,MAAAO,IAAS;AAAA,QACP,GAAGH;AAAA,QACH,GAAGL,EAAU,IAAIA,EAAU;AAAA,MAC5B;AACD;AAAA,IACF,KAAK;AACH,MAAAQ,IAAS;AAAA,QACP,GAAGR,EAAU,IAAIA,EAAU;AAAA,QAC3B,GAAGM;AAAA,MACJ;AACD;AAAA,IACF,KAAK;AACH,MAAAE,IAAS;AAAA,QACP,GAAGR,EAAU,IAAIC,EAAS;AAAA,QAC1B,GAAGK;AAAA,MACJ;AACD;AAAA,IACF;AACE,MAAAE,IAAS;AAAA,QACP,GAAGR,EAAU;AAAA,QACb,GAAGA,EAAU;AAAA,MACd;AAAA,EACP;AACE,UAAQpC,GAAaD,CAAS,GAAC;AAAA,IAC7B,KAAK;AACH,MAAA6C,EAAOjC,CAAa,KAAKgC,KAAelC,KAAO+B,IAAa,KAAK;AACjE;AAAA,IACF,KAAK;AACH,MAAAI,EAAOjC,CAAa,KAAKgC,KAAelC,KAAO+B,IAAa,KAAK;AACjE;AAAA,EACN;AACE,SAAOI;AACT;AASA,MAAMC,KAAkB,CAAOT,GAAWC,GAAUrK,MAAW9mB,EAAA;AAC7D,QAAM;AAAA,IACJ,WAAA6uB,IAAY;AAAA,IACZ,UAAA+C,IAAW;AAAA,IACX,YAAAC,IAAa,CAAE;AAAA,IACf,UAAAC;AAAA,EACJ,IAAMhL,GACEiL,IAAkBF,EAAW,OAAO,OAAO,GAC3CtC,IAAM,MAAOuC,EAAS,SAAS,OAAO,SAASA,EAAS,MAAMX,CAAQ;AAC5E,MAAI7B,IAAQ,MAAMwC,EAAS,gBAAgB;AAAA,IACzC,WAAAZ;AAAA,IACA,UAAAC;AAAA,IACA,UAAAS;AAAA,EACJ,CAAG,GACG;AAAA,IACF,GAAAlxB;AAAA,IACA,GAAAT;AAAA,EACD,IAAGgxB,GAA2B3B,GAAOT,GAAWU,CAAG,GAChDyC,IAAoBnD,GACpBoD,IAAiB,CAAE,GACnBC,IAAa;AACjB,WAASlzB,IAAI,GAAGA,IAAI+yB,EAAgB,QAAQ/yB,KAAK;AAC/C,UAAM;AAAA,MACJ,MAAA+C;AAAA,MACA,IAAAkQ;AAAA,IACN,IAAQ8f,EAAgB/yB,CAAC,GACf;AAAA,MACJ,GAAGmzB;AAAA,MACH,GAAGC;AAAA,MACH,MAAA/tB;AAAA,MACA,OAAAguB;AAAA,IACD,IAAG,MAAMpgB,EAAG;AAAA,MACX,GAAAvR;AAAA,MACA,GAAAT;AAAA,MACA,kBAAkB4uB;AAAA,MAClB,WAAWmD;AAAA,MACX,UAAAJ;AAAA,MACA,gBAAAK;AAAA,MACA,OAAA3C;AAAA,MACA,UAAAwC;AAAA,MACA,UAAU;AAAA,QACR,WAAAZ;AAAA,QACA,UAAAC;AAAA,MACR;AAAA,IACA,CAAK;AACD,IAAAzwB,IAAIyxB,KAAS,OAAOA,IAAQzxB,GAC5BT,IAAImyB,KAAS,OAAOA,IAAQnyB,GAC5BgyB,IAAiB/xB,EAAAC,EAAA,IACZ8xB,IADY;AAAA,MAEf,CAAClwB,CAAI,GAAG5B,IAAA,IACH8xB,EAAelwB,CAAI,IACnBsC;AAAA,IAEN,IACGguB,KAASH,KAAc,OACzBA,KACI,OAAOG,KAAU,aACfA,EAAM,cACRL,IAAoBK,EAAM,YAExBA,EAAM,UACR/C,IAAQ+C,EAAM,UAAU,KAAO,MAAMP,EAAS,gBAAgB;AAAA,MAC5D,WAAAZ;AAAA,MACA,UAAAC;AAAA,MACA,UAAAS;AAAA,IACZ,CAAW,IAAIS,EAAM,QAEZ;AAAA,MACC,GAAA3xB;AAAA,MACA,GAAAT;AAAA,IACD,IAAGgxB,GAA2B3B,GAAO0C,GAAmBzC,CAAG,IAE9DvwB,IAAI;AAAA,EAEV;AACE,SAAO;AAAA,IACL,GAAA0B;AAAA,IACA,GAAAT;AAAA,IACA,WAAW+xB;AAAA,IACX,UAAAJ;AAAA,IACA,gBAAAK;AAAA,EACD;AACH;AAUA,SAAeK,GAAezO,GAAO5hB,GAAS;AAAA,SAAAjC,EAAA;AAC5C,QAAIuyB;AACJ,IAAItwB,MAAY,WACdA,IAAU,CAAE;AAEd,UAAM;AAAA,MACJ,GAAAvB;AAAA,MACA,GAAAT;AAAA,MACA,UAAA6xB;AAAA,MACA,OAAAxC;AAAA,MACA,UAAAkD;AAAA,MACA,UAAAZ;AAAA,IACJ,IAAM/N,GACE;AAAA,MACJ,UAAA4O,IAAW;AAAA,MACX,cAAAC,IAAe;AAAA,MACf,gBAAAC,IAAiB;AAAA,MACjB,aAAAC,IAAc;AAAA,MACd,SAAAjC,IAAU;AAAA,IACd,IAAMhC,GAAS1sB,GAAS4hB,CAAK,GACrBgP,IAAgBjC,GAAiBD,CAAO,GAExC5N,IAAUyP,EAASI,IADND,MAAmB,aAAa,cAAc,aACbA,CAAc,GAC5DG,IAAqBjC,GAAiB,MAAMiB,EAAS,gBAAgB;AAAA,MACzE,UAAWS,IAAwB,MAAOT,EAAS,aAAa,OAAO,SAASA,EAAS,UAAU/O,CAAO,MAAO,QAAOwP,IAAgCxP,IAAUA,EAAQ,mBAAmB,MAAO+O,EAAS,sBAAsB,OAAO,SAASA,EAAS,mBAAmBU,EAAS,QAAQ;AAAA,MAChS,UAAAC;AAAA,MACA,cAAAC;AAAA,MACA,UAAAd;AAAA,IACJ,CAAG,CAAC,GACId,IAAO6B,MAAmB,aAAa;AAAA,MAC3C,GAAAjyB;AAAA,MACA,GAAAT;AAAA,MACA,OAAOqvB,EAAM,SAAS;AAAA,MACtB,QAAQA,EAAM,SAAS;AAAA,IACxB,IAAGA,EAAM,WACJyD,IAAe,MAAOjB,EAAS,mBAAmB,OAAO,SAASA,EAAS,gBAAgBU,EAAS,QAAQ,GAC5GQ,KAAe,MAAOlB,EAAS,aAAa,OAAO,SAASA,EAAS,UAAUiB,CAAY,MAAO,MAAOjB,EAAS,YAAY,OAAO,SAASA,EAAS,SAASiB,CAAY,MAAO;AAAA,MACvL,GAAG;AAAA,MACH,GAAG;AAAA,IACP,IAAM;AAAA,MACF,GAAG;AAAA,MACH,GAAG;AAAA,IACJ,GACKE,IAAoBpC,GAAiBiB,EAAS,wDAAwD,MAAMA,EAAS,sDAAsD;AAAA,MAC/K,UAAAU;AAAA,MACA,MAAA1B;AAAA,MACA,cAAAiC;AAAA,MACA,UAAAnB;AAAA,IACD,CAAA,IAAId,CAAI;AACT,WAAO;AAAA,MACL,MAAMgC,EAAmB,MAAMG,EAAkB,MAAMJ,EAAc,OAAOG,EAAY;AAAA,MACxF,SAASC,EAAkB,SAASH,EAAmB,SAASD,EAAc,UAAUG,EAAY;AAAA,MACpG,OAAOF,EAAmB,OAAOG,EAAkB,OAAOJ,EAAc,QAAQG,EAAY;AAAA,MAC5F,QAAQC,EAAkB,QAAQH,EAAmB,QAAQD,EAAc,SAASG,EAAY;AAAA,IACjG;AAAA,EACH;AAAA;AAOA,MAAME,KAAQ,CAAAjxB,OAAY;AAAA,EACxB,MAAM;AAAA,EACN,SAAAA;AAAA,EACM,GAAG4hB,GAAO;AAAA,WAAA7jB,EAAA;AACd,YAAM;AAAA,QACJ,GAAAU;AAAA,QACA,GAAAT;AAAA,QACA,WAAA4uB;AAAA,QACA,OAAAS;AAAA,QACA,UAAAwC;AAAA,QACA,UAAAU;AAAA,QACA,gBAAAP;AAAA,MACN,IAAQpO,GAEE;AAAA,QACJ,SAAAd;AAAA,QACA,SAAA4N,IAAU;AAAA,MACX,IAAGhC,GAAS1sB,GAAS4hB,CAAK,KAAK,CAAE;AAClC,UAAId,KAAW;AACb,eAAO,CAAE;AAEX,YAAM8P,IAAgBjC,GAAiBD,CAAO,GACxCe,IAAS;AAAA,QACb,GAAAhxB;AAAA,QACA,GAAAT;AAAA,MACD,GACK+uB,IAAOI,GAAiBP,CAAS,GACjClQ,IAASsQ,GAAcD,CAAI,GAC3BmE,IAAkB,MAAMrB,EAAS,cAAc/O,CAAO,GACtDqQ,IAAUpE,MAAS,KACnBqE,IAAUD,IAAU,QAAQ,QAC5BE,IAAUF,IAAU,WAAW,SAC/BG,IAAaH,IAAU,iBAAiB,eACxCI,IAAUlE,EAAM,UAAU3Q,CAAM,IAAI2Q,EAAM,UAAUN,CAAI,IAAI0C,EAAO1C,CAAI,IAAIM,EAAM,SAAS3Q,CAAM,GAChG8U,IAAY/B,EAAO1C,CAAI,IAAIM,EAAM,UAAUN,CAAI,GAC/C0E,KAAoB,MAAO5B,EAAS,mBAAmB,OAAO,SAASA,EAAS,gBAAgB/O,CAAO;AAC7G,UAAI4Q,KAAaD,KAAoBA,GAAkBH,CAAU,IAAI;AAGrE,OAAI,CAACI,MAAc,EAAE,MAAO7B,EAAS,aAAa,OAAO,SAASA,EAAS,UAAU4B,EAAiB,QACpGC,KAAanB,EAAS,SAASe,CAAU,KAAKjE,EAAM,SAAS3Q,CAAM;AAErE,YAAMiV,KAAoBJ,IAAU,IAAIC,IAAY,GAI9CI,KAAyBF,KAAa,IAAIR,EAAgBxU,CAAM,IAAI,IAAI,GACxEmV,IAAa3F,GAAI0E,EAAcQ,CAAO,GAAGQ,EAAsB,GAC/DE,KAAa5F,GAAI0E,EAAcS,CAAO,GAAGO,EAAsB,GAI/DG,KAAQF,GACR1F,IAAMuF,KAAaR,EAAgBxU,CAAM,IAAIoV,IAC7CE,IAASN,KAAa,IAAIR,EAAgBxU,CAAM,IAAI,IAAIiV,IACxDrJ,IAASmE,GAAMsF,IAAOC,GAAQ7F,CAAG,GAMjC8F,IAAkB,CAACjC,EAAe,SAASnD,GAAaD,CAAS,KAAK,QAAQoF,MAAW1J,KAAU+E,EAAM,UAAU3Q,CAAM,IAAI,KAAKsV,IAASD,KAAQF,IAAaC,MAAcZ,EAAgBxU,CAAM,IAAI,IAAI,GAC5MwV,IAAkBD,IAAkBD,IAASD,KAAQC,IAASD,KAAQC,IAAS7F,IAAM;AAC3F,aAAO;AAAA,QACL,CAACY,CAAI,GAAG0C,EAAO1C,CAAI,IAAImF;AAAA,QACvB,MAAMh0B,EAAA;AAAA,UACJ,CAAC6uB,CAAI,GAAGzE;AAAA,UACR,cAAc0J,IAAS1J,IAAS4J;AAAA,WAC5BD,KAAmB;AAAA,UACrB,iBAAAC;AAAA,QACD;AAAA,QAEH,OAAOD;AAAA,MACR;AAAA,IACL;AAAA;AACA,IA+GME,KAAO,SAAUnyB,GAAS;AAC9B,SAAIA,MAAY,WACdA,IAAU,CAAE,IAEP;AAAA,IACL,MAAM;AAAA,IACN,SAAAA;AAAA,IACM,GAAG4hB,GAAO;AAAA,aAAA7jB,EAAA;AACd,YAAIq0B,GAAuBC;AAC3B,cAAM;AAAA,UACJ,WAAAzF;AAAA,UACA,gBAAAoD;AAAA,UACA,OAAA3C;AAAA,UACA,kBAAAiF;AAAA,UACA,UAAAzC;AAAA,UACA,UAAAU;AAAA,QACR,IAAU3O,GASAlkB,IAAAgvB,GAAS1sB,GAAS4hB,CAAK,GAPzB;AAAA,oBAAU2Q,IAAgB;AAAA,UAC1B,WAAWC,IAAiB;AAAA,UAC5B,oBAAoBC;AAAA,UACpB,kBAAAC,IAAmB;AAAA,UACnB,2BAAAC,IAA4B;AAAA,UAC5B,eAAArE,IAAgB;AAAA,Q/F7axB,I+F+aU5wB,GADCk1B,IAAA9M,GACDpoB,GADC;AAAA,UANH;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA;AAQF,aAAK00B,IAAwBpC,EAAe,UAAU,QAAQoC,EAAsB;AAClF,iBAAO,CAAE;AAEX,cAAMjE,IAAOxB,GAAQC,CAAS,GACxBiG,IAAkB3F,GAAYoF,CAAgB,GAC9CQ,IAAkBnG,GAAQ2F,CAAgB,MAAMA,GAChDhF,IAAM,MAAOuC,EAAS,SAAS,OAAO,SAASA,EAAS,MAAMU,EAAS,QAAQ,GAC/EwC,IAAqBN,MAAgCK,KAAmB,CAACxE,IAAgB,CAACZ,GAAqB4E,CAAgB,CAAC,IAAI3E,GAAsB2E,CAAgB,IAC1KU,KAA+BL,MAA8B;AACnE,QAAI,CAACF,KAA+BO,MAClCD,EAAmB,KAAK,GAAG1E,GAA0BiE,GAAkBhE,GAAeqE,GAA2BrF,CAAG,CAAC;AAEvH,cAAM2F,KAAa,CAACX,GAAkB,GAAGS,CAAkB,GACrDG,KAAW,MAAM7C,GAAezO,GAAOgR,CAAqB,GAC5DO,KAAY,CAAE;AACpB,YAAIC,MAAkBf,IAAuBrC,EAAe,SAAS,OAAO,SAASqC,EAAqB,cAAc,CAAE;AAI1H,YAHIE,KACFY,GAAU,KAAKD,GAAS/E,CAAI,CAAC,GAE3BqE,GAAgB;AAClB,gBAAMa,IAAQjG,GAAkBR,GAAWS,GAAOC,CAAG;AACrD,UAAA6F,GAAU,KAAKD,GAASG,EAAM,CAAC,CAAC,GAAGH,GAASG,EAAM,CAAC,CAAC,CAAC;AAAA,QAC7D;AAOM,YANAD,IAAgB,CAAC,GAAGA,GAAe;AAAA,UACjC,WAAAxG;AAAA,UACA,WAAAuG;AAAA,QACR,CAAO,GAGG,CAACA,GAAU,MAAM,CAAAhF,MAAQA,KAAQ,CAAC,GAAG;AACvC,cAAImF,IAAuBC;AAC3B,gBAAMhL,OAAe+K,KAAwBtD,EAAe,SAAS,OAAO,SAASsD,GAAsB,UAAU,KAAK,GACpHE,IAAgBP,GAAW1K,CAAS;AAC1C,cAAIiL,MAEE,EAD4BhB,MAAmB,cAAcK,MAAoB3F,GAAYsG,CAAa,IAAI;AAAA;AAAA,UAIlHJ,EAAc,MAAM,CAAA91B,MAAK4vB,GAAY5vB,EAAE,SAAS,MAAMu1B,IAAkBv1B,EAAE,UAAU,CAAC,IAAI,IAAI,EAAI;AAE/F,mBAAO;AAAA,cACL,MAAM;AAAA,gBACJ,OAAOirB;AAAA,gBACP,WAAW6K;AAAA,cACZ;AAAA,cACD,OAAO;AAAA,gBACL,WAAWI;AAAA,cAC3B;AAAA,YACa;AAML,cAAIC,KAAkBF,KAAwBH,EAAc,OAAO,CAAA91B,MAAKA,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE,KAAK,CAACH,GAAGM,MAAMN,EAAE,UAAU,CAAC,IAAIM,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,MAAM,OAAO,SAAS81B,GAAsB;AAG1L,cAAI,CAACE;AACH,oBAAQf,GAAgB;AAAA,cACtB,KAAK,WACH;AACE,oBAAIgB;AACJ,sBAAM9G,KAAa8G,IAAyBN,EAAc,OAAO,CAAA91B,MAAK;AACpE,sBAAI01B,IAA8B;AAChC,0BAAMW,IAAkBzG,GAAY5vB,EAAE,SAAS;AAC/C,2BAAOq2B,MAAoBd;AAAA;AAAA,oBAG3Bc,MAAoB;AAAA,kBACxC;AACkB,yBAAO;AAAA,gBACzB,CAAiB,EAAE,IAAI,CAAAr2B,MAAK,CAACA,EAAE,WAAWA,EAAE,UAAU,OAAO,CAAA41B,MAAYA,IAAW,CAAC,EAAE,OAAO,CAAC1N,GAAK0N,OAAa1N,IAAM0N,IAAU,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC/1B,GAAGM,MAAMN,EAAE,CAAC,IAAIM,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,OAAO,SAASi2B,EAAuB,CAAC;AACjM,gBAAI9G,MACF6G,IAAiB7G;AAEnB;AAAA,cAChB;AAAA,cACY,KAAK;AACH,gBAAA6G,IAAiBnB;AACjB;AAAA,YACd;AAEQ,cAAI1F,MAAc6G;AAChB,mBAAO;AAAA,cACL,OAAO;AAAA,gBACL,WAAWA;AAAA,cACzB;AAAA,YACW;AAAA,QAEX;AACM,eAAO,CAAE;AAAA,MACf;AAAA;AAAA,EACG;AACH,GA0MMG,KAA2B,oBAAI,IAAI,CAAC,QAAQ,KAAK,CAAC;AAKxD,SAAeC,GAAqBjS,GAAO5hB,GAAS;AAAA,SAAAjC,EAAA;AAClD,UAAM;AAAA,MACJ,WAAA6uB;AAAA,MACA,UAAAiD;AAAA,MACA,UAAAU;AAAA,IACJ,IAAM3O,GACE0L,IAAM,MAAOuC,EAAS,SAAS,OAAO,SAASA,EAAS,MAAMU,EAAS,QAAQ,GAC/EpC,IAAOxB,GAAQC,CAAS,GACxBW,IAAYV,GAAaD,CAAS,GAClCyC,IAAanC,GAAYN,CAAS,MAAM,KACxCkH,IAAgBF,GAAY,IAAIzF,CAAI,IAAI,KAAK,GAC7C4F,IAAiBzG,KAAO+B,IAAa,KAAK,GAC1C2E,IAAWtH,GAAS1sB,GAAS4hB,CAAK;AAGxC,QAAI;AAAA,MACF,UAAAqS;AAAA,MACA,WAAAC;AAAA,MACA,eAAA1G;AAAA,IACJ,IAAM,OAAOwG,KAAa,WAAW;AAAA,MACjC,UAAUA;AAAA,MACV,WAAW;AAAA,MACX,eAAe;AAAA,IACnB,IAAM;AAAA,MACF,UAAUA,EAAS,YAAY;AAAA,MAC/B,WAAWA,EAAS,aAAa;AAAA,MACjC,eAAeA,EAAS;AAAA,IACzB;AACD,WAAIzG,KAAa,OAAOC,KAAkB,aACxC0G,IAAY3G,MAAc,QAAQC,IAAgB,KAAKA,IAElD6B,IAAa;AAAA,MAClB,GAAG6E,IAAYH;AAAA,MACf,GAAGE,IAAWH;AAAA,IAClB,IAAM;AAAA,MACF,GAAGG,IAAWH;AAAA,MACd,GAAGI,IAAYH;AAAA,IAChB;AAAA,EACH;AAAA;AASA,MAAMzL,KAAS,SAAUtoB,GAAS;AAChC,SAAIA,MAAY,WACdA,IAAU,IAEL;AAAA,IACL,MAAM;AAAA,IACN,SAAAA;AAAA,IACM,GAAG4hB,GAAO;AAAA,aAAA7jB,EAAA;AACd,YAAIo2B,GAAuB/B;AAC3B,cAAM;AAAA,UACJ,GAAA3zB;AAAA,UACA,GAAAT;AAAA,UACA,WAAA4uB;AAAA,UACA,gBAAAoD;AAAA,QACR,IAAUpO,GACEwS,IAAa,MAAMP,GAAqBjS,GAAO5hB,CAAO;AAI5D,eAAI4sB,QAAgBuH,IAAwBnE,EAAe,WAAW,OAAO,SAASmE,EAAsB,eAAe/B,IAAwBpC,EAAe,UAAU,QAAQoC,EAAsB,kBACjM,CAAE,IAEJ;AAAA,UACL,GAAG3zB,IAAI21B,EAAW;AAAA,UAClB,GAAGp2B,IAAIo2B,EAAW;AAAA,UAClB,MAAMn2B,EAAAC,EAAA,IACDk2B,IADC;AAAA,YAEJ,WAAAxH;AAAA,UACV;AAAA,QACO;AAAA,MACP;AAAA;AAAA,EACG;AACH,GAOMyH,KAAQ,SAAUr0B,GAAS;AAC/B,SAAIA,MAAY,WACdA,IAAU,CAAE,IAEP;AAAA,IACL,MAAM;AAAA,IACN,SAAAA;AAAA,IACM,GAAG4hB,GAAO;AAAA,aAAA7jB,EAAA;AACd,cAAM;AAAA,UACJ,GAAAU;AAAA,UACA,GAAAT;AAAA,UACA,WAAA4uB;AAAA,QACR,IAAUhL,GAiBAlkB,IAAAgvB,GAAS1sB,GAAS4hB,CAAK,GAfzB;AAAA,oBAAU2Q,IAAgB;AAAA,UAC1B,WAAWC,IAAiB;AAAA,UAC5B,SAAA8B,IAAU;AAAA,YACR,IAAI,CAAA7uB,MAAQ;AACV,kBAAI;AAAA,gBACF,GAAAhH;AAAA,gBACA,GAAAT;AAAA,cACd,IAAgByH;AACJ,qBAAO;AAAA,gBACL,GAAAhH;AAAA,gBACA,GAAAT;AAAA,cACD;AAAA,YACb;AAAA,UACS;AAAA,Q/Fl1BT,I+Fo1BUN,GADCk1B,IAAA9M,GACDpoB,GADC;AAAA,UAdH;AAAA,UACA;AAAA,UACA;AAAA,YAcI+xB,IAAS;AAAA,UACb,GAAAhxB;AAAA,UACA,GAAAT;AAAA,QACD,GACKk1B,IAAW,MAAM7C,GAAezO,GAAOgR,CAAqB,GAC5DsB,IAAYhH,GAAYP,GAAQC,CAAS,CAAC,GAC1CqH,IAAWnH,GAAgBoH,CAAS;AAC1C,YAAIK,IAAgB9E,EAAOwE,CAAQ,GAC/BO,IAAiB/E,EAAOyE,CAAS;AACrC,YAAI3B,GAAe;AACjB,gBAAMkC,IAAUR,MAAa,MAAM,QAAQ,QACrCS,IAAUT,MAAa,MAAM,WAAW,SACxC/H,IAAMqI,IAAgBrB,EAASuB,CAAO,GACtCtI,IAAMoI,IAAgBrB,EAASwB,CAAO;AAC5C,UAAAH,IAAgB9H,GAAMP,GAAKqI,GAAepI,CAAG;AAAA,QACrD;AACM,YAAIqG,GAAgB;AAClB,gBAAMiC,IAAUP,MAAc,MAAM,QAAQ,QACtCQ,IAAUR,MAAc,MAAM,WAAW,SACzChI,IAAMsI,IAAiBtB,EAASuB,CAAO,GACvCtI,IAAMqI,IAAiBtB,EAASwB,CAAO;AAC7C,UAAAF,IAAiB/H,GAAMP,GAAKsI,GAAgBrI,CAAG;AAAA,QACvD;AACM,cAAMwI,IAAgBL,EAAQ,GAAGr2B,EAAAC,EAAA,IAC5B0jB,IAD4B;AAAA,UAE/B,CAACqS,CAAQ,GAAGM;AAAA,UACZ,CAACL,CAAS,GAAGM;AAAA,QACrB,EAAO;AACD,eAAOv2B,EAAAC,EAAA,IACFy2B,IADE;AAAA,UAEL,MAAM;AAAA,YACJ,GAAGA,EAAc,IAAIl2B;AAAA,YACrB,GAAGk2B,EAAc,IAAI32B;AAAA,YACrB,SAAS;AAAA,cACP,CAACi2B,CAAQ,GAAG1B;AAAA,cACZ,CAAC2B,CAAS,GAAG1B;AAAA,YACzB;AAAA,UACA;AAAA,QACO;AAAA,MACP;AAAA;AAAA,EACG;AACH,GA4EMhR,KAAO,SAAUxhB,GAAS;AAC9B,SAAIA,MAAY,WACdA,IAAU,CAAE,IAEP;AAAA,IACL,MAAM;AAAA,IACN,SAAAA;AAAA,IACM,GAAG4hB,GAAO;AAAA,aAAA7jB,EAAA;AACd,YAAI62B,GAAuBC;AAC3B,cAAM;AAAA,UACJ,WAAAjI;AAAA,UACA,OAAAS;AAAA,UACA,UAAAwC;AAAA,UACA,UAAAU;AAAA,QACR,IAAU3O,GAIAlkB,IAAAgvB,GAAS1sB,GAAS4hB,CAAK,GAFzB;AAAA,iBAAAkT,IAAQ,MAAM;AAAA,UAAE;AAAA,Q/F19BxB,I+F49BUp3B,GADCk1B,IAAA9M,GACDpoB,GADC;AAAA,UADH;AAAA,YAGIw1B,IAAW,MAAM7C,GAAezO,GAAOgR,CAAqB,GAC5DzE,IAAOxB,GAAQC,CAAS,GACxBW,IAAYV,GAAaD,CAAS,GAClCuE,IAAUjE,GAAYN,CAAS,MAAM,KACrC;AAAA,UACJ,OAAAkC;AAAA,UACA,QAAAC;AAAA,QACD,IAAG1B,EAAM;AACV,YAAI0H,GACAC;AACJ,QAAI7G,MAAS,SAASA,MAAS,YAC7B4G,IAAa5G,GACb6G,IAAYzH,QAAgB,MAAOsC,EAAS,SAAS,OAAO,SAASA,EAAS,MAAMU,EAAS,QAAQ,KAAM,UAAU,SAAS,SAAS,YAEvIyE,IAAY7G,GACZ4G,IAAaxH,MAAc,QAAQ,QAAQ;AAE7C,cAAM0H,IAAwBlG,IAASmE,EAAS,MAAMA,EAAS,QACzDgC,IAAuBpG,IAAQoE,EAAS,OAAOA,EAAS,OACxDiC,IAA0BjJ,GAAI6C,IAASmE,EAAS6B,CAAU,GAAGE,CAAqB,GAClFG,IAAyBlJ,GAAI4C,IAAQoE,EAAS8B,CAAS,GAAGE,CAAoB,GAC9EG,KAAU,CAACzT,EAAM,eAAe;AACtC,YAAI0T,KAAkBH,GAClBI,KAAiBH;AAOrB,aANKR,IAAwBhT,EAAM,eAAe,UAAU,QAAQgT,EAAsB,QAAQ,MAChGW,KAAiBL,KAEdL,IAAyBjT,EAAM,eAAe,UAAU,QAAQiT,EAAuB,QAAQ,MAClGS,KAAkBL,IAEhBI,MAAW,CAAC9H,GAAW;AACzB,gBAAMiI,KAAOrJ,GAAI+G,EAAS,MAAM,CAAC,GAC3BuC,KAAOtJ,GAAI+G,EAAS,OAAO,CAAC,GAC5BwC,IAAOvJ,GAAI+G,EAAS,KAAK,CAAC,GAC1ByC,IAAOxJ,GAAI+G,EAAS,QAAQ,CAAC;AACnC,UAAI/B,IACFoE,KAAiBzG,IAAQ,KAAK0G,OAAS,KAAKC,OAAS,IAAID,KAAOC,KAAOtJ,GAAI+G,EAAS,MAAMA,EAAS,KAAK,KAExGoC,KAAkBvG,IAAS,KAAK2G,MAAS,KAAKC,MAAS,IAAID,IAAOC,IAAOxJ,GAAI+G,EAAS,KAAKA,EAAS,MAAM;AAAA,QAEpH;AACM,cAAM4B,EAAM72B,EAAAC,EAAA,IACP0jB,IADO;AAAA,UAEV,gBAAA2T;AAAA,UACA,iBAAAD;AAAA,QACR,EAAO;AACD,cAAMM,KAAiB,MAAM/F,EAAS,cAAcU,EAAS,QAAQ;AACrE,eAAIzB,MAAU8G,GAAe,SAAS7G,MAAW6G,GAAe,SACvD;AAAA,UACL,OAAO;AAAA,YACL,OAAO;AAAA,UACnB;AAAA,QACS,IAEI,CAAE;AAAA,MACf;AAAA;AAAA,EACG;AACH;ACthCA,SAASC,KAAY;AACnB,SAAO,OAAO,UAAW;AAC3B;AACA,SAASC,GAAYtL,GAAM;AACzB,SAAIuL,GAAOvL,CAAI,KACLA,EAAK,YAAY,IAAI,YAAa,IAKrC;AACT;AACA,SAASwL,GAAUxL,GAAM;AACvB,MAAIyL;AACJ,UAAQzL,KAAQ,SAASyL,IAAsBzL,EAAK,kBAAkB,OAAO,SAASyL,EAAoB,gBAAgB;AAC5H;AACA,SAASC,GAAmB1L,GAAM;AAChC,MAAI/kB;AACJ,UAAQA,KAAQswB,GAAOvL,CAAI,IAAIA,EAAK,gBAAgBA,EAAK,aAAa,OAAO,aAAa,OAAO,SAAS/kB,EAAK;AACjH;AACA,SAASswB,GAAOh2B,GAAO;AACrB,SAAK81B,GAAS,IAGP91B,aAAiB,QAAQA,aAAiBi2B,GAAUj2B,CAAK,EAAE,OAFzD;AAGX;AACA,SAASo2B,GAAUp2B,GAAO;AACxB,SAAK81B,GAAS,IAGP91B,aAAiB,WAAWA,aAAiBi2B,GAAUj2B,CAAK,EAAE,UAF5D;AAGX;AACA,SAASq2B,GAAcr2B,GAAO;AAC5B,SAAK81B,GAAS,IAGP91B,aAAiB,eAAeA,aAAiBi2B,GAAUj2B,CAAK,EAAE,cAFhE;AAGX;AACA,SAASs2B,GAAat2B,GAAO;AAC3B,SAAI,CAAC81B,GAAS,KAAM,OAAO,cAAe,cACjC,KAEF91B,aAAiB,cAAcA,aAAiBi2B,GAAUj2B,CAAK,EAAE;AAC1E;AACA,MAAMu2B,KAA4C,oBAAI,IAAI,CAAC,UAAU,UAAU,CAAC;AAChF,SAASC,GAAkBzV,GAAS;AAClC,QAAM;AAAA,IACJ,UAAAoS;AAAA,IACA,WAAAsD;AAAA,IACA,WAAAC;AAAA,IACA,SAAAC;AAAA,EACJ,IAAMC,GAAiB7V,CAAO;AAC5B,SAAO,kCAAkC,KAAKoS,IAAWuD,IAAYD,CAAS,KAAK,CAACF,GAA6B,IAAII,CAAO;AAC9H;AACA,MAAME,KAA6B,oBAAI,IAAI,CAAC,SAAS,MAAM,IAAI,CAAC;AAChE,SAASC,GAAe/V,GAAS;AAC/B,SAAO8V,GAAc,IAAId,GAAYhV,CAAO,CAAC;AAC/C;AACA,MAAMgW,KAAoB,CAAC,iBAAiB,QAAQ;AACpD,SAASC,GAAWjW,GAAS;AAC3B,SAAOgW,GAAkB,KAAK,CAAAE,MAAY;AACxC,QAAI;AACF,aAAOlW,EAAQ,QAAQkW,CAAQ;AAAA,IAChC,SAAQC,GAAI;AACX,aAAO;AAAA,IACb;AAAA,EACA,CAAG;AACH;AACA,MAAMC,KAAsB,CAAC,aAAa,aAAa,SAAS,UAAU,aAAa,GACjFC,KAAmB,CAAC,aAAa,aAAa,SAAS,UAAU,eAAe,QAAQ,GACxFC,KAAgB,CAAC,SAAS,UAAU,UAAU,SAAS;AAC7D,SAASC,GAAkBC,GAAc;AACvC,QAAMC,IAASC,GAAU,GACnBC,IAAMtB,GAAUmB,CAAY,IAAIX,GAAiBW,CAAY,IAAIA;AAIvE,SAAOJ,GAAoB,KAAK,CAAAn3B,MAAS03B,EAAI13B,CAAK,IAAI03B,EAAI13B,CAAK,MAAM,SAAS,EAAK,MAAM03B,EAAI,gBAAgBA,EAAI,kBAAkB,WAAW,OAAU,CAACF,MAAWE,EAAI,iBAAiBA,EAAI,mBAAmB,SAAS,OAAU,CAACF,MAAWE,EAAI,SAASA,EAAI,WAAW,SAAS,OAAUN,GAAiB,KAAK,CAAAp3B,OAAU03B,EAAI,cAAc,IAAI,SAAS13B,CAAK,CAAC,KAAKq3B,GAAc,KAAK,CAAAr3B,OAAU03B,EAAI,WAAW,IAAI,SAAS13B,CAAK,CAAC;AACza;AACA,SAAS23B,GAAmB5W,GAAS;AACnC,MAAI6W,IAAcC,GAAc9W,CAAO;AACvC,SAAOsV,GAAcuB,CAAW,KAAK,CAACE,GAAsBF,CAAW,KAAG;AACxE,QAAIN,GAAkBM,CAAW;AAC/B,aAAOA;AACF,QAAIZ,GAAWY,CAAW;AAC/B,aAAO;AAET,IAAAA,IAAcC,GAAcD,CAAW;AAAA,EAC3C;AACE,SAAO;AACT;AACA,SAASH,KAAW;AAClB,SAAI,OAAO,OAAQ,eAAe,CAAC,IAAI,WAAiB,KACjD,IAAI,SAAS,2BAA2B,MAAM;AACvD;AACA,MAAMM,KAAwC,oBAAI,IAAI,CAAC,QAAQ,QAAQ,WAAW,CAAC;AACnF,SAASD,GAAsBrN,GAAM;AACnC,SAAOsN,GAAyB,IAAIhC,GAAYtL,CAAI,CAAC;AACvD;AACA,SAASmM,GAAiB7V,GAAS;AACjC,SAAOkV,GAAUlV,CAAO,EAAE,iBAAiBA,CAAO;AACpD;AACA,SAASiX,GAAcjX,GAAS;AAC9B,SAAIqV,GAAUrV,CAAO,IACZ;AAAA,IACL,YAAYA,EAAQ;AAAA,IACpB,WAAWA,EAAQ;AAAA,EACpB,IAEI;AAAA,IACL,YAAYA,EAAQ;AAAA,IACpB,WAAWA,EAAQ;AAAA,EACpB;AACH;AACA,SAAS8W,GAAcpN,GAAM;AAC3B,MAAIsL,GAAYtL,CAAI,MAAM;AACxB,WAAOA;AAET,QAAMtkB;AAAA;AAAA,IAENskB,EAAK;AAAA,IAELA,EAAK;AAAA,IAEL6L,GAAa7L,CAAI,KAAKA,EAAK;AAAA,IAE3B0L,GAAmB1L,CAAI;AAAA;AACvB,SAAO6L,GAAanwB,CAAM,IAAIA,EAAO,OAAOA;AAC9C;AACA,SAAS8xB,GAA2BxN,GAAM;AACxC,QAAMyN,IAAaL,GAAcpN,CAAI;AACrC,SAAIqN,GAAsBI,CAAU,IAC3BzN,EAAK,gBAAgBA,EAAK,cAAc,OAAOA,EAAK,OAEzD4L,GAAc6B,CAAU,KAAK1B,GAAkB0B,CAAU,IACpDA,IAEFD,GAA2BC,CAAU;AAC9C;AACA,SAASC,GAAqB1N,GAAMgE,GAAM2J,GAAiB;AACzD,MAAIC;AACJ,EAAI5J,MAAS,WACXA,IAAO,CAAE,IAEP2J,MAAoB,WACtBA,IAAkB;AAEpB,QAAME,IAAqBL,GAA2BxN,CAAI,GACpD8N,IAASD,QAAyBD,IAAuB5N,EAAK,kBAAkB,OAAO,SAAS4N,EAAqB,OACrHG,IAAMvC,GAAUqC,CAAkB;AACxC,MAAIC,GAAQ;AACV,UAAME,IAAeC,GAAgBF,CAAG;AACxC,WAAO/J,EAAK,OAAO+J,GAAKA,EAAI,kBAAkB,CAAE,GAAEhC,GAAkB8B,CAAkB,IAAIA,IAAqB,CAAE,GAAEG,KAAgBL,IAAkBD,GAAqBM,CAAY,IAAI,EAAE;AAAA,EAChM;AACE,SAAOhK,EAAK,OAAO6J,GAAoBH,GAAqBG,GAAoB,CAAA,GAAIF,CAAe,CAAC;AACtG;AACA,SAASM,GAAgBF,GAAK;AAC5B,SAAOA,EAAI,UAAU,OAAO,eAAeA,EAAI,MAAM,IAAIA,EAAI,eAAe;AAC9E;ACzJA,SAASG,GAAiB5X,GAAS;AACjC,QAAM2W,IAAMkB,GAAmB7X,CAAO;AAGtC,MAAIgO,IAAQ,WAAW2I,EAAI,KAAK,KAAK,GACjC1I,IAAS,WAAW0I,EAAI,MAAM,KAAK;AACvC,QAAMmB,IAAYxC,GAActV,CAAO,GACjC+X,IAAcD,IAAY9X,EAAQ,cAAcgO,GAChDgK,IAAeF,IAAY9X,EAAQ,eAAeiO,GAClDgK,IAAiB3M,GAAM0C,CAAK,MAAM+J,KAAezM,GAAM2C,CAAM,MAAM+J;AACzE,SAAIC,MACFjK,IAAQ+J,GACR9J,IAAS+J,IAEJ;AAAA,IACL,OAAAhK;AAAA,IACA,QAAAC;AAAA,IACA,GAAGgK;AAAA,EACJ;AACH;AAEA,SAASC,GAAclY,GAAS;AAC9B,SAAQqV,GAAUrV,CAAO,IAA6BA,IAAzBA,EAAQ;AACvC;AAEA,SAASmY,GAASnY,GAAS;AACzB,QAAMoY,IAAaF,GAAclY,CAAO;AACxC,MAAI,CAACsV,GAAc8C,CAAU;AAC3B,WAAO5M,GAAa,CAAC;AAEvB,QAAMuC,IAAOqK,EAAW,sBAAuB,GACzC;AAAA,IACJ,OAAApK;AAAA,IACA,QAAAC;AAAA,IACA,GAAAvwB;AAAA,EACJ,IAAMk6B,GAAiBQ,CAAU;AAC/B,MAAIz6B,KAAKD,IAAI4tB,GAAMyC,EAAK,KAAK,IAAIA,EAAK,SAASC,GAC3C9wB,KAAKQ,IAAI4tB,GAAMyC,EAAK,MAAM,IAAIA,EAAK,UAAUE;AAIjD,UAAI,CAACtwB,KAAK,CAAC,OAAO,SAASA,CAAC,OAC1BA,IAAI,KAEF,CAACT,KAAK,CAAC,OAAO,SAASA,CAAC,OAC1BA,IAAI,IAEC;AAAA,IACL,GAAAS;AAAA,IACA,GAAAT;AAAA,EACD;AACH;AAEA,MAAMm7B,KAAyB,gBAAA7M,GAAa,CAAC;AAC7C,SAAS8M,GAAiBtY,GAAS;AACjC,QAAMyX,IAAMvC,GAAUlV,CAAO;AAC7B,SAAI,CAAC0W,GAAQ,KAAM,CAACe,EAAI,iBACfY,KAEF;AAAA,IACL,GAAGZ,EAAI,eAAe;AAAA,IACtB,GAAGA,EAAI,eAAe;AAAA,EACvB;AACH;AACA,SAASc,GAAuBvY,GAASwY,GAASC,GAAsB;AAItE,SAHID,MAAY,WACdA,IAAU,KAER,CAACC,KAAwBD,KAAWC,MAAyBvD,GAAUlV,CAAO,IACzE,KAEFwY;AACT;AAEA,SAASE,GAAsB1Y,GAAS2Y,GAAcC,GAAiB5I,GAAc;AACnF,EAAI2I,MAAiB,WACnBA,IAAe,KAEbC,MAAoB,WACtBA,IAAkB;AAEpB,QAAMC,IAAa7Y,EAAQ,sBAAuB,GAC5CoY,IAAaF,GAAclY,CAAO;AACxC,MAAI8Y,IAAQtN,GAAa,CAAC;AAC1B,EAAImN,MACE3I,IACEqF,GAAUrF,CAAY,MACxB8I,IAAQX,GAASnI,CAAY,KAG/B8I,IAAQX,GAASnY,CAAO;AAG5B,QAAM+Y,IAAgBR,GAAuBH,GAAYQ,GAAiB5I,CAAY,IAAIsI,GAAiBF,CAAU,IAAI5M,GAAa,CAAC;AACvI,MAAI7tB,KAAKk7B,EAAW,OAAOE,EAAc,KAAKD,EAAM,GAChD57B,KAAK27B,EAAW,MAAME,EAAc,KAAKD,EAAM,GAC/C9K,IAAQ6K,EAAW,QAAQC,EAAM,GACjC7K,IAAS4K,EAAW,SAASC,EAAM;AACvC,MAAIV,GAAY;AACd,UAAMX,IAAMvC,GAAUkD,CAAU,GAC1BY,IAAYhJ,KAAgBqF,GAAUrF,CAAY,IAAIkF,GAAUlF,CAAY,IAAIA;AACtF,QAAIiJ,IAAaxB,GACbyB,IAAgBvB,GAAgBsB,CAAU;AAC9C,WAAOC,KAAiBlJ,KAAgBgJ,MAAcC,KAAY;AAChE,YAAME,IAAchB,GAASe,CAAa,GACpCE,IAAaF,EAAc,sBAAuB,GAClDvC,IAAMkB,GAAmBqB,CAAa,GACtCG,IAAOD,EAAW,QAAQF,EAAc,aAAa,WAAWvC,EAAI,WAAW,KAAKwC,EAAY,GAChGG,IAAMF,EAAW,OAAOF,EAAc,YAAY,WAAWvC,EAAI,UAAU,KAAKwC,EAAY;AAClG,MAAAx7B,KAAKw7B,EAAY,GACjBj8B,KAAKi8B,EAAY,GACjBnL,KAASmL,EAAY,GACrBlL,KAAUkL,EAAY,GACtBx7B,KAAK07B,GACLn8B,KAAKo8B,GACLL,IAAa/D,GAAUgE,CAAa,GACpCA,IAAgBvB,GAAgBsB,CAAU;AAAA,IAChD;AAAA,EACA;AACE,SAAOnL,GAAiB;AAAA,IACtB,OAAAE;AAAA,IACA,QAAAC;AAAA,IACA,GAAAtwB;AAAA,IACA,GAAAT;AAAA,EACJ,CAAG;AACH;AAIA,SAASq8B,GAAoBvZ,GAAS+N,GAAM;AAC1C,QAAMyL,IAAavC,GAAcjX,CAAO,EAAE;AAC1C,SAAK+N,IAGEA,EAAK,OAAOyL,IAFVd,GAAsBtD,GAAmBpV,CAAO,CAAC,EAAE,OAAOwZ;AAGrE;AAEA,SAASC,GAAcC,GAAiBC,GAAQ;AAC9C,QAAMC,IAAWF,EAAgB,sBAAuB,GAClD/7B,IAAIi8B,EAAS,OAAOD,EAAO,aAAaJ,GAAoBG,GAAiBE,CAAQ,GACrF18B,IAAI08B,EAAS,MAAMD,EAAO;AAChC,SAAO;AAAA,IACL,GAAAh8B;AAAA,IACA,GAAAT;AAAA,EACD;AACH;AAEA,SAAS28B,GAAsDl1B,GAAM;AACnE,MAAI;AAAA,IACF,UAAA8qB;AAAA,IACA,MAAA1B;AAAA,IACA,cAAAiC;AAAA,IACA,UAAAnB;AAAA,EACJ,IAAMlqB;AACJ,QAAM6zB,IAAU3J,MAAa,SACvB6K,IAAkBtE,GAAmBpF,CAAY,GACjD8J,IAAWrK,IAAWwG,GAAWxG,EAAS,QAAQ,IAAI;AAC5D,MAAIO,MAAiB0J,KAAmBI,KAAYtB;AAClD,WAAOzK;AAET,MAAI4L,IAAS;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACZ,GACGb,IAAQtN,GAAa,CAAC;AAC1B,QAAMuO,IAAUvO,GAAa,CAAC,GACxBwO,IAA0B1E,GAActF,CAAY;AAC1D,OAAIgK,KAA2B,CAACA,KAA2B,CAACxB,QACtDxD,GAAYhF,CAAY,MAAM,UAAUyF,GAAkBiE,CAAe,OAC3EC,IAAS1C,GAAcjH,CAAY,IAEjCsF,GAActF,CAAY,IAAG;AAC/B,UAAMiK,IAAavB,GAAsB1I,CAAY;AACrD,IAAA8I,IAAQX,GAASnI,CAAY,GAC7B+J,EAAQ,IAAIE,EAAW,IAAIjK,EAAa,YACxC+J,EAAQ,IAAIE,EAAW,IAAIjK,EAAa;AAAA,EAC9C;AAEE,QAAMkK,IAAaR,KAAmB,CAACM,KAA2B,CAACxB,IAAUiB,GAAcC,GAAiBC,CAAM,IAAInO,GAAa,CAAC;AACpI,SAAO;AAAA,IACL,OAAOuC,EAAK,QAAQ+K,EAAM;AAAA,IAC1B,QAAQ/K,EAAK,SAAS+K,EAAM;AAAA,IAC5B,GAAG/K,EAAK,IAAI+K,EAAM,IAAIa,EAAO,aAAab,EAAM,IAAIiB,EAAQ,IAAIG,EAAW;AAAA,IAC3E,GAAGnM,EAAK,IAAI+K,EAAM,IAAIa,EAAO,YAAYb,EAAM,IAAIiB,EAAQ,IAAIG,EAAW;AAAA,EAC3E;AACH;AAEA,SAASC,GAAena,GAAS;AAC/B,SAAO,MAAM,KAAKA,EAAQ,eAAc,CAAE;AAC5C;AAIA,SAASoa,GAAgBpa,GAAS;AAChC,QAAMzG,IAAO6b,GAAmBpV,CAAO,GACjC2Z,IAAS1C,GAAcjX,CAAO,GAC9Bqa,IAAOra,EAAQ,cAAc,MAC7BgO,IAAQ3C,GAAI9R,EAAK,aAAaA,EAAK,aAAa8gB,EAAK,aAAaA,EAAK,WAAW,GAClFpM,IAAS5C,GAAI9R,EAAK,cAAcA,EAAK,cAAc8gB,EAAK,cAAcA,EAAK,YAAY;AAC7F,MAAI18B,IAAI,CAACg8B,EAAO,aAAaJ,GAAoBvZ,CAAO;AACxD,QAAM9iB,IAAI,CAACy8B,EAAO;AAClB,SAAI9B,GAAmBwC,CAAI,EAAE,cAAc,UACzC18B,KAAK0tB,GAAI9R,EAAK,aAAa8gB,EAAK,WAAW,IAAIrM,IAE1C;AAAA,IACL,OAAAA;AAAA,IACA,QAAAC;AAAA,IACA,GAAAtwB;AAAA,IACA,GAAAT;AAAA,EACD;AACH;AAKA,MAAMo9B,KAAgB;AACtB,SAASC,GAAgBva,GAAS6O,GAAU;AAC1C,QAAM4I,IAAMvC,GAAUlV,CAAO,GACvBzG,IAAO6b,GAAmBpV,CAAO,GACjCwa,IAAiB/C,EAAI;AAC3B,MAAIzJ,IAAQzU,EAAK,aACb0U,IAAS1U,EAAK,cACd5b,IAAI,GACJT,IAAI;AACR,MAAIs9B,GAAgB;AAClB,IAAAxM,IAAQwM,EAAe,OACvBvM,IAASuM,EAAe;AACxB,UAAMC,IAAsB/D,GAAU;AACtC,KAAI,CAAC+D,KAAuBA,KAAuB5L,MAAa,aAC9DlxB,IAAI68B,EAAe,YACnBt9B,IAAIs9B,EAAe;AAAA,EAEzB;AACE,QAAME,IAAmBnB,GAAoBhgB,CAAI;AAIjD,MAAImhB,KAAoB,GAAG;AACzB,UAAMC,IAAMphB,EAAK,eACX8gB,IAAOM,EAAI,MACXC,IAAa,iBAAiBP,CAAI,GAClCQ,IAAmBF,EAAI,eAAe,gBAAe,WAAWC,EAAW,UAAU,IAAI,WAAWA,EAAW,WAAW,KAAK,GAC/HE,IAA+B,KAAK,IAAIvhB,EAAK,cAAc8gB,EAAK,cAAcQ,CAAgB;AACpG,IAAIC,KAAgCR,OAClCtM,KAAS8M;AAAA,EAEf,MAAS,CAAIJ,KAAoBJ,OAG7BtM,KAAS0M;AAEX,SAAO;AAAA,IACL,OAAA1M;AAAA,IACA,QAAAC;AAAA,IACA,GAAAtwB;AAAA,IACA,GAAAT;AAAA,EACD;AACH;AAEA,MAAM69B,KAA+B,oBAAI,IAAI,CAAC,YAAY,OAAO,CAAC;AAElE,SAASC,GAA2Bhb,GAAS6O,GAAU;AACrD,QAAMgK,IAAaH,GAAsB1Y,GAAS,IAAM6O,MAAa,OAAO,GACtEyK,IAAMT,EAAW,MAAM7Y,EAAQ,WAC/BqZ,IAAOR,EAAW,OAAO7Y,EAAQ,YACjC8Y,IAAQxD,GAActV,CAAO,IAAImY,GAASnY,CAAO,IAAIwL,GAAa,CAAC,GACnEwC,IAAQhO,EAAQ,cAAc8Y,EAAM,GACpC7K,IAASjO,EAAQ,eAAe8Y,EAAM,GACtCn7B,IAAI07B,IAAOP,EAAM,GACjB57B,IAAIo8B,IAAMR,EAAM;AACtB,SAAO;AAAA,IACL,OAAA9K;AAAA,IACA,QAAAC;AAAA,IACA,GAAAtwB;AAAA,IACA,GAAAT;AAAA,EACD;AACH;AACA,SAAS+9B,GAAkCjb,GAASkb,GAAkBrM,GAAU;AAC9E,MAAId;AACJ,MAAImN,MAAqB;AACvB,IAAAnN,IAAOwM,GAAgBva,GAAS6O,CAAQ;AAAA,WAC/BqM,MAAqB;AAC9B,IAAAnN,IAAOqM,GAAgBhF,GAAmBpV,CAAO,CAAC;AAAA,WACzCqV,GAAU6F,CAAgB;AACnC,IAAAnN,IAAOiN,GAA2BE,GAAkBrM,CAAQ;AAAA,OACvD;AACL,UAAMkK,IAAgBT,GAAiBtY,CAAO;AAC9C,IAAA+N,IAAO;AAAA,MACL,GAAGmN,EAAiB,IAAInC,EAAc;AAAA,MACtC,GAAGmC,EAAiB,IAAInC,EAAc;AAAA,MACtC,OAAOmC,EAAiB;AAAA,MACxB,QAAQA,EAAiB;AAAA,IAC1B;AAAA,EACL;AACE,SAAOpN,GAAiBC,CAAI;AAC9B;AACA,SAASoN,GAAyBnb,GAASob,GAAU;AACnD,QAAMjE,IAAaL,GAAc9W,CAAO;AACxC,SAAImX,MAAeiE,KAAY,CAAC/F,GAAU8B,CAAU,KAAKJ,GAAsBI,CAAU,IAChF,KAEFU,GAAmBV,CAAU,EAAE,aAAa,WAAWgE,GAAyBhE,GAAYiE,CAAQ;AAC7G;AAKA,SAASC,GAA4Brb,GAAS7Q,GAAO;AACnD,QAAMmsB,IAAensB,EAAM,IAAI6Q,CAAO;AACtC,MAAIsb;AACF,WAAOA;AAET,MAAIl2B,IAASgyB,GAAqBpX,GAAS,CAAE,GAAE,EAAK,EAAE,OAAO,CAAAiC,MAAMoT,GAAUpT,CAAE,KAAK+S,GAAY/S,CAAE,MAAM,MAAM,GAC1GsZ,IAAsC;AAC1C,QAAMC,IAAiB3D,GAAmB7X,CAAO,EAAE,aAAa;AAChE,MAAI6W,IAAc2E,IAAiB1E,GAAc9W,CAAO,IAAIA;AAG5D,SAAOqV,GAAUwB,CAAW,KAAK,CAACE,GAAsBF,CAAW,KAAG;AACpE,UAAM4E,IAAgB5D,GAAmBhB,CAAW,GAC9C6E,IAA0BnF,GAAkBM,CAAW;AAC7D,IAAI,CAAC6E,KAA2BD,EAAc,aAAa,YACzDF,IAAsC,QAEVC,IAAiB,CAACE,KAA2B,CAACH,IAAsC,CAACG,KAA2BD,EAAc,aAAa,YAAY,CAAC,CAACF,KAAuCR,GAAgB,IAAIQ,EAAoC,QAAQ,KAAK9F,GAAkBoB,CAAW,KAAK,CAAC6E,KAA2BP,GAAyBnb,GAAS6W,CAAW,KAG5YzxB,IAASA,EAAO,OAAO,CAAAu2B,MAAYA,MAAa9E,CAAW,IAG3D0E,IAAsCE,GAExC5E,IAAcC,GAAcD,CAAW;AAAA,EAC3C;AACE,SAAA1nB,EAAM,IAAI6Q,GAAS5a,CAAM,GAClBA;AACT;AAIA,SAASw2B,GAAgBj3B,GAAM;AAC7B,MAAI;AAAA,IACF,SAAAqb;AAAA,IACA,UAAA0P;AAAA,IACA,cAAAC;AAAA,IACA,UAAAd;AAAA,EACJ,IAAMlqB;AAEJ,QAAMk3B,IAAoB,CAAC,GADMnM,MAAa,sBAAsBuG,GAAWjW,CAAO,IAAI,CAAE,IAAGqb,GAA4Brb,GAAS,KAAK,EAAE,IAAI,CAAA,EAAG,OAAO0P,CAAQ,GACzGC,CAAY,GAC9DmM,IAAwBD,EAAkB,CAAC,GAC3CE,IAAeF,EAAkB,OAAO,CAACG,GAASd,MAAqB;AAC3E,UAAMnN,IAAOkN,GAAkCjb,GAASkb,GAAkBrM,CAAQ;AAClF,WAAAmN,EAAQ,MAAM3Q,GAAI0C,EAAK,KAAKiO,EAAQ,GAAG,GACvCA,EAAQ,QAAQ5Q,GAAI2C,EAAK,OAAOiO,EAAQ,KAAK,GAC7CA,EAAQ,SAAS5Q,GAAI2C,EAAK,QAAQiO,EAAQ,MAAM,GAChDA,EAAQ,OAAO3Q,GAAI0C,EAAK,MAAMiO,EAAQ,IAAI,GACnCA;AAAA,EACR,GAAEf,GAAkCjb,GAAS8b,GAAuBjN,CAAQ,CAAC;AAC9E,SAAO;AAAA,IACL,OAAOkN,EAAa,QAAQA,EAAa;AAAA,IACzC,QAAQA,EAAa,SAASA,EAAa;AAAA,IAC3C,GAAGA,EAAa;AAAA,IAChB,GAAGA,EAAa;AAAA,EACjB;AACH;AAEA,SAASE,GAAcjc,GAAS;AAC9B,QAAM;AAAA,IACJ,OAAAgO;AAAA,IACA,QAAAC;AAAA,EACJ,IAAM2J,GAAiB5X,CAAO;AAC5B,SAAO;AAAA,IACL,OAAAgO;AAAA,IACA,QAAAC;AAAA,EACD;AACH;AAEA,SAASiO,GAA8Blc,GAASgQ,GAAcnB,GAAU;AACtE,QAAMmL,IAA0B1E,GAActF,CAAY,GACpD0J,IAAkBtE,GAAmBpF,CAAY,GACjDwI,IAAU3J,MAAa,SACvBd,IAAO2K,GAAsB1Y,GAAS,IAAMwY,GAASxI,CAAY;AACvE,MAAI2J,IAAS;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACZ;AACD,QAAMI,IAAUvO,GAAa,CAAC;AAI9B,WAAS2Q,IAA4B;AACnC,IAAApC,EAAQ,IAAIR,GAAoBG,CAAe;AAAA,EACnD;AACE,MAAIM,KAA2B,CAACA,KAA2B,CAACxB;AAI1D,SAHIxD,GAAYhF,CAAY,MAAM,UAAUyF,GAAkBiE,CAAe,OAC3EC,IAAS1C,GAAcjH,CAAY,IAEjCgK,GAAyB;AAC3B,YAAMC,IAAavB,GAAsB1I,GAAc,IAAMwI,GAASxI,CAAY;AAClF,MAAA+J,EAAQ,IAAIE,EAAW,IAAIjK,EAAa,YACxC+J,EAAQ,IAAIE,EAAW,IAAIjK,EAAa;AAAA,IACzC,MAAM,CAAI0J,KACTyC,EAA2B;AAG/B,EAAI3D,KAAW,CAACwB,KAA2BN,KACzCyC,EAA2B;AAE7B,QAAMjC,IAAaR,KAAmB,CAACM,KAA2B,CAACxB,IAAUiB,GAAcC,GAAiBC,CAAM,IAAInO,GAAa,CAAC,GAC9H7tB,IAAIowB,EAAK,OAAO4L,EAAO,aAAaI,EAAQ,IAAIG,EAAW,GAC3Dh9B,IAAI6wB,EAAK,MAAM4L,EAAO,YAAYI,EAAQ,IAAIG,EAAW;AAC/D,SAAO;AAAA,IACL,GAAAv8B;AAAA,IACA,GAAAT;AAAA,IACA,OAAO6wB,EAAK;AAAA,IACZ,QAAQA,EAAK;AAAA,EACd;AACH;AAEA,SAASqO,GAAmBpc,GAAS;AACnC,SAAO6X,GAAmB7X,CAAO,EAAE,aAAa;AAClD;AAEA,SAASqc,GAAoBrc,GAASsc,GAAU;AAC9C,MAAI,CAAChH,GAActV,CAAO,KAAK6X,GAAmB7X,CAAO,EAAE,aAAa;AACtE,WAAO;AAET,MAAIsc;AACF,WAAOA,EAAStc,CAAO;AAEzB,MAAIuc,IAAkBvc,EAAQ;AAM9B,SAAIoV,GAAmBpV,CAAO,MAAMuc,MAClCA,IAAkBA,EAAgB,cAAc,OAE3CA;AACT;AAIA,SAASC,GAAgBxc,GAASsc,GAAU;AAC1C,QAAM7E,IAAMvC,GAAUlV,CAAO;AAC7B,MAAIiW,GAAWjW,CAAO;AACpB,WAAOyX;AAET,MAAI,CAACnC,GAActV,CAAO,GAAG;AAC3B,QAAIyc,IAAkB3F,GAAc9W,CAAO;AAC3C,WAAOyc,KAAmB,CAAC1F,GAAsB0F,CAAe,KAAG;AACjE,UAAIpH,GAAUoH,CAAe,KAAK,CAACL,GAAmBK,CAAe;AACnE,eAAOA;AAET,MAAAA,IAAkB3F,GAAc2F,CAAe;AAAA,IACrD;AACI,WAAOhF;AAAA,EACX;AACE,MAAIzH,IAAeqM,GAAoBrc,GAASsc,CAAQ;AACxD,SAAOtM,KAAgB+F,GAAe/F,CAAY,KAAKoM,GAAmBpM,CAAY;AACpF,IAAAA,IAAeqM,GAAoBrM,GAAcsM,CAAQ;AAE3D,SAAItM,KAAgB+G,GAAsB/G,CAAY,KAAKoM,GAAmBpM,CAAY,KAAK,CAACuG,GAAkBvG,CAAY,IACrHyH,IAEFzH,KAAgB4G,GAAmB5W,CAAO,KAAKyX;AACxD;AAEA,MAAMiF,KAAkB,SAAgBp7B,GAAM;AAAA,SAAArE,EAAA;AAC5C,UAAM0/B,IAAoB,KAAK,mBAAmBH,IAC5CI,IAAkB,KAAK,eACvBC,IAAqB,MAAMD,EAAgBt7B,EAAK,QAAQ;AAC9D,WAAO;AAAA,MACL,WAAW46B,GAA8B56B,EAAK,WAAW,MAAMq7B,EAAkBr7B,EAAK,QAAQ,GAAGA,EAAK,QAAQ;AAAA,MAC9G,UAAU;AAAA,QACR,GAAG;AAAA,QACH,GAAG;AAAA,QACH,OAAOu7B,EAAmB;AAAA,QAC1B,QAAQA,EAAmB;AAAA,MACjC;AAAA,IACG;AAAA,EACH;AAAA;AAEA,SAASC,GAAM9c,GAAS;AACtB,SAAO6X,GAAmB7X,CAAO,EAAE,cAAc;AACnD;AAEA,MAAM+O,KAAW;AAAA,EACf,uDAAA8K;AAAA,EACA,oBAAAzE;AAAA,EACA,iBAAAwG;AAAA,EACA,iBAAAY;AAAA,EACA,iBAAAE;AAAA,EACA,gBAAAvC;AAAA,EACA,eAAA8B;AAAA,EACA,UAAA9D;AAAA,EACA,WAAA9C;AAAA,EACA,OAAAyH;AACF;AAEA,SAASC,GAAc1gC,GAAGM,GAAG;AAC3B,SAAON,EAAE,MAAMM,EAAE,KAAKN,EAAE,MAAMM,EAAE,KAAKN,EAAE,UAAUM,EAAE,SAASN,EAAE,WAAWM,EAAE;AAC7E;AAGA,SAASqgC,GAAYhd,GAASid,GAAQ;AACpC,MAAIC,IAAK,MACLC;AACJ,QAAM3iB,IAAO4a,GAAmBpV,CAAO;AACvC,WAASod,IAAU;AACjB,QAAIC;AACJ,iBAAaF,CAAS,IACrBE,IAAMH,MAAO,QAAQG,EAAI,WAAY,GACtCH,IAAK;AAAA,EACT;AACE,WAASI,EAAQC,GAAMC,GAAW;AAChC,IAAID,MAAS,WACXA,IAAO,KAELC,MAAc,WAChBA,IAAY,IAEdJ,EAAS;AACT,UAAMK,IAA2Bzd,EAAQ,sBAAuB,GAC1D;AAAA,MACJ,MAAAqZ;AAAA,MACA,KAAAC;AAAA,MACA,OAAAtL;AAAA,MACA,QAAAC;AAAA,IACN,IAAQwP;AAIJ,QAHKF,KACHN,EAAQ,GAEN,CAACjP,KAAS,CAACC;AACb;AAEF,UAAMyP,IAAWnS,GAAM+N,CAAG,GACpBqE,IAAapS,GAAM/Q,EAAK,eAAe6e,IAAOrL,EAAM,GACpD4P,IAAcrS,GAAM/Q,EAAK,gBAAgB8e,IAAMrL,EAAO,GACtD4P,IAAYtS,GAAM8N,CAAI,GAEtBn6B,IAAU;AAAA,MACd,YAFiB,CAACw+B,IAAW,QAAQ,CAACC,IAAa,QAAQ,CAACC,IAAc,QAAQ,CAACC,IAAY;AAAA,MAG/F,WAAWxS,GAAI,GAAGD,GAAI,GAAGoS,CAAS,CAAC,KAAK;AAAA,IACzC;AACD,QAAIM,IAAgB;AACpB,aAASC,EAAcC,GAAS;AAC9B,YAAMC,KAAQD,EAAQ,CAAC,EAAE;AACzB,UAAIC,OAAUT,GAAW;AACvB,YAAI,CAACM;AACH,iBAAOR,EAAS;AAElB,QAAKW,KAOHX,EAAQ,IAAOW,EAAK,IAJpBd,IAAY,WAAW,MAAM;AAC3B,UAAAG,EAAQ,IAAO,IAAI;AAAA,QACpB,GAAE,GAAI;AAAA,MAIjB;AACM,MAAIW,OAAU,KAAK,CAAClB,GAAcU,GAA0Bzd,EAAQ,sBAAqB,CAAE,KAQzFsd,EAAS,GAEXQ,IAAgB;AAAA,IACtB;AAII,QAAI;AACF,MAAAZ,IAAK,IAAI,qBAAqBa,GAAe5gC,EAAAC,EAAA,IACxC8B,IADwC;AAAA;AAAA,QAG3C,MAAMsb,EAAK;AAAA,MACnB,EAAO;AAAA,IACF,SAAQ2b,GAAI;AACX,MAAA+G,IAAK,IAAI,qBAAqBa,GAAe7+B,CAAO;AAAA,IAC1D;AACI,IAAAg+B,EAAG,QAAQld,CAAO;AAAA,EACtB;AACE,SAAAsd,EAAQ,EAAI,GACLF;AACT;AAUA,SAASc,GAAW/P,GAAWC,GAAUrV,GAAQ7Z,GAAS;AACxD,EAAIA,MAAY,WACdA,IAAU,CAAE;AAEd,QAAM;AAAA,IACJ,gBAAAi/B,IAAiB;AAAA,IACjB,gBAAAC,IAAiB;AAAA,IACjB,eAAAC,IAAgB,OAAO,kBAAmB;AAAA,IAC1C,aAAAC,IAAc,OAAO,wBAAyB;AAAA,IAC9C,gBAAAC,IAAiB;AAAA,EACrB,IAAMr/B,GACEs/B,IAActG,GAAc/J,CAAS,GACrCsQ,IAAYN,KAAkBC,IAAiB,CAAC,GAAII,IAAcpH,GAAqBoH,CAAW,IAAI,CAAE,GAAG,GAAGpH,GAAqBhJ,CAAQ,CAAC,IAAI,CAAE;AACxJ,EAAAqQ,EAAU,QAAQ,CAAA9C,MAAY;AAC5B,IAAAwC,KAAkBxC,EAAS,iBAAiB,UAAU5iB,GAAQ;AAAA,MAC5D,SAAS;AAAA,IACf,CAAK,GACDqlB,KAAkBzC,EAAS,iBAAiB,UAAU5iB,CAAM;AAAA,EAChE,CAAG;AACD,QAAM2lB,IAAYF,KAAeF,IAActB,GAAYwB,GAAazlB,CAAM,IAAI;AAClF,MAAI4lB,IAAiB,IACjBC,IAAiB;AACrB,EAAIP,MACFO,IAAiB,IAAI,eAAe,CAAAj6B,MAAQ;AAC1C,QAAI,CAACk6B,CAAU,IAAIl6B;AACnB,IAAIk6B,KAAcA,EAAW,WAAWL,KAAeI,MAGrDA,EAAe,UAAUxQ,CAAQ,GACjC,qBAAqBuQ,CAAc,GACnCA,IAAiB,sBAAsB,MAAM;AAC3C,UAAIG;AACJ,OAACA,IAAkBF,MAAmB,QAAQE,EAAgB,QAAQ1Q,CAAQ;AAAA,IACxF,CAAS,IAEHrV,EAAQ;AAAA,EACd,CAAK,GACGylB,KAAe,CAACD,KAClBK,EAAe,QAAQJ,CAAW,GAEpCI,EAAe,QAAQxQ,CAAQ;AAEjC,MAAI2Q,GACAC,IAAcT,IAAiB7F,GAAsBvK,CAAS,IAAI;AACtE,EAAIoQ,KACFU,EAAW;AAEb,WAASA,IAAY;AACnB,UAAMC,IAAcxG,GAAsBvK,CAAS;AACnD,IAAI6Q,KAAe,CAACjC,GAAciC,GAAaE,CAAW,KACxDnmB,EAAQ,GAEVimB,IAAcE,GACdH,IAAU,sBAAsBE,CAAS;AAAA,EAC7C;AACE,SAAAlmB,EAAQ,GACD,MAAM;AACX,QAAIomB;AACJ,IAAAV,EAAU,QAAQ,CAAA9C,MAAY;AAC5B,MAAAwC,KAAkBxC,EAAS,oBAAoB,UAAU5iB,CAAM,GAC/DqlB,KAAkBzC,EAAS,oBAAoB,UAAU5iB,CAAM;AAAA,IACrE,CAAK,GACD2lB,KAAa,QAAQA,EAAW,IAC/BS,IAAmBP,MAAmB,QAAQO,EAAiB,WAAY,GAC5EP,IAAiB,MACbL,KACF,qBAAqBQ,CAAO;AAAA,EAE/B;AACH;AAmBA,MAAMvX,KAAS4X,IAeT7L,KAAQ8L,IAQRhO,KAAOiO,IAQP5e,KAAO6e,IAcPpP,KAAQqP,IAkBR5Q,KAAkB,CAACT,GAAWC,GAAUlvB,MAAY;AAIxD,QAAMiQ,IAAQ,oBAAI,IAAK,GACjBoE,IAAgBnW,EAAA;AAAA,IACpB,UAAA2xB;AAAA,KACG7vB,IAECugC,IAAoBtiC,EAAAC,EAAA,IACrBmW,EAAc,WADO;AAAA,IAExB,IAAIpE;AAAA,EACL;AACD,SAAOuwB,GAAkBvR,GAAWC,GAAUjxB,EAAAC,EAAA,IACzCmW,IADyC;AAAA,IAE5C,UAAUksB;AAAA,EACd,EAAG;AACH;;;;;;ACjvBqB,MAAAE,KAAA,MAAAA,WAAyBnc,GAAW1kB,CAAU,EAAE;AAAA,EAArE,cAAA;AAAA,UAAA,GAAA,SAAA,GAGE,KAAQ,iBAAiC,MAEzC,KAAQ,uBAAoD,MAMJ,KAAA,WAAA,IAGF,KAAA,SAAA,IAKG,KAAA,YAAA,UAMpB,KAAA,mBAAA,YAGA,KAAA,SAAA,GAMoB,KAAA,YAAA,KAGD,KAAA,WAAA;AAAA,EAAA;AAAA,EAWlD,oBAAoB;AAAA,WAAA7B,EAAA;AACxB,MAAAkpB,GAAAwZ,GAAA,iBAAM,0BAAN,IAAwB,GAExB,MAAM,KAAK,gBACX,KAAK,YAAY;AAAA,IAAA;AAAA;AAAA,EAGT,aAAaC,GAAoC;AlG5E7D,QAAAhjC,GAAAC;AkG6EI,UAAM,aAAa+iC,CAAY,IAE1BhjC,IAAA,KAAA,mBAAA,QAAAA,EAAgB,aAAa,iBAAiB,WAC9CC,IAAA,KAAA,mBAAA,QAAAA,EAAgB,aAAa,iBAAiB;AAAA,EAAO;AAAA,EAGtD,QAAQ+iC,GAAoC;AAAA,WAAA3iC,EAAA;AlGnFpD,UAAAL,GAAAC;AkGoFI,MAAAspB,GAAAwZ,GAAA,iBAAM,gBAAN,MAAcC,CAAY,GAEtBA,EAAa,IAAI,QAAQ,MACvB,KAAK,UACP,KAAK,YAAY,IACZhjC,IAAA,KAAA,mBAAA,QAAAA,EAAgB,aAAa,iBAAiB,SACnD,KAAK,KAAK,YAAY,MAEtB,KAAK,WAAW,IACXC,IAAA,KAAA,mBAAA,QAAAA,EAAgB,aAAa,iBAAiB,UACnD,KAAK,KAAK,YAAY,KAItB+iC,EAAa,IAAI,QAAQ,KAC3B,KAAK,yBAAyB,GAG5B,KAAK,WACP,MAAM,KAAK,gBACX,KAAK,eAAe;AAAA,IACtB;AAAA;AAAA,EAGI,yBAAyB,GAAuB;AAAA,WAAA3iC,EAAA;AlG5GxD,UAAAL;AkG6GI,WAAK,iCAAiC,CAAC,GAEvC,MAAM,KAAK,WAAW,GAEjB,KAAA,iBAAiB,KAAK,cAA2B,kBAAkB,GAEnE,KAAK,mBACH,KAAA,kBAAiBA,IAAA,KAAK,eAAL,gBAAAA,EAAiB;AAAA,QACrC;AAAA,UAIA,KAAK,0BAA0B,oBAC5B,KAAA,iBAAiB,KAAK,eAAe,iBAAiB;AAAA,QACzD,SAAS;AAAA,MACV,CAAA,EAAE,CAAC,IAGF,KAAK,kBACP,KAAK,YAAY;AAAA,IACnB;AAAA;AAAA,EAGK,iCAAiCu5B,GAAY;AAAA,EAClD;AAAA,EAGK,yBAAyBA,GAAW;AAAA,EACzC;AAAA,EAGK,cAAc;AlG5IvB,QAAAv5B;AkG6IQ,IAAC,KAAK,oBAKVA,IAAA,KAAK,yBAAL,QAAAA,EAA2B,cAC3B,KAAK,uBAAuB,IAAI;AAAA,MAC9B,CAAWohC,MAAA;AAEL,QAAAA,EAAQ,CAAC,KAAK,CAACA,EAAQ,CAAC,EAAE,kBAAkB,KAAK,WACnD,KAAK,SAAS,IACd,KAAK,KAAK,WAAW;AAAA,MAEzB;AAAA,MACA,EAAE,WAAW,EAAE;AAAA,IACjB,GACK,KAAA,qBAAqB,QAAQ,KAAK,cAAc,GAErD,KAAK,UAAUE,GAAW,KAAK,gBAAgB,KAAK,OAAO,MAAM;AAC/D,WAAK,eAAe;AAAA,IAAA,CACrB;AAAA,EAAA;AAAA,EAGU,aAA4B;AAAA,WAAAjhC,EAAA;AAChC,aAAA,IAAI,QAAQ,CAAWgD,MAAA;AAC5B,QAAI,KAAK,yBACP,KAAK,qBAAqB,WAAW,GACrC,KAAK,uBAAuB,OAG1B,KAAK,WACP,KAAK,QAAQ,GACb,KAAK,UAAU,QACO,sBAAA,MAAMA,GAAS,KAE7BA,EAAA;AAAA,MACV,CACD;AAAA,IAAA;AAAA;AAAA,EAGH,uBAAuB;AACrB,UAAM,qBAAqB,GAGvB,KAAK,yBACP,KAAK,qBAAqB,WAAW,GACrC,KAAK,uBAAuB,OAG9B,KAAK,WAAW;AAAA,EAAA;AAAA,EAGJ,iBAAiB;AAAA,WAAAhD,EAAA;AlGjMjC,UAAAL;AkGkMI,UAAI,KAAK,YAAY,CAAC,KAAK;AACzB;AAII,YAAAijC,IAAc,KAAK,eAAe,sBAAsB;AAO9D,UAAI,EALFA,EAAY,MAAM,OAAO,eACzBA,EAAY,SAAS,KACrBA,EAAY,OAAO,OAAO,cAC1BA,EAAY,QAAQ,IAEN;AACd,QAAI,KAAK,WACP,KAAK,SAAS,IACd,KAAK,KAAK,WAAW;AAEvB;AAAA,MAAA;AAGF,YAAM,EAAE,GAAAliC,GAAG,GAAAT,GAAG,WAAA4uB,GAAW,gBAAAoD,EAAA,IAAmB,MAAMN;AAAA,QAChD,KAAK;AAAA,QACL,KAAK;AAAA,QACL;AAAA,UACE,WAAW,KAAK;AAAA,UAChB,UAAU,KAAK;AAAA,UACf,YAAY;AAAA,YACVpH,GAAO,KAAK,MAAM;AAAA,YAClB6J,GAAK;AAAA,YACLkC,GAAM;AAAA,YACN7S,GAAK;AAAA,cACH,OAAO,CAAC,EAAE,OAAA6L,QAAY;AACpB,sBAAMuT,IAAY,KAAK;AAClB,qBAAA,MAAM,MAAM,QAAQA,IACrB,GAAGvT,EAAM,UAAU,KAAK,OACxB,IACC,KAAA,MAAM,MAAM,YAAY,KAAK,YAC9B,GAAG,KAAK,SAAS,OACjB,IAEC,KAAA,MAAM,MAAM,WAAW,KAAK,WAC7B,GAAG,KAAK,QAAQ,OAChB,IAEA,KAAK,cACF,KAAA,MAAM,MAAM,QAAQ;AAAA,cAC3B;AAAA,YACF,CACD;AAAA,YACD,GAAI,KAAK,eACL,CAAC4D,GAAM,EAAE,SAAS,KAAK,cAAc,SAAS,EAAA,CAAG,CAAC,IAClD,CAAA;AAAA,UAAC;AAAA,QACP;AAAA,MAEJ;AAOA,UALO,OAAA,OAAO,KAAK,MAAM,OAAO;AAAA,QAC9B,MAAM,GAAGxyB,CAAC;AAAA,QACV,KAAK,GAAGT,CAAC;AAAA,MAAA,CACV,GAEG,KAAK,cAAc;AACrB,cAAM,EAAE,GAAG6iC,GAAQ,GAAGC,EAAA,IAAW9Q,EAAe,OAC1C,CAAC7B,CAAI,IAAIvB,EAAU,MAAM,GAAG,GAC5BmU,KACJrjC,IAAA;AAAA,UACE,KAAK;AAAA,UACL,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,MAAM;AAAA,QAAA,EACNywB,CAAI,MALN,OAAAzwB,IAKW;AAEN,eAAA,OAAO,KAAK,aAAa,OAAO;AAAA,UACrC,MAAMmjC,KAAU,OAAO,GAAGA,CAAM,OAAO;AAAA,UACvC,KAAKC,KAAU,OAAO,GAAGA,CAAM,OAAO;AAAA,UACtC,CAACC,CAAU,GAAG;AAAA,QAAA,CACf;AAAA,MAAA;AAAA,IACH;AAAA;AAAA,EAGF,gBAAgC;AACvB,WAAA1mB;AAAAA,EAAA;AAAA,EAGT,cAAc;AACL,WAAAA;AAAAA,yCAC8B,KAAK,wBAAwB;AAAA,UAC5D,KAAK,cAAe,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKR,KAAK,SAAS,UAAU,MAAM;AAAA,gBACpClc,EAAK,SAAS,UAAU,KAAK,IAAI,IAAI;AAAA,MAC3C,iBAAiB,KAAK;AAAA,MACtB,gBAAgB,KAAK,qBAAqB;AAAA,MAC1C,oBAAoB,KAAK;AAAA,MACzB,mBAAmB,KAAK;AAAA,MACxB,qBAAqB,KAAK;AAAA,IAAA,CAC3B,CAAC;AAAA,4BACkB,KAAK,wBAAwB;AAAA,UAC/C,KAAK,WACHkc;AAAAA;AAAAA,sBAEUlc,EAAK,gBAAgB;AAAA,MAC3B,CAAC,mBAAmB,KAAK,UAAU,MAAM,GAAG,EAAE,CAAC,CAAC,GAAG;AAAA,IAAA,CACpD,CAAC;AAAA,4CAEJ,EAAE;AAAA;AAAA;AAAA,EAAA;AAId;AA5RkBsiC,GAAA,SAAShmB,EAAUC,EAAM;AADtB,IAAAsmB,KAAAP;AAOe7lB,GAAA;AAAA,EAAjC7E,GAAM,QAAQ;AAAA,GAPIirB,GAOe,WAAA,OAAA;AACOpmB,GAAA;AAAA,EAAxC7E,GAAM,eAAe;AAAA,GARHirB,GAQsB,WAAA,cAAA;AAGGpmB,GAAA;AAAA,EAA3CC,EAAS,EAAE,SAAS,IAAM,MAAM,QAAS,CAAA;AAAA,GAXvBmmB,GAWyB,WAAA,UAAA;AAGApmB,GAAA;AAAA,EAA3CC,EAAS,EAAE,SAAS,IAAM,MAAM,QAAS,CAAA;AAAA,GAdvBmmB,GAcyB,WAAA,QAAA;AAKfpmB,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAnBRmmB,GAmBU,WAAA,WAAA;AAM7BpmB,GAAA;AAAA,EADCC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAxBRmmB,GAyBnB,WAAA,kBAAA;AAG4BpmB,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA5BPmmB,GA4BS,WAAA,QAAA;AAGCpmB,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA/BRmmB,GA+BU,WAAA,MAAA;AAGDpmB,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAlCPmmB,GAkCS,WAAA,WAAA;AAGApmB,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GArCPmmB,GAqCS,WAAA,UAAA;AAGCpmB,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAxCRmmB,GAwCU,WAAA,UAAA;AAGApmB,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA3CRmmB,GA2CU,WAAA,UAAA;AAGApmB,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA9CRmmB,GA8CU,WAAA,WAAA;;;;;;ACtBV,IAAAC,KAArB,cAAwCD,GAAiB;AAAA,EACvD,SAAS;AACP,WAAO,KAAK,YAAY;AAAA,EAAA;AAE5B;AAJqBC,KAArBrmB,GAAA;AAAA,EADCG,EAAc,cAAc;AAAA,GACRkmB,EAAA;;;;;;;ACnBA,IAAAC,KAArB,MAAA93B,UAA0C63B,GAAW;AAAA,EACnD,cAAc;AACN,UAAA,GAce,KAAA,QAAA,MAG2B,KAAA,YAAA,IAOlD,KAAQ,mBAAuC,MAE/C,KAAQ,sBAEG,MA3BT,KAAK,YAAY,gBACjB,KAAK,WAAW;AAAA,EAAA;AAAA,EA4BZ,oBAAoB;AAAA,WAAAljC,EAAA;AACxB,YAAMkpB,GAAA7d,EAAA,iBAAM,0BAAN,IAAwB,GACzB,KAAA,iBAAiB,WAAW,KAAK,cAAc,GAEpD,KAAK,cAAc,KAAK,YAAY,KAAK,IAAI,GAC7C,KAAK,0BAA0B,KAAK,wBAAwB,KAAK,IAAI;AAAA,IAAA;AAAA;AAAA,EAGvE,uBAAuB;AACrB,UAAM,qBAAqB,GACtB,KAAA,oBAAoB,WAAW,KAAK,cAAc,GAE9C,SAAA,oBAAoB,aAAa,KAAK,uBAAuB;AAAA,EAAA;AAAA,EAG9D,aACRkR,GACM;AAGN,QAFA,MAAM,aAAaA,CAA0C,GAEzD,KAAK,OAAO;AACd,YAAM0I,IAAO,KAAK;AAAA,QAChB,8BAA8B,KAAK,KAAK;AAAA,MAC1C;AACA,MAAIA,MACF,KAAK,mBAAmBA,GACxB,KAAK,iBAAiB,MAAM;AAAA,IAC9B;AAAA,EACF;AAAA,EAGI,QAAQjB,GAAyC;AAAA,WAAAhkB,EAAA;AAC/C,YAAAkpB,GAAA7d,EAAA,iBAAM,gBAAN,MAAc2Y,CAAiB,GAEjCA,EAAkB,IAAI,QAAQ,KAAK,KAAK,WAE1C,MAAM,KAAK,gBACX,KAAK,8BAA8B;AAAA,IACrC;AAAA;AAAA,EAGM,gCAAgC;AACjC,SAAA,sBAAsBiK,GAAgC,MAAM;AAAA,MAC/D,iBAAiB;AAAA,MACjB,aAAa,CAAChJ,MAAsB;AAClC,aAAK,mBAAmBA;AAAA,MAAA;AAAA,IAC1B,CACD,GAGI,KAAA,eAAe,KAAK,MAAM;ApG5GnC,UAAAtlB;AoG6GM,OAAAA,IAAA,KAAK,wBAAL,QAAAA,EAA0B;AAAA,QACxB,KAAK,oBAAoB;AAAA;AAAA,IAC3B,CACD;AAAA,EAAA;AAAA,EAGK,eAAeuC,GAAsB;ApGnH/C,QAAAvC;AoGoHI,YAAQuC,EAAM,KAAK;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACC,YAAA,CAAC,KAAK,QAAQ;AAEd,WAAAA,EAAM,QAAQ,eACdA,EAAM,QAAQ,aACdA,EAAM,QAAQ,WACdA,EAAM,QAAQ,SAEdA,EAAM,eAAe,GACrB,KAAK,aAAa;AAEpB;AAAA,QAAA;AAGF,SAAIvC,IAAA,KAAK,wBAAL,QAAAA,EAA0B,cAAcuC,OAEtCA,EAAM,QAAQ,WAAWA,EAAM,QAAQ,QACzC,KAAK,gBAAgB;AAGzB;AAAA,MAEF,KAAK;AACH,QAAAA,EAAM,eAAe,GACrB,KAAK,gBAAgB;AACrB;AAAA,IAAA;AAAA,EACJ;AAAA,EAGM,qBAAqBA,GAAoB;AAC/C,UAAM,EAAE,OAAAF,GAAO,eAAAohC,EAAc,IAAIlhC,EAAM;AACvC,SAAK,KAAK,cAAc,EAAE,OAAAF,EAAA,CAAO,GAC7BohC,MAAkB,WACpB,KAAK,mBAAmBlhC,EAAM,QAC9B,KAAK,gBAAgB;AAAA,EACvB;AAAA,EAGM,YAAYA,GAAmB;AACrC,IAAAA,EAAM,gBAAgB,GACtB,KAAK,SAAS,KAAK,aAAa,IAAI,KAAK,aAAa;AAAA,EAAA;AAAA,EAGhD,wBAAwBA,GAAmB;AAC3C,UAAAwB,IAAOxB,EAAM,aAAa;AAChC,IAAI,QAAQ,CAACwB,EAAK,SAAS,IAAI,KAC7B,KAAK,aAAa;AAAA,EACpB;AAAA,EAGI,eAAe;AAAA,WAAA1D,EAAA;ApG5KvB,UAAAL;AoG6KI,MAAI,KAAK,WAIT,KAAK,SAAS,KACdA,IAAA,KAAK,SAAS,CAAC,MAAf,QAAAA,EAAkB,aAAa,iBAAiB,SAEvC,SAAA,iBAAiB,aAAa,KAAK,uBAAuB,GAEnE,MAAM,KAAK;AAAA,IAAA;AAAA;AAAA,EAGP,eAAe;AAAA,WAAAK,EAAA;ApGzLvB,UAAAL,GAAAC;AoG0LQ,MAAC,KAAK,WAIV,KAAK,SAAS,KACdD,IAAA,KAAK,SAAS,CAAC,MAAf,QAAAA,EAAkB,aAAa,iBAAiB,UAEvC,SAAA,oBAAoB,aAAa,KAAK,uBAAuB,IAGtEC,IAAA,KAAK,wBAAL,QAAAA,EAA0B,SAE1B,MAAM,KAAK,gBAEX,KAAK,MAAM;AAAA,IAAA;AAAA;AAAA,EAGL,kBAAkB;AACxB,SAAK,aAAa,GAClB,KAAK,MAAM;AAAA,EAAA;AAAA,EAGN,QAAQ;AACb,QAAI,KAAK,YAAY,KAAK,SAAS,SAAS,GAAG;AACvC,YAAAyjC,IAAiB,KAAK,SAAS,CAAC,GAChCvS,IAAOuS,EAAe,sBAAsB;AAOlD,MALEvS,EAAK,OAAO,KACZA,EAAK,QAAQ,KACbA,EAAK,UAAU,OAAO,eACtBA,EAAK,SAAS,OAAO,cAGrBuS,EAAe,MAAM,EAAE,eAAe,GAAA,CAAM;AAAA,IAC9C;AAAA,EACF;AAAA,EAGM,uBAAuB;AAC7B,IAAI,KAAK,YAAY,KAAK,SAAS,SAAS,MAC1C,KAAK,SAAS,CAAC,EAAE,aAAa,iBAAiB,OAAO,GACtD,KAAK,SAAS,CAAC,EAAE,aAAa,iBAAiB,OAAO;AAAA,EACxD;AAAA,EAGM,2BAA2B;ApGvOrC,QAAA1jC;AoGwOI,KAAAA,IAAA,KAAK,wBAAL,QAAAA,EAA0B;AAAA,EAAgB;AAAA,EAG5C,SAAS;AACA,WAAA2c;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,qBAKU,KAAK,aAAa,cAAc;AAAA,0BAC3B,KAAK,kBAAkBoH,CAAO;AAAA;AAAA,kBAEtC,KAAK,MAAM;AAAA;AAAA,gBAEbtjB,EAAK,SAAS,CAAC;AAAA,oBACX,KAAK,SAAS;AAAA,oBACd,KAAK,QAAQ;AAAA,iBAChB,KAAK,WAAW;AAAA,oBACb,KAAK,SAAS;AAAA,oBACd,KAAK,QAAQ;AAAA,iBAChB,KAAK,MAAM;AAAA,gBACZ,KAAK,IAAI;AAAA,oBACL,KAAK,QAAQ;AAAA,qBACZ,KAAK,SAAS;AAAA,2BACR,KAAK,gBAAgB;AAAA,qBAC3B,KAAK,eAAe;AAAA,kCACP,KAAK,oBAAoB;AAAA;AAAA;AAAA;AAAA,wBAInC,KAAK,oBAAoB;AAAA,4BACrB,KAAK,wBAAwB;AAAA;AAAA;AAAA,EAAA;AAIzD;AAjPqB+iC,GAUH,SAASzmB,EAAUC,EAAM;AAFxBE,GAAA;AAAA,EADhBO,GAAsB,EAAE,MAAM,UAAW,CAAA;AAAA,GAPvB+lB,GAQF,WAAA,YAAA,CAAA;AAQjBtmB,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAfPqmB,GAgBnB,WAAA,SAAA,CAAA;AAG6BtmB,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAnBRqmB,GAmBU,WAAA,aAAA,CAAA;AAI7BtmB,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAQ,WAAW,kBAAmB,CAAA;AAAA,GAtBrCqmB,GAuBnB,WAAA,kBAAA,CAAA;AAGQtmB,GAAA;AAAA,EADPgH,EAAM;AAAA,GAzBYsf,GA0BX,WAAA,oBAAA,CAAA;AA1BWA,KAArBtmB,GAAA;AAAA,EADCG,EAAc,gBAAgB;AAAA,GACVmmB,EAAA;;;;;;;ACHA,IAAAG,KAArB,cAA+CzhC,EAAW;AAAA,EAA1D,cAAA;AAAA,UAAA,GAAA,SAAA,GAac,KAAA,YAAA,IAGZ,KAAQ,gBAAoC;AAAA,EAAA;AAAA,EAE5C,oBAAoB;AAClB,UAAM,kBAAkB,GACnB,KAAA;AAAA,MACH;AAAA,MACA,KAAK;AAAA,IACP;AAAA,EAAA;AAAA,EAGF,uBAAuB;AACrB,UAAM,qBAAqB,GACtB,KAAA;AAAA,MACH;AAAA,MACA,KAAK;AAAA,IACP;AAAA,EAAA;AAAA,EAGM,iBAAiBK,GAAc;AACjC,QAAA,CAAC,KAAK,UAAW;AAGrB,UAAMqhC,IADcrhC,EACY;AAC5B,IAAAqhC,MAAgB,KAAK,kBAGrB,KAAK,iBACF,KAAA,cAAc,gBAAgB,UAAU,GAI/C,KAAK,gBAAgBA,GAChB,KAAA,cAAc,aAAa,YAAY,EAAE;AAAA,EAAA;AAAA,EAGhD,SAAS;AACA,WAAAjnB;AAAAA;AAAAA,UAED,KAAK,QACHA,sCAAyC,KAAK,KAAK,WACnD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAOd;AA/DqBgnB,GACH,SAAS5mB,EAAUC,EAAM;AAMzCE,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GANPwmB,GAOnB,WAAA,SAAA,CAAA;AAMAzmB,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAZRwmB,GAanB,WAAA,aAAA,CAAA;AAGQzmB,GAAA;AAAA,EADPgH,EAAM;AAAA,GAfYyf,GAgBX,WAAA,iBAAA,CAAA;AAhBWA,KAArBzmB,GAAA;AAAA,EADCG,EAAc,sBAAsB;AAAA,GAChBsmB,EAAA;;;;;;;ACWA,IAAAE,KAArB,cAA8C3hC,EAAW;AAAA,EAAzD,cAAA;AAAA,UAAA,GAAA,SAAA,GAgBa,KAAA,WAAA,IAWsB,KAAA,SAAA,SAKf,KAAA,MAAA,uBAML,KAAA,aAAA,IAMF,KAAA,WAAA,IAMK,KAAA,gBAAA,QAGhB,KAAQ,cAAc;AAAA,EAAA;AAAA,EAEtB,oBAAoB;AAClB,UAAM,kBAAkB,GACxB,KAAK,cAAc,KAAK;AAAA,EAAA;AAAA,EAG1B,QAAQmiB,GAAyC;AAC/C,UAAM,QAAQA,CAAiB,GAC3BA,EAAkB,IAAI,UAAU,MAClC,KAAK,cAAc,KAAK;AAAA,EAC1B;AAAA,EAGM,aAAa9hB,GAAc;AAGjC,IAFAA,EAAM,gBAAgB,GAElB,MAAK,aACJ,KAAA,cAAc,CAAC,KAAK,aACzB,KAAK,KAAK,0BAA0B;AAAA,MAClC,OAAO,KAAK;AAAA,MACZ,eAAe,KAAK;AAAA,IAAA,CACrB;AAAA,EAAA;AAAA,EAGK,eAAeA,GAAsB;AAC3C,KAAIA,EAAM,QAAQ,WAAWA,EAAM,QAAQ,SACpC,KAAK,OAIRA,EAAM,gBAAgB,KAHtBA,EAAM,eAAe,GACrB,KAAK,aAAaA,CAAK,KAMvBA,EAAM,QAAQ,aAChBA,EAAM,eAAe,GACrB,KAAK,KAAK,WAAW;AAAA,EACvB;AAAA,EAGK,QAAQ;AACb,IAAI,KAAK,YACP,KAAK,SAAS,MAAM;AAAA,EACtB;AAAA,EAGF,SAAS;AACA,WAAAoa;AAAAA,SACFG,GAAa,KAAK,OAAO,MAAM,QAAQ,CAAC;AAAA;AAAA;AAAA,gBAGjCrc,EAAK,gBAAgB;AAAA,MAC3B,0BAA0B,KAAK;AAAA,MAC/B,0BAA0B,KAAK,cAAc,KAAK;AAAA,IAAA,CACnD,CAAC;AAAA,oBACU,KAAK,QAAQ;AAAA,wBACT,KAAK,QAAQ;AAAA,qBAChBoc,EAAU,KAAK,SAAS,KAAK,EAAE;AAAA,uBAC7BA,EAAU,KAAK,OAAO,SAAY,KAAK,QAAQ,CAAC;AAAA,eACxD,KAAK,IAAI;AAAA,iBACP,KAAK,MAAM;AAAA,cACd,KAAK,GAAG;AAAA,qBACD,KAAK,SAAS;AAAA,iBAClB,KAAK,YAAY;AAAA,mBACf,KAAK,cAAc;AAAA;AAAA;AAAA,kBAGpBpc,EAAK,yBAAyB;AAAA,MACpC,qCAAqC,KAAK;AAAA,IAAA,CAC3C,CAAC;AAAA,YAEA,KAAK,aACD,KAAK,cACHkc;AAAAA;AAAAA;AAAAA;AAAAA,8BAKAA,mCACFoH,CACN;AAAA;AAAA;AAAA,UAGAjH,GAAa,KAAK,OAAO,MAAM,QAAQ,CAAC;AAAA;AAAA,EAAA;AAGlD;AA5IqB+mB,GAIH,SAAS9mB,EAAUC,EAAM;AAFxBE,GAAA;AAAA,EADhB7E,GAAM,UAAU;AAAA,GADEwrB,GAEF,WAAA,YAAA,CAAA;AAQjB3mB,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GATP0mB,GAUnB,WAAA,SAAA,CAAA;AAMA3mB,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAfR0mB,GAgBnB,WAAA,YAAA,CAAA;AAGY3mB,GAAA;AAAA,EAAXC,EAAS;AAAA,GAnBS0mB,GAmBP,WAAA,QAAA,CAAA;AAGA3mB,GAAA;AAAA,EAAXC,EAAS;AAAA,GAtBS0mB,GAsBP,WAAA,QAAA,CAAA;AAKA3mB,GAAA;AAAA,EAAXC,EAAS;AAAA,GA3BS0mB,GA2BP,WAAA,UAAA,CAAA;AAKA3mB,GAAA;AAAA,EAAXC,EAAS;AAAA,GAhCS0mB,GAgCP,WAAA,OAAA,CAAA;AAMZ3mB,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GArCR0mB,GAsCnB,WAAA,cAAA,CAAA;AAMA3mB,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA3CR0mB,GA4CnB,WAAA,YAAA,CAAA;AAMA3mB,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAjDP0mB,GAkDnB,WAAA,iBAAA,CAAA;AAGQ3mB,GAAA;AAAA,EADPgH,EAAM;AAAA,GApDY2f,GAqDX,WAAA,eAAA,CAAA;AArDWA,KAArB3mB,GAAA;AAAA,EADCG,EAAc,qBAAqB;AAAA,GACfwmB,EAAA;;;;;;;ACHA,IAAAC,KAArB,cAAkD5hC,EAAW;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqE,KAAA,cAAA;AAAA,EAAA;AAAA,EAM3D,eAAe;AACd,WAAA;AAAA,MACL,GAAG,KAAK;AAAA,QACN;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA;AAAA,EAGY,oBAAoB;AAAA,WAAA7B,EAAA;AAC1B,YAAA0jC,IAAS,KAAK,aAAa;AAEjC,YAAM,QAAQ;AAAA,QACZA,EAAO,IAAI,CAAMtX,MAASpsB,EAAA;AvGnDhC,cAAAL;AuGoDY,cAAA,KAAK,eAAe,KAAK,OAAO;AAC5B,kBAAAgkC,KAAShkC,IAAA,KAAK,UAAL,gBAAAA,EAAY,MAAM,KAAK,IAAI,CAAAslB,MAAQA,EAAK,KAAA;AAEvD,YAAAmH,EAAM,UAAUuX,EAAO,SAASvX,EAAM,KAAK;AAAA,UAAA;AAErC,YAAAA,EAAA,UAAUA,EAAM,UAAU,KAAK;AAAA,QAExC,EAAA;AAAA,MACH;AAAA,IAAA;AAAA;AAAA,EAGM,iBAAiBlqB,GAAmB;AAC1C,UAAMsC,IACJtC,EAAM,OACN,QAAkC,8BAA8B,GAC5DwhC,IAAS,KAAK,aAAa,GAC3B7d,IAAW,KAAK;AAEtB,IAAIrhB,EAAQ,aAIP,KAAK,eAQAA,EAAA,UAAU,CAACA,EAAQ,SAC3B,KAAK,QAAQk/B,EACV,OAAO,CAAAtX,MAASA,EAAM,OAAO,EAC7B,IAAI,CAASA,MAAAA,EAAM,KAAK,EACxB,KAAK,GAAG,GAEX,KAAK,KAAK,cAAc,EAAE,OAAO,KAAK,OAAO,MAb7C,KAAK,QAAQ5nB,EAAQ,OACrBk/B,EAAO,QAAQ,CAAAtX,MAAUA,EAAM,UAAUA,MAAU5nB,CAAO,GAEtD,KAAK,UAAUqhB,KACZ,KAAA,KAAK,cAAc,EAAE,OAAOrhB,EAAQ,OAAO,UAAU,IAAM;AAAA,EAUpE;AAAA,EAGQ,QAAQ+X,GAA0C;AACtD,IAAAA,EAAmB,IAAI,OAAO,KAChC,KAAK,kBAAkB;AAAA,EACzB;AAAA,EAGF,SAAS;AACA,WAAAD;AAAAA,+BACoBlc,EAAK,kBAAkB,CAAC;AAAA;AAAA,mBAEpC,KAAK,gBAAgB;AAAA,wBAChB,KAAK,iBAAiB;AAAA;AAAA;AAAA,EAAA;AAI9C;AA5EqBqjC,GAMH,SAAS/mB,EAAUC,EAAM;AAJGE,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAFvB2mB,GAEyB,WAAA,eAAA,CAAA;AAED5mB,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAJtB2mB,GAIwB,WAAA,SAAA,CAAA;AAJxBA,KAArB5mB,GAAA;AAAA,EADCG,EAAc,yBAAyB;AAAA,GACnBymB,EAAA;;;;;;;ACEA,IAAAG,KAArB,cAAsD/hC,EAAW;AAAA,EAAjE,cAAA;AAAA,UAAA,GAAA,SAAA,GAIkD,KAAA,UAAA,IAEgB,KAAA,WAAA;AAAA,EAAA;AAAA,EAMhE,SAAS;AACA,WAAAya;AAAAA;AAAAA;AAAAA,eAGIE,EAAU,KAAK,IAAI,CAAC;AAAA,gBACnBA,EAAU,KAAK,KAAK,CAAC;AAAA,mBAClB,KAAK,OAAO;AAAA,oBACX,KAAK,QAAQ;AAAA,qBACZA,EAAU,KAAK,SAAS,KAAK,EAAE;AAAA,uBAC7B,KAAK,OAAO;AAAA,qBACd,KAAK,SAAS;AAAA,gBACnBpc,EAAK,2BAA2B;AAAA,MACtC,oCAAoC,KAAK;AAAA,IAAA,CAC1C,CAAC;AAAA;AAAA;AAAA;AAAA,EAAA;AAKV;AA9BqBwjC,GAUH,SAASlnB,EAAUC,EAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB8mB,GAEwB,WAAA,SAAA,CAAA;AAEd/mB,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAJR8mB,GAIU,WAAA,WAAA,CAAA;AAEe/mB,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GANvB8mB,GAMyB,WAAA,YAAA,CAAA;AAED/mB,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GARtB8mB,GAQwB,WAAA,QAAA,CAAA;AARxBA,KAArB/mB,GAAA;AAAA,EADCG,EAAc,8BAA8B;AAAA,GACxB4mB,EAAA;;;;;;;AClBd,MAAMC,KAAN,MAAMA,WAAyBnd,GAAmB;AAAA,EAAlD,cAAA;AAAA,UAAA,GAAA,SAAA,GAW0B,KAAA,OAAA,QASuB,KAAA,UAAA,IACR,KAAA,iBAAA,IACF,KAAA,eAAA,IACnC,KAAQ,kBAAkB,IAC1B,KAAQ,iBAAiB,IACzB,KAAQ,aAAa,IACrB,KAAQ,cAAc,IAgC/B,KAAA,UAAU,MAAM;AACd,MAAI,CAAC,KAAK,MAAM,SAAS,YAAY,CAAC,KAAK,mBACpC,KAAA,QAAQ,KAAK,MAAM,QAG1B,KAAK,KAAK,aAAa,EAAE,OAAO,KAAK,MAAM,OAAO,GAClD,KAAK,YAAY;AAAA,IACnB;AAAA,EAAA;AAAA,EAnCA,IAAW,gBAAkC;AzG7C/C,QAAA/mB;AyG8CW,YAAAA,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc;AAAA,EAAiB;AAAA,EAGjD,kBAAkBuC,GAAc;AAE/B,KADQA,KAAA,gBAAAA,EAAO,QACf,aAAa,QAAQ,MAAM;AAAA,EAAA;AAAA,EAG1B,aACRqa,GACM;AACN,UAAM,aAAaA,CAAkB,GAErC,KAAK,kBAAkB,CAAC,CAAC,KAAK,iBAAiB,QAC/C,KAAK,iBAAiB,CAAC,CAAC,KAAK,gBAAgB,QAC7C,KAAK,aAAa,CAAC,CAAC,KAAK,YAAY,QACrC,KAAK,cAAc,CAAC,CAAC,KAAK,aAAa;AAAA,EAAA;AAAA,EAGzC,yBAAyBxa,GAAc8jB,GAAe9hB,GAAe;AAC7D,UAAA,yBAAyBhC,GAAM8jB,GAAU9hB,CAAQ,GAEnDhC,MAAS,WAAW,KAAK,UAC3B,KAAK,MAAM,QAAQgC;AAAA,EACrB;AAAA,EAYF,oBAAoB;AACb,SAAA,UAAU,YAAY,EAAE,GACxB,KAAA,UAAU,aAAa,KAAK,YAAY,GAC7C,KAAK,QAAQ,KAAK,cACb,KAAA,MAAM,QAAQ,KAAK,gBAAgB;AAAA,EAAA;AAAA,EAG1C,SAAS;AACP,SAAK,KAAK,UAAU;AAAA,EAAA;AAAA,EAGtB,UAAU;AACR,SAAK,KAAK,WAAW;AAAA,EAAA;AAAA,EAGvB,WAAW;AACJ,SAAA,QAAQ,KAAK,MAAM,OAEnB,KAAK,kBACR,KAAK,KAAK,cAAc,EAAE,OAAO,KAAK,MAAM,OAAO,GAGrD,KAAK,YAAY;AAAA,EAAA;AAAA,EAGnB,UAAU7B,GAAsB;AACzB,SAAA,KAAK,eAAe,EAAE,OAAO,KAAK,MAAM,OAAO,eAAeA,GAAO;AAE1E,UAAM4hC,IACJ5hC,EAAM,WAAWA,EAAM,WAAWA,EAAM,YAAYA,EAAM;AAE5D,IAAI,CAAC,KAAK,gBAAgBA,EAAM,QAAQ,WAAW,CAAC4hC,KAClD,WAAW,MAAM;AACf,UAAI,CAAC5hC,EAAM,oBAAoB,CAACA,EAAM,aAAa;AAC3C,cAAAmmB,IAAQ,SAAS,cAAc,QAAQ;AAC7C,QAAAA,EAAM,OAAO,UACR,KAAA,sBAAsB,YAAYA,CAAK,GAE5CA,EAAM,MAAM,GACZA,EAAM,OAAO;AAAA,MAAA;AAAA,IACf,CACD;AAAA,EACH;AAAA,EAGF,IAAW,eAAe;AACxB,WAAO,KAAK;AAAA,EAAA;AAAA,EAGd,cAAcnmB,GAAc;AAC1B,IAAAA,EAAM,eAAe;AAAA,EAAA;AAAA,EAGvB,uBAAuB;AACd,WAAAoa;AAAAA;AAAAA,gBAEKlc,EAAK,EAAE,uBAAuB,CAAC,CAAC,KAAK,WAAA,CAAY,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKlDA,EAAK;AAAA,MACX,wBAAwB,KAAK,eAAe,KAAK;AAAA,IAAA,CAClD,CAAC;AAAA,UACA,KAAK,UACHkc,iDACAoH,CAAO;AAAA;AAAA;AAAA,EAAA;AAAA,EAKjB,YAAYwC,GAAmB;AACtB,WAAA5J;AAAAA;AAAAA,UAED,KAAK,SACPA;AAAAA;AAAAA;AAAAA;AAAAA,kBAIU,KAAK,IAAI;AAAA,sBACL,KAAK,QAAQ;AAAA,sBACb,KAAK,QAAQ;AAAA,sBACb,KAAK,QAAQ;AAAA,kBACjBlc,EAAK,OAAO,CAAC;AAAA,kBACboc,EAAU,KAAK,KAAK,CAAC;AAAA,6BACV;AAAA,UACnB,KAAK,WACPF;AAAAA;AAAAA,oBAEY,KAAK,OAAO;AAAA;AAAA;AAAA,sBAGV,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,yBAKlB,KAAK,gBAAgB;AAAA,mBAC3B,KAAK,IAAiC;AAAA,uBAClC,KAAK,SAAS,OAAO,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,0BAK7B;AAAA;AAAA,QAElB,KAAK,eACPA;AAAAA;AAAAA;AAAAA;AAAAA,iBAIWE,EAAU,KAAK,IAA6B,CAAC;AAAA;AAAA,YAElD,KAAK,WAAW;AAAA;AAAA,OAErB;AAAA;AAAA;AAAA,gBAGSpc;AAAA,MACN;AAAA,MACA,UAAU,KAAK,IAAI;AAAA,MACnB,EAAE,kBAAkB,KAAK,WAAW,UAAU;AAAA,MAC9C,EAAE,gBAAgB,KAAK,WAAW,QAAQ;AAAA,MAC1C,EAAE,mBAAmB,KAAK,SAAS;AAAA,MACnC,EAAE,mBAAmB,KAAK,SAAS;AAAA,MACnC,EAAE,2BAA2B,CAAC,CAAC,KAAK,gBAAgB;AAAA,MACpD,EAAE,0BAA0B,CAAC,CAAC,KAAK,eAAe;AAAA,MAClD,EAAE,qBAAqB,CAAC,CAAC,KAAK,WAAW;AAAA,MACzC,EAAE,sBAAsB,CAAC,CAAC,KAAK,eAAe,KAAK,QAAQ;AAAA,IAAA,CAC5D;AAAA;AAAA;AAAA,kBAGSA,EAAK;AAAA,MACX,uBAAuB,CAAC,CAAC,KAAK;AAAA,MAC9B,CAAC,wBAAwB,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK;AAAA,MAC9C,iCACE,CAAC,CAAC,KAAK,mBAAmB,KAAK;AAAA,MACjC,iCACE,CAAC,CAAC,KAAK,mBAAmB,KAAK;AAAA,MACjC,gCACE,CAAC,CAAC,KAAK,mBAAmB,KAAK,WAAW;AAAA,MAC5C,8BACE,CAAC,CAAC,KAAK,mBAAmB,KAAK,WAAW;AAAA,IAAA,CAC7C,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMQA;AAAA,MACN;AAAA,MACA,mBAAmB,KAAK,IAAI;AAAA,MAC5B,EAAE,2BAA2B,KAAK,WAAW,UAAU;AAAA,MACvD,EAAE,yBAAyB,KAAK,WAAW,QAAQ;AAAA,MACnD,EAAE,4BAA4B,KAAK,SAAS;AAAA,MAC5C,EAAE,4BAA4B,KAAK,SAAS;AAAA,MAC5C,EAAE,oCAAoC,CAAC,CAAC,KAAK,gBAAgB;AAAA,MAC7D,EAAE,mCAAmC,CAAC,CAAC,KAAK,eAAe;AAAA,MAC3D,EAAE,8BAA8B,CAAC,CAAC,KAAK,WAAW;AAAA,MAClD;AAAA,QACE,+BACE,CAAC,CAAC,KAAK,eAAe,KAAK;AAAA,MAAA;AAAA,IAEhC,CAAA;AAAA;AAAA,mBAEMoc,EAAU,KAAK,OAAO,KAAK,OAAO,MAAS,CAAC;AAAA,mBAC5C,KAAK,IAAI;AAAA,wBACJ,KAAK,QAAQ;AAAA,wBACb,KAAK,QAAQ;AAAA,wBACb,KAAK,QAAQ;AAAA,0BACXA,EAAU,KAAK,WAAW,CAAC;AAAA,oBACjCA,EAAU,KAAK,KAAK,CAAC;AAAA,wBACjBA,EAAU,KAAK,SAAS,CAAC;AAAA,wBACzBA,EAAU,KAAK,SAAS,CAAC;AAAA,8BACnBA,EAAU,KAAK,QAAQ,UAAUkH,CAAO,CAAC;AAAA,gCACvClH;AAAAA,MAClB,KAAK,cAAc,gBAAgBkH;AAAAA,IAAA,CACpC,GAAGlH,EAAU,KAAK,WAAW,cAAckH,CAAO,CAAC;AAAA,kBAC9ClH,EAAU,KAAK,GAAG,CAAC;AAAA,kBACnBA,EAAU,KAAK,GAAG,CAAC;AAAA,sBACfA,EAAU,KAAK,OAAO,CAAC;AAAA,mBAC1BA,EAAU,KAAK,IAAc,CAAC;AAAA,wBACzBA,EAAU,KAAK,SAAS,CAAC;AAAA,yBACxB,KAAK,SAAS;AAAA,2BACZ,KAAK,YAAmB;AAAA,6BACtBA,EAAU,KAAK,iBAAiB,OAAO,KAAK,CAAC;AAAA,sBACpD,KAAK,QAAQ;AAAA,qBACd,KAAK,OAAO;AAAA,uBACV,KAAK,SAAS;AAAA,uBACd,KAAK,aAAa;AAAA,oBACrB,KAAK,MAAM;AAAA,qBACV,KAAK,OAAO;AAAA,YACrB0J,KAAA,OAAAA,IAAW,KAAK,qBAAsB,CAAA;AAAA;AAAA;AAAA;AAAA,kBAIhC9lB,EAAK;AAAA,MACX,sBAAsB,CAAC,CAAC,KAAK;AAAA,MAC7B,CAAC,uBAAuB,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK;AAAA,MAC7C,gCACE,CAAC,CAAC,KAAK,kBAAkB,KAAK;AAAA,MAChC,gCACE,CAAC,CAAC,KAAK,kBAAkB,KAAK;AAAA,MAChC,+BACE,CAAC,CAAC,KAAK,kBAAkB,KAAK,WAAW;AAAA,MAC3C,6BACE,CAAC,CAAC,KAAK,kBAAkB,KAAK,WAAW;AAAA,IAAA,CAC5C,CAAC;AAAA;AAAA;AAAA;AAAA,QAIJ,KAAK,YAAY,KAAK,gBAAiB,CAAA;AAAA;AAAA,EAAA;AAAA,EAIrC,kBAAkB;AACjB,WAAAkc;AAAAA;AAAAA;AAAAA;AAAAA,uBAIYE,EAAU,KAAK,YAAY,CAAC;AAAA,wBAC3BA,EAAU,KAAK,IAA0B,CAAC;AAAA,kBAChD,KAAK,MAAM;AAAA;AAAA;AAAA;AAAA,yBAIJ,KAAK,iBAAiB;AAAA,UACrC,KAAK,QAAQ;AAAA;AAAA;AAAA,EAAA;AAIvB;AA9QkBqnB,GAAA,SAASnnB,EAAUC,EAAM;AA5BpC,IAAMonB,KAANF;AACYhnB,GAAA;AAAA,EAAhB7E,GAAM,QAAQ;AAAA,GADJ+rB,GACM,WAAA,OAAA;AAEAlnB,GAAA;AAAA,EADhBO,GAAsB,EAAE,MAAM,eAAgB,CAAA;AAAA,GAFpC2mB,GAGM,WAAA,kBAAA;AAEAlnB,GAAA;AAAA,EADhBO,GAAsB,EAAE,MAAM,cAAe,CAAA;AAAA,GAJnC2mB,GAKM,WAAA,iBAAA;AAEAlnB,GAAA;AAAA,EADhBO,GAAsB,EAAE,MAAM,SAAU,CAAA;AAAA,GAN9B2mB,GAOM,WAAA,aAAA;AAEAlnB,GAAA;AAAA,EADhBO,GAAsB,EAAE,MAAM,UAAW,CAAA;AAAA,GAR/B2mB,GASM,WAAA,cAAA;AAELlnB,GAAA;AAAA,EAAXC,EAAS;AAAA,GAXCinB,GAWC,WAAA,MAAA;AACAlnB,GAAA;AAAA,EAAXC,EAAS;AAAA,GAZCinB,GAYC,WAAA,aAAA;AACgBlnB,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAbfinB,GAaiB,WAAA,WAAA;AACAlnB,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAdfinB,GAciB,WAAA,WAAA;AACAlnB,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAffinB,GAeiB,WAAA,KAAA;AACAlnB,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhBfinB,GAgBiB,WAAA,KAAA;AAChBlnB,GAAA;AAAA,EAAXC,EAAS;AAAA,GAjBCinB,GAiBC,WAAA,SAAA;AACgBlnB,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAlBfinB,GAkBiB,WAAA,MAAA;AAChBlnB,GAAA;AAAA,EAAXC,EAAS;AAAA,GAnBCinB,GAmBC,WAAA,WAAA;AACgClnB,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GApB/BinB,GAoBiC,WAAA,SAAA;AACflnB,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GArBhBinB,GAqBkB,WAAA,gBAAA;AACAlnB,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAtBhBinB,GAsBkB,WAAA,cAAA;AACZlnB,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAvBIkgB,GAuBM,WAAA,iBAAA;AACAlnB,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAxBIkgB,GAwBM,WAAA,gBAAA;AACAlnB,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAzBIkgB,GAyBM,WAAA,YAAA;AACAlnB,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GA1BIkgB,GA0BM,WAAA,aAAA;;;;;;ACyBE,IAAAC,KAArB,cAA+CD,GAAiB;AAAA,EAC9D,cAAc;AACN,UAAA,GACN,KAAK,OAAO;AAAA,EAAA;AAAA,EAKd,SAAS;AACP,WAAO,KAAK;AAAA,MACVznB;AAAAA,gBACUlc,EAAK,oCAAoC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKnC,KAAK,sBACd,KAAK,sBACL2a,GAAU,MAAM,CAAC;AAAA,oBACX,KAAK,MAAM;AAAA;AAAA;AAAA,IAG3B;AAAA,EAAA;AAAA,EAGF,SAAS;AACP,UAAMkpB,IAAe,KAAK;AAC1B,SAAK,QAAQA,EAAa,OAC1B,KAAK,KAAK,YAAY,EAAE,OAAO,KAAK,OAAO,GAC3C,KAAK,gBAAgB;AAAA,EAAA;AAAA,EAGf,kBAAkB;AACxB,cAAU,UACP,UAAU,KAAK,KAAK,EACpB,KAAK,MAAM;AACV,WAAK,KAAK,YAAY,EAAE,OAAO,KAAK,OAAO;AAAA,IAAA,CAC5C,EACA,MAAM,MAAM;AACX,WAAK,KAAK,iBAAiB;AAAA,IAAA,CAC5B;AAAA,EAAA;AAEP;AApC8BpnB,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GANPknB,GAMS,WAAA,uBAAA,CAAA;AANTA,KAArBnnB,GAAA;AAAA,EADCG,EAAc,sBAAsB;AAAA,GAChBgnB,EAAA;;;;;;;ACzBA,IAAAE,KAArB,cAA2CriC,EAAW;AAAA,EAAtD,cAAA;AAAA,UAAA,GAAA,SAAA,GAIuD,KAAA,UAAA,UAKH,KAAA,OAAA;AAAA,EAAA;AAAA,EAIlD,SAAS;AACD,UAAAsiC,IACJ,KAAK,SAAS,OACV7nB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,oBAecAEGlc,EAAK,aAAa;AAAA,MACxB,CAAC,cAAc,KAAK,OAAO,EAAE,GAAG,KAAK;AAAA,MACrC,CAAC,cAAc,KAAK,IAAI,EAAE,GAAG,KAAK;AAAA,IAAA,CACnC,CAAC;AAAA;AAAA,gBAEQA,EAAK,6BAA6B;AAAA,MACxC,CAAC,8BAA8B,KAAK,IAAI,EAAE,GAAG,KAAK;AAAA,MAClD,CAAC,8BAA8B,KAAK,OAAO,EAAE,GAAG,KAAK;AAAA,IAAA,CACtD,CAAC;AAAA,UACA+jC,CAAY;AAAA;AAAA;AAAA,UAGZ,KAAK,SAAS,OACZppB,GAAU,WAAW,IACrBA,GAAU,iBAAiB,CAAC;AAAA;AAAA;AAAA,EAAA;AAIxC;AAlKqBmpB,GAWH,SAASxnB,EAAUC,EAAM;AAPEE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAJtBonB,GAIwB,WAAA,WAAA,CAAA;AAKArnB,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GATtBonB,GASwB,WAAA,QAAA,CAAA;AATxBA,KAArBrnB,GAAA;AAAA,EADCG,EAAc,kBAAkB;AAAA,GACZknB,EAAA;ACzCrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyEA,SAASE,GAAiBC,GAASjY,GAAO;AACxC,SAAO,OAAOiY,KAAY,aAAaA,EAAQjY,CAAK,IAAIiY;AAC1D;AAIA,SAASC,GAAiB/gC,GAAKiT,GAAU;AACvC,SAAO,CAAA6tB,MAAW;AAChB,IAAA7tB,EAAS,SAAS,CAAA+tB,MACTrkC,EAAAC,EAAA,IACFokC,IADE;AAAA,MAEL,CAAChhC,CAAG,GAAG6gC,GAAiBC,GAASE,EAAIhhC,CAAG,CAAC;AAAA,IAC1C,EACF;AAAA,EACF;AACH;AACA,SAASihC,GAAWjlC,GAAG;AACrB,SAAOA,aAAa;AACtB;AACA,SAASklC,GAAcllC,GAAG;AACxB,SAAO,MAAM,QAAQA,CAAC,KAAKA,EAAE,MAAM,CAAA4P,MAAO,OAAOA,KAAQ,QAAQ;AACnE;AACA,SAASu1B,GAAU3tB,GAAK4tB,GAAa;AACnC,QAAMC,IAAO,CAAE,GACTC,IAAU,CAAAC,MAAU;AACxB,IAAAA,EAAO,QAAQ,CAAA7f,MAAQ;AACrB,MAAA2f,EAAK,KAAK3f,CAAI;AACd,YAAM8f,IAAWJ,EAAY1f,CAAI;AACjC,MAAI8f,KAAY,QAAQA,EAAS,UAC/BF,EAAQE,CAAQ;AAAA,IAExB,CAAK;AAAA,EACF;AACD,SAAAF,EAAQ9tB,CAAG,GACJ6tB;AACT;AACA,SAASI,EAAKC,GAAShzB,GAAIiC,GAAM;AAC/B,MAAIgxB,IAAO,CAAE,GACT/8B;AACJ,SAAO,CAAAg9B,MAAW;AAChB,QAAIC;AACJ,IAAIlxB,EAAK,OAAOA,EAAK,UAAOkxB,IAAU,KAAK,IAAK;AAChD,UAAMC,IAAUJ,EAAQE,CAAO;AAE/B,QAAI,EADgBE,EAAQ,WAAWH,EAAK,UAAUG,EAAQ,KAAK,CAACC,GAAKt9B,MAAUk9B,EAAKl9B,CAAK,MAAMs9B,CAAG;AAEpG,aAAOn9B;AAET,IAAA+8B,IAAOG;AACP,QAAIE;AAIJ,QAHIrxB,EAAK,OAAOA,EAAK,UAAOqxB,IAAa,KAAK,IAAK,IACnDp9B,IAAS8J,EAAG,GAAGozB,CAAO,GACtBnxB,KAAQ,QAAQA,EAAK,YAAY,QAAQA,EAAK,SAAS/L,CAAM,GACzD+L,EAAK,OAAOA,EAAK,SACfA,KAAQ,QAAQA,EAAK,MAAK,GAAI;AAChC,YAAMsxB,IAAa,KAAK,OAAO,KAAK,QAAQJ,KAAW,GAAG,IAAI,KACxDK,IAAgB,KAAK,OAAO,KAAK,QAAQF,KAAc,GAAG,IAAI,KAC9DG,IAAsBD,IAAgB,IACtCE,IAAM,CAAC9gC,GAAK+gC,MAAQ;AAExB,aADA/gC,IAAM,OAAOA,CAAG,GACTA,EAAI,SAAS+gC;AAClB,UAAA/gC,IAAM,MAAMA;AAEd,eAAOA;AAAA,MACR;AACD,cAAQ,KAAK,OAAO8gC,EAAIF,GAAe,CAAC,CAAC,KAAKE,EAAIH,GAAY,CAAC,CAAC,OAAO;AAAA;AAAA;AAAA,yBAGtD,KAAK,IAAI,GAAG,KAAK,IAAI,MAAM,MAAME,GAAqB,GAAG,CAAC,CAAC,kBAAkBxxB,KAAQ,OAAO,SAASA,EAAK,GAAG;AAAA,IACtI;AAEI,WAAO/L;AAAA,EACR;AACH;AACA,SAAS09B,EAAeC,GAAcC,GAAYxiC,GAAKyiC,GAAU;AAC/D,SAAO;AAAA,IACL,OAAO,MAAM;AACX,UAAIC;AACJ,cAAQA,IAAwBH,KAAgB,OAAO,SAASA,EAAa,aAAa,OAAOG,IAAwBH,EAAaC,CAAU;AAAA,IACjJ;AAAA,IACD,KAAK,QAAQ,IAAI,aAAa,iBAAiBxiC;AAAA,IAC/C,UAAAyiC;AAAA,EACD;AACH;AAEA,SAASE,GAAWC,GAAOC,GAAKC,GAAQC,GAAU;AAChD,QAAMC,IAAiB,MAAM;AAC3B,QAAIC;AACJ,YAAQA,IAAiBrc,EAAK,SAAQ,MAAO,OAAOqc,IAAiBL,EAAM,QAAQ;AAAA,EACpF,GACKhc,IAAO;AAAA,IACX,IAAI,GAAGic,EAAI,EAAE,IAAIC,EAAO,EAAE;AAAA,IAC1B,KAAAD;AAAA,IACA,QAAAC;AAAA,IACA,UAAU,MAAMD,EAAI,SAASE,CAAQ;AAAA,IACrC,aAAaC;AAAA,IACb,YAAYvB,EAAK,MAAM,CAACmB,GAAOE,GAAQD,GAAKjc,CAAI,GAAG,CAACgc,GAAOE,GAAQD,GAAKjc,OAAU;AAAA,MAChF,OAAAgc;AAAA,MACA,QAAAE;AAAA,MACA,KAAAD;AAAA,MACA,MAAMjc;AAAA,MACN,UAAUA,EAAK;AAAA,MACf,aAAaA,EAAK;AAAA,IACnB,IAAG0b,EAAeM,EAAM,SAAS,cAAc,iBAAiB,CAAC;AAAA,EACnE;AACD,SAAAA,EAAM,UAAU,QAAQ,CAAAM,MAAW;AACjC,IAAAA,EAAQ,cAAc,QAAQA,EAAQ,WAAWtc,GAAMkc,GAAQD,GAAKD,CAAK;AAAA,EAC1E,GAAE,EAAE,GACEhc;AACT;AAEA,SAASuc,GAAaP,GAAOQ,GAAWC,GAAOC,GAAQ;AACrD,MAAIn/B,GAAMo/B;AACV,QAAMC,IAAgBZ,EAAM,qBAAsB,GAC5Ca,IAAoB7mC,IAAA,IACrB4mC,IACAJ,IAECM,IAAcD,EAAkB;AACtC,MAAI/gB,KAAMve,KAAQo/B,IAAwBE,EAAkB,OAAO,OAAOF,IAAwBG,IAAc,OAAO,OAAO,UAAU,cAAe,aAAaA,EAAY,WAAW,KAAK,GAAG,IAAIA,EAAY,QAAQ,OAAO,GAAG,IAAI,WAAc,OAAOv/B,IAAO,OAAOs/B,EAAkB,UAAW,WAAWA,EAAkB,SAAS,QAC3UE;AAqBJ,MApBIF,EAAkB,aACpBE,IAAaF,EAAkB,aACtBC,MAELA,EAAY,SAAS,GAAG,IAC1BC,IAAa,CAAAC,MAAe;AAC1B,QAAIh/B,IAASg/B;AACb,eAAW5jC,KAAO0jC,EAAY,MAAM,GAAG,GAAG;AACxC,UAAIG;AACJ,MAAAj/B,KAAUi/B,IAAUj/B,MAAW,OAAO,SAASi/B,EAAQ7jC,CAAG,GACtD,QAAQ,IAAI,aAAa,gBAAgB4E,MAAW,UACtD,QAAQ,KAAK,IAAI5E,CAAG,2BAA2B0jC,CAAW,uBAAuB;AAAA,IAE7F;AACQ,WAAO9+B;AAAA,EACR,IAED++B,IAAa,CAAAC,MAAeA,EAAYH,EAAkB,WAAW,IAGrE,CAAC/gB;AACH,UAAI,QAAQ,IAAI,aAAa,eACrB,IAAI,MAAM+gB,EAAkB,aAAa,mDAAmD,sDAAsD,IAEpJ,IAAI,MAAO;AAEnB,MAAIX,IAAS;AAAA,IACX,IAAI,GAAG,OAAOpgB,CAAE,CAAC;AAAA,IACjB,YAAAihB;AAAA,IACA,QAAQL;AAAA,IACR,OAAAD;AAAA,IACA,WAAWI;AAAA,IACX,SAAS,CAAE;AAAA,IACX,gBAAgBhC,EAAK,MAAM,CAAC,EAAI,GAAG,MAAM;AACvC,UAAIqC;AACJ,aAAO,CAAChB,GAAQ,IAAKgB,IAAkBhB,EAAO,YAAY,OAAO,SAASgB,EAAgB,QAAQ,CAAA9nC,MAAKA,EAAE,eAAc,CAAE,CAAE;AAAA,IAC5H,GAAEsmC,EAAeM,EAAM,SAAS,gBAAgB,uBAAuB,CAAC;AAAA,IACzE,gBAAgBnB,EAAK,MAAM,CAACmB,EAAM,mBAAkB,CAAE,GAAG,CAAAmB,MAAgB;AACvE,UAAIC;AACJ,WAAKA,IAAmBlB,EAAO,YAAY,QAAQkB,EAAiB,QAAQ;AAC1E,YAAIC,IAAcnB,EAAO,QAAQ,QAAQ,CAAAA,MAAUA,EAAO,gBAAgB;AAC1E,eAAOiB,EAAaE,CAAW;AAAA,MACvC;AACM,aAAO,CAACnB,CAAM;AAAA,IACf,GAAER,EAAeM,EAAM,SAAS,gBAAgB,uBAAuB,CAAC;AAAA,EAC1E;AACD,aAAWM,KAAWN,EAAM;AAC1B,IAAAM,EAAQ,gBAAgB,QAAQA,EAAQ,aAAaJ,GAAQF,CAAK;AAIpE,SAAOE;AACT;AAEA,MAAMoB,KAAQ;AAGd,SAASC,GAAavB,GAAOE,GAAQpkC,GAAS;AAC5C,MAAI0lC;AAEJ,MAAIC,IAAS;AAAA,IACX,KAFUD,IAAc1lC,EAAQ,OAAO,OAAO0lC,IAActB,EAAO;AAAA,IAGnE,QAAAA;AAAA,IACA,OAAOpkC,EAAQ;AAAA,IACf,eAAe,CAAC,CAACA,EAAQ;AAAA,IACzB,eAAeA,EAAQ;AAAA,IACvB,OAAOA,EAAQ;AAAA,IACf,YAAY,CAAE;AAAA,IACd,SAAS;AAAA,IACT,SAAS;AAAA,IACT,aAAa;AAAA,IACb,gBAAgB,MAAM;AACpB,YAAM4lC,IAAc,CAAE,GAChBC,IAAgB,CAAA3oC,MAAK;AACzB,QAAIA,EAAE,cAAcA,EAAE,WAAW,UAC/BA,EAAE,WAAW,IAAI2oC,CAAa,GAEhCD,EAAY,KAAK1oC,CAAC;AAAA,MACnB;AACD,aAAA2oC,EAAcF,CAAM,GACbC;AAAA,IACR;AAAA,IACD,YAAY,OAAO;AAAA,MACjB,OAAA1B;AAAA,MACA,QAAQyB;AAAA,MACR,QAAAvB;AAAA,IACD;AAAA,EACF;AACD,SAAAF,EAAM,UAAU,QAAQ,CAAAM,MAAW;AACjC,IAAAA,EAAQ,gBAAgB,QAAQA,EAAQ,aAAamB,GAAQzB,CAAK;AAAA,EACtE,CAAG,GACMyB;AACT;AACA,MAAMG,KAAU;AAAA,EACd,aAAa,CAAA5B,MAAS;AAGpB,IAAAA,EAAM,kBAAkBnB,EAAK,MAAM,CAACmB,EAAM,cAAe,GAAEA,EAAM,yBAAyBA,EAAM,SAAQ,EAAG,cAAc,MAAMA,EAAM,SAAQ,EAAG,cAAc,KAAK,GAAG,CAAC6B,GAAYR,GAAapL,GAAM6L,MAAU;AAC9M,UAAIC,GAAkBC;AACtB,YAAMC,KAAeF,IAAmB9L,KAAQ,OAAO,SAASA,EAAK,IAAI,CAAAkK,MAAYkB,EAAY,KAAK,CAAAjoC,MAAKA,EAAE,OAAO+mC,CAAQ,CAAC,EAAE,OAAO,OAAO,MAAM,OAAO4B,IAAmB,CAAE,GACzKG,KAAgBF,IAAoBF,KAAS,OAAO,SAASA,EAAM,IAAI,CAAA3B,MAAYkB,EAAY,KAAK,CAAAjoC,MAAKA,EAAE,OAAO+mC,CAAQ,CAAC,EAAE,OAAO,OAAO,MAAM,OAAO6B,IAAoB,CAAE,GAC9KG,IAAgBd,EAAY,OAAO,CAAAnB,MAAU,EAAEjK,KAAQ,QAAQA,EAAK,SAASiK,EAAO,EAAE,MAAM,EAAE4B,KAAS,QAAQA,EAAM,SAAS5B,EAAO,EAAE,EAAE;AAE/I,aADqBkC,GAAkBP,GAAY,CAAC,GAAGI,GAAa,GAAGE,GAAe,GAAGD,CAAY,GAAGlC,CAAK;AAAA,IAE9G,GAAEN,EAAeM,EAAM,SAASsB,IAAO,iBAAiB,CAAC,GAC1DtB,EAAM,wBAAwBnB,EAAK,MAAM,CAACmB,EAAM,cAAe,GAAEA,EAAM,yBAAyBA,EAAM,SAAQ,EAAG,cAAc,MAAMA,EAAM,SAAQ,EAAG,cAAc,KAAK,GAAG,CAAC6B,GAAYR,GAAapL,GAAM6L,OAC1MT,IAAcA,EAAY,OAAO,CAAAnB,MAAU,EAAEjK,KAAQ,QAAQA,EAAK,SAASiK,EAAO,EAAE,MAAM,EAAE4B,KAAS,QAAQA,EAAM,SAAS5B,EAAO,EAAE,EAAE,GAChIkC,GAAkBP,GAAYR,GAAarB,GAAO,QAAQ,IAChEN,EAAeM,EAAM,SAASsB,IAAO,uBAAuB,CAAC,GAChEtB,EAAM,sBAAsBnB,EAAK,MAAM,CAACmB,EAAM,cAAa,GAAIA,EAAM,sBAAqB,GAAIA,EAAM,SAAU,EAAC,cAAc,IAAI,GAAG,CAAC6B,GAAYR,GAAapL,MAAS;AACrK,UAAIoM;AACJ,YAAMC,KAAsBD,IAAoBpM,KAAQ,OAAO,SAASA,EAAK,IAAI,CAAAkK,MAAYkB,EAAY,KAAK,OAAK,EAAE,OAAOlB,CAAQ,CAAC,EAAE,OAAO,OAAO,MAAM,OAAOkC,IAAoB,CAAE;AACxL,aAAOD,GAAkBP,GAAYS,GAAoBtC,GAAO,MAAM;AAAA,IACvE,GAAEN,EAAeM,EAAM,SAASsB,IAAO,qBAAqB,CAAC,GAC9DtB,EAAM,uBAAuBnB,EAAK,MAAM,CAACmB,EAAM,cAAa,GAAIA,EAAM,sBAAqB,GAAIA,EAAM,SAAU,EAAC,cAAc,KAAK,GAAG,CAAC6B,GAAYR,GAAaS,MAAU;AACxK,UAAIS;AACJ,YAAMD,KAAsBC,IAAqBT,KAAS,OAAO,SAASA,EAAM,IAAI,CAAA3B,MAAYkB,EAAY,KAAK,OAAK,EAAE,OAAOlB,CAAQ,CAAC,EAAE,OAAO,OAAO,MAAM,OAAOoC,IAAqB,CAAE;AAC5L,aAAOH,GAAkBP,GAAYS,GAAoBtC,GAAO,OAAO;AAAA,IACxE,GAAEN,EAAeM,EAAM,SAASsB,IAAO,sBAAsB,CAAC,GAI/DtB,EAAM,kBAAkBnB,EAAK,MAAM,CAACmB,EAAM,gBAAe,CAAE,GAAG,CAAAwC,MACrD,CAAC,GAAGA,CAAY,EAAE,QAAS,GACjC9C,EAAeM,EAAM,SAASsB,IAAO,iBAAiB,CAAC,GAC1DtB,EAAM,sBAAsBnB,EAAK,MAAM,CAACmB,EAAM,oBAAmB,CAAE,GAAG,CAAAwC,MAC7D,CAAC,GAAGA,CAAY,EAAE,QAAS,GACjC9C,EAAeM,EAAM,SAASsB,IAAO,qBAAqB,CAAC,GAC9DtB,EAAM,wBAAwBnB,EAAK,MAAM,CAACmB,EAAM,sBAAqB,CAAE,GAAG,CAAAwC,MACjE,CAAC,GAAGA,CAAY,EAAE,QAAS,GACjC9C,EAAeM,EAAM,SAASsB,IAAO,uBAAuB,CAAC,GAChEtB,EAAM,uBAAuBnB,EAAK,MAAM,CAACmB,EAAM,qBAAoB,CAAE,GAAG,CAAAwC,MAC/D,CAAC,GAAGA,CAAY,EAAE,QAAS,GACjC9C,EAAeM,EAAM,SAASsB,IAAO,sBAAsB,CAAC,GAI/DtB,EAAM,iBAAiBnB,EAAK,MAAM,CAACmB,EAAM,gBAAe,CAAE,GAAG,CAAAwC,MACpDA,EAAa,IAAI,CAAAC,MACfA,EAAY,OACpB,EAAE,KAAM,GACR/C,EAAeM,EAAM,SAASsB,IAAO,gBAAgB,CAAC,GACzDtB,EAAM,qBAAqBnB,EAAK,MAAM,CAACmB,EAAM,oBAAmB,CAAE,GAAG,CAAA/J,MAC5DA,EAAK,IAAI,CAAAwM,MACPA,EAAY,OACpB,EAAE,KAAM,GACR/C,EAAeM,EAAM,SAASsB,IAAO,oBAAoB,CAAC,GAC7DtB,EAAM,uBAAuBnB,EAAK,MAAM,CAACmB,EAAM,sBAAqB,CAAE,GAAG,CAAA/J,MAChEA,EAAK,IAAI,CAAAwM,MACPA,EAAY,OACpB,EAAE,KAAM,GACR/C,EAAeM,EAAM,SAASsB,IAAO,sBAAsB,CAAC,GAC/DtB,EAAM,sBAAsBnB,EAAK,MAAM,CAACmB,EAAM,qBAAoB,CAAE,GAAG,CAAA/J,MAC9DA,EAAK,IAAI,CAAAwM,MACPA,EAAY,OACpB,EAAE,KAAM,GACR/C,EAAeM,EAAM,SAASsB,IAAO,qBAAqB,CAAC,GAI9DtB,EAAM,uBAAuBnB,EAAK,MAAM,CAACmB,EAAM,qBAAoB,CAAE,GAAG,CAAA0C,MAC/DA,EAAY,OAAO,CAAAjB,MAAU;AAClC,UAAIkB;AACJ,aAAO,GAAGA,IAAqBlB,EAAO,eAAe,QAAQkB,EAAmB;AAAA,IACxF,CAAO,GACAjD,EAAeM,EAAM,SAASsB,IAAO,sBAAsB,CAAC,GAC/DtB,EAAM,qBAAqBnB,EAAK,MAAM,CAACmB,EAAM,mBAAkB,CAAE,GAAG,CAAA0C,MAC3DA,EAAY,OAAO,CAAAjB,MAAU;AAClC,UAAImB;AACJ,aAAO,GAAGA,IAAsBnB,EAAO,eAAe,QAAQmB,EAAoB;AAAA,IAC1F,CAAO,GACAlD,EAAeM,EAAM,SAASsB,IAAO,oBAAoB,CAAC,GAC7DtB,EAAM,sBAAsBnB,EAAK,MAAM,CAACmB,EAAM,oBAAmB,CAAE,GAAG,CAAA0C,MAC7DA,EAAY,OAAO,CAAAjB,MAAU;AAClC,UAAIoB;AACJ,aAAO,GAAGA,IAAsBpB,EAAO,eAAe,QAAQoB,EAAoB;AAAA,IAC1F,CAAO,GACAnD,EAAeM,EAAM,SAASsB,IAAO,qBAAqB,CAAC,GAC9DtB,EAAM,iBAAiBnB,EAAK,MAAM,CAACmB,EAAM,oBAAmB,GAAIA,EAAM,sBAAqB,GAAIA,EAAM,qBAAsB,CAAA,GAAG,CAAC/J,GAAMnI,GAAQgU,MAAU;AACrJ,UAAIgB,GAAiBC,GAAQC,GAAmBC,GAAUC,GAAkBC;AAC5E,aAAO,CAAC,IAAKL,KAAmBC,IAAS9M,EAAK,CAAC,MAAM,OAAO,SAAS8M,EAAO,YAAY,OAAOD,IAAkB,CAAE,GAAG,IAAKE,KAAqBC,IAAWnV,EAAO,CAAC,MAAM,OAAO,SAASmV,EAAS,YAAY,OAAOD,IAAoB,CAAA,GAAK,IAAKE,KAAoBC,IAAUrB,EAAM,CAAC,MAAM,OAAO,SAASqB,EAAQ,YAAY,OAAOD,IAAmB,EAAG,EAAE,IAAI,CAAAzB,MAC5VA,EAAO,eAAgB,CAC/B,EAAE,KAAM;AAAA,IACV,GAAE/B,EAAeM,EAAM,SAASsB,IAAO,gBAAgB,CAAC;AAAA,EAC7D;AACA;AACA,SAASc,GAAkBP,GAAYuB,GAAgBpD,GAAOqD,GAAc;AAC1E,MAAIC,GAAuBC;AAO3B,MAAIC,IAAW;AACf,QAAMC,IAAe,SAAUC,GAASjD,GAAO;AAC7C,IAAIA,MAAU,WACZA,IAAQ,IAEV+C,IAAW,KAAK,IAAIA,GAAU/C,CAAK,GACnCiD,EAAQ,OAAO,CAAAxD,MAAUA,EAAO,cAAc,EAAE,QAAQ,CAAAA,MAAU;AAChE,UAAIgB;AACJ,OAAKA,IAAkBhB,EAAO,YAAY,QAAQgB,EAAgB,UAChEuC,EAAavD,EAAO,SAASO,IAAQ,CAAC;AAAA,IAEzC,GAAE,CAAC;AAAA,EACL;AACD,EAAAgD,EAAa5B,CAAU;AACvB,MAAIW,IAAe,CAAE;AACrB,QAAMmB,IAAoB,CAACC,GAAgBnD,MAAU;AAEnD,UAAMgC,IAAc;AAAA,MAClB,OAAAhC;AAAA,MACA,IAAI,CAAC4C,GAAc,GAAG5C,CAAK,EAAE,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG;AAAA,MACvD,SAAS,CAAA;AAAA,IACV,GAGKoD,IAAuB,CAAE;AAG/B,IAAAD,EAAe,QAAQ,CAAAE,MAAiB;AAGtC,YAAMC,IAA4B,CAAC,GAAGF,CAAoB,EAAE,QAAO,EAAG,CAAC,GACjEG,IAAeF,EAAc,OAAO,UAAUrB,EAAY;AAChE,UAAIvC,GACA+D,IAAgB;AASpB,UARID,KAAgBF,EAAc,OAAO,SAEvC5D,IAAS4D,EAAc,OAAO,UAG9B5D,IAAS4D,EAAc,QACvBG,IAAgB,KAEdF,MAA8BA,KAA6B,OAAO,SAASA,EAA0B,YAAY7D;AAEnH,QAAA6D,EAA0B,WAAW,KAAKD,CAAa;AAAA,WAClD;AAEL,cAAMrC,IAASF,GAAavB,GAAOE,GAAQ;AAAA,UACzC,IAAI,CAACmD,GAAc5C,GAAOP,EAAO,IAAI4D,KAAiB,OAAO,SAASA,EAAc,EAAE,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG;AAAA,UAChH,eAAAG;AAAA,UACA,eAAeA,IAAgB,GAAGJ,EAAqB,OAAO,CAAAzqC,MAAKA,EAAE,WAAW8mC,CAAM,EAAE,MAAM,KAAK;AAAA,UACnG,OAAAO;AAAA,UACA,OAAOoD,EAAqB;AAAA,QACtC,CAAS;AAGD,QAAApC,EAAO,WAAW,KAAKqC,CAAa,GAGpCD,EAAqB,KAAKpC,CAAM;AAAA,MACxC;AACM,MAAAgB,EAAY,QAAQ,KAAKqB,CAAa,GACtCA,EAAc,cAAcrB;AAAA,IAClC,CAAK,GACDD,EAAa,KAAKC,CAAW,GACzBhC,IAAQ,KACVkD,EAAkBE,GAAsBpD,IAAQ,CAAC;AAAA,EAEpD,GACKyD,IAAgBd,EAAe,IAAI,CAAClD,GAAQr+B,MAAU0/B,GAAavB,GAAOE,GAAQ;AAAA,IACtF,OAAOsD;AAAA,IACP,OAAA3hC;AAAA,EACJ,CAAG,CAAC;AACF,EAAA8hC,EAAkBO,GAAeV,IAAW,CAAC,GAC7ChB,EAAa,QAAS;AAMtB,QAAM2B,IAAyB,CAAAC,MACLA,EAAQ,OAAO,CAAA3C,MAAUA,EAAO,OAAO,cAAc,EACtD,IAAI,CAAAA,MAAU;AACnC,QAAI4C,IAAU,GACVC,IAAU,GACVC,IAAgB,CAAC,CAAC;AACtB,IAAI9C,EAAO,cAAcA,EAAO,WAAW,UACzC8C,IAAgB,CAAE,GAClBJ,EAAuB1C,EAAO,UAAU,EAAE,QAAQ,CAAAlgC,MAAQ;AACxD,UAAI;AAAA,QACF,SAASijC;AAAA,QACT,SAASC;AAAA,MACrB,IAAcljC;AACJ,MAAA8iC,KAAWG,GACXD,EAAc,KAAKE,CAAY;AAAA,IACzC,CAAS,KAEDJ,IAAU;AAEZ,UAAMK,IAAkB,KAAK,IAAI,GAAGH,CAAa;AACjD,WAAAD,IAAUA,IAAUI,GACpBjD,EAAO,UAAU4C,GACjB5C,EAAO,UAAU6C,GACV;AAAA,MACL,SAAAD;AAAA,MACA,SAAAC;AAAA,IACD;AAAA,EACP,CAAK;AAEH,SAAAH,GAAwBb,KAAyBC,IAAiBf,EAAa,CAAC,MAAM,OAAO,SAASe,EAAe,YAAY,OAAOD,IAAwB,CAAA,CAAE,GAC3Jd;AACT;AAEA,MAAMmC,KAAY,CAAC3E,GAAOlgB,GAAI8kB,GAAUC,GAAUpE,GAAOqE,GAASC,MAAa;AAC7E,MAAI9E,IAAM;AAAA,IACR,IAAAngB;AAAA,IACA,OAAO+kB;AAAA,IACP,UAAAD;AAAA,IACA,OAAAnE;AAAA,IACA,UAAAsE;AAAA,IACA,cAAc,CAAE;AAAA,IAChB,oBAAoB,CAAE;AAAA,IACtB,UAAU,CAAA5E,MAAY;AACpB,UAAIF,EAAI,aAAa,eAAeE,CAAQ;AAC1C,eAAOF,EAAI,aAAaE,CAAQ;AAElC,YAAMD,IAASF,EAAM,UAAUG,CAAQ;AACvC,UAAMD,KAAU,QAAQA,EAAO;AAG/B,eAAAD,EAAI,aAAaE,CAAQ,IAAID,EAAO,WAAWD,EAAI,UAAU4E,CAAQ,GAC9D5E,EAAI,aAAaE,CAAQ;AAAA,IACjC;AAAA,IACD,iBAAiB,CAAAA,MAAY;AAC3B,UAAIF,EAAI,mBAAmB,eAAeE,CAAQ;AAChD,eAAOF,EAAI,mBAAmBE,CAAQ;AAExC,YAAMD,IAASF,EAAM,UAAUG,CAAQ;AACvC,UAAMD,KAAU,QAAQA,EAAO;AAG/B,eAAKA,EAAO,UAAU,mBAItBD,EAAI,mBAAmBE,CAAQ,IAAID,EAAO,UAAU,gBAAgBD,EAAI,UAAU4E,CAAQ,GACnF5E,EAAI,mBAAmBE,CAAQ,MAJpCF,EAAI,mBAAmBE,CAAQ,IAAI,CAACF,EAAI,SAASE,CAAQ,CAAC,GACnDF,EAAI,mBAAmBE,CAAQ;AAAA,IAIzC;AAAA,IACD,aAAa,CAAAA,MAAY;AACvB,UAAI6E;AACJ,cAAQA,IAAgB/E,EAAI,SAASE,CAAQ,MAAM,OAAO6E,IAAgBhF,EAAM,QAAQ;AAAA,IACzF;AAAA,IACD,SAAqC,CAAE;AAAA,IACvC,aAAa,MAAMzB,GAAU0B,EAAI,SAAS,CAAA7mC,MAAKA,EAAE,OAAO;AAAA,IACxD,cAAc,MAAM6mC,EAAI,WAAWD,EAAM,OAAOC,EAAI,UAAU,EAAI,IAAI;AAAA,IACtE,eAAe,MAAM;AACnB,UAAIgF,IAAa,CAAE,GACfC,IAAajF;AACjB,iBAAa;AACX,cAAMkF,IAAYD,EAAW,aAAc;AAC3C,YAAI,CAACC,EAAW;AAChB,QAAAF,EAAW,KAAKE,CAAS,GACzBD,IAAaC;AAAA,MACrB;AACM,aAAOF,EAAW,QAAS;AAAA,IAC5B;AAAA,IACD,aAAapG,EAAK,MAAM,CAACmB,EAAM,kBAAiB,CAAE,GAAG,CAAAqB,MAC5CA,EAAY,IAAI,CAAAnB,MACdH,GAAWC,GAAOC,GAAKC,GAAQA,EAAO,EAAE,CAChD,GACAR,EAAeM,EAAM,SAAS,aAAa,aAAa,CAAC;AAAA,IAC5D,wBAAwBnB,EAAK,MAAM,CAACoB,EAAI,YAAW,CAAE,GAAG,CAAAmF,MAC/CA,EAAS,OAAO,CAAC9jB,GAAK0C,OAC3B1C,EAAI0C,EAAK,OAAO,EAAE,IAAIA,GACf1C,IACN,EAAE,GACJoe,EAAeM,EAAM,SAAS,aAAa,uBAAuB,CAAC;AAAA,EACvE;AACD,WAASnnC,IAAI,GAAGA,IAAImnC,EAAM,UAAU,QAAQnnC,KAAK;AAC/C,UAAMynC,IAAUN,EAAM,UAAUnnC,CAAC;AACjC,IAAAynC,KAAW,QAAQA,EAAQ,aAAa,QAAQA,EAAQ,UAAUL,GAAKD,CAAK;AAAA,EAChF;AACE,SAAOC;AACT,GAIMoF,KAAiB;AAAA,EACrB,cAAc,CAACnF,GAAQF,MAAU;AAC/B,IAAAE,EAAO,sBAAsBF,EAAM,QAAQ,sBAAsBA,EAAM,QAAQ,mBAAmBA,GAAOE,EAAO,EAAE,GAClHA,EAAO,qBAAqB,MACrBA,EAAO,sBAGLA,EAAO,oBAAqB,IAF1BF,EAAM,uBAAwB,GAIzCE,EAAO,0BAA0BF,EAAM,QAAQ,0BAA0BA,EAAM,QAAQ,uBAAuBA,GAAOE,EAAO,EAAE,GAC9HA,EAAO,yBAAyB,MACzBA,EAAO,0BAGLA,EAAO,wBAAyB,IAF9B,oBAAI,IAAK,GAIpBA,EAAO,0BAA0BF,EAAM,QAAQ,0BAA0BA,EAAM,QAAQ,uBAAuBA,GAAOE,EAAO,EAAE,GAC9HA,EAAO,yBAAyB,MAAM;AACpC,UAAKA,EAAO;AAGZ,eAAOA,EAAO,wBAAyB;AAAA,IACxC;AAAA,EACL;AACA,GAEMoF,KAAiB,CAACrF,GAAKE,GAAUoF,MAAgB;AACrD,MAAIC,GAAuBR;AAC3B,QAAMpzB,IAAS2zB,KAAe,SAASC,IAAwBD,EAAY,SAAQ,MAAO,OAAO,SAASC,EAAsB,YAAa;AAC7I,SAAO,GAAS,GAAAR,IAAgB/E,EAAI,SAASE,CAAQ,MAAM,SAAS6E,IAAgBA,EAAc,eAAe,SAASA,IAAgBA,EAAc,YAAa,MAAK,SAAgBA,EAAc,SAASpzB,CAAM;AACzN;AACA0zB,GAAe,aAAa,CAAAt8B,MAAOy8B,GAAWz8B,CAAG;AACjD,MAAM08B,KAA0B,CAACzF,GAAKE,GAAUoF,MAAgB;AAC9D,MAAII;AACJ,SAAO,GAAS,GAAAA,IAAiB1F,EAAI,SAASE,CAAQ,MAAM,SAASwF,IAAiBA,EAAe,SAAQ,MAAO,SAAgBA,EAAe,SAASJ,CAAW;AACzK;AACAG,GAAwB,aAAa,CAAA18B,MAAOy8B,GAAWz8B,CAAG;AAC1D,MAAM48B,KAAe,CAAC3F,GAAKE,GAAUoF,MAAgB;AACnD,MAAIM;AACJ,WAASA,IAAiB5F,EAAI,SAASE,CAAQ,MAAM,SAAS0F,IAAiBA,EAAe,SAAU,MAAK,OAAO,SAASA,EAAe,YAAa,QAAON,KAAe,OAAO,SAASA,EAAY;AAC7M;AACAK,GAAa,aAAa,CAAA58B,MAAOy8B,GAAWz8B,CAAG;AAC/C,MAAM88B,KAAc,CAAC7F,GAAKE,GAAUoF,MAAgB;AAClD,MAAIQ;AACJ,UAAQA,IAAiB9F,EAAI,SAASE,CAAQ,MAAM,OAAO,SAAS4F,EAAe,SAASR,CAAW;AACzG;AACAO,GAAY,aAAa,CAAA98B,MAAOy8B,GAAWz8B,CAAG;AAC9C,MAAMg9B,KAAiB,CAAC/F,GAAKE,GAAUoF,MAC9B,CAACA,EAAY,KAAK,CAAAv8B,MAAO;AAC9B,MAAIi9B;AACJ,SAAO,GAAGA,IAAiBhG,EAAI,SAASE,CAAQ,MAAM,QAAQ8F,EAAe,SAASj9B,CAAG;AAC7F,CAAG;AAEHg9B,GAAe,aAAa,CAAAh9B,MAAOy8B,GAAWz8B,CAAG,KAAK,EAAEA,KAAO,QAAQA,EAAI;AAC3E,MAAMk9B,KAAkB,CAACjG,GAAKE,GAAUoF,MAC/BA,EAAY,KAAK,CAAAv8B,MAAO;AAC7B,MAAIm9B;AACJ,UAAQA,IAAiBlG,EAAI,SAASE,CAAQ,MAAM,OAAO,SAASgG,EAAe,SAASn9B,CAAG;AACnG,CAAG;AAEHk9B,GAAgB,aAAa,CAAAl9B,MAAOy8B,GAAWz8B,CAAG,KAAK,EAAEA,KAAO,QAAQA,EAAI;AAC5E,MAAMo9B,KAAS,CAACnG,GAAKE,GAAUoF,MACtBtF,EAAI,SAASE,CAAQ,MAAMoF;AAEpCa,GAAO,aAAa,CAAAp9B,MAAOy8B,GAAWz8B,CAAG;AACzC,MAAMq9B,KAAa,CAACpG,GAAKE,GAAUoF,MAC1BtF,EAAI,SAASE,CAAQ,KAAKoF;AAEnCc,GAAW,aAAa,CAAAr9B,MAAOy8B,GAAWz8B,CAAG;AAC7C,MAAMs9B,KAAgB,CAACrG,GAAKE,GAAUoF,MAAgB;AACpD,MAAI,CAACvd,GAAKC,CAAG,IAAIsd;AACjB,QAAMgB,IAAWtG,EAAI,SAASE,CAAQ;AACtC,SAAOoG,KAAYve,KAAOue,KAAYte;AACxC;AACAqe,GAAc,qBAAqB,CAAAt9B,MAAO;AACxC,MAAI,CAACw9B,GAAWC,CAAS,IAAIz9B,GACzB09B,IAAY,OAAOF,KAAc,WAAW,WAAWA,CAAS,IAAIA,GACpEG,IAAY,OAAOF,KAAc,WAAW,WAAWA,CAAS,IAAIA,GACpEze,IAAMwe,MAAc,QAAQ,OAAO,MAAME,CAAS,IAAI,SAAYA,GAClEze,IAAMwe,MAAc,QAAQ,OAAO,MAAME,CAAS,IAAI,QAAWA;AACrE,MAAI3e,IAAMC,GAAK;AACb,UAAMxd,IAAOud;AACb,IAAAA,IAAMC,GACNA,IAAMxd;AAAA,EACV;AACE,SAAO,CAACud,GAAKC,CAAG;AAClB;AACAqe,GAAc,aAAa,CAAAt9B,MAAOy8B,GAAWz8B,CAAG,KAAKy8B,GAAWz8B,EAAI,CAAC,CAAC,KAAKy8B,GAAWz8B,EAAI,CAAC,CAAC;AAI5F,MAAM49B,KAAY;AAAA,EAChB,gBAAAtB;AAAA,EACA,yBAAAI;AAAA,EACA,cAAAE;AAAA,EACA,aAAAE;AAAA,EACA,gBAAAE;AAAA,EACA,iBAAAE;AAAA,EACA,QAAAE;AAAA,EACA,YAAAC;AAAA,EACA,eAAAC;AACF;AAGA,SAASb,GAAWz8B,GAAK;AACvB,SAA4BA,KAAQ,QAAQA,MAAQ;AACtD;AAIA,MAAM69B,KAAkB;AAAA,EACtB,qBAAqB,OACZ;AAAA,IACL,UAAU;AAAA,EACX;AAAA,EAEH,iBAAiB,CAAAnpB,MACR1jB,EAAA;AAAA,IACL,eAAe,CAAE;AAAA,KACd0jB;AAAA,EAGP,mBAAmB,CAAAsiB,OACV;AAAA,IACL,uBAAuB7B,GAAiB,iBAAiB6B,CAAK;AAAA,IAC9D,oBAAoB;AAAA,IACpB,uBAAuB;AAAA,EACxB;AAAA,EAEH,cAAc,CAACE,GAAQF,MAAU;AAC/B,IAAAE,EAAO,kBAAkB,MAAM;AAC7B,YAAM4G,IAAW9G,EAAM,gBAAe,EAAG,SAAS,CAAC,GAC7CnkC,IAAQirC,KAAY,OAAO,SAASA,EAAS,SAAS5G,EAAO,EAAE;AACrE,aAAI,OAAOrkC,KAAU,WACZ+qC,GAAU,iBAEf,OAAO/qC,KAAU,WACZ+qC,GAAU,gBAEf,OAAO/qC,KAAU,aAGjBA,MAAU,QAAQ,OAAOA,KAAU,WAC9B+qC,GAAU,SAEf,MAAM,QAAQ/qC,CAAK,IACd+qC,GAAU,cAEZA,GAAU;AAAA,IAClB,GACD1G,EAAO,cAAc,MAAM;AACzB,UAAI6G,GAAuBC;AAC3B,aAAO3I,GAAW6B,EAAO,UAAU,QAAQ,IAAIA,EAAO,UAAU,WAAWA,EAAO,UAAU,aAAa,SAASA,EAAO,gBAAiB;AAAA;AAAA,SACzI6G,KAAyBC,IAAyBhH,EAAM,QAAQ,cAAc,OAAO,SAASgH,EAAuB9G,EAAO,UAAU,QAAQ,MAAM,OAAO6G,IAAwBH,GAAU1G,EAAO,UAAU,QAAQ;AAAA;AAAA,IACxN,GACDA,EAAO,eAAe,MAAM;AAC1B,UAAI+G,GAAuBC,GAAuBC;AAClD,eAASF,IAAwB/G,EAAO,UAAU,uBAAuB,OAAO+G,IAAwB,SAAWC,IAAwBlH,EAAM,QAAQ,wBAAwB,OAAOkH,IAAwB,SAAWC,IAAyBnH,EAAM,QAAQ,kBAAkB,OAAOmH,IAAyB,OAAS,CAAC,CAACjH,EAAO;AAAA,IACvU,GACDA,EAAO,gBAAgB,MAAMA,EAAO,eAAgB,IAAG,IACvDA,EAAO,iBAAiB,MAAM;AAC5B,UAAIkH;AACJ,cAAQA,IAAwBpH,EAAM,SAAQ,EAAG,kBAAkB,SAASoH,IAAwBA,EAAsB,KAAK,CAAAhuC,MAAKA,EAAE,OAAO8mC,EAAO,EAAE,MAAM,OAAO,SAASkH,EAAsB;AAAA,IACnM,GACDlH,EAAO,iBAAiB,MAAM;AAC5B,UAAImH,GAAwBC;AAC5B,cAAQD,KAA0BC,IAAyBtH,EAAM,WAAW,kBAAkB,OAAO,SAASsH,EAAuB,UAAU,CAAAluC,MAAKA,EAAE,OAAO8mC,EAAO,EAAE,MAAM,OAAOmH,IAAyB;AAAA,IAC7M,GACDnH,EAAO,iBAAiB,CAAArkC,MAAS;AAC/B,MAAAmkC,EAAM,iBAAiB,CAAA5B,MAAO;AAC5B,cAAMmJ,IAAWrH,EAAO,YAAa,GAC/BsH,IAAiBpJ,KAAO,OAAO,SAASA,EAAI,KAAK,CAAAhlC,MAAKA,EAAE,OAAO8mC,EAAO,EAAE,GACxEuH,IAAYxJ,GAAiBpiC,GAAO2rC,IAAiBA,EAAe,QAAQ,MAAS;AAG3F,YAAIE,GAAuBH,GAAUE,GAAWvH,CAAM,GAAG;AACvD,cAAIyH;AACJ,kBAAQA,IAAcvJ,KAAO,OAAO,SAASA,EAAI,OAAO,CAAAhlC,MAAKA,EAAE,OAAO8mC,EAAO,EAAE,MAAM,OAAOyH,IAAc,CAAE;AAAA,QACtH;AACQ,cAAMC,IAAe;AAAA,UACnB,IAAI1H,EAAO;AAAA,UACX,OAAOuH;AAAA,QACR;AACD,YAAID,GAAgB;AAClB,cAAIK;AACJ,kBAAQA,IAAWzJ,KAAO,OAAO,SAASA,EAAI,IAAI,CAAAhlC,MAC5CA,EAAE,OAAO8mC,EAAO,KACX0H,IAEFxuC,CACR,MAAM,OAAOyuC,IAAW,CAAE;AAAA,QACrC;AACQ,eAAIzJ,KAAO,QAAQA,EAAI,SACd,CAAC,GAAGA,GAAKwJ,CAAY,IAEvB,CAACA,CAAY;AAAA,MAC5B,CAAO;AAAA,IACF;AAAA,EACF;AAAA,EACD,WAAW,CAAC3H,GAAK6H,MAAW;AAC1B,IAAA7H,EAAI,gBAAgB,CAAE,GACtBA,EAAI,oBAAoB,CAAE;AAAA,EAC3B;AAAA,EACD,aAAa,CAAAD,MAAS;AACpB,IAAAA,EAAM,mBAAmB,CAAA9B,MAAW;AAClC,YAAMmD,IAAcrB,EAAM,kBAAmB,GACvC+H,IAAW,CAAA3J,MAAO;AACtB,YAAI4J;AACJ,gBAAQA,IAAoB/J,GAAiBC,GAASE,CAAG,MAAM,OAAO,SAAS4J,EAAkB,OAAO,CAAAC,MAAU;AAChH,gBAAM/H,IAASmB,EAAY,KAAK,CAAAjoC,MAAKA,EAAE,OAAO6uC,EAAO,EAAE;AACvD,cAAI/H,GAAQ;AACV,kBAAMqH,IAAWrH,EAAO,YAAa;AACrC,gBAAIwH,GAAuBH,GAAUU,EAAO,OAAO/H,CAAM;AACvD,qBAAO;AAAA,UAErB;AACU,iBAAO;AAAA,QACjB,CAAS;AAAA,MACF;AACD,MAAAF,EAAM,QAAQ,yBAAyB,QAAQA,EAAM,QAAQ,sBAAsB+H,CAAQ;AAAA,IAC5F,GACD/H,EAAM,qBAAqB,CAAAkI,MAAgB;AACzC,UAAIC,GAAuBC;AAC3B,MAAApI,EAAM,iBAAiBkI,IAAe,CAAE,KAAIC,KAAyBC,IAAsBpI,EAAM,iBAAiB,OAAO,SAASoI,EAAoB,kBAAkB,OAAOD,IAAwB,EAAE;AAAA,IAC1M,GACDnI,EAAM,yBAAyB,MAAMA,EAAM,gBAAiB,GAC5DA,EAAM,sBAAsB,OACtB,CAACA,EAAM,wBAAwBA,EAAM,QAAQ,wBAC/CA,EAAM,uBAAuBA,EAAM,QAAQ,oBAAoBA,CAAK,IAElEA,EAAM,QAAQ,mBAAmB,CAACA,EAAM,uBACnCA,EAAM,uBAAwB,IAEhCA,EAAM,qBAAsB;AAAA,EAEzC;AACA;AACA,SAAS0H,GAAuBH,GAAU1rC,GAAOqkC,GAAQ;AACvD,UAAQqH,KAAYA,EAAS,aAAaA,EAAS,WAAW1rC,GAAOqkC,CAAM,IAAI,OAAU,OAAOrkC,KAAU,eAAe,OAAOA,KAAU,YAAY,CAACA;AACzJ;AAEA,MAAMwsC,KAAM,CAAClI,GAAUmI,GAAWC,MAGzBA,EAAU,OAAO,CAACF,GAAKxoC,MAAS;AACrC,QAAM2oC,IAAY3oC,EAAK,SAASsgC,CAAQ;AACxC,SAAOkI,KAAO,OAAOG,KAAc,WAAWA,IAAY;AAC3D,GAAE,CAAC,GAEAxgB,KAAM,CAACmY,GAAUmI,GAAWC,MAAc;AAC9C,MAAIvgB;AACJ,SAAAugB,EAAU,QAAQ,CAAAtI,MAAO;AACvB,UAAMpkC,IAAQokC,EAAI,SAASE,CAAQ;AACnC,IAAItkC,KAAS,SAASmsB,IAAMnsB,KAASmsB,MAAQ,UAAansB,KAASA,OACjEmsB,IAAMnsB;AAAA,EAEZ,CAAG,GACMmsB;AACT,GACMC,KAAM,CAACkY,GAAUmI,GAAWC,MAAc;AAC9C,MAAItgB;AACJ,SAAAsgB,EAAU,QAAQ,CAAAtI,MAAO;AACvB,UAAMpkC,IAAQokC,EAAI,SAASE,CAAQ;AACnC,IAAItkC,KAAS,SAASosB,IAAMpsB,KAASosB,MAAQ,UAAapsB,KAASA,OACjEosB,IAAMpsB;AAAA,EAEZ,CAAG,GACMosB;AACT,GACMwgB,KAAS,CAACtI,GAAUmI,GAAWC,MAAc;AACjD,MAAIvgB,GACAC;AACJ,SAAAsgB,EAAU,QAAQ,CAAAtI,MAAO;AACvB,UAAMpkC,IAAQokC,EAAI,SAASE,CAAQ;AACnC,IAAItkC,KAAS,SACPmsB,MAAQ,SACNnsB,KAASA,MAAOmsB,IAAMC,IAAMpsB,MAE5BmsB,IAAMnsB,MAAOmsB,IAAMnsB,IACnBosB,IAAMpsB,MAAOosB,IAAMpsB;AAAA,EAG/B,CAAG,GACM,CAACmsB,GAAKC,CAAG;AAClB,GACMygB,KAAO,CAACvI,GAAUwI,MAAa;AACnC,MAAIhgC,IAAQ,GACR0/B,IAAM;AAOV,MANAM,EAAS,QAAQ,CAAA1I,MAAO;AACtB,QAAIpkC,IAAQokC,EAAI,SAASE,CAAQ;AACjC,IAAItkC,KAAS,SAASA,IAAQ,CAACA,MAAUA,MACvC,EAAE8M,GAAO0/B,KAAOxsC;AAAA,EAEtB,CAAG,GACG8M,EAAO,QAAO0/B,IAAM1/B;AAE1B,GACMigC,KAAS,CAACzI,GAAUwI,MAAa;AACrC,MAAI,CAACA,EAAS;AACZ;AAEF,QAAMnL,IAASmL,EAAS,IAAI,CAAA1I,MAAOA,EAAI,SAASE,CAAQ,CAAC;AACzD,MAAI,CAAC7B,GAAcd,CAAM;AACvB;AAEF,MAAIA,EAAO,WAAW;AACpB,WAAOA,EAAO,CAAC;AAEjB,QAAMqL,IAAM,KAAK,MAAMrL,EAAO,SAAS,CAAC,GAClCsL,IAAOtL,EAAO,KAAK,CAACvkC,GAAGM,MAAMN,IAAIM,CAAC;AACxC,SAAOikC,EAAO,SAAS,MAAM,IAAIsL,EAAKD,CAAG,KAAKC,EAAKD,IAAM,CAAC,IAAIC,EAAKD,CAAG,KAAK;AAC7E,GACME,KAAS,CAAC5I,GAAUwI,MACjB,MAAM,KAAK,IAAI,IAAIA,EAAS,IAAI,CAAAvvC,MAAKA,EAAE,SAAS+mC,CAAQ,CAAC,CAAC,EAAE,OAAM,CAAE,GAEvE6I,KAAc,CAAC7I,GAAUwI,MACtB,IAAI,IAAIA,EAAS,IAAI,CAAAvvC,MAAKA,EAAE,SAAS+mC,CAAQ,CAAC,CAAC,EAAE,MAEpDx3B,KAAQ,CAACsgC,GAAWN,MACjBA,EAAS,QAEZO,KAAiB;AAAA,EACrB,KAAAb;AAAA,EACA,KAAArgB;AAAA,EACA,KAAAC;AAAA,EACA,QAAAwgB;AAAA,EACA,MAAAC;AAAA,EACA,QAAAE;AAAA,EACA,QAAAG;AAAA,EACA,aAAAC;AAAA,EACA,OAAArgC;AACF,GAIMwgC,KAAiB;AAAA,EACrB,qBAAqB,OACZ;AAAA,IACL,gBAAgB,CAAAvoB,MAAS;AACvB,UAAIwoB,GAAWC;AACf,cAAQD,KAAaC,IAAkBzoB,EAAM,SAAU,MAAK,QAAQyoB,EAAgB,YAAY,OAAO,SAASA,EAAgB,SAAQ,MAAO,OAAOD,IAAY;AAAA,IACnK;AAAA,IACD,eAAe;AAAA,EAChB;AAAA,EAEH,iBAAiB,CAAA1rB,MACR1jB,EAAA;AAAA,IACL,UAAU,CAAE;AAAA,KACT0jB;AAAA,EAGP,mBAAmB,CAAAsiB,OACV;AAAA,IACL,kBAAkB7B,GAAiB,YAAY6B,CAAK;AAAA,IACpD,mBAAmB;AAAA,EACpB;AAAA,EAEH,cAAc,CAACE,GAAQF,MAAU;AAC/B,IAAAE,EAAO,iBAAiB,MAAM;AAC5B,MAAAF,EAAM,YAAY,CAAA5B,MAEZA,KAAO,QAAQA,EAAI,SAAS8B,EAAO,EAAE,IAChC9B,EAAI,OAAO,CAAAhlC,MAAKA,MAAM8mC,EAAO,EAAE,IAEjC,CAAC,GAAI9B,KAAO,OAAOA,IAAM,IAAK8B,EAAO,EAAE,CAC/C;AAAA,IACF,GACDA,EAAO,cAAc,MAAM;AACzB,UAAI+G,GAAuBC;AAC3B,eAASD,IAAwB/G,EAAO,UAAU,mBAAmB,OAAO+G,IAAwB,SAAWC,IAAwBlH,EAAM,QAAQ,mBAAmB,OAAOkH,IAAwB,QAAU,CAAC,CAAChH,EAAO,cAAc,CAAC,CAACA,EAAO,UAAU;AAAA,IAC5P,GACDA,EAAO,eAAe,MAAM;AAC1B,UAAIoJ;AACJ,cAAQA,IAAwBtJ,EAAM,SAAU,EAAC,aAAa,OAAO,SAASsJ,EAAsB,SAASpJ,EAAO,EAAE;AAAA,IACvH,GACDA,EAAO,kBAAkB,MAAM;AAC7B,UAAIqJ;AACJ,cAAQA,IAAyBvJ,EAAM,SAAU,EAAC,aAAa,OAAO,SAASuJ,EAAuB,QAAQrJ,EAAO,EAAE;AAAA,IACxH,GACDA,EAAO,2BAA2B,MAAM;AACtC,YAAMsJ,IAAWtJ,EAAO,YAAa;AACrC,aAAO,MAAM;AACX,QAAKsJ,KACLtJ,EAAO,eAAgB;AAAA,MACxB;AAAA,IACF,GACDA,EAAO,uBAAuB,MAAM;AAClC,YAAM4G,IAAW9G,EAAM,gBAAe,EAAG,SAAS,CAAC,GAC7CnkC,IAAQirC,KAAY,OAAO,SAASA,EAAS,SAAS5G,EAAO,EAAE;AACrE,UAAI,OAAOrkC,KAAU;AACnB,eAAOqtC,GAAe;AAExB,UAAI,OAAO,UAAU,SAAS,KAAKrtC,CAAK,MAAM;AAC5C,eAAOqtC,GAAe;AAAA,IAEzB,GACDhJ,EAAO,mBAAmB,MAAM;AAC9B,UAAIuJ,GAAuBC;AAC3B,UAAI,CAACxJ;AACH,cAAM,IAAI,MAAO;AAEnB,aAAO7B,GAAW6B,EAAO,UAAU,aAAa,IAAIA,EAAO,UAAU,gBAAgBA,EAAO,UAAU,kBAAkB,SAASA,EAAO,qBAAsB,KAAIuJ,KAAyBC,IAAyB1J,EAAM,QAAQ,mBAAmB,OAAO,SAAS0J,EAAuBxJ,EAAO,UAAU,aAAa,MAAM,OAAOuJ,IAAwBP,GAAehJ,EAAO,UAAU,aAAa;AAAA,IAC7Y;AAAA,EACF;AAAA,EACD,aAAa,CAAAF,MAAS;AACpB,IAAAA,EAAM,cAAc,CAAA9B,MAAW8B,EAAM,QAAQ,oBAAoB,OAAO,SAASA,EAAM,QAAQ,iBAAiB9B,CAAO,GACvH8B,EAAM,gBAAgB,CAAAkI,MAAgB;AACpC,UAAIyB,GAAuBvB;AAC3B,MAAApI,EAAM,YAAYkI,IAAe,CAAE,KAAIyB,KAAyBvB,IAAsBpI,EAAM,iBAAiB,OAAO,SAASoI,EAAoB,aAAa,OAAOuB,IAAwB,EAAE;AAAA,IAChM,GACD3J,EAAM,wBAAwB,MAAMA,EAAM,oBAAqB,GAC/DA,EAAM,qBAAqB,OACrB,CAACA,EAAM,uBAAuBA,EAAM,QAAQ,uBAC9CA,EAAM,sBAAsBA,EAAM,QAAQ,mBAAmBA,CAAK,IAEhEA,EAAM,QAAQ,kBAAkB,CAACA,EAAM,sBAClCA,EAAM,sBAAuB,IAE/BA,EAAM,oBAAqB;AAAA,EAErC;AAAA,EACD,WAAW,CAACC,GAAKD,MAAU;AACzB,IAAAC,EAAI,eAAe,MAAM,CAAC,CAACA,EAAI,kBAC/BA,EAAI,mBAAmB,CAAAE,MAAY;AACjC,UAAIF,EAAI,qBAAqB,eAAeE,CAAQ;AAClD,eAAOF,EAAI,qBAAqBE,CAAQ;AAE1C,YAAMD,IAASF,EAAM,UAAUG,CAAQ;AACvC,aAAMD,KAAU,QAAQA,EAAO,UAAU,oBAGzCD,EAAI,qBAAqBE,CAAQ,IAAID,EAAO,UAAU,iBAAiBD,EAAI,QAAQ,GAC5EA,EAAI,qBAAqBE,CAAQ,KAH/BF,EAAI,SAASE,CAAQ;AAAA,IAI/B,GACDF,EAAI,uBAAuB,CAAE;AAAA,EAC9B;AAAA,EACD,YAAY,CAACjc,GAAMkc,GAAQD,GAAKD,MAAU;AACxC,IAAAhc,EAAK,eAAe,MAAMkc,EAAO,aAAc,KAAIA,EAAO,OAAOD,EAAI,kBACrEjc,EAAK,mBAAmB,MAAM,CAACA,EAAK,aAAc,KAAIkc,EAAO,aAAc,GAC3Elc,EAAK,kBAAkB,MAAM;AAC3B,UAAI4lB;AACJ,aAAO,CAAC5lB,EAAK,aAAc,KAAI,CAACA,EAAK,iBAAkB,KAAI,CAAC,GAAG4lB,IAAe3J,EAAI,YAAY,QAAQ2J,EAAa;AAAA,IACpH;AAAA,EACL;AACA;AACA,SAASzI,GAAaE,GAAawI,GAAUC,GAAmB;AAC9D,MAAI,EAAED,KAAY,QAAQA,EAAS,WAAW,CAACC;AAC7C,WAAOzI;AAET,QAAM0I,IAAqB1I,EAAY,OAAO,CAAA2I,MAAO,CAACH,EAAS,SAASG,EAAI,EAAE,CAAC;AAC/E,SAAIF,MAAsB,WACjBC,IAGF,CAAC,GADgBF,EAAS,IAAI,CAAAxvC,MAAKgnC,EAAY,KAAK,CAAA2I,MAAOA,EAAI,OAAO3vC,CAAC,CAAC,EAAE,OAAO,OAAO,GACnE,GAAG0vC,CAAkB;AACnD;AAIA,MAAME,KAAiB;AAAA,EACrB,iBAAiB,CAAAvsB,MACR1jB,EAAA;AAAA,IACL,aAAa,CAAE;AAAA,KACZ0jB;AAAA,EAGP,mBAAmB,CAAAsiB,OACV;AAAA,IACL,qBAAqB7B,GAAiB,eAAe6B,CAAK;AAAA,EAC3D;AAAA,EAEH,cAAc,CAACE,GAAQF,MAAU;AAC/B,IAAAE,EAAO,WAAWrB,EAAK,CAAAjX,MAAY,CAACsiB,GAAuBlK,GAAOpY,CAAQ,CAAC,GAAG,CAAA8b,MAAWA,EAAQ,UAAU,CAAAtqC,MAAKA,EAAE,OAAO8mC,EAAO,EAAE,GAAGR,EAAeM,EAAM,SAAS,gBAAgB,UAAU,CAAC,GAC9LE,EAAO,mBAAmB,CAAAtY,MAAY;AACpC,UAAIuiB;AAEJ,eAASA,IADOD,GAAuBlK,GAAOpY,CAAQ,EACzB,CAAC,MAAM,OAAO,SAASuiB,EAAU,QAAQjK,EAAO;AAAA,IAC9E,GACDA,EAAO,kBAAkB,CAAAtY,MAAY;AACnC,UAAIwiB;AACJ,YAAM1G,IAAUwG,GAAuBlK,GAAOpY,CAAQ;AACtD,eAASwiB,IAAW1G,EAAQA,EAAQ,SAAS,CAAC,MAAM,OAAO,SAAS0G,EAAS,QAAQlK,EAAO;AAAA,IAC7F;AAAA,EACF;AAAA,EACD,aAAa,CAAAF,MAAS;AACpB,IAAAA,EAAM,iBAAiB,CAAA9B,MAAW8B,EAAM,QAAQ,uBAAuB,OAAO,SAASA,EAAM,QAAQ,oBAAoB9B,CAAO,GAChI8B,EAAM,mBAAmB,CAAAkI,MAAgB;AACvC,UAAIC;AACJ,MAAAnI,EAAM,eAAekI,IAAe,CAAA,KAAMC,IAAwBnI,EAAM,aAAa,gBAAgB,OAAOmI,IAAwB,CAAA,CAAE;AAAA,IACvI,GACDnI,EAAM,qBAAqBnB,EAAK,MAAM,CAACmB,EAAM,SAAU,EAAC,aAAaA,EAAM,SAAU,EAAC,UAAUA,EAAM,QAAQ,iBAAiB,GAAG,CAACqK,GAAaR,GAAUC,MAAsB,CAAApG,MAAW;AAGzL,UAAI4G,IAAiB,CAAE;AAGvB,UAAI,EAAED,KAAe,QAAQA,EAAY;AACvC,QAAAC,IAAiB5G;AAAA,WACZ;AACL,cAAM6G,IAAkB,CAAC,GAAGF,CAAW,GAGjCG,IAAc,CAAC,GAAG9G,CAAO;AAK/B,eAAO8G,EAAY,UAAUD,EAAgB,UAAQ;AACnD,gBAAME,IAAiBF,EAAgB,MAAO,GACxCG,IAAaF,EAAY,UAAU,CAAApxC,MAAKA,EAAE,OAAOqxC,CAAc;AACrE,UAAIC,IAAa,MACfJ,EAAe,KAAKE,EAAY,OAAOE,GAAY,CAAC,EAAE,CAAC,CAAC;AAAA,QAEpE;AAGQ,QAAAJ,IAAiB,CAAC,GAAGA,GAAgB,GAAGE,CAAW;AAAA,MAC3D;AACM,aAAOrJ,GAAamJ,GAAgBT,GAAUC,CAAiB;AAAA,IAChE,GAAEpK,EAAeM,EAAM,SAAS,cAAc,oBAAoB,CAAC;AAAA,EACxE;AACA,GAIM2K,KAA+B,OAAO;AAAA,EAC1C,MAAM,CAAE;AAAA,EACR,OAAO,CAAA;AACT,IACMC,KAAgB;AAAA,EACpB,iBAAiB,CAAAltB,MACR1jB,EAAA;AAAA,IACL,eAAe2wC,GAA8B;AAAA,KAC1CjtB;AAAA,EAGP,mBAAmB,CAAAsiB,OACV;AAAA,IACL,uBAAuB7B,GAAiB,iBAAiB6B,CAAK;AAAA,EAC/D;AAAA,EAEH,cAAc,CAACE,GAAQF,MAAU;AAC/B,IAAAE,EAAO,MAAM,CAAAtY,MAAY;AACvB,YAAMijB,IAAY3K,EAAO,eAAc,EAAG,IAAI,CAAA9mC,MAAKA,EAAE,EAAE,EAAE,OAAO,OAAO;AACvE,MAAA4mC,EAAM,iBAAiB,CAAA5B,MAAO;AAC5B,YAAI0M,GAAYC;AAChB,YAAInjB,MAAa,SAAS;AACxB,cAAIojB,GAAWC;AACf,iBAAO;AAAA,YACL,QAAQD,IAAY5M,KAAO,OAAO,SAASA,EAAI,SAAS,OAAO4M,IAAY,CAAA,GAAI,OAAO,CAAA5xC,MAAK,EAAEyxC,KAAa,QAAQA,EAAU,SAASzxC,CAAC,EAAE;AAAA,YACxI,OAAO,CAAC,KAAK6xC,IAAa7M,KAAO,OAAO,SAASA,EAAI,UAAU,OAAO6M,IAAa,CAAE,GAAE,OAAO,CAAA7xC,MAAK,EAAEyxC,KAAa,QAAQA,EAAU,SAASzxC,CAAC,EAAE,GAAG,GAAGyxC,CAAS;AAAA,UAChK;AAAA,QACX;AACQ,YAAIjjB,MAAa,QAAQ;AACvB,cAAIsjB,GAAYC;AAChB,iBAAO;AAAA,YACL,MAAM,CAAC,KAAKD,IAAa9M,KAAO,OAAO,SAASA,EAAI,SAAS,OAAO8M,IAAa,IAAI,OAAO,CAAA9xC,MAAK,EAAEyxC,KAAa,QAAQA,EAAU,SAASzxC,CAAC,EAAE,GAAG,GAAGyxC,CAAS;AAAA,YAC7J,SAASM,IAAc/M,KAAO,OAAO,SAASA,EAAI,UAAU,OAAO+M,IAAc,IAAI,OAAO,CAAA/xC,MAAK,EAAEyxC,KAAa,QAAQA,EAAU,SAASzxC,CAAC,EAAE;AAAA,UAC/I;AAAA,QACX;AACQ,eAAO;AAAA,UACL,QAAQ0xC,IAAa1M,KAAO,OAAO,SAASA,EAAI,SAAS,OAAO0M,IAAa,CAAA,GAAI,OAAO,CAAA1xC,MAAK,EAAEyxC,KAAa,QAAQA,EAAU,SAASzxC,CAAC,EAAE;AAAA,UAC1I,SAAS2xC,IAAc3M,KAAO,OAAO,SAASA,EAAI,UAAU,OAAO2M,IAAc,IAAI,OAAO,CAAA3xC,MAAK,EAAEyxC,KAAa,QAAQA,EAAU,SAASzxC,CAAC,EAAE;AAAA,QAC/I;AAAA,MACT,CAAO;AAAA,IACF,GACD8mC,EAAO,YAAY,MACGA,EAAO,eAAgB,EACxB,KAAK,CAAA9mC,MAAK;AAC3B,UAAIgyC,GAAuB7pC,GAAM2lC;AACjC,eAASkE,IAAwBhyC,EAAE,UAAU,kBAAkB,OAAOgyC,IAAwB,SAAW7pC,KAAQ2lC,IAAwBlH,EAAM,QAAQ,wBAAwB,OAAOkH,IAAwBlH,EAAM,QAAQ,kBAAkB,OAAOz+B,IAAO;AAAA,IACpQ,CAAO,GAEH2+B,EAAO,cAAc,MAAM;AACzB,YAAMmL,IAAgBnL,EAAO,eAAc,EAAG,IAAI,OAAK,EAAE,EAAE,GACrD;AAAA,QACJ,MAAAjK;AAAA,QACA,OAAA6L;AAAA,MACR,IAAU9B,EAAM,SAAQ,EAAG,eACfsL,IAASD,EAAc,KAAK,OAAKpV,KAAQ,OAAO,SAASA,EAAK,SAAS,CAAC,CAAC,GACzEsV,IAAUF,EAAc,KAAK,OAAKvJ,KAAS,OAAO,SAASA,EAAM,SAAS,CAAC,CAAC;AAClF,aAAOwJ,IAAS,SAASC,IAAU,UAAU;AAAA,IAC9C,GACDrL,EAAO,iBAAiB,MAAM;AAC5B,UAAIkH,GAAuBC;AAC3B,YAAMzf,IAAWsY,EAAO,YAAa;AACrC,aAAOtY,KAAYwf,KAAyBC,IAAyBrH,EAAM,SAAQ,EAAG,kBAAkB,SAASqH,IAAyBA,EAAuBzf,CAAQ,MAAM,OAAO,SAASyf,EAAuB,QAAQnH,EAAO,EAAE,MAAM,OAAOkH,IAAwB,KAAK;AAAA,IAClR;AAAA,EACF;AAAA,EACD,WAAW,CAACnH,GAAKD,MAAU;AACzB,IAAAC,EAAI,wBAAwBpB,EAAK,MAAM,CAACoB,EAAI,oBAAqB,GAAED,EAAM,WAAW,cAAc,MAAMA,EAAM,SAAQ,EAAG,cAAc,KAAK,GAAG,CAACoF,GAAUnP,GAAM6L,MAAU;AACxK,YAAM0J,IAAe,CAAC,GAAIvV,KAAQ,OAAOA,IAAO,IAAK,GAAI6L,KAAS,OAAOA,IAAQ,CAAE,CAAC;AACpF,aAAOsD,EAAS,OAAO,CAAAhsC,MAAK,CAACoyC,EAAa,SAASpyC,EAAE,OAAO,EAAE,CAAC;AAAA,IAChE,GAAEsmC,EAAeM,EAAM,SAAS,aAAa,uBAAuB,CAAC,GACtEC,EAAI,sBAAsBpB,EAAK,MAAM,CAACoB,EAAI,oBAAqB,GAAED,EAAM,SAAQ,EAAG,cAAc,IAAI,GAAG,CAACoF,GAAUnP,OACjGA,KAAQ,OAAOA,IAAO,CAAA,GAAI,IAAI,CAAAkK,MAAYiF,EAAS,KAAK,CAAAphB,MAAQA,EAAK,OAAO,OAAOmc,CAAQ,CAAC,EAAE,OAAO,OAAO,EAAE,IAAI,CAAA/mC,MAAMW,EAAAC,EAAA,IAClIZ,IADkI;AAAA,MAErI,UAAU;AAAA,IAClB,EAAQ,GAEDsmC,EAAeM,EAAM,SAAS,aAAa,qBAAqB,CAAC,GACpEC,EAAI,uBAAuBpB,EAAK,MAAM,CAACoB,EAAI,oBAAqB,GAAED,EAAM,SAAQ,EAAG,cAAc,KAAK,GAAG,CAACoF,GAAUtD,OACnGA,KAAS,OAAOA,IAAQ,CAAA,GAAI,IAAI,CAAA3B,MAAYiF,EAAS,KAAK,CAAAphB,MAAQA,EAAK,OAAO,OAAOmc,CAAQ,CAAC,EAAE,OAAO,OAAO,EAAE,IAAI,CAAA/mC,MAAMW,EAAAC,EAAA,IACpIZ,IADoI;AAAA,MAEvI,UAAU;AAAA,IAClB,EAAQ,GAEDsmC,EAAeM,EAAM,SAAS,aAAa,sBAAsB,CAAC;AAAA,EACtE;AAAA,EACD,aAAa,CAAAA,MAAS;AACpB,IAAAA,EAAM,mBAAmB,CAAA9B,MAAW8B,EAAM,QAAQ,yBAAyB,OAAO,SAASA,EAAM,QAAQ,sBAAsB9B,CAAO,GACtI8B,EAAM,qBAAqB,CAAAkI,MAAgB;AACzC,UAAIC,GAAuBC;AAC3B,aAAOpI,EAAM,iBAAiBkI,IAAeyC,GAA4B,KAAMxC,KAAyBC,IAAsBpI,EAAM,iBAAiB,OAAO,SAASoI,EAAoB,kBAAkB,OAAOD,IAAwBwC,IAA8B;AAAA,IACzQ,GACD3K,EAAM,yBAAyB,CAAApY,MAAY;AACzC,UAAI6jB;AACJ,YAAMC,IAAe1L,EAAM,SAAQ,EAAG;AACtC,UAAI,CAACpY,GAAU;AACb,YAAI+jB,GAAoBC;AACxB,eAAO,IAAUD,IAAqBD,EAAa,SAAS,QAAgBC,EAAmB,WAAaC,IAAsBF,EAAa,UAAU,QAAgBE,EAAoB;AAAA,MACrM;AACM,aAAO,IAASH,IAAwBC,EAAa9jB,CAAQ,MAAM,QAAgB6jB,EAAsB;AAAA,IAC1G,GACDzL,EAAM,qBAAqBnB,EAAK,MAAM,CAACmB,EAAM,kBAAmB,GAAEA,EAAM,SAAQ,EAAG,cAAc,IAAI,GAAG,CAAC6B,GAAY5L,OAC3GA,KAAQ,OAAOA,IAAO,CAAE,GAAE,IAAI,CAAAkK,MAAY0B,EAAW,KAAK,CAAA3B,MAAUA,EAAO,OAAOC,CAAQ,CAAC,EAAE,OAAO,OAAO,GAClHT,EAAeM,EAAM,SAAS,gBAAgB,oBAAoB,CAAC,GACtEA,EAAM,sBAAsBnB,EAAK,MAAM,CAACmB,EAAM,kBAAmB,GAAEA,EAAM,SAAQ,EAAG,cAAc,KAAK,GAAG,CAAC6B,GAAYC,OAC7GA,KAAS,OAAOA,IAAQ,CAAE,GAAE,IAAI,CAAA3B,MAAY0B,EAAW,KAAK,CAAA3B,MAAUA,EAAO,OAAOC,CAAQ,CAAC,EAAE,OAAO,OAAO,GACpHT,EAAeM,EAAM,SAAS,gBAAgB,qBAAqB,CAAC,GACvEA,EAAM,uBAAuBnB,EAAK,MAAM,CAACmB,EAAM,kBAAmB,GAAEA,EAAM,WAAW,cAAc,MAAMA,EAAM,SAAQ,EAAG,cAAc,KAAK,GAAG,CAAC6B,GAAY5L,GAAM6L,MAAU;AAC3K,YAAM0J,IAAe,CAAC,GAAIvV,KAAQ,OAAOA,IAAO,IAAK,GAAI6L,KAAS,OAAOA,IAAQ,CAAE,CAAC;AACpF,aAAOD,EAAW,OAAO,CAAAzoC,MAAK,CAACoyC,EAAa,SAASpyC,EAAE,EAAE,CAAC;AAAA,IAC3D,GAAEsmC,EAAeM,EAAM,SAAS,gBAAgB,sBAAsB,CAAC;AAAA,EAC5E;AACA;AAEA,SAAS6L,GAAqBC,GAAW;AACvC,SAAOA,MAAc,OAAO,YAAa,cAAc,WAAW;AACpE;AAMA,MAAMC,KAAsB;AAAA,EAC1B,MAAM;AAAA,EACN,SAAS;AAAA,EACT,SAAS,OAAO;AAClB,GACMC,KAAkC,OAAO;AAAA,EAC7C,aAAa;AAAA,EACb,WAAW;AAAA,EACX,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,mBAAmB,CAAA;AACrB,IACMC,KAAe;AAAA,EACnB,qBAAqB,MACZF;AAAA,EAET,iBAAiB,CAAAruB,MACR1jB,EAAA;AAAA,IACL,cAAc,CAAE;AAAA,IAChB,kBAAkBgyC,GAAiC;AAAA,KAChDtuB;AAAA,EAGP,mBAAmB,CAAAsiB,OACV;AAAA,IACL,kBAAkB;AAAA,IAClB,uBAAuB;AAAA,IACvB,sBAAsB7B,GAAiB,gBAAgB6B,CAAK;AAAA,IAC5D,0BAA0B7B,GAAiB,oBAAoB6B,CAAK;AAAA,EACrE;AAAA,EAEH,cAAc,CAACE,GAAQF,MAAU;AAC/B,IAAAE,EAAO,UAAU,MAAM;AACrB,UAAIgM,GAAuB3qC,GAAM4qC;AACjC,YAAMC,IAAapM,EAAM,SAAU,EAAC,aAAaE,EAAO,EAAE;AAC1D,aAAO,KAAK,IAAI,KAAK,KAAKgM,IAAwBhM,EAAO,UAAU,YAAY,OAAOgM,IAAwBH,GAAoB,UAAUxqC,IAAO6qC,KAAc,OAAOA,IAAalM,EAAO,UAAU,SAAS,OAAO3+B,IAAOwqC,GAAoB,IAAI,IAAII,IAAwBjM,EAAO,UAAU,YAAY,OAAOiM,IAAwBJ,GAAoB,OAAO;AAAA,IACzW,GACD7L,EAAO,WAAWrB,EAAK,CAAAjX,MAAY,CAACA,GAAUsiB,GAAuBlK,GAAOpY,CAAQ,GAAGoY,EAAM,SAAU,EAAC,YAAY,GAAG,CAACpY,GAAU8b,MAAYA,EAAQ,MAAM,GAAGxD,EAAO,SAAStY,CAAQ,CAAC,EAAE,OAAO,CAACygB,GAAKnI,MAAWmI,IAAMnI,EAAO,QAAS,GAAE,CAAC,GAAGR,EAAeM,EAAM,SAAS,gBAAgB,UAAU,CAAC,GACvSE,EAAO,WAAWrB,EAAK,CAAAjX,MAAY,CAACA,GAAUsiB,GAAuBlK,GAAOpY,CAAQ,GAAGoY,EAAM,SAAU,EAAC,YAAY,GAAG,CAACpY,GAAU8b,MAAYA,EAAQ,MAAMxD,EAAO,SAAStY,CAAQ,IAAI,CAAC,EAAE,OAAO,CAACygB,GAAKnI,MAAWmI,IAAMnI,EAAO,QAAS,GAAE,CAAC,GAAGR,EAAeM,EAAM,SAAS,gBAAgB,UAAU,CAAC,GACxSE,EAAO,YAAY,MAAM;AACvB,MAAAF,EAAM,gBAAgB,CAAAt+B,MAAS;A5G5uCrC,YAAAlI;A4G6uCQ,YAGIC,IAAAiI,GAFD;AAAA,U5G9uCX,C4G8uCWlI,IAAA0mC,EAAO,KAAK/lC;AAAA,Q5G9uCvB,I4GgvCYV;AACJ,eAFKmoB,GACDnoB,GADC;AAAA,UADF4yC,GAAA7yC;AAAA;AAAA,MAIX,CAAO;AAAA,IACF,GACD0mC,EAAO,eAAe,MAAM;AAC1B,UAAI+G,GAAuBC;AAC3B,eAASD,IAAwB/G,EAAO,UAAU,mBAAmB,OAAO+G,IAAwB,SAAWC,IAAwBlH,EAAM,QAAQ,yBAAyB,OAAOkH,IAAwB;AAAA,IAC9M,GACDhH,EAAO,gBAAgB,MACdF,EAAM,SAAU,EAAC,iBAAiB,qBAAqBE,EAAO;AAAA,EAExE;AAAA,EACD,cAAc,CAACuB,GAAQzB,MAAU;AAC/B,IAAAyB,EAAO,UAAU,MAAM;AACrB,UAAI4G,IAAM;AACV,YAAM3J,IAAU,CAAA+C,MAAU;AACxB,YAAIA,EAAO,WAAW;AACpB,UAAAA,EAAO,WAAW,QAAQ/C,CAAO;AAAA,aAC5B;AACL,cAAI4N;AACJ,UAAAjE,MAAQiE,IAAwB7K,EAAO,OAAO,cAAc,OAAO6K,IAAwB;AAAA,QACrG;AAAA,MACO;AACD,aAAA5N,EAAQ+C,CAAM,GACP4G;AAAA,IACR,GACD5G,EAAO,WAAW,MAAM;AACtB,UAAIA,EAAO,QAAQ,GAAG;AACpB,cAAM8K,IAAoB9K,EAAO,YAAY,QAAQA,EAAO,QAAQ,CAAC;AACrE,eAAO8K,EAAkB,aAAaA,EAAkB,QAAS;AAAA,MACzE;AACM,aAAO;AAAA,IACR,GACD9K,EAAO,mBAAmB,CAAA+K,MAAoB;AAC5C,YAAMtM,IAASF,EAAM,UAAUyB,EAAO,OAAO,EAAE,GACzCgL,IAAYvM,KAAU,OAAO,SAASA,EAAO,aAAc;AACjE,aAAO,CAAA1nC,MAAK;AAKV,YAJI,CAAC0nC,KAAU,CAACuM,MAGhBj0C,EAAE,WAAW,QAAQA,EAAE,QAAS,GAC5Bk0C,GAAkBl0C,CAAC,KAEjBA,EAAE,WAAWA,EAAE,QAAQ,SAAS;AAClC;AAGJ,cAAMm0C,IAAYlL,EAAO,QAAS,GAC5BmL,IAAoBnL,IAASA,EAAO,eAAc,EAAG,IAAI,CAAAroC,MAAK,CAACA,EAAE,OAAO,IAAIA,EAAE,OAAO,QAAS,CAAA,CAAC,IAAI,CAAC,CAAC8mC,EAAO,IAAIA,EAAO,QAAO,CAAE,CAAC,GACjI2M,IAAUH,GAAkBl0C,CAAC,IAAI,KAAK,MAAMA,EAAE,QAAQ,CAAC,EAAE,OAAO,IAAIA,EAAE,SACtEs0C,IAAkB,CAAE,GACpBC,IAAe,CAACC,GAAWC,MAAe;AAC9C,UAAI,OAAOA,KAAe,aAG1BjN,EAAM,oBAAoB,CAAA5B,MAAO;AAC/B,gBAAI8O,GAAkBC;AACtB,kBAAMC,IAAiBpN,EAAM,QAAQ,0BAA0B,QAAQ,KAAK,GACtEqN,MAAeJ,MAAeC,IAAmB9O,KAAO,OAAO,SAASA,EAAI,gBAAgB,OAAO8O,IAAmB,MAAME,GAC5HE,KAAkB,KAAK,IAAID,OAAgBF,IAAiB/O,KAAO,OAAO,SAASA,EAAI,cAAc,OAAO+O,IAAiB,IAAI,SAAS;AAChJ,mBAAA/O,EAAI,kBAAkB,QAAQ,CAAAmP,OAAS;AACrC,kBAAI,CAACpN,IAAUqN,CAAU,IAAID;AAC7B,cAAAT,EAAgB3M,EAAQ,IAAI,KAAK,MAAM,KAAK,IAAIqN,IAAaA,IAAaF,IAAiB,CAAC,IAAI,GAAG,IAAI;AAAA,YACrH,CAAa,GACMvzC,EAAAC,EAAA,IACFokC,IADE;AAAA,cAEL,aAAAiP;AAAA,cACA,iBAAAC;AAAA,YACD;AAAA,UACb,CAAW,IACGtN,EAAM,QAAQ,qBAAqB,cAAcgN,MAAc,UACjEhN,EAAM,gBAAgB,CAAA5B,MAAQpkC,IAAA,IACzBokC,IACA0O,EACH;AAAA,QAEL,GACKjT,IAAS,CAAAoT,MAAcF,EAAa,QAAQE,CAAU,GACtDQ,IAAQ,CAAAR,MAAc;AAC1B,UAAAF,EAAa,OAAOE,CAAU,GAC9BjN,EAAM,oBAAoB,CAAA5B,MAAQrkC,EAAAC,EAAA,IAC7BokC,IAD6B;AAAA,YAEhC,kBAAkB;AAAA,YAClB,aAAa;AAAA,YACb,WAAW;AAAA,YACX,aAAa;AAAA,YACb,iBAAiB;AAAA,YACjB,mBAAmB,CAAA;AAAA,UAC/B,EAAY;AAAA,QACH,GACKsP,IAAkB7B,GAAqBW,CAAgB,GACvDmB,IAAc;AAAA,UAClB,aAAa,CAAAn1C,MAAKqhC,EAAOrhC,EAAE,OAAO;AAAA,UAClC,WAAW,CAAAA,MAAK;AACd,YAAAk1C,KAAmB,QAAQA,EAAgB,oBAAoB,aAAaC,EAAY,WAAW,GACnGD,KAAmB,QAAQA,EAAgB,oBAAoB,WAAWC,EAAY,SAAS,GAC/FF,EAAMj1C,EAAE,OAAO;AAAA,UAC3B;AAAA,QACS,GACKo1C,IAAc;AAAA,UAClB,aAAa,CAAAp1C,OACPA,EAAE,eACJA,EAAE,eAAgB,GAClBA,EAAE,gBAAiB,IAErBqhC,EAAOrhC,EAAE,QAAQ,CAAC,EAAE,OAAO,GACpB;AAAA,UAET,WAAW,CAAAA,MAAK;AACd,gBAAIq1C;AACJ,YAAAH,KAAmB,QAAQA,EAAgB,oBAAoB,aAAaE,EAAY,WAAW,GACnGF,KAAmB,QAAQA,EAAgB,oBAAoB,YAAYE,EAAY,SAAS,GAC5Fp1C,EAAE,eACJA,EAAE,eAAgB,GAClBA,EAAE,gBAAiB,IAErBi1C,GAAOI,IAAcr1C,EAAE,QAAQ,CAAC,MAAM,OAAO,SAASq1C,EAAY,OAAO;AAAA,UACrF;AAAA,QACS,GACKC,IAAqBC,OAA0B;AAAA,UACnD,SAAS;AAAA,QACnB,IAAY;AACJ,QAAIrB,GAAkBl0C,CAAC,KACrBk1C,KAAmB,QAAQA,EAAgB,iBAAiB,aAAaE,EAAY,aAAaE,CAAkB,GACpHJ,KAAmB,QAAQA,EAAgB,iBAAiB,YAAYE,EAAY,WAAWE,CAAkB,MAEjHJ,KAAmB,QAAQA,EAAgB,iBAAiB,aAAaC,EAAY,aAAaG,CAAkB,GACpHJ,KAAmB,QAAQA,EAAgB,iBAAiB,WAAWC,EAAY,WAAWG,CAAkB,IAElH9N,EAAM,oBAAoB,CAAA5B,MAAQrkC,EAAAC,EAAA,IAC7BokC,IAD6B;AAAA,UAEhC,aAAayO;AAAA,UACb,WAAAF;AAAA,UACA,aAAa;AAAA,UACb,iBAAiB;AAAA,UACjB,mBAAAC;AAAA,UACA,kBAAkB1M,EAAO;AAAA,QACnC,EAAU;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA,EACD,aAAa,CAAAF,MAAS;AACpB,IAAAA,EAAM,kBAAkB,CAAA9B,MAAW8B,EAAM,QAAQ,wBAAwB,OAAO,SAASA,EAAM,QAAQ,qBAAqB9B,CAAO,GACnI8B,EAAM,sBAAsB,CAAA9B,MAAW8B,EAAM,QAAQ,4BAA4B,OAAO,SAASA,EAAM,QAAQ,yBAAyB9B,CAAO,GAC/I8B,EAAM,oBAAoB,CAAAkI,MAAgB;AACxC,UAAIC;AACJ,MAAAnI,EAAM,gBAAgBkI,IAAe,CAAA,KAAMC,IAAwBnI,EAAM,aAAa,iBAAiB,OAAOmI,IAAwB,CAAA,CAAE;AAAA,IACzI,GACDnI,EAAM,sBAAsB,CAAAkI,MAAgB;AAC1C,UAAI8F;AACJ,MAAAhO,EAAM,oBAAoBkI,IAAe8D,GAA+B,KAAMgC,IAAyBhO,EAAM,aAAa,qBAAqB,OAAOgO,IAAyBhC,GAA+B,CAAE;AAAA,IACjN,GACDhM,EAAM,eAAe,MAAM;AACzB,UAAIiO,GAAuBC;AAC3B,cAAQD,KAAyBC,IAAyBlO,EAAM,gBAAiB,EAAC,CAAC,MAAM,OAAO,SAASkO,EAAuB,QAAQ,OAAO,CAAC7F,GAAK5G,MAC5I4G,IAAM5G,EAAO,QAAS,GAC5B,CAAC,MAAM,OAAOwM,IAAwB;AAAA,IAC1C,GACDjO,EAAM,mBAAmB,MAAM;AAC7B,UAAImO,GAAuBC;AAC3B,cAAQD,KAAyBC,IAAyBpO,EAAM,oBAAqB,EAAC,CAAC,MAAM,OAAO,SAASoO,EAAuB,QAAQ,OAAO,CAAC/F,GAAK5G,MAChJ4G,IAAM5G,EAAO,QAAS,GAC5B,CAAC,MAAM,OAAO0M,IAAwB;AAAA,IAC1C,GACDnO,EAAM,qBAAqB,MAAM;AAC/B,UAAIqO,GAAuBC;AAC3B,cAAQD,KAAyBC,IAAyBtO,EAAM,sBAAuB,EAAC,CAAC,MAAM,OAAO,SAASsO,EAAuB,QAAQ,OAAO,CAACjG,GAAK5G,MAClJ4G,IAAM5G,EAAO,QAAS,GAC5B,CAAC,MAAM,OAAO4M,IAAwB;AAAA,IAC1C,GACDrO,EAAM,oBAAoB,MAAM;AAC9B,UAAIuO,GAAuBC;AAC3B,cAAQD,KAAyBC,IAAyBxO,EAAM,qBAAsB,EAAC,CAAC,MAAM,OAAO,SAASwO,EAAuB,QAAQ,OAAO,CAACnG,GAAK5G,MACjJ4G,IAAM5G,EAAO,QAAS,GAC5B,CAAC,MAAM,OAAO8M,IAAwB;AAAA,IAC1C;AAAA,EACL;AACA;AACA,IAAIE,KAAmB;AACvB,SAASV,KAAwB;AAC/B,MAAI,OAAOU,MAAqB,UAAW,QAAOA;AAClD,MAAIC,IAAY;AAChB,MAAI;AACF,UAAM5yC,IAAU;AAAA,MACd,IAAI,UAAU;AACZ,eAAA4yC,IAAY,IACL;AAAA,MACf;AAAA,IACK,GACKvgC,IAAO,MAAM;AAAA,IAAE;AACrB,WAAO,iBAAiB,QAAQA,GAAMrS,CAAO,GAC7C,OAAO,oBAAoB,QAAQqS,CAAI;AAAA,EACxC,SAAQ9F,GAAK;AACZ,IAAAqmC,IAAY;AAAA,EAChB;AACE,SAAAD,KAAmBC,GACZD;AACT;AACA,SAAS/B,GAAkBl0C,GAAG;AAC5B,SAAOA,EAAE,SAAS;AACpB;AAIA,MAAMm2C,KAAmB;AAAA,EACvB,iBAAiB,CAAAjxB,MACR1jB,EAAA;AAAA,IACL,kBAAkB,CAAE;AAAA,KACjB0jB;AAAA,EAGP,mBAAmB,CAAAsiB,OACV;AAAA,IACL,0BAA0B7B,GAAiB,oBAAoB6B,CAAK;AAAA,EACrE;AAAA,EAEH,cAAc,CAACE,GAAQF,MAAU;AAC/B,IAAAE,EAAO,mBAAmB,CAAArkC,MAAS;AACjC,MAAIqkC,EAAO,gBACTF,EAAM,oBAAoB,CAAA5B,MAAQrkC,EAAAC,EAAA,IAC7BokC,IAD6B;AAAA,QAEhC,CAAC8B,EAAO,EAAE,GAAGrkC,KAAS,OAAOA,IAAQ,CAACqkC,EAAO,aAAY;AAAA,MACnE,EAAU;AAAA,IAEL,GACDA,EAAO,eAAe,MAAM;AAC1B,UAAI3+B,GAAM6lC;AACV,YAAMwH,IAAe1O,EAAO;AAC5B,cAAQ3+B,IAAOqtC,EAAa,SAASA,EAAa,KAAK,CAAA71C,MAAKA,EAAE,aAAc,CAAA,KAAKquC,IAAwBpH,EAAM,SAAU,EAAC,qBAAqB,OAAO,SAASoH,EAAsBlH,EAAO,EAAE,MAAM,OAAO3+B,IAAO;AAAA,IACnN,GACD2+B,EAAO,aAAa,MAAM;AACxB,UAAI+G,GAAuBC;AAC3B,eAASD,IAAwB/G,EAAO,UAAU,iBAAiB,OAAO+G,IAAwB,SAAWC,IAAwBlH,EAAM,QAAQ,iBAAiB,OAAOkH,IAAwB;AAAA,IACpM,GACDhH,EAAO,6BAA6B,MAC3B,CAAA1nC,MAAK;AACV,MAAA0nC,EAAO,oBAAoB,QAAQA,EAAO,iBAAiB1nC,EAAE,OAAO,OAAO;AAAA,IAC5E;AAAA,EAEJ;AAAA,EACD,WAAW,CAACynC,GAAKD,MAAU;AACzB,IAAAC,EAAI,sBAAsBpB,EAAK,MAAM,CAACoB,EAAI,eAAeD,EAAM,SAAQ,EAAG,gBAAgB,GAAG,CAAA6O,MACpFA,EAAM,OAAO,CAAA7qB,MAAQA,EAAK,OAAO,cAAc,GACrD0b,EAAeM,EAAM,SAAS,aAAa,qBAAqB,CAAC,GACpEC,EAAI,kBAAkBpB,EAAK,MAAM,CAACoB,EAAI,oBAAmB,GAAIA,EAAI,sBAAqB,GAAIA,EAAI,qBAAoB,CAAE,GAAG,CAAChK,GAAMnI,GAAQgU,MAAU,CAAC,GAAG7L,GAAM,GAAGnI,GAAQ,GAAGgU,CAAK,GAAGpC,EAAeM,EAAM,SAAS,aAAa,iBAAiB,CAAC;AAAA,EAC9O;AAAA,EACD,aAAa,CAAAA,MAAS;AACpB,UAAM8O,IAA2B,CAAC1xC,GAAK2xC,MAC9BlQ,EAAK,MAAM,CAACkQ,EAAY,GAAEA,EAAU,EAAG,OAAO,CAAA31C,MAAKA,EAAE,aAAc,CAAA,EAAE,IAAI,CAAAA,MAAKA,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,GAAG,CAAAsqC,MAC9FA,EAAQ,OAAO,CAAAtqC,MAAKA,EAAE,gBAAgB,OAAO,SAASA,EAAE,cAAc,GAC5EsmC,EAAeM,EAAM,SAAS,gBAAgB5iC,CAAG,CAAC;AAEvD,IAAA4iC,EAAM,wBAAwB8O,EAAyB,yBAAyB,MAAM9O,EAAM,mBAAmB,GAC/GA,EAAM,wBAAwB8O,EAAyB,yBAAyB,MAAM9O,EAAM,mBAAmB,GAC/GA,EAAM,4BAA4B8O,EAAyB,6BAA6B,MAAM9O,EAAM,oBAAoB,GACxHA,EAAM,6BAA6B8O,EAAyB,8BAA8B,MAAM9O,EAAM,qBAAqB,GAC3HA,EAAM,8BAA8B8O,EAAyB,+BAA+B,MAAM9O,EAAM,sBAAsB,GAC9HA,EAAM,sBAAsB,CAAA9B,MAAW8B,EAAM,QAAQ,4BAA4B,OAAO,SAASA,EAAM,QAAQ,yBAAyB9B,CAAO,GAC/I8B,EAAM,wBAAwB,CAAAkI,MAAgB;AAC5C,UAAIC;AACJ,MAAAnI,EAAM,oBAAoBkI,IAAe,CAAA,KAAMC,IAAwBnI,EAAM,aAAa,qBAAqB,OAAOmI,IAAwB,CAAA,CAAE;AAAA,IACjJ,GACDnI,EAAM,0BAA0B,CAAAnkC,MAAS;AACvC,UAAImzC;AACJ,MAAAnzC,KAASmzC,IAASnzC,MAAU,OAAOmzC,IAAS,CAAChP,EAAM,uBAAwB,GAC3EA,EAAM,oBAAoBA,EAAM,kBAAmB,EAAC,OAAO,CAACxjC,GAAK0jC,MAAYnmC,EAAAC,EAAA,IACxEwC,IADwE;AAAA,QAE3E,CAAC0jC,EAAO,EAAE,GAAIrkC,KAAQ,EAAEqkC,EAAO,cAAc,QAAQA,EAAO,WAAU;AAAA,MAC9E,IAAU,CAAE,CAAA,CAAC;AAAA,IACR,GACDF,EAAM,yBAAyB,MAAM,CAACA,EAAM,kBAAmB,EAAC,KAAK,CAAAE,MAAU,EAAEA,EAAO,gBAAgB,QAAQA,EAAO,aAAc,EAAC,GACtIF,EAAM,0BAA0B,MAAMA,EAAM,kBAAiB,EAAG,KAAK,CAAAE,MAAUA,EAAO,gBAAgB,OAAO,SAASA,EAAO,aAAY,CAAE,GAC3IF,EAAM,uCAAuC,MACpC,CAAAxnC,MAAK;AACV,UAAIy2C;AACJ,MAAAjP,EAAM,yBAAyBiP,IAAUz2C,EAAE,WAAW,OAAO,SAASy2C,EAAQ,OAAO;AAAA,IACtF;AAAA,EAEP;AACA;AACA,SAAS/E,GAAuBlK,GAAOpY,GAAU;AAC/C,SAAQA,IAA2CA,MAAa,WAAWoY,EAAM,4BAA2B,IAAKpY,MAAa,SAASoY,EAAM,0BAA2B,IAAGA,EAAM,2BAA4B,IAA1LA,EAAM,sBAAqB;AAChD;AAIA,MAAMkP,KAAiB;AAAA,EACrB,aAAa,CAAAlP,MAAS;AACpB,IAAAA,EAAM,4BAA4BA,EAAM,QAAQ,sBAAsBA,EAAM,QAAQ,mBAAmBA,GAAO,YAAY,GAC1HA,EAAM,2BAA2B,MAC3BA,EAAM,QAAQ,mBAAmB,CAACA,EAAM,4BACnCA,EAAM,uBAAwB,IAEhCA,EAAM,0BAA2B,GAE1CA,EAAM,gCAAgCA,EAAM,QAAQ,0BAA0BA,EAAM,QAAQ,uBAAuBA,GAAO,YAAY,GACtIA,EAAM,+BAA+B,MAC9BA,EAAM,gCAGJA,EAAM,8BAA+B,IAFnC,oBAAI,IAAK,GAIpBA,EAAM,gCAAgCA,EAAM,QAAQ,0BAA0BA,EAAM,QAAQ,uBAAuBA,GAAO,YAAY,GACtIA,EAAM,+BAA+B,MAAM;AACzC,UAAKA,EAAM;AAGX,eAAOA,EAAM,8BAA+B;AAAA,IAC7C;AAAA,EACL;AACA,GAIMmP,KAAkB;AAAA,EACtB,iBAAiB,CAAAzxB,MACR1jB,EAAA;AAAA,IACL,cAAc;AAAA,KACX0jB;AAAA,EAGP,mBAAmB,CAAAsiB,OACV;AAAA,IACL,sBAAsB7B,GAAiB,gBAAgB6B,CAAK;AAAA,IAC5D,gBAAgB;AAAA,IAChB,0BAA0B,CAAAE,MAAU;AAClC,UAAIkP;AACJ,YAAMvzC,KAASuzC,IAAwBpP,EAAM,gBAAe,EAAG,SAAS,CAAC,MAAM,SAASoP,IAAwBA,EAAsB,uBAAwB,EAAClP,EAAO,EAAE,MAAM,OAAO,SAASkP,EAAsB,SAAU;AAC9N,aAAO,OAAOvzC,KAAU,YAAY,OAAOA,KAAU;AAAA,IAC7D;AAAA,EACK;AAAA,EAEH,cAAc,CAACqkC,GAAQF,MAAU;AAC/B,IAAAE,EAAO,qBAAqB,MAAM;AAChC,UAAI+G,GAAuBC,GAAuBC,GAAwBkI;AAC1E,eAASpI,IAAwB/G,EAAO,UAAU,uBAAuB,OAAO+G,IAAwB,SAAWC,IAAwBlH,EAAM,QAAQ,uBAAuB,OAAOkH,IAAwB,SAAWC,IAAyBnH,EAAM,QAAQ,kBAAkB,OAAOmH,IAAyB,SAAWkI,IAAwBrP,EAAM,QAAQ,4BAA4B,OAAO,SAASA,EAAM,QAAQ,yBAAyBE,CAAM,MAAM,OAAOmP,IAAwB,OAAS,CAAC,CAACnP,EAAO;AAAA,IACrf;AAAA,EACF;AAAA,EACD,aAAa,CAAAF,MAAS;AACpB,IAAAA,EAAM,wBAAwB,MACrB4G,GAAU,gBAEnB5G,EAAM,oBAAoB,MAAM;AAC9B,UAAI+G,GAAuBC;AAC3B,YAAM;AAAA,QACJ,gBAAgBsI;AAAA,MACjB,IAAGtP,EAAM;AACV,aAAO3B,GAAWiR,CAAc,IAAIA,IAAiBA,MAAmB,SAAStP,EAAM,sBAAqB,KAAM+G,KAAyBC,IAAyBhH,EAAM,QAAQ,cAAc,OAAO,SAASgH,EAAuBsI,CAAc,MAAM,OAAOvI,IAAwBH,GAAU0I,CAAc;AAAA,IACnT,GACDtP,EAAM,kBAAkB,CAAA9B,MAAW;AACjC,MAAA8B,EAAM,QAAQ,wBAAwB,QAAQA,EAAM,QAAQ,qBAAqB9B,CAAO;AAAA,IACzF,GACD8B,EAAM,oBAAoB,CAAAkI,MAAgB;AACxC,MAAAlI,EAAM,gBAAgBkI,IAAe,SAAYlI,EAAM,aAAa,YAAY;AAAA,IACjF;AAAA,EACL;AACA,GAIMuP,KAAe;AAAA,EACnB,iBAAiB,CAAA7xB,MACR1jB,EAAA;AAAA,IACL,UAAU,CAAE;AAAA,KACT0jB;AAAA,EAGP,mBAAmB,CAAAsiB,OACV;AAAA,IACL,kBAAkB7B,GAAiB,YAAY6B,CAAK;AAAA,IACpD,sBAAsB;AAAA,EACvB;AAAA,EAEH,aAAa,CAAAA,MAAS;AACpB,QAAIwP,IAAa,IACbC,IAAS;AACb,IAAAzP,EAAM,qBAAqB,MAAM;AAC/B,UAAIz+B,GAAMmuC;AACV,UAAI,CAACF,GAAY;AACf,QAAAxP,EAAM,OAAO,MAAM;AACjB,UAAAwP,IAAa;AAAA,QACvB,CAAS;AACD;AAAA,MACR;AACM,WAAKjuC,KAAQmuC,IAAwB1P,EAAM,QAAQ,iBAAiB,OAAO0P,IAAwB1P,EAAM,QAAQ,sBAAsB,OAAOz+B,IAAO,CAACy+B,EAAM,QAAQ,iBAAiB;AACnL,YAAIyP,EAAQ;AACZ,QAAAA,IAAS,IACTzP,EAAM,OAAO,MAAM;AACjB,UAAAA,EAAM,cAAe,GACrByP,IAAS;AAAA,QACnB,CAAS;AAAA,MACT;AAAA,IACK,GACDzP,EAAM,cAAc,CAAA9B,MAAW8B,EAAM,QAAQ,oBAAoB,OAAO,SAASA,EAAM,QAAQ,iBAAiB9B,CAAO,GACvH8B,EAAM,wBAAwB,CAAA2P,MAAY;AACxC,OAAIA,KAAY,OAAOA,IAAW,CAAC3P,EAAM,qBAAoB,KAC3DA,EAAM,YAAY,EAAI,IAEtBA,EAAM,YAAY,EAAE;AAAA,IAEvB,GACDA,EAAM,gBAAgB,CAAAkI,MAAgB;AACpC,UAAI0H,GAAuBxH;AAC3B,MAAApI,EAAM,YAAYkI,IAAe,CAAE,KAAI0H,KAAyBxH,IAAsBpI,EAAM,iBAAiB,OAAO,SAASoI,EAAoB,aAAa,OAAOwH,IAAwB,EAAE;AAAA,IAChM,GACD5P,EAAM,uBAAuB,MACpBA,EAAM,yBAAwB,EAAG,SAAS,KAAK,CAAAC,MAAOA,EAAI,cAAc,GAEjFD,EAAM,kCAAkC,MAC/B,CAAAxnC,MAAK;AACV,MAAAA,EAAE,WAAW,QAAQA,EAAE,QAAS,GAChCwnC,EAAM,sBAAuB;AAAA,IAC9B,GAEHA,EAAM,wBAAwB,MAAM;AAClC,YAAM2P,IAAW3P,EAAM,SAAQ,EAAG;AAClC,aAAO2P,MAAa,MAAQ,OAAO,OAAOA,CAAQ,EAAE,KAAK,OAAO;AAAA,IACjE,GACD3P,EAAM,uBAAuB,MAAM;AACjC,YAAM2P,IAAW3P,EAAM,SAAQ,EAAG;AAGlC,aAAI,OAAO2P,KAAa,YACfA,MAAa,KAElB,GAAC,OAAO,KAAKA,CAAQ,EAAE,UAKvB3P,EAAM,YAAa,EAAC,SAAS,KAAK,CAAAC,MAAO,CAACA,EAAI,cAAa,CAAE;AAAA,IAMlE,GACDD,EAAM,mBAAmB,MAAM;AAC7B,UAAIwD,IAAW;AAEf,cADexD,EAAM,SAAQ,EAAG,aAAa,KAAO,OAAO,KAAKA,EAAM,YAAa,EAAC,QAAQ,IAAI,OAAO,KAAKA,EAAM,SAAU,EAAC,QAAQ,GAC9H,QAAQ,CAAAlgB,MAAM;AACnB,cAAM+vB,IAAU/vB,EAAG,MAAM,GAAG;AAC5B,QAAA0jB,IAAW,KAAK,IAAIA,GAAUqM,EAAQ,MAAM;AAAA,MACpD,CAAO,GACMrM;AAAA,IACR,GACDxD,EAAM,yBAAyB,MAAMA,EAAM,kBAAmB,GAC9DA,EAAM,sBAAsB,OACtB,CAACA,EAAM,wBAAwBA,EAAM,QAAQ,wBAC/CA,EAAM,uBAAuBA,EAAM,QAAQ,oBAAoBA,CAAK,IAElEA,EAAM,QAAQ,mBAAmB,CAACA,EAAM,uBACnCA,EAAM,uBAAwB,IAEhCA,EAAM,qBAAsB;AAAA,EAEtC;AAAA,EACD,WAAW,CAACC,GAAKD,MAAU;AACzB,IAAAC,EAAI,iBAAiB,CAAA0P,MAAY;AAC/B,MAAA3P,EAAM,YAAY,CAAA5B,MAAO;A5G3rD/B,YAAA5kC;A4G4rDQ,YAAIs2C;AACJ,cAAMC,IAAS3R,MAAQ,KAAO,KAAO,CAAC,EAAEA,KAAO,QAAQA,EAAI6B,EAAI,EAAE;AACjE,YAAI+P,IAAc,CAAE;AASpB,YARI5R,MAAQ,KACV,OAAO,KAAK4B,EAAM,YAAa,EAAC,QAAQ,EAAE,QAAQ,CAAAiQ,MAAS;AACzD,UAAAD,EAAYC,CAAK,IAAI;AAAA,QACjC,CAAW,IAEDD,IAAc5R,GAEhBuR,KAAYG,IAAYH,MAAa,OAAOG,IAAY,CAACC,GACrD,CAACA,KAAUJ;AACb,iBAAO51C,EAAAC,EAAA,IACFg2C,IADE;AAAA,YAEL,CAAC/P,EAAI,EAAE,GAAG;AAAA,UACX;AAEH,YAAI8P,KAAU,CAACJ,GAAU;AACvB,gBAGIl2C,IAAAu2C,GAFD;AAAA,Y5G/sDb,C4G+sDax2C,IAAAymC,EAAI,KAAK9lC;AAAA,U5G/sDtB,I4GitDcV;AACJ,iBAFKmoB,GACDnoB,GADC;AAAA,YADF4yC,GAAA7yC;AAAA;AAAA,QAIb;AACQ,eAAO4kC;AAAA,MACf,CAAO;AAAA,IACF,GACD6B,EAAI,gBAAgB,MAAM;AACxB,UAAIiQ;AACJ,YAAMP,IAAW3P,EAAM,SAAQ,EAAG;AAClC,aAAO,CAAC,GAAGkQ,IAAwBlQ,EAAM,QAAQ,oBAAoB,OAAO,SAASA,EAAM,QAAQ,iBAAiBC,CAAG,MAAM,OAAOiQ,IAAwBP,MAAa,MAASA,KAAY,QAAgBA,EAAS1P,EAAI,EAAE;AAAA,IAC9N,GACDA,EAAI,eAAe,MAAM;AACvB,UAAIkQ,GAAuBjJ,GAAuB0C;AAClD,cAAQuG,IAAwBnQ,EAAM,QAAQ,mBAAmB,OAAO,SAASA,EAAM,QAAQ,gBAAgBC,CAAG,MAAM,OAAOkQ,MAA0BjJ,IAAwBlH,EAAM,QAAQ,oBAAoB,OAAOkH,IAAwB,OAAS,CAAC,GAAG0C,IAAe3J,EAAI,YAAY,QAAQ2J,EAAa;AAAA,IACpT,GACD3J,EAAI,0BAA0B,MAAM;AAClC,UAAImQ,IAAkB,IAClBlL,IAAajF;AACjB,aAAOmQ,KAAmBlL,EAAW;AACnC,QAAAA,IAAalF,EAAM,OAAOkF,EAAW,UAAU,EAAI,GACnDkL,IAAkBlL,EAAW,cAAe;AAE9C,aAAOkL;AAAA,IACR,GACDnQ,EAAI,2BAA2B,MAAM;AACnC,YAAMoQ,IAAYpQ,EAAI,aAAc;AACpC,aAAO,MAAM;AACX,QAAKoQ,KACLpQ,EAAI,eAAgB;AAAA,MACrB;AAAA,IACF;AAAA,EACL;AACA,GAIMqQ,KAAmB,GACnBC,KAAkB,IAClBC,KAA4B,OAAO;AAAA,EACvC,WAAWF;AAAA,EACX,UAAUC;AACZ,IACME,KAAgB;AAAA,EACpB,iBAAiB,CAAA/yB,MACR3jB,EAAAC,EAAA,IACF0jB,IADE;AAAA,IAEL,YAAY1jB,IAAA,IACPw2C,GAA2B,IAC1B9yB,KAAS,OAAO,SAASA,EAAM;AAAA,EAEtC;AAAA,EAEH,mBAAmB,CAAAsiB,OACV;AAAA,IACL,oBAAoB7B,GAAiB,cAAc6B,CAAK;AAAA,EACzD;AAAA,EAEH,aAAa,CAAAA,MAAS;AACpB,QAAIwP,IAAa,IACbC,IAAS;AACb,IAAAzP,EAAM,sBAAsB,MAAM;AAChC,UAAIz+B,GAAMmuC;AACV,UAAI,CAACF,GAAY;AACf,QAAAxP,EAAM,OAAO,MAAM;AACjB,UAAAwP,IAAa;AAAA,QACvB,CAAS;AACD;AAAA,MACR;AACM,WAAKjuC,KAAQmuC,IAAwB1P,EAAM,QAAQ,iBAAiB,OAAO0P,IAAwB1P,EAAM,QAAQ,uBAAuB,OAAOz+B,IAAO,CAACy+B,EAAM,QAAQ,kBAAkB;AACrL,YAAIyP,EAAQ;AACZ,QAAAA,IAAS,IACTzP,EAAM,OAAO,MAAM;AACjB,UAAAA,EAAM,eAAgB,GACtByP,IAAS;AAAA,QACnB,CAAS;AAAA,MACT;AAAA,IACK,GACDzP,EAAM,gBAAgB,CAAA9B,MAAW;AAC/B,YAAMwS,IAAc,CAAAtS,MACHH,GAAiBC,GAASE,CAAG;AAG9C,aAAO4B,EAAM,QAAQ,sBAAsB,OAAO,SAASA,EAAM,QAAQ,mBAAmB0Q,CAAW;AAAA,IACxG,GACD1Q,EAAM,kBAAkB,CAAAkI,MAAgB;AACtC,UAAIyI;AACJ,MAAA3Q,EAAM,cAAckI,IAAesI,GAAyB,KAAMG,IAAwB3Q,EAAM,aAAa,eAAe,OAAO2Q,IAAwBH,GAAyB,CAAE;AAAA,IACvL,GACDxQ,EAAM,eAAe,CAAA9B,MAAW;AAC9B,MAAA8B,EAAM,cAAc,CAAA5B,MAAO;AACzB,YAAIwS,IAAY3S,GAAiBC,GAASE,EAAI,SAAS;AACvD,cAAMyS,IAAe,OAAO7Q,EAAM,QAAQ,aAAc,eAAeA,EAAM,QAAQ,cAAc,KAAK,OAAO,mBAAmBA,EAAM,QAAQ,YAAY;AAC5J,eAAA4Q,IAAY,KAAK,IAAI,GAAG,KAAK,IAAIA,GAAWC,CAAY,CAAC,GAClD92C,EAAAC,EAAA,IACFokC,IADE;AAAA,UAEL,WAAAwS;AAAA,QACD;AAAA,MACT,CAAO;AAAA,IACF,GACD5Q,EAAM,iBAAiB,CAAAkI,MAAgB;AACrC,UAAI4I,GAAwB1I;AAC5B,MAAApI,EAAM,aAAakI,IAAeoI,MAAoBQ,KAA0B1I,IAAsBpI,EAAM,iBAAiB,SAASoI,IAAsBA,EAAoB,eAAe,OAAO,SAASA,EAAoB,cAAc,OAAO0I,IAAyBR,EAAgB;AAAA,IAClS,GACDtQ,EAAM,gBAAgB,CAAAkI,MAAgB;AACpC,UAAI6I,GAAwBC;AAC5B,MAAAhR,EAAM,YAAYkI,IAAeqI,MAAmBQ,KAA0BC,IAAuBhR,EAAM,iBAAiB,SAASgR,IAAuBA,EAAqB,eAAe,OAAO,SAASA,EAAqB,aAAa,OAAOD,IAAyBR,EAAe;AAAA,IAClS,GACDvQ,EAAM,cAAc,CAAA9B,MAAW;AAC7B,MAAA8B,EAAM,cAAc,CAAA5B,MAAO;AACzB,cAAM6S,IAAW,KAAK,IAAI,GAAGhT,GAAiBC,GAASE,EAAI,QAAQ,CAAC,GAC9D8S,IAAc9S,EAAI,WAAWA,EAAI,WACjCwS,IAAY,KAAK,MAAMM,IAAcD,CAAQ;AACnD,eAAOl3C,EAAAC,EAAA,IACFokC,IADE;AAAA,UAEL,WAAAwS;AAAA,UACA,UAAAK;AAAA,QACD;AAAA,MACT,CAAO;AAAA,IACF,GAEDjR,EAAM,eAAe,CAAA9B,MAAW8B,EAAM,cAAc,CAAA5B,MAAO;AACzD,UAAI+S;AACJ,UAAIC,IAAenT,GAAiBC,IAAUiT,IAAwBnR,EAAM,QAAQ,cAAc,OAAOmR,IAAwB,EAAE;AACnI,aAAI,OAAOC,KAAiB,aAC1BA,IAAe,KAAK,IAAI,IAAIA,CAAY,IAEnCr3C,EAAAC,EAAA,IACFokC,IADE;AAAA,QAEL,WAAWgT;AAAA,MACZ;AAAA,IACP,CAAK,GACDpR,EAAM,iBAAiBnB,EAAK,MAAM,CAACmB,EAAM,aAAY,CAAE,GAAG,CAAAqR,MAAa;AACrE,UAAIC,IAAc,CAAE;AACpB,aAAID,KAAaA,IAAY,MAC3BC,IAAc,CAAC,GAAG,IAAI,MAAMD,CAAS,CAAC,EAAE,KAAK,IAAI,EAAE,IAAI,CAACl3C,GAAGtB,MAAMA,CAAC,IAE7Dy4C;AAAA,IACR,GAAE5R,EAAeM,EAAM,SAAS,cAAc,gBAAgB,CAAC,GAChEA,EAAM,qBAAqB,MAAMA,EAAM,SAAQ,EAAG,WAAW,YAAY,GACzEA,EAAM,iBAAiB,MAAM;AAC3B,YAAM;AAAA,QACJ,WAAA4Q;AAAA,MACR,IAAU5Q,EAAM,SAAQ,EAAG,YACfqR,IAAYrR,EAAM,aAAc;AACtC,aAAIqR,MAAc,KACT,KAELA,MAAc,IACT,KAEFT,IAAYS,IAAY;AAAA,IAChC,GACDrR,EAAM,eAAe,MACZA,EAAM,aAAa,CAAA5B,MAAOA,IAAM,CAAC,GAE1C4B,EAAM,WAAW,MACRA,EAAM,aAAa,CAAA5B,MACjBA,IAAM,CACd,GAEH4B,EAAM,YAAY,MACTA,EAAM,aAAa,CAAC,GAE7BA,EAAM,WAAW,MACRA,EAAM,aAAaA,EAAM,aAAY,IAAK,CAAC,GAEpDA,EAAM,2BAA2B,MAAMA,EAAM,oBAAqB,GAClEA,EAAM,wBAAwB,OACxB,CAACA,EAAM,0BAA0BA,EAAM,QAAQ,0BACjDA,EAAM,yBAAyBA,EAAM,QAAQ,sBAAsBA,CAAK,IAEtEA,EAAM,QAAQ,oBAAoB,CAACA,EAAM,yBACpCA,EAAM,yBAA0B,IAElCA,EAAM,uBAAwB,IAEvCA,EAAM,eAAe,MAAM;AACzB,UAAIuR;AACJ,cAAQA,IAAyBvR,EAAM,QAAQ,cAAc,OAAOuR,IAAyB,KAAK,KAAKvR,EAAM,gBAAgBA,EAAM,SAAU,EAAC,WAAW,QAAQ;AAAA,IAClK,GACDA,EAAM,cAAc,MAAM;AACxB,UAAIwR;AACJ,cAAQA,IAAwBxR,EAAM,QAAQ,aAAa,OAAOwR,IAAwBxR,EAAM,yBAA0B,EAAC,KAAK;AAAA,IACjI;AAAA,EACL;AACA,GAIMyR,KAA4B,OAAO;AAAA,EACvC,KAAK,CAAE;AAAA,EACP,QAAQ,CAAA;AACV,IACMC,KAAa;AAAA,EACjB,iBAAiB,CAAAh0B,MACR1jB,EAAA;AAAA,IACL,YAAYy3C,GAA2B;AAAA,KACpC/zB;AAAA,EAGP,mBAAmB,CAAAsiB,OACV;AAAA,IACL,oBAAoB7B,GAAiB,cAAc6B,CAAK;AAAA,EACzD;AAAA,EAEH,WAAW,CAACC,GAAKD,MAAU;AACzB,IAAAC,EAAI,MAAM,CAACrY,GAAU+pB,GAAiBC,MAAsB;AAC1D,YAAMC,IAAaF,IAAkB1R,EAAI,YAAa,EAAC,IAAI,CAAA1+B,MAAQ;AACjE,YAAI;AAAA,UACF,IAAAue;AAAA,QACV,IAAYve;AACJ,eAAOue;AAAA,MACR,CAAA,IAAI,CAAE,GACDgyB,IAAeF,IAAoB3R,EAAI,cAAe,EAAC,IAAI,CAAAv+B,MAAS;AACxE,YAAI;AAAA,UACF,IAAAoe;AAAA,QACV,IAAYpe;AACJ,eAAOoe;AAAA,MACR,CAAA,IAAI,CAAE,GACDiyB,IAAS,oBAAI,IAAI,CAAC,GAAGD,GAAc7R,EAAI,IAAI,GAAG4R,CAAU,CAAC;AAC/D,MAAA7R,EAAM,cAAc,CAAA5B,MAAO;AACzB,YAAI4T,GAAWC;AACf,YAAIrqB,MAAa,UAAU;AACzB,cAAIsqB,GAAUC;AACd,iBAAO;AAAA,YACL,OAAOD,IAAW9T,KAAO,OAAO,SAASA,EAAI,QAAQ,OAAO8T,IAAW,CAAA,GAAI,OAAO,CAAA94C,MAAK,EAAE24C,KAAU,QAAQA,EAAO,IAAI34C,CAAC,EAAE;AAAA,YACzH,QAAQ,CAAC,KAAK+4C,IAAc/T,KAAO,OAAO,SAASA,EAAI,WAAW,OAAO+T,IAAc,CAAE,GAAE,OAAO,CAAA/4C,MAAK,EAAE24C,KAAU,QAAQA,EAAO,IAAI34C,CAAC,EAAE,GAAG,GAAG,MAAM,KAAK24C,CAAM,CAAC;AAAA,UAClK;AAAA,QACX;AACQ,YAAInqB,MAAa,OAAO;AACtB,cAAIwqB,GAAWC;AACf,iBAAO;AAAA,YACL,KAAK,CAAC,KAAKD,IAAYhU,KAAO,OAAO,SAASA,EAAI,QAAQ,OAAOgU,IAAY,CAAE,GAAE,OAAO,CAAAh5C,MAAK,EAAE24C,KAAU,QAAQA,EAAO,IAAI34C,CAAC,EAAE,GAAG,GAAG,MAAM,KAAK24C,CAAM,CAAC;AAAA,YACvJ,UAAUM,IAAejU,KAAO,OAAO,SAASA,EAAI,WAAW,OAAOiU,IAAe,IAAI,OAAO,CAAAj5C,MAAK,EAAE24C,KAAU,QAAQA,EAAO,IAAI34C,CAAC,EAAE;AAAA,UACxI;AAAA,QACX;AACQ,eAAO;AAAA,UACL,OAAO44C,IAAY5T,KAAO,OAAO,SAASA,EAAI,QAAQ,OAAO4T,IAAY,CAAA,GAAI,OAAO,CAAA54C,MAAK,EAAE24C,KAAU,QAAQA,EAAO,IAAI34C,CAAC,EAAE;AAAA,UAC3H,UAAU64C,IAAe7T,KAAO,OAAO,SAASA,EAAI,WAAW,OAAO6T,IAAe,IAAI,OAAO,CAAA74C,MAAK,EAAE24C,KAAU,QAAQA,EAAO,IAAI34C,CAAC,EAAE;AAAA,QACxI;AAAA,MACT,CAAO;AAAA,IACF,GACD6mC,EAAI,YAAY,MAAM;AACpB,UAAIsN;AACJ,YAAM;AAAA,QACJ,kBAAA+E;AAAA,QACA,eAAAC;AAAA,MACD,IAAGvS,EAAM;AACV,aAAI,OAAOsS,KAAqB,aACvBA,EAAiBrS,CAAG,KAErBsN,IAAQ+E,KAAoB,OAAOA,IAAmBC,MAAkB,OAAOhF,IAAQ;AAAA,IAChG,GACDtN,EAAI,cAAc,MAAM;AACtB,YAAM8R,IAAS,CAAC9R,EAAI,EAAE,GAChB;AAAA,QACJ,KAAA/J;AAAA,QACA,QAAAsc;AAAA,MACR,IAAUxS,EAAM,SAAQ,EAAG,YACfyS,IAAQV,EAAO,KAAK,OAAK7b,KAAO,OAAO,SAASA,EAAI,SAAS,CAAC,CAAC,GAC/Dwc,IAAWX,EAAO,KAAK,OAAKS,KAAU,OAAO,SAASA,EAAO,SAAS,CAAC,CAAC;AAC9E,aAAOC,IAAQ,QAAQC,IAAW,WAAW;AAAA,IAC9C,GACDzS,EAAI,iBAAiB,MAAM;AACzB,UAAI0S,GAAOC;AACX,YAAMhrB,IAAWqY,EAAI,YAAa;AAClC,UAAI,CAACrY,EAAU,QAAO;AACtB,YAAMirB,KAAuBF,IAAQ/qB,MAAa,QAAQoY,EAAM,WAAU,IAAKA,EAAM,cAAe,MAAK,OAAO,SAAS2S,EAAM,IAAI,CAAAG,MAAS;AAC1I,YAAI;AAAA,UACF,IAAAhzB;AAAA,QACV,IAAYgzB;AACJ,eAAOhzB;AAAA,MACf,CAAO;AACD,cAAQ8yB,IAAwBC,KAAuB,OAAO,SAASA,EAAoB,QAAQ5S,EAAI,EAAE,MAAM,OAAO2S,IAAwB;AAAA,IAC/I;AAAA,EACF;AAAA,EACD,aAAa,CAAA5S,MAAS;AACpB,IAAAA,EAAM,gBAAgB,CAAA9B,MAAW8B,EAAM,QAAQ,sBAAsB,OAAO,SAASA,EAAM,QAAQ,mBAAmB9B,CAAO,GAC7H8B,EAAM,kBAAkB,CAAAkI,MAAgB;AACtC,UAAI6K,GAAuB3K;AAC3B,aAAOpI,EAAM,cAAckI,IAAeuJ,GAAyB,KAAMsB,KAAyB3K,IAAsBpI,EAAM,iBAAiB,OAAO,SAASoI,EAAoB,eAAe,OAAO2K,IAAwBtB,IAA2B;AAAA,IAC7P,GACDzR,EAAM,sBAAsB,CAAApY,MAAY;AACtC,UAAI6jB;AACJ,YAAMC,IAAe1L,EAAM,SAAQ,EAAG;AACtC,UAAI,CAACpY,GAAU;AACb,YAAIorB,GAAmBC;AACvB,eAAO,IAAUD,IAAoBtH,EAAa,QAAQ,QAAgBsH,EAAkB,WAAaC,IAAuBvH,EAAa,WAAW,QAAgBuH,EAAqB;AAAA,MACrM;AACM,aAAO,IAASxH,IAAwBC,EAAa9jB,CAAQ,MAAM,QAAgB6jB,EAAsB;AAAA,IAC1G,GACDzL,EAAM,iBAAiB,CAACkT,GAAaC,GAAcvrB,MAAa;AAC9D,UAAIwrB;AAUJ,eATeA,IAAwBpT,EAAM,QAAQ,mBAAmB,QAAOoT;AAAA;AAAA;AAAA,SAG9ED,KAAgB,OAAOA,IAAe,CAAA,GAAI,IAAI,CAAAlD,MAAS;AACtD,gBAAMhQ,IAAMD,EAAM,OAAOiQ,GAAO,EAAI;AACpC,iBAAOhQ,EAAI,4BAA4BA,IAAM;AAAA,QACrD,CAAO;AAAA;AAAA;AAAA,SAEAkT,KAAgB,OAAOA,IAAe,CAAA,GAAI,IAAI,CAAAlD,MAASiD,EAAY,KAAK,CAAAjT,MAAOA,EAAI,OAAOgQ,CAAK,CAAC;AAAA,SACrF,OAAO,OAAO,EAAE,IAAI,CAAA72C,MAAMW,EAAAC,EAAA,IACjCZ,IADiC;AAAA,QAEpC,UAAAwuB;AAAA,MACR,EAAQ;AAAA,IACH,GACDoY,EAAM,aAAanB,EAAK,MAAM,CAACmB,EAAM,cAAc,MAAMA,EAAM,WAAW,WAAW,GAAG,GAAG,CAACqT,GAASC,MAAoBtT,EAAM,eAAeqT,GAASC,GAAiB,KAAK,GAAG5T,EAAeM,EAAM,SAAS,aAAa,YAAY,CAAC,GACxOA,EAAM,gBAAgBnB,EAAK,MAAM,CAACmB,EAAM,cAAc,MAAMA,EAAM,WAAW,WAAW,MAAM,GAAG,CAACqT,GAASE,MAAuBvT,EAAM,eAAeqT,GAASE,GAAoB,QAAQ,GAAG7T,EAAeM,EAAM,SAAS,aAAa,eAAe,CAAC,GAC1PA,EAAM,gBAAgBnB,EAAK,MAAM,CAACmB,EAAM,cAAc,MAAMA,EAAM,SAAU,EAAC,WAAW,KAAKA,EAAM,SAAQ,EAAG,WAAW,MAAM,GAAG,CAACqT,GAASnd,GAAKsc,MAAW;AAC1J,YAAMgB,IAAe,oBAAI,IAAI,CAAC,GAAItd,KAAO,OAAOA,IAAM,CAAA,GAAK,GAAIsc,KAAU,OAAOA,IAAS,CAAA,CAAG,CAAC;AAC7F,aAAOa,EAAQ,OAAO,CAAAj6C,MAAK,CAACo6C,EAAa,IAAIp6C,EAAE,EAAE,CAAC;AAAA,IACnD,GAAEsmC,EAAeM,EAAM,SAAS,aAAa,eAAe,CAAC;AAAA,EAClE;AACA,GAIMyT,KAAe;AAAA,EACnB,iBAAiB,CAAA/1B,MACR1jB,EAAA;AAAA,IACL,cAAc,CAAE;AAAA,KACb0jB;AAAA,EAGP,mBAAmB,CAAAsiB,OACV;AAAA,IACL,sBAAsB7B,GAAiB,gBAAgB6B,CAAK;AAAA,IAC5D,oBAAoB;AAAA,IACpB,yBAAyB;AAAA,IACzB,uBAAuB;AAAA;AAAA;AAAA;AAAA,EAIxB;AAAA,EAEH,aAAa,CAAAA,MAAS;AACpB,IAAAA,EAAM,kBAAkB,CAAA9B,MAAW8B,EAAM,QAAQ,wBAAwB,OAAO,SAASA,EAAM,QAAQ,qBAAqB9B,CAAO,GACnI8B,EAAM,oBAAoB,CAAAkI,MAAgB;AACxC,UAAI6K;AACJ,aAAO/S,EAAM,gBAAgBkI,IAAe,CAAE,KAAI6K,IAAwB/S,EAAM,aAAa,iBAAiB,OAAO+S,IAAwB,CAAA,CAAE;AAAA,IAChJ,GACD/S,EAAM,wBAAwB,CAAAnkC,MAAS;AACrC,MAAAmkC,EAAM,gBAAgB,CAAA5B,MAAO;AAC3B,QAAAviC,IAAQ,OAAOA,KAAU,cAAcA,IAAQ,CAACmkC,EAAM,qBAAsB;AAC5E,cAAM0T,IAAe15C,EAAA,IAChBokC,IAECuV,IAAqB3T,EAAM,sBAAqB,EAAG;AAIzD,eAAInkC,IACF83C,EAAmB,QAAQ,CAAA1T,MAAO;AAChC,UAAKA,EAAI,mBAGTyT,EAAazT,EAAI,EAAE,IAAI;AAAA,QACnC,CAAW,IAED0T,EAAmB,QAAQ,CAAA1T,MAAO;AAChC,iBAAOyT,EAAazT,EAAI,EAAE;AAAA,QACtC,CAAW,GAEIyT;AAAA,MACf,CAAO;AAAA,IACF,GACD1T,EAAM,4BAA4B,CAAAnkC,MAASmkC,EAAM,gBAAgB,CAAA5B,MAAO;AACtE,YAAMwV,IAAgB,OAAO/3C,KAAU,cAAcA,IAAQ,CAACmkC,EAAM,yBAA0B,GACxF0T,IAAe15C,EAAA,IAChBokC;AAEL,aAAA4B,EAAM,YAAa,EAAC,KAAK,QAAQ,CAAAC,MAAO;AACtC,QAAA4T,GAAoBH,GAAczT,EAAI,IAAI2T,GAAe,IAAM5T,CAAK;AAAA,MAC5E,CAAO,GACM0T;AAAA,IACb,CAAK,GA4DD1T,EAAM,yBAAyB,MAAMA,EAAM,gBAAiB,GAC5DA,EAAM,sBAAsBnB,EAAK,MAAM,CAACmB,EAAM,SAAQ,EAAG,cAAcA,EAAM,gBAAe,CAAE,GAAG,CAAC0T,GAAcI,MACzG,OAAO,KAAKJ,CAAY,EAAE,SAOxBK,GAAa/T,GAAO8T,CAAQ,IAN1B;AAAA,MACL,MAAM,CAAE;AAAA,MACR,UAAU,CAAE;AAAA,MACZ,UAAU,CAAA;AAAA,IACX,GAGFpU,EAAeM,EAAM,SAAS,cAAc,qBAAqB,CAAC,GACrEA,EAAM,8BAA8BnB,EAAK,MAAM,CAACmB,EAAM,SAAQ,EAAG,cAAcA,EAAM,oBAAmB,CAAE,GAAG,CAAC0T,GAAcI,MACrH,OAAO,KAAKJ,CAAY,EAAE,SAOxBK,GAAa/T,GAAO8T,CAAQ,IAN1B;AAAA,MACL,MAAM,CAAE;AAAA,MACR,UAAU,CAAE;AAAA,MACZ,UAAU,CAAA;AAAA,IACX,GAGFpU,EAAeM,EAAM,SAAS,cAAc,6BAA6B,CAAC,GAC7EA,EAAM,6BAA6BnB,EAAK,MAAM,CAACmB,EAAM,SAAQ,EAAG,cAAcA,EAAM,kBAAiB,CAAE,GAAG,CAAC0T,GAAcI,MAClH,OAAO,KAAKJ,CAAY,EAAE,SAOxBK,GAAa/T,GAAO8T,CAAQ,IAN1B;AAAA,MACL,MAAM,CAAE;AAAA,MACR,UAAU,CAAE;AAAA,MACZ,UAAU,CAAA;AAAA,IACX,GAGFpU,EAAeM,EAAM,SAAS,cAAc,4BAA4B,CAAC,GAkB5EA,EAAM,uBAAuB,MAAM;AACjC,YAAM2T,IAAqB3T,EAAM,oBAAmB,EAAG,UACjD;AAAA,QACJ,cAAA0T;AAAA,MACR,IAAU1T,EAAM,SAAU;AACpB,UAAIgU,IAAoB,GAAQL,EAAmB,UAAU,OAAO,KAAKD,CAAY,EAAE;AACvF,aAAIM,KACEL,EAAmB,KAAK,CAAA1T,MAAOA,EAAI,kBAAkB,CAACyT,EAAazT,EAAI,EAAE,CAAC,MAC5E+T,IAAoB,KAGjBA;AAAA,IACR,GACDhU,EAAM,2BAA2B,MAAM;AACrC,YAAMiU,IAAqBjU,EAAM,wBAAwB,SAAS,OAAO,CAAAC,MAAOA,EAAI,cAAc,GAC5F;AAAA,QACJ,cAAAyT;AAAA,MACR,IAAU1T,EAAM,SAAU;AACpB,UAAIkU,IAAwB,CAAC,CAACD,EAAmB;AACjD,aAAIC,KAAyBD,EAAmB,KAAK,CAAAhU,MAAO,CAACyT,EAAazT,EAAI,EAAE,CAAC,MAC/EiU,IAAwB,KAEnBA;AAAA,IACR,GACDlU,EAAM,wBAAwB,MAAM;AAClC,UAAImU;AACJ,YAAMC,IAAgB,OAAO,MAAMD,IAAwBnU,EAAM,SAAU,EAAC,iBAAiB,OAAOmU,IAAwB,CAAA,CAAE,EAAE;AAChI,aAAOC,IAAgB,KAAKA,IAAgBpU,EAAM,oBAAmB,EAAG,SAAS;AAAA,IAClF,GACDA,EAAM,4BAA4B,MAAM;AACtC,YAAMiU,IAAqBjU,EAAM,sBAAqB,EAAG;AACzD,aAAOA,EAAM,6BAA6B,KAAQiU,EAAmB,OAAO,CAAAhU,MAAOA,EAAI,aAAY,CAAE,EAAE,KAAK,CAAA7mC,MAAKA,EAAE,mBAAmBA,EAAE,mBAAmB;AAAA,IAC5J,GACD4mC,EAAM,kCAAkC,MAC/B,OAAK;AACV,MAAAA,EAAM,sBAAsB,EAAE,OAAO,OAAO;AAAA,IAC7C,GAEHA,EAAM,sCAAsC,MACnC,OAAK;AACV,MAAAA,EAAM,0BAA0B,EAAE,OAAO,OAAO;AAAA,IACjD;AAAA,EAEJ;AAAA,EACD,WAAW,CAACC,GAAKD,MAAU;AACzB,IAAAC,EAAI,iBAAiB,CAACpkC,GAAOkS,MAAS;AACpC,YAAMsmC,IAAapU,EAAI,cAAe;AACtC,MAAAD,EAAM,gBAAgB,CAAA5B,MAAO;AAC3B,YAAIkW;AAEJ,YADAz4C,IAAQ,OAAOA,KAAU,cAAcA,IAAQ,CAACw4C,GAC5CpU,EAAI,kBAAkBoU,MAAex4C;AACvC,iBAAOuiC;AAET,cAAMmW,IAAiBv6C,EAAA,IAClBokC;AAEL,eAAAyV,GAAoBU,GAAgBtU,EAAI,IAAIpkC,IAAQy4C,IAAuBvmC,KAAQ,OAAO,SAASA,EAAK,mBAAmB,OAAOumC,IAAuB,IAAMtU,CAAK,GAC7JuU;AAAA,MACf,CAAO;AAAA,IACF,GACDtU,EAAI,gBAAgB,MAAM;AACxB,YAAM;AAAA,QACJ,cAAAyT;AAAA,MACR,IAAU1T,EAAM,SAAU;AACpB,aAAOwU,GAAcvU,GAAKyT,CAAY;AAAA,IACvC,GACDzT,EAAI,oBAAoB,MAAM;AAC5B,YAAM;AAAA,QACJ,cAAAyT;AAAA,MACR,IAAU1T,EAAM,SAAU;AACpB,aAAOyU,GAAiBxU,GAAKyT,CAAY,MAAM;AAAA,IAChD,GACDzT,EAAI,0BAA0B,MAAM;AAClC,YAAM;AAAA,QACJ,cAAAyT;AAAA,MACR,IAAU1T,EAAM,SAAU;AACpB,aAAOyU,GAAiBxU,GAAKyT,CAAY,MAAM;AAAA,IAChD,GACDzT,EAAI,eAAe,MAAM;AACvB,UAAIiH;AACJ,aAAI,OAAOlH,EAAM,QAAQ,sBAAuB,aACvCA,EAAM,QAAQ,mBAAmBC,CAAG,KAErCiH,IAAwBlH,EAAM,QAAQ,uBAAuB,OAAOkH,IAAwB;AAAA,IACrG,GACDjH,EAAI,sBAAsB,MAAM;AAC9B,UAAIkH;AACJ,aAAI,OAAOnH,EAAM,QAAQ,yBAA0B,aAC1CA,EAAM,QAAQ,sBAAsBC,CAAG,KAExCkH,IAAyBnH,EAAM,QAAQ,0BAA0B,OAAOmH,IAAyB;AAAA,IAC1G,GACDlH,EAAI,oBAAoB,MAAM;AAC5B,UAAIyU;AACJ,aAAI,OAAO1U,EAAM,QAAQ,2BAA4B,aAC5CA,EAAM,QAAQ,wBAAwBC,CAAG,KAE1CyU,IAAyB1U,EAAM,QAAQ,4BAA4B,OAAO0U,IAAyB;AAAA,IAC5G,GACDzU,EAAI,2BAA2B,MAAM;AACnC,YAAM0U,IAAY1U,EAAI,aAAc;AACpC,aAAO,CAAAznC,MAAK;AACV,YAAIy2C;AACJ,QAAK0F,KACL1U,EAAI,gBAAgBgP,IAAUz2C,EAAE,WAAW,OAAO,SAASy2C,EAAQ,OAAO;AAAA,MAC3E;AAAA,IACF;AAAA,EACL;AACA,GACM4E,KAAsB,CAACU,GAAgBz0B,GAAIjkB,GAAO+4C,GAAiB5U,MAAU;AACjF,MAAI4J;AACJ,QAAM3J,IAAMD,EAAM,OAAOlgB,GAAI,EAAI;AAQjC,EAAIjkB,KACGokC,EAAI,uBACP,OAAO,KAAKsU,CAAc,EAAE,QAAQ,CAAAn3C,MAAO,OAAOm3C,EAAen3C,CAAG,CAAC,GAEnE6iC,EAAI,mBACNsU,EAAez0B,CAAE,IAAI,OAGvB,OAAOy0B,EAAez0B,CAAE,GAItB80B,MAAoBhL,IAAe3J,EAAI,YAAY,QAAQ2J,EAAa,UAAU3J,EAAI,yBACxFA,EAAI,QAAQ,QAAQ,CAAAA,MAAO4T,GAAoBU,GAAgBtU,EAAI,IAAIpkC,GAAO+4C,GAAiB5U,CAAK,CAAC;AAEzG;AACA,SAAS+T,GAAa/T,GAAO8T,GAAU;AACrC,QAAMJ,IAAe1T,EAAM,SAAQ,EAAG,cAChC6U,IAAsB,CAAE,GACxBC,IAAsB,CAAE,GAGxBC,IAAc,SAAUC,GAAMvU,GAAO;AACzC,WAAOuU,EAAK,IAAI,CAAA/U,MAAO;AACrB,UAAIgV;AACJ,YAAMZ,IAAaG,GAAcvU,GAAKyT,CAAY;AAWlD,UAVIW,MACFQ,EAAoB,KAAK5U,CAAG,GAC5B6U,EAAoB7U,EAAI,EAAE,IAAIA,KAE3BgV,IAAgBhV,EAAI,YAAY,QAAQgV,EAAc,WACzDhV,IAAMlmC,EAAAC,EAAA,IACDimC,IADC;AAAA,QAEJ,SAAS8U,EAAY9U,EAAI,OAAO;AAAA,MACjC,KAECoU;AACF,eAAOpU;AAAA,IAEf,CAAK,EAAE,OAAO,OAAO;AAAA,EAClB;AACD,SAAO;AAAA,IACL,MAAM8U,EAAYjB,EAAS,IAAI;AAAA,IAC/B,UAAUe;AAAA,IACV,UAAUC;AAAA,EACX;AACH;AACA,SAASN,GAAcvU,GAAKiV,GAAW;AACrC,MAAIC;AACJ,UAAQA,IAAoBD,EAAUjV,EAAI,EAAE,MAAM,OAAOkV,IAAoB;AAC/E;AACA,SAASV,GAAiBxU,GAAKiV,GAAWlV,GAAO;AAC/C,MAAIoV;AACJ,MAAI,GAAGA,IAAgBnV,EAAI,YAAY,QAAQmV,EAAc,QAAS,QAAO;AAC7E,MAAIC,IAAsB,IACtBC,IAAe;AACnB,SAAArV,EAAI,QAAQ,QAAQ,CAAAsV,MAAU;AAE5B,QAAI,EAAAD,KAAgB,CAACD,OAGjBE,EAAO,mBACLf,GAAce,GAAQL,CAAS,IACjCI,IAAe,KAEfD,IAAsB,KAKtBE,EAAO,WAAWA,EAAO,QAAQ,SAAQ;AAC3C,YAAMC,IAAyBf,GAAiBc,GAAQL,CAAS;AACjE,MAAIM,MAA2B,QAC7BF,IAAe,MACNE,MAA2B,WACpCF,IAAe,KACfD,IAAsB;AAAA,IAI9B;AAAA,EACA,CAAG,GACMA,IAAsB,QAAQC,IAAe,SAAS;AAC/D;AAEA,MAAMG,KAAsB,cACtBC,KAAe,CAACC,GAAMC,GAAMzV,MACzB0V,GAAoBh9B,GAAS88B,EAAK,SAASxV,CAAQ,CAAC,EAAE,YAAa,GAAEtnB,GAAS+8B,EAAK,SAASzV,CAAQ,CAAC,EAAE,YAAW,CAAE,GAEvH2V,KAA4B,CAACH,GAAMC,GAAMzV,MACtC0V,GAAoBh9B,GAAS88B,EAAK,SAASxV,CAAQ,CAAC,GAAGtnB,GAAS+8B,EAAK,SAASzV,CAAQ,CAAC,CAAC,GAK3FzZ,KAAO,CAACivB,GAAMC,GAAMzV,MACjB4V,GAAal9B,GAAS88B,EAAK,SAASxV,CAAQ,CAAC,EAAE,YAAa,GAAEtnB,GAAS+8B,EAAK,SAASzV,CAAQ,CAAC,EAAE,YAAW,CAAE,GAKhH6V,KAAoB,CAACL,GAAMC,GAAMzV,MAC9B4V,GAAal9B,GAAS88B,EAAK,SAASxV,CAAQ,CAAC,GAAGtnB,GAAS+8B,EAAK,SAASzV,CAAQ,CAAC,CAAC,GAEpF8V,KAAW,CAACN,GAAMC,GAAMzV,MAAa;AACzC,QAAMlnC,IAAI08C,EAAK,SAASxV,CAAQ,GAC1B5mC,IAAIq8C,EAAK,SAASzV,CAAQ;AAKhC,SAAOlnC,IAAIM,IAAI,IAAIN,IAAIM,IAAI,KAAK;AAClC,GACM28C,KAAQ,CAACP,GAAMC,GAAMzV,MAClB4V,GAAaJ,EAAK,SAASxV,CAAQ,GAAGyV,EAAK,SAASzV,CAAQ,CAAC;AAKtE,SAAS4V,GAAa98C,GAAGM,GAAG;AAC1B,SAAON,MAAMM,IAAI,IAAIN,IAAIM,IAAI,IAAI;AACnC;AACA,SAASsf,GAAS5f,GAAG;AACnB,SAAI,OAAOA,KAAM,WACX,MAAMA,CAAC,KAAKA,MAAM,SAAYA,MAAM,SAC/B,KAEF,OAAOA,CAAC,IAEb,OAAOA,KAAM,WACRA,IAEF;AACT;AAKA,SAAS48C,GAAoBM,GAAMC,GAAM;AAGvC,QAAMn9C,IAAIk9C,EAAK,MAAMV,EAAmB,EAAE,OAAO,OAAO,GAClDl8C,IAAI68C,EAAK,MAAMX,EAAmB,EAAE,OAAO,OAAO;AAGxD,SAAOx8C,EAAE,UAAUM,EAAE,UAAQ;AAC3B,UAAM88C,IAAKp9C,EAAE,MAAO,GACdq9C,IAAK/8C,EAAE,MAAO,GACdg9C,IAAK,SAASF,GAAI,EAAE,GACpBG,IAAK,SAASF,GAAI,EAAE,GACpBG,IAAQ,CAACF,GAAIC,CAAE,EAAE,KAAM;AAG7B,QAAI,MAAMC,EAAM,CAAC,CAAC,GAAG;AACnB,UAAIJ,IAAKC;AACP,eAAO;AAET,UAAIA,IAAKD;AACP,eAAO;AAET;AAAA,IACN;AAGI,QAAI,MAAMI,EAAM,CAAC,CAAC;AAChB,aAAO,MAAMF,CAAE,IAAI,KAAK;AAI1B,QAAIA,IAAKC;AACP,aAAO;AAET,QAAIA,IAAKD;AACP,aAAO;AAAA,EAEb;AACE,SAAOt9C,EAAE,SAASM,EAAE;AACtB;AAIA,MAAMm9C,KAAa;AAAA,EACjB,cAAAhB;AAAA,EACA,2BAAAI;AAAA,EACA,MAAApvB;AAAA,EACA,mBAAAsvB;AAAA,EACA,UAAAC;AAAA,EACA,OAAAC;AACF,GAIMS,KAAa;AAAA,EACjB,iBAAiB,CAAAj5B,MACR1jB,EAAA;AAAA,IACL,SAAS,CAAE;AAAA,KACR0jB;AAAA,EAGP,qBAAqB,OACZ;AAAA,IACL,WAAW;AAAA,IACX,eAAe;AAAA,EAChB;AAAA,EAEH,mBAAmB,CAAAsiB,OACV;AAAA,IACL,iBAAiB7B,GAAiB,WAAW6B,CAAK;AAAA,IAClD,kBAAkB,OACT,EAAE;AAAA,EAEZ;AAAA,EAEH,cAAc,CAACE,GAAQF,MAAU;AAC/B,IAAAE,EAAO,mBAAmB,MAAM;AAC9B,YAAM0W,IAAY5W,EAAM,oBAAqB,EAAC,SAAS,MAAM,EAAE;AAC/D,UAAIzjC,IAAW;AACf,iBAAW0jC,KAAO2W,GAAW;AAC3B,cAAM/6C,IAAQokC,KAAO,OAAO,SAASA,EAAI,SAASC,EAAO,EAAE;AAC3D,YAAI,OAAO,UAAU,SAAS,KAAKrkC,CAAK,MAAM;AAC5C,iBAAO66C,GAAW;AAEpB,YAAI,OAAO76C,KAAU,aACnBU,IAAW,IACPV,EAAM,MAAM45C,EAAmB,EAAE,SAAS;AAC5C,iBAAOiB,GAAW;AAAA,MAG9B;AACM,aAAIn6C,IACKm6C,GAAW,OAEbA,GAAW;AAAA,IACnB,GACDxW,EAAO,iBAAiB,MAAM;AAC5B,YAAM4G,IAAW9G,EAAM,oBAAmB,EAAG,SAAS,CAAC;AAEvD,aAAI,QADU8G,KAAY,OAAO,SAASA,EAAS,SAAS5G,EAAO,EAAE,MAChD,WACZ,QAEF;AAAA,IACR,GACDA,EAAO,eAAe,MAAM;AAC1B,UAAI2W,GAAuBC;AAC3B,UAAI,CAAC5W;AACH,cAAM,IAAI,MAAO;AAEnB,aAAO7B,GAAW6B,EAAO,UAAU,SAAS,IAAIA,EAAO,UAAU,YAAYA,EAAO,UAAU,cAAc,SAASA,EAAO,iBAAkB,KAAI2W,KAAyBC,IAAyB9W,EAAM,QAAQ,eAAe,OAAO,SAAS8W,EAAuB5W,EAAO,UAAU,SAAS,MAAM,OAAO2W,IAAwBH,GAAWxW,EAAO,UAAU,SAAS;AAAA,IAC7W,GACDA,EAAO,gBAAgB,CAAC6W,GAAMC,MAAU;AAWtC,YAAMC,IAAmB/W,EAAO,oBAAqB,GAC/CgX,IAAiB,OAAOH,KAAS,eAAeA,MAAS;AAC/D,MAAA/W,EAAM,WAAW,CAAA5B,MAAO;AAEtB,cAAM+Y,IAAkB/Y,KAAO,OAAO,SAASA,EAAI,KAAK,CAAAhlC,MAAKA,EAAE,OAAO8mC,EAAO,EAAE,GACzEkX,IAAgBhZ,KAAO,OAAO,SAASA,EAAI,UAAU,CAAAhlC,MAAKA,EAAE,OAAO8mC,EAAO,EAAE;AAClF,YAAImX,IAAa,CAAE,GAGfC,GACAC,IAAWL,IAAiBH,IAAOE,MAAqB;AA8B5D,YA3BI7Y,KAAO,QAAQA,EAAI,UAAU8B,EAAO,gBAAiB,KAAI8W,IACvDG,IACFG,IAAa,WAEbA,IAAa,QAIXlZ,KAAO,QAAQA,EAAI,UAAUgZ,MAAkBhZ,EAAI,SAAS,IAC9DkZ,IAAa,YACJH,IACTG,IAAa,WAEbA,IAAa,WAKbA,MAAe,aAEZJ,KAEED,MACHK,IAAa,YAIfA,MAAe,OAAO;AACxB,cAAIE;AACJ,UAAAH,IAAa,CAAC,GAAGjZ,GAAK;AAAA,YACpB,IAAI8B,EAAO;AAAA,YACX,MAAMqX;AAAA,UAClB,CAAW,GAEDF,EAAW,OAAO,GAAGA,EAAW,WAAWG,IAAwBxX,EAAM,QAAQ,yBAAyB,OAAOwX,IAAwB,OAAO,iBAAiB;AAAA,QAC3K,MAAe,CAAIF,MAAe,WAExBD,IAAajZ,EAAI,IAAI,CAAAhlC,MACfA,EAAE,OAAO8mC,EAAO,KACXnmC,EAAAC,EAAA,IACFZ,IADE;AAAA,UAEL,MAAMm+C;AAAA,QACP,KAEIn+C,CACR,IACQk+C,MAAe,WACxBD,IAAajZ,EAAI,OAAO,CAAAhlC,MAAKA,EAAE,OAAO8mC,EAAO,EAAE,IAE/CmX,IAAa,CAAC;AAAA,UACZ,IAAInX,EAAO;AAAA,UACX,MAAMqX;AAAA,QAClB,CAAW;AAEH,eAAOF;AAAA,MACf,CAAO;AAAA,IACF,GACDnX,EAAO,kBAAkB,MAAM;AAC7B,UAAI3+B,GAAMk2C;AAEV,eADuBl2C,KAAQk2C,IAAwBvX,EAAO,UAAU,kBAAkB,OAAOuX,IAAwBzX,EAAM,QAAQ,kBAAkB,OAAOz+B,IAAO2+B,EAAO,eAAc,MAAO,UAC5K,SAAS;AAAA,IACjC,GACDA,EAAO,sBAAsB,CAAA8W,MAAS;AACpC,UAAI9P,GAAuBC;AAC3B,YAAMuQ,IAAqBxX,EAAO,gBAAiB,GAC7CyX,IAAWzX,EAAO,YAAa;AACrC,aAAKyX,IAGDA,MAAaD,OAAwBxQ,IAAwBlH,EAAM,QAAQ,yBAAyB,QAAOkH;AAAA,OAE/G,EAAA8P,MAAS7P,IAAyBnH,EAAM,QAAQ,sBAAsB,SAAOmH,KAEpE,KAEFwQ,MAAa,SAAS,QAAQ,SAR5BD;AAAA,IASV,GACDxX,EAAO,aAAa,MAAM;AACxB,UAAI+G,GAAuByN;AAC3B,eAASzN,IAAwB/G,EAAO,UAAU,kBAAkB,OAAO+G,IAAwB,SAAWyN,IAAyB1U,EAAM,QAAQ,kBAAkB,OAAO0U,IAAyB,OAAS,CAAC,CAACxU,EAAO;AAAA,IAC1N,GACDA,EAAO,kBAAkB,MAAM;AAC7B,UAAIx+B,GAAOk2C;AACX,cAAQl2C,KAASk2C,IAAyB1X,EAAO,UAAU,oBAAoB,OAAO0X,IAAyB5X,EAAM,QAAQ,oBAAoB,OAAOt+B,IAAQ,CAAC,CAACw+B,EAAO;AAAA,IAC1K,GACDA,EAAO,cAAc,MAAM;AACzB,UAAI2X;AACJ,YAAMC,KAAcD,IAAwB7X,EAAM,SAAQ,EAAG,YAAY,OAAO,SAAS6X,EAAsB,KAAK,CAAAz+C,MAAKA,EAAE,OAAO8mC,EAAO,EAAE;AAC3I,aAAQ4X,IAAqBA,EAAW,OAAO,SAAS,QAAnC;AAAA,IACtB,GACD5X,EAAO,eAAe,MAAM;AAC1B,UAAI6X,GAAwBC;AAC5B,cAAQD,KAA0BC,IAAyBhY,EAAM,WAAW,YAAY,OAAO,SAASgY,EAAuB,UAAU,CAAA5+C,MAAKA,EAAE,OAAO8mC,EAAO,EAAE,MAAM,OAAO6X,IAAyB;AAAA,IACvM,GACD7X,EAAO,eAAe,MAAM;AAE1B,MAAAF,EAAM,WAAW,CAAA5B,MAAOA,KAAO,QAAQA,EAAI,SAASA,EAAI,OAAO,CAAAhlC,MAAKA,EAAE,OAAO8mC,EAAO,EAAE,IAAI,EAAE;AAAA,IAC7F,GACDA,EAAO,0BAA0B,MAAM;AACrC,YAAM+X,IAAU/X,EAAO,WAAY;AACnC,aAAO,CAAA1nC,MAAK;AACV,QAAKy/C,MACLz/C,EAAE,WAAW,QAAQA,EAAE,QAAS,GAChC0nC,EAAO,iBAAiB,QAAQA,EAAO,cAAc,QAAWA,EAAO,oBAAoBF,EAAM,QAAQ,oBAAoB,OAAO,SAASA,EAAM,QAAQ,iBAAiBxnC,CAAC,IAAI,EAAK;AAAA,MACvL;AAAA,IACF;AAAA,EACF;AAAA,EACD,aAAa,CAAAwnC,MAAS;AACpB,IAAAA,EAAM,aAAa,CAAA9B,MAAW8B,EAAM,QAAQ,mBAAmB,OAAO,SAASA,EAAM,QAAQ,gBAAgB9B,CAAO,GACpH8B,EAAM,eAAe,CAAAkI,MAAgB;AACnC,UAAIgQ,GAAuB9P;AAC3B,MAAApI,EAAM,WAAWkI,IAAe,CAAE,KAAIgQ,KAAyB9P,IAAsBpI,EAAM,iBAAiB,OAAO,SAASoI,EAAoB,YAAY,OAAO8P,IAAwB,EAAE;AAAA,IAC9L,GACDlY,EAAM,uBAAuB,MAAMA,EAAM,mBAAoB,GAC7DA,EAAM,oBAAoB,OACpB,CAACA,EAAM,sBAAsBA,EAAM,QAAQ,sBAC7CA,EAAM,qBAAqBA,EAAM,QAAQ,kBAAkBA,CAAK,IAE9DA,EAAM,QAAQ,iBAAiB,CAACA,EAAM,qBACjCA,EAAM,qBAAsB,IAE9BA,EAAM,mBAAoB;AAAA,EAEvC;AACA,GAEMmY,KAAkB;AAAA,EAACvW;AAAA,EAAS+M;AAAA,EAAkB1E;AAAA,EAAgBW;AAAA,EAAevF;AAAA,EAAgBwB;AAAA,EAAiBqI;AAAA;AAAA,EAEpHC;AAAA;AAAA,EAEAwH;AAAA,EAAYxN;AAAA;AAAA,EAEZoG;AAAA,EAAckB;AAAA,EAAeiB;AAAA,EAAY+B;AAAA,EAAcxH;AAAY;AAInE,SAASmM,GAAYt8C,GAAS;AAC5B,MAAIu8C,GAAoBC;AACxB,EAAI,QAAQ,IAAI,aAAa,iBAAiBx8C,EAAQ,YAAYA,EAAQ,eACxE,QAAQ,KAAK,4BAA4B;AAE3C,QAAMy8C,IAAY,CAAC,GAAGJ,IAAiB,IAAKE,IAAqBv8C,EAAQ,cAAc,OAAOu8C,IAAqB,CAAE,CAAC;AACtH,MAAIrY,IAAQ;AAAA,IACV,WAAAuY;AAAA,EACD;AACD,QAAMC,IAAiBxY,EAAM,UAAU,OAAO,CAACxjC,GAAK8jC,MAC3C,OAAO,OAAO9jC,GAAK8jC,EAAQ,qBAAqB,OAAO,SAASA,EAAQ,kBAAkBN,CAAK,CAAC,GACtG,EAAE,GACCyY,IAAe,CAAA38C,MACfkkC,EAAM,QAAQ,eACTA,EAAM,QAAQ,aAAawY,GAAgB18C,CAAO,IAEpD9B,IAAA,IACFw+C,IACA18C;AAIP,MAAI48C,IAAe1+C,IAAA,IADM,CAAE,KAGpBs+C,IAAwBx8C,EAAQ,iBAAiB,OAAOw8C,IAAwB,CAAE;AAEzF,EAAAtY,EAAM,UAAU,QAAQ,CAAAM,MAAW;AACjC,QAAIqY;AACJ,IAAAD,KAAgBC,IAAwBrY,EAAQ,mBAAmB,OAAO,SAASA,EAAQ,gBAAgBoY,CAAY,MAAM,OAAOC,IAAwBD;AAAA,EAChK,CAAG;AACD,QAAMjJ,IAAS,CAAE;AACjB,MAAImJ,IAAgB;AACpB,QAAMC,IAAe;AAAA,IACnB,WAAAN;AAAA,IACA,SAASv+C,IAAA,IACJw+C,IACA18C;AAAA,IAEL,cAAA48C;AAAA,IACA,QAAQ,CAAAI,MAAM;AACZ,MAAArJ,EAAO,KAAKqJ,CAAE,GACTF,MACHA,IAAgB,IAIhB,QAAQ,UAAU,KAAK,MAAM;AAC3B,eAAOnJ,EAAO;AACZ,UAAAA,EAAO,MAAK,EAAI;AAElB,QAAAmJ,IAAgB;AAAA,MACjB,CAAA,EAAE,MAAM,CAAAnsC,MAAS,WAAW,MAAM;AACjC,cAAMA;AAAA,MAChB,CAAS,CAAC;AAAA,IAEL;AAAA,IACD,OAAO,MAAM;AACX,MAAAuzB,EAAM,SAASA,EAAM,YAAY;AAAA,IAClC;AAAA,IACD,YAAY,CAAA9B,MAAW;AACrB,YAAM6a,IAAa9a,GAAiBC,GAAS8B,EAAM,OAAO;AAC1D,MAAAA,EAAM,UAAUyY,EAAaM,CAAU;AAAA,IACxC;AAAA,IACD,UAAU,MACD/Y,EAAM,QAAQ;AAAA,IAEvB,UAAU,CAAA9B,MAAW;AACnB,MAAA8B,EAAM,QAAQ,iBAAiB,QAAQA,EAAM,QAAQ,cAAc9B,CAAO;AAAA,IAC3E;AAAA,IACD,WAAW,CAAC+B,GAAKp+B,GAAO6+B,MAAW;AACjC,UAAIyP;AACJ,cAAQA,IAAwBnQ,EAAM,QAAQ,YAAY,OAAO,SAASA,EAAM,QAAQ,SAASC,GAAKp+B,GAAO6+B,CAAM,MAAM,OAAOyP,IAAwB,GAAGzP,IAAS,CAACA,EAAO,IAAI7+B,CAAK,EAAE,KAAK,GAAG,IAAIA,CAAK;AAAA,IACzM;AAAA,IACD,iBAAiB,OACVm+B,EAAM,qBACTA,EAAM,mBAAmBA,EAAM,QAAQ,gBAAgBA,CAAK,IAEvDA,EAAM,iBAAkB;AAAA;AAAA;AAAA,IAKjC,aAAa,MACJA,EAAM,sBAAuB;AAAA;AAAA,IAGtC,QAAQ,CAAClgB,GAAIk5B,MAAc;AACzB,UAAI/Y,KAAO+Y,IAAYhZ,EAAM,6BAA6BA,EAAM,YAAW,GAAI,SAASlgB,CAAE;AAC1F,UAAI,CAACmgB,MACHA,IAAMD,EAAM,kBAAkB,SAASlgB,CAAE,GACrC,CAACmgB;AACH,cAAI,QAAQ,IAAI,aAAa,eACrB,IAAI,MAAM,sCAAsCngB,CAAE,EAAE,IAEtD,IAAI,MAAO;AAGrB,aAAOmgB;AAAA,IACR;AAAA,IACD,sBAAsBpB,EAAK,MAAM,CAACmB,EAAM,QAAQ,aAAa,GAAG,CAAAY,MAAiB;AAC/E,UAAIqY;AACJ,aAAArY,KAAiBqY,IAAiBrY,MAAkB,OAAOqY,IAAiB,CAAE,GACvEj/C,IAAA;AAAA,QACL,QAAQ,CAAA4mB,MAAS;AACf,gBAAMigB,IAAoBjgB,EAAM,OAAO,OAAO;AAC9C,iBAAIigB,EAAkB,cACbA,EAAkB,cAEvBA,EAAkB,aACbA,EAAkB,KAEpB;AAAA,QACR;AAAA;AAAA,QAED,MAAM,CAAAjgB,MAAS;AACb,cAAIs4B,GAAuBC;AAC3B,kBAAQD,KAAyBC,IAAqBv4B,EAAM,YAAa,MAAK,QAAQu4B,EAAmB,YAAY,OAAO,SAASA,EAAmB,SAAQ,MAAO,OAAOD,IAAwB;AAAA,QACvM;AAAA,SACElZ,EAAM,UAAU,OAAO,CAACxjC,GAAK8jC,MACvB,OAAO,OAAO9jC,GAAK8jC,EAAQ,uBAAuB,OAAO,SAASA,EAAQ,qBAAqB,GACrG,EAAE,IACFM;AAAA,IAEN,GAAElB,EAAe5jC,GAAS,gBAAgB,sBAAsB,CAAC;AAAA,IAClE,gBAAgB,MAAMkkC,EAAM,QAAQ;AAAA,IACpC,eAAenB,EAAK,MAAM,CAACmB,EAAM,eAAc,CAAE,GAAG,CAAAoZ,MAAc;AAChE,YAAMC,IAAiB,SAAUD,GAAY1Y,GAAQD,GAAO;AAC1D,eAAIA,MAAU,WACZA,IAAQ,IAEH2Y,EAAW,IAAI,CAAA5Y,MAAa;AACjC,gBAAMN,IAASK,GAAaP,GAAOQ,GAAWC,GAAOC,CAAM,GACrD4Y,IAAoB9Y;AAC1B,iBAAAN,EAAO,UAAUoZ,EAAkB,UAAUD,EAAeC,EAAkB,SAASpZ,GAAQO,IAAQ,CAAC,IAAI,CAAE,GACvGP;AAAA,QACjB,CAAS;AAAA,MACF;AACD,aAAOmZ,EAAeD,CAAU;AAAA,IACjC,GAAE1Z,EAAe5jC,GAAS,gBAAgB,eAAe,CAAC;AAAA,IAC3D,mBAAmB+iC,EAAK,MAAM,CAACmB,EAAM,cAAa,CAAE,GAAG,CAAA6B,MAC9CA,EAAW,QAAQ,CAAA3B,MACjBA,EAAO,eAAgB,CAC/B,GACAR,EAAe5jC,GAAS,gBAAgB,mBAAmB,CAAC;AAAA,IAC/D,wBAAwB+iC,EAAK,MAAM,CAACmB,EAAM,kBAAiB,CAAE,GAAG,CAAAuZ,MACvDA,EAAY,OAAO,CAACj4B,GAAK4e,OAC9B5e,EAAI4e,EAAO,EAAE,IAAIA,GACV5e,IACN,EAAE,GACJoe,EAAe5jC,GAAS,gBAAgB,uBAAuB,CAAC;AAAA,IACnE,mBAAmB+iC,EAAK,MAAM,CAACmB,EAAM,cAAa,GAAIA,EAAM,mBAAoB,CAAA,GAAG,CAAC6B,GAAYV,MAAiB;AAC/G,UAAIE,IAAcQ,EAAW,QAAQ,CAAA3B,MAAUA,EAAO,gBAAgB;AACtE,aAAOiB,EAAaE,CAAW;AAAA,IAChC,GAAE3B,EAAe5jC,GAAS,gBAAgB,mBAAmB,CAAC;AAAA,IAC/D,WAAW,CAAAqkC,MAAY;AACrB,YAAMD,IAASF,EAAM,uBAAsB,EAAGG,CAAQ;AACtD,aAAI,QAAQ,IAAI,aAAa,gBAAgB,CAACD,KAC5C,QAAQ,MAAM,2BAA2BC,CAAQ,mBAAmB,GAE/DD;AAAA,IACb;AAAA,EACG;AACD,SAAO,OAAOF,GAAO6Y,CAAY;AACjC,WAASh3C,IAAQ,GAAGA,IAAQm+B,EAAM,UAAU,QAAQn+B,KAAS;AAC3D,UAAMy+B,IAAUN,EAAM,UAAUn+B,CAAK;AACrC,IAAAy+B,KAAW,QAAQA,EAAQ,eAAe,QAAQA,EAAQ,YAAYN,CAAK;AAAA,EAC/E;AACE,SAAOA;AACT;AAEA,SAASwZ,KAAkB;AACzB,SAAO,CAAAxZ,MAASnB,EAAK,MAAM,CAACmB,EAAM,QAAQ,IAAI,GAAG,CAAA9hC,MAAQ;AACvD,UAAM41C,IAAW;AAAA,MACf,MAAM,CAAE;AAAA,MACR,UAAU,CAAE;AAAA,MACZ,UAAU,CAAA;AAAA,IACX,GACK2F,IAAa,SAAUC,GAAcjZ,GAAO0E,GAAW;AAC3D,MAAI1E,MAAU,WACZA,IAAQ;AAEV,YAAMuU,IAAO,CAAE;AACf,eAASn8C,IAAI,GAAGA,IAAI6gD,EAAa,QAAQ7gD,KAAK;AAS5C,cAAMonC,IAAM0E,GAAU3E,GAAOA,EAAM,UAAU0Z,EAAa7gD,CAAC,GAAGA,GAAGssC,CAAS,GAAGuU,EAAa7gD,CAAC,GAAGA,GAAG4nC,GAAO,QAAW0E,KAAa,OAAO,SAASA,EAAU,EAAE;AAU5J,YAPA2O,EAAS,SAAS,KAAK7T,CAAG,GAE1B6T,EAAS,SAAS7T,EAAI,EAAE,IAAIA,GAE5B+U,EAAK,KAAK/U,CAAG,GAGTD,EAAM,QAAQ,YAAY;AAC5B,cAAI2Z;AACJ,UAAA1Z,EAAI,kBAAkBD,EAAM,QAAQ,WAAW0Z,EAAa7gD,CAAC,GAAGA,CAAC,IAG5D8gD,IAAuB1Z,EAAI,oBAAoB,QAAQ0Z,EAAqB,WAC/E1Z,EAAI,UAAUwZ,EAAWxZ,EAAI,iBAAiBQ,IAAQ,GAAGR,CAAG;AAAA,QAExE;AAAA,MACA;AACM,aAAO+U;AAAA,IACR;AACD,WAAAlB,EAAS,OAAO2F,EAAWv7C,CAAI,GACxB41C;AAAA,EACX,GAAKpU,EAAeM,EAAM,SAAS,cAAc,eAAe,MAAMA,EAAM,oBAAmB,CAAE,CAAC;AAClG;AAcA,SAAS4Z,GAAW9F,GAAU;AAC5B,QAAM+F,IAAe,CAAE,GACjBC,IAAY,CAAA7Z,MAAO;AACvB,QAAI2J;AACJ,IAAAiQ,EAAa,KAAK5Z,CAAG,IAChB2J,IAAe3J,EAAI,YAAY,QAAQ2J,EAAa,UAAU3J,EAAI,mBACrEA,EAAI,QAAQ,QAAQ6Z,CAAS;AAAA,EAEhC;AACD,SAAAhG,EAAS,KAAK,QAAQgG,CAAS,GACxB;AAAA,IACL,MAAMD;AAAA,IACN,UAAU/F,EAAS;AAAA,IACnB,UAAUA,EAAS;AAAA,EACpB;AACH;AAyYA,SAASiG,GAAsBhsC,GAAM;AACnC,SAAO,CAAAiyB,MAASnB,EAAK,MAAM,CAACmB,EAAM,WAAW,YAAYA,EAAM,yBAA0B,GAAEA,EAAM,QAAQ,uBAAuB,SAAYA,EAAM,SAAU,EAAC,QAAQ,GAAG,CAACga,GAAYlG,MAAa;AAChM,QAAI,CAACA,EAAS,KAAK;AACjB,aAAOA;AAET,UAAM;AAAA,MACJ,UAAA7C;AAAA,MACA,WAAAL;AAAA,IACN,IAAQoJ;AACJ,QAAI;AAAA,MACF,MAAAhF;AAAA,MACA,UAAAiF;AAAA,MACA,UAAAC;AAAA,IACN,IAAQpG;AACJ,UAAMqG,IAAYlJ,IAAWL,GACvBwJ,IAAUD,IAAYlJ;AAC5B,IAAA+D,IAAOA,EAAK,MAAMmF,GAAWC,CAAO;AACpC,QAAIC;AACJ,IAAKra,EAAM,QAAQ,uBAOjBqa,IAAoB;AAAA,MAClB,MAAArF;AAAA,MACA,UAAAiF;AAAA,MACA,UAAAC;AAAA,IACD,IAVDG,IAAoBT,GAAW;AAAA,MAC7B,MAAA5E;AAAA,MACA,UAAAiF;AAAA,MACA,UAAAC;AAAA,IACR,CAAO,GAQHG,EAAkB,WAAW,CAAE;AAC/B,UAAMP,IAAY,CAAA7Z,MAAO;AACvB,MAAAoa,EAAkB,SAAS,KAAKpa,CAAG,GAC/BA,EAAI,QAAQ,UACdA,EAAI,QAAQ,QAAQ6Z,CAAS;AAAA,IAEhC;AACD,WAAAO,EAAkB,KAAK,QAAQP,CAAS,GACjCO;AAAA,EACR,GAAE3a,EAAeM,EAAM,SAAS,cAAc,uBAAuB,CAAC;AACzE;AAEA,SAASsa,KAAoB;AAC3B,SAAO,CAAAta,MAASnB,EAAK,MAAM,CAACmB,EAAM,SAAU,EAAC,SAASA,EAAM,qBAAsB,CAAA,GAAG,CAACua,GAASzG,MAAa;AAC1G,QAAI,CAACA,EAAS,KAAK,UAAU,EAAEyG,KAAW,QAAQA,EAAQ;AACxD,aAAOzG;AAET,UAAM0G,IAAexa,EAAM,SAAQ,EAAG,SAChCya,IAAiB,CAAE,GAGnBC,IAAmBF,EAAa,OAAO,CAAAG,MAAQ;AACnD,UAAIC;AACJ,cAAQA,IAAmB5a,EAAM,UAAU2a,EAAK,EAAE,MAAM,OAAO,SAASC,EAAiB,WAAY;AAAA,IAC3G,CAAK,GACKC,IAAiB,CAAE;AACzB,IAAAH,EAAiB,QAAQ,CAAAI,MAAa;AACpC,YAAM5a,IAASF,EAAM,UAAU8a,EAAU,EAAE;AAC3C,MAAK5a,MACL2a,EAAeC,EAAU,EAAE,IAAI;AAAA,QAC7B,eAAe5a,EAAO,UAAU;AAAA,QAChC,eAAeA,EAAO,UAAU;AAAA,QAChC,WAAWA,EAAO,aAAY;AAAA,MAC/B;AAAA,IACP,CAAK;AACD,UAAM6a,IAAW,CAAA/F,MAAQ;AAGvB,YAAMgG,IAAahG,EAAK,IAAI,CAAA/U,MAAQjmC,EAAA,IAC/BimC,EACH;AACF,aAAA+a,EAAW,KAAK,CAACrF,GAAMC,MAAS;AAC9B,iBAAS/8C,IAAI,GAAGA,IAAI6hD,EAAiB,QAAQ7hD,KAAK,GAAG;AACnD,cAAIoiD;AACJ,gBAAMH,IAAYJ,EAAiB7hD,CAAC,GAC9BqiD,IAAaL,EAAeC,EAAU,EAAE,GACxCK,IAAgBD,EAAW,eAC3BE,KAAUH,IAAkBH,KAAa,OAAO,SAASA,EAAU,SAAS,OAAOG,IAAkB;AAC3G,cAAII,IAAU;AAGd,cAAIF,GAAe;AACjB,kBAAMG,IAAS3F,EAAK,SAASmF,EAAU,EAAE,GACnCS,IAAS3F,EAAK,SAASkF,EAAU,EAAE,GACnCU,IAAaF,MAAW,QACxBG,IAAaF,MAAW;AAC9B,gBAAIC,KAAcC,GAAY;AAC5B,kBAAIN,MAAkB,QAAS,QAAOK,IAAa,KAAK;AACxD,kBAAIL,MAAkB,OAAQ,QAAOK,IAAa,IAAI;AACtD,cAAAH,IAAUG,KAAcC,IAAa,IAAID,IAAaL,IAAgB,CAACA;AAAA,YACrF;AAAA,UACA;AAMU,cALIE,MAAY,MACdA,IAAUH,EAAW,UAAUvF,GAAMC,GAAMkF,EAAU,EAAE,IAIrDO,MAAY;AACd,mBAAID,MACFC,KAAW,KAETH,EAAW,kBACbG,KAAW,KAENA;AAAA,QAEnB;AACQ,eAAO1F,EAAK,QAAQC,EAAK;AAAA,MACjC,CAAO,GAGDoF,EAAW,QAAQ,CAAA/a,MAAO;AACxB,YAAI2J;AACJ,QAAA6Q,EAAe,KAAKxa,CAAG,IAClB2J,IAAe3J,EAAI,YAAY,QAAQ2J,EAAa,WACvD3J,EAAI,UAAU8a,EAAS9a,EAAI,OAAO;AAAA,MAE5C,CAAO,GACM+a;AAAA,IACR;AACD,WAAO;AAAA,MACL,MAAMD,EAASjH,EAAS,IAAI;AAAA,MAC5B,UAAU2G;AAAA,MACV,UAAU3G,EAAS;AAAA,IACpB;AAAA,EACL,GAAKpU,EAAeM,EAAM,SAAS,cAAc,qBAAqB,MAAMA,EAAM,oBAAmB,CAAE,CAAC;AACxG;ACl8GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,SAAS0b,GAAWC,GAAM/6B,GAAO;AAC/B,SAAK+6B,IACD,OAAOA,KAAS,aACXA,EAAK/6B,CAAK,IAEZ+6B,IAJW;AAKpB;AACA,MAAMC,GAAgB;AAAA,EAGpB,YAAYC,GAAM;AAFlB,IAAAC,GAAA,uBAAgB;AAChB,IAAAA,GAAA,qBAAc;AAEZ,KAAC,KAAK,OAAOD,GAAM,cAAc,IAAI;AAAA,EACzC;AAAA,EACE,MAAM//C,GAAS;AACb,QAAI,CAAC,KAAK,eAAe;AACvB,YAAMigD,IAAkB/hD,EAAA;AAAA,QACtB,OAAO,CAAE;AAAA,QACT,eAAe,MAAM;AAAA,QAAE;AAAA;AAAA,QAEvB,qBAAqB;AAAA,SAClB8B;AAEL,WAAK,gBAAgBs8C,GAAY2D,CAAe,GAChD,KAAK,cAAc/hD,IAAA,IACd,KAAK,cAAc,eACnB8B,EAAQ;AAAA,IAEnB;AACI,gBAAK,cAAc,WAAW,CAAAkgD,MAASjiD,EAAAC,IAAA,IAClCgiD,IACAlgD,IAFkC;AAAA,MAGrC,OAAO9B,IAAA,IACF,KAAK,cACL8B,EAAQ;AAAA,MAEb,eAAe,CAAAoiC,MAAW;AACxB,aAAK,cAAcA,EAAQ,KAAK,WAAW,GAC3C,KAAK,KAAK,cAAe,GACzBpiC,EAAQ,iBAAiB,QAAQA,EAAQ,cAAcoiC,CAAO;AAAA,MACtE;AAAA,IACA,EAAM,GACK,KAAK;AAAA,EAChB;AAAA,EACE,mBAAmB;AAAA,EAAA;AACrB;ACxDA;AAAA;AAAA;AAAA;AAAA;AAKA,MAAM7kC,KAAE,CAACb,GAAEC,GAAEH,MAAI;AAAC,QAAMK,IAAE,oBAAI;AAAI,WAAQO,IAAET,GAAES,KAAGZ,GAAEY,IAAI,CAAAP,EAAE,IAAIH,EAAEU,CAAC,GAAEA,CAAC;AAAE,SAAOP;AAAC,GAAEI,KAAEN,GAAE,cAAcH,GAAC;AAAA,EAAC,YAAYE,GAAE;AAAC,QAAG,MAAMA,CAAC,GAAEA,EAAE,SAAOG,GAAE,MAAM,OAAM,MAAM,+CAA+C;AAAA,EAAC;AAAA,EAAC,GAAGH,GAAEC,GAAEH,GAAE;AAAC,QAAIK;AAAE,IAASL,MAAT,SAAWA,IAAEG,IAAWA,MAAT,WAAaE,IAAEF;AAAG,UAAMS,IAAE,CAAA,GAAGX,IAAE;AAAG,QAAIM,IAAE;AAAE,eAAUJ,KAAKD,EAAE,CAAAU,EAAEL,CAAC,IAAEF,IAAEA,EAAEF,GAAEI,CAAC,IAAEA,GAAEN,EAAEM,CAAC,IAAEP,EAAEG,GAAEI,CAAC,GAAEA;AAAI,WAAM,EAAC,QAAON,GAAE,MAAKW,EAAC;AAAA,EAAC;AAAA,EAAC,OAAOV,GAAEC,GAAEH,GAAE;AAAC,WAAO,KAAK,GAAGE,GAAEC,GAAEH,CAAC,EAAE;AAAA,EAAM;AAAA,EAAC,OAAOG,GAAE,CAACH,GAAEK,GAAEI,CAAC,GAAE;A9GN1Z,QAAAS;A8GM2Z,UAAMJ,IAAEF,GAAET,CAAC,GAAE,EAAC,QAAOU,GAAE,MAAK,EAAC,IAAE,KAAK,GAAGb,GAAEK,GAAEI,CAAC;AAAE,QAAG,CAAC,MAAM,QAAQK,CAAC,EAAE,QAAO,KAAK,KAAG,GAAED;AAAE,UAAMH,KAAEQ,IAAA,KAAK,OAAL,OAAAA,IAAA,KAAK,KAAK,CAAA,GAAGU,IAAE;AAAG,QAAIE,GAAEN,GAAES,IAAE,GAAEiB,IAAEpC,EAAE,SAAO,GAAE8B,IAAE,GAAEiB,IAAEhD,EAAE,SAAO;AAAE,WAAKoB,KAAGiB,KAAGN,KAAGiB,IAAG,KAAU/C,EAAEmB,CAAC,MAAV,KAAY,CAAAA;AAAA,aAAmBnB,EAAEoC,CAAC,MAAV,KAAY,CAAAA;AAAA,aAAYxC,EAAEuB,CAAC,MAAI,EAAEW,CAAC,EAAEhB,CAAAA,EAAEgB,CAAC,IAAE3C,GAAEa,EAAEmB,CAAC,GAAEpB,EAAE+B,CAAC,CAAC,GAAEX,KAAIW;AAAA,aAAYlC,EAAEwC,CAAC,MAAI,EAAEW,CAAC,EAAEjC,CAAAA,EAAEiC,CAAC,IAAE5D,GAAEa,EAAEoC,CAAC,GAAErC,EAAEgD,CAAC,CAAC,GAAEX,KAAIW;AAAA,aAAYnD,EAAEuB,CAAC,MAAI,EAAE4B,CAAC,EAAEjC,CAAAA,EAAEiC,CAAC,IAAE5D,GAAEa,EAAEmB,CAAC,GAAEpB,EAAEgD,CAAC,CAAC,GAAEtD,GAAEJ,GAAEyB,EAAEiC,IAAE,CAAC,GAAE/C,EAAEmB,CAAC,CAAC,GAAEA,KAAI4B;AAAA,aAAYnD,EAAEwC,CAAC,MAAI,EAAEN,CAAC,EAAEhB,CAAAA,EAAEgB,CAAC,IAAE3C,GAAEa,EAAEoC,CAAC,GAAErC,EAAE+B,CAAC,CAAC,GAAErC,GAAEJ,GAAEW,EAAEmB,CAAC,GAAEnB,EAAEoC,CAAC,CAAC,GAAEA,KAAIN;AAAA,aAAqBd,MAAT,WAAaA,IAAEf,GAAE,GAAE6B,GAAEiB,CAAC,GAAErC,IAAET,GAAEL,GAAEuB,GAAEiB,CAAC,IAAGpB,EAAE,IAAIpB,EAAEuB,CAAC,CAAC,EAAE,KAAGH,EAAE,IAAIpB,EAAEwC,CAAC,CAAC,GAAE;AAAC,YAAMhD,IAAEsB,EAAE,IAAI,EAAEoB,CAAC,CAAC,GAAE5C,IAAWE,MAAT,SAAWY,EAAEZ,CAAC,IAAE;AAAK,UAAUF,MAAP,MAAS;AAAC,cAAME,IAAEK,GAAEJ,GAAEW,EAAEmB,CAAC,CAAC;AAAEhC,QAAAA,GAAEC,GAAEW,EAAE+B,CAAC,CAAC,GAAEhB,EAAEgB,CAAC,IAAE1C;AAAA,MAAC,MAAM0B,CAAAA,EAAEgB,CAAC,IAAE3C,GAAED,GAAEa,EAAE+B,CAAC,CAAC,GAAErC,GAAEJ,GAAEW,EAAEmB,CAAC,GAAEjC,CAAC,GAAEc,EAAEZ,CAAC,IAAE;AAAK,MAAA0C;AAAA,IAAG,MAAMtC,CAAAA,GAAEQ,EAAEoC,CAAC,CAAC,GAAEA;AAAA,QAAS5C,CAAAA,GAAEQ,EAAEmB,CAAC,CAAC,GAAEA;AAAI,WAAKW,KAAGiB,KAAG;AAAC,YAAM3D,IAAEK,GAAEJ,GAAEyB,EAAEiC,IAAE,CAAC,CAAC;AAAE5D,MAAAA,GAAEC,GAAEW,EAAE+B,CAAC,CAAC,GAAEhB,EAAEgB,GAAG,IAAE1C;AAAA,IAAC;AAAC,WAAK+B,KAAGiB,KAAG;AAAC,YAAMhD,IAAEY,EAAEmB,GAAG;AAAE,MAAO/B,MAAP,QAAUI,GAAEJ,CAAC;AAAA,IAAC;AAAC,WAAO,KAAK,KAAG,GAAEc,GAAEb,GAAEyB,CAAC,GAAE1B;AAAAA,EAAC;AAAC,CAAC;;;;;;AC8BprC,MAAMyjD,KAAwB;AAsDT,IAAAC,IAArB,cAA+CxgD,EAAW;AAAA,EAA1D,cAAA;AAAA,UAAA,GAAA,SAAA,GAGmB,KAAA,kBAAkB,IAAIkgD,GAAmB,IAAI,GAG9B,KAAA,OAAkB,CAAC,GAEnB,KAAA,UAAkC,CAAC,GAGtC,KAAA,SAAA,MAOI,KAAA,qBAAA,IAEqB,KAAA,gBAAA,IAEA,KAAA,gBAAA,IAEG,KAAA,mBAAA,IAEE,KAAA,qBAAA,IAGJ,KAAA,iBAAA,IAGP,KAAA,UAAA,IAGU,KAAA,oBAAA,IAaH,KAAA,cAAA,WAOrD,KAAA,iBAAA,WAMiE,KAAA,cAAA,MAYR,KAAA,uBAAA,QAGF,KAAA,mBAAA,IAGX,KAAA,QAAA,IAGI,KAAA,sBAAA,QAEN,KAAA,gBAAA,QAEA,KAAA,gBAAA,QAEE,KAAA,kBAAA,QAEG,KAAA,qBAAA,QAEJ,KAAA,iBAAA,QAEA,KAAA,iBAAA,QA0BlB,KAAA,kBAA4B,CAAC,IAAI,IAAI,IAAI,GAAG,GAK9D,KAAQ,WAAyB,CAAC,GAKlC,KAAQ,gBAAmC,CAAC,GAK5C,KAAQ,cAA+B;AAAA,MAC9C,WAAW;AAAA,MACX,UAAU;AAAA,IACZ,GAaS,KAAiB,iBAAyB,IAGd,KAAA,QAAA,IAmDrC,KAAiB,cAAc,MAAM;AAAA,MACnC,GAAI,KAAK,sBACT,KAAK,QAAQ,CAAC,KACd,KAAK,QAAQ,CAAC,EAAE,OAAOK,KACnB;AAAA,QACE;AAAA,UACE,IAAIA;AAAA,UACJ,aAAaA;AAAA,UACb,eAAe;AAAA,UACf,MAAM;AAAA,UACN,SAAS;AAAA,UACT,QAAQ,CAAC,EAAE,OAAAjc,EACT,MAAA7pB;AAAAA,kCACoB6pB,EAAM,sBAAuB,CAAA;AAAA,8BACjCA,EAAM,gCAAiC,CAAA;AAAA,4BACzCA,EAAM,sBAAsB;AAAA,kCACtBA,EAAM,uBAAuB;AAAA,6BAClC,KAAK,yBAAyB,UAC3C,KAAK,YAAY;AAAA,UACrB,MAAM,CAAC,EAAE,KAAAC,EACP,MAAA9pB;AAAAA,+BACiB8pB,EAAI,0BAA0B;AAAA,4BACjCA,EAAI,eAAe;AAAA,6BAClB,CAACA,EAAI,cAAc;AAAA,kCACdA,EAAI,mBAAmB;AAAA,QAAA;AAAA,MAC/C,IAEF,CAAC;AAAA,MACL,GAAG,KAAK;AAAA,IACV,GA4IiB,KAAA,eAAe,CAACD,MACxB7pB;AAAAA;AAAAA,UAEDgmC;AAAAA,MACAnc,EAAM,gBAAgB;AAAA,MACtB,OAAeyC,EAAY;AAAA,MAC3B,CAAeA,MAAAtsB;AAAAA;AAAAA;AAAAA,sBAGHlc,EAAK,yBAAyB;AAAA,QACpC,kCAAkC,KAAK;AAAA,MAAA,CACxC,CAAC;AAAA,gBACAkiD;AAAAA,QACA1Z,EAAY;AAAA,QACZ,OAAUhB,EAAO;AAAA,QACjB,CAAAA,MAAU,KAAK,iBAAiBA,CAAM;AAAA,MACvC,CAAA;AAAA;AAAA;AAAA,IAGN,CAAA;AAAA;AAAA,OAKU,KAAA,qBAAqB,CACpC2a,GACAC,MAEOlmC;AAAAA,QACHgmC;AAAAA,MACA,MAAM,KAAK,EAAE,QAAQC,EAAY,GAAA,CAACjiD,GAAG0H,MAAUA,CAAK;AAAA,MACpD,CAASA,MAAAA;AAAA,MACT,CAAUy6C,MAAAnmC;AAAAA;AAAAA,cAEJgmC;AAAAA,QACA,MAAM,KAAK,EAAE,QAAQE,EAAa,GAAA,CAACliD,GAAG0H,MAAUA,CAAK;AAAA,QACrD,CAASA,MAAAA;AAAA,QACT,CAAAy6C,MACEnmC;AAAAA;AAAAA;AAAAA,MAGH,CAAA;AAAA;AAAA;AAAA,IAGN,CAAA;AAAA,OAIY,KAAA,aAAa,CAAC6pB,MAAoB;A/GhgBrD,UAAAxmC,GAAAC;A+GigBW,aAAA0c;AAAAA,QACH,KAAK,UACHA;AAAAA,cACI,KAAK,gBAAgB,YACnBA;AAAAA;AAAAA;AAAAA,iCAGiB,KAAK,YAAY,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,mCAKvB,KAAK,WAAW;AAAA,sCACb,KAAK,cAAc;AAAA,0CACf,KAAK,iBAAiB;AAAA,oCAC5B,KAAK,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMpCA;AAAAA,oBACI,KAAK;AAAA,SACL3c,IAAA,KAAK,YAAY,aAAjB,OAAAA,IAA6B;AAAA,QAC7B,KAAK,cAAc;AAAA,MACpB,CAAA;AAAA,iBACF;AAAA,sBAEP2c;AAAAA;AAAAA,gBAEM,KAAK,eACHA;AAAAA;AAAAA,iCAEe,KAAK,YAAY,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,gCAK3B1c,IAAA,KAAK,cAAL,OAAAA,IAAkBnB,EAAE,kBAAkB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,2BAMpD0nC,EAAM,YAAY,EAAE,KAAK;AAAA,QACvB,CAACC,GAAKp+B,MAAUsU;AAAAA;AAAAA;AAAAA,+BAGL,KAAK,iBAAiB,WAAW,KAAK;AAAA,mCAClC,KAAK,iBAAiB,IAAI,EAAE;AAAA,wCACvB8pB,EAAI,cAAe,CAAA;AAAA,wCACnBp+B,IAAQ,CAAC;AAAA,gCACjB5H,EAAK,kBAAkB;AAAA,UAC7B,4BAA4BgmC,EAAI,cAAc;AAAA,UAC9C,6BAA6B,KAAK;AAAA,UAClC,2BAA2B,KAAK;AAAA,QAAA,CACjC,CAAC;AAAA,iCACO,MAAM,KAAK,eAAeA,CAAG,CAAC;AAAA,mCAC5B,CAACznC,MACV,KAAK,iBAAiBA,GAAGynC,CAAG,CAAC;AAAA,0BAC7BA,EAAI,kBAAkB;AAAA,UACtB,CAAQjc,MAAA7N;AAAAA;AAAAA;AAAAA,sCAGIlc,EAAK,iBAAiB,CAAC;AAAA,uCACtBoc;AAAAA,aACN,MAAM;AACC,oBAAAmqB,IAAYxc,EAAK,OACpB;AACH,qBACEwc,EAAU,aACV,eAAeA,EAAU,SAAS;AAAA,YAEnC,GAAA;AAAA,UAAA,CACJ;AAAA,gCACCkb;AAAA,YACA13B,EAAK,OAAO,UAAU;AAAA,YACtBA,EAAK,WAAW;AAAA,UACjB,CAAA;AAAA;AAAA;AAAA,QAGN,CAAA;AAAA;AAAA;AAAA,MAGN,CAAA;AAAA;AAAA,WAER;AAAA;AAAA,IAET;AAAA,EAAA;AAAA;AAAA,EAlXA,IAAY,eAAwB;AAClC,WAAO,CAAC,KAAK,QAAQ,KAAK,KAAK,WAAW;AAAA,EAAA;AAAA;AAAA,EAI5C,IAAY,6BAAsC;AACzC,WAAA,KAAK,yBAAyB,UAAU,KAAK;AAAA,EAAA;AAAA,EAS5C,aACR5N,GACM;AACN,UAAM,aAAaA,CAAkB,GAEjC,KAAK,YACP,KAAK,WAAW,KAAK,UAGnB,KAAK,iBACP,KAAK,gBAAgB,KAAK,eAGxB,KAAK,aACP,KAAK,cAAc,KAAK,aACf,KAAK,mBAAmB,KAAK,gBAAgB,SAAS,MAE/D,KAAK,cAAcrc,EAAAC,EAAA,IACd,KAAK,cADS;AAAA,MAEjB,UAAU,KAAK,gBAAgB,CAAC;AAAA,IAClC;AAAA,EACF;AAAA,EAGQ,QACRoc,GACM;AACN,UAAM,QAAQA,CAAkB,GAE5BA,EAAmB,IAAI,YAAY,MACrC,KAAK,cAAc,KAAK,aAGtBA,EAAmB,IAAI,SAAS,MAClC,KAAK,WAAW,KAAK,WAIrBA,EAAmB,IAAI,cAAc,KACrCA,EAAmB,IAAI,cAAc,OAErC,KAAK,gBAAgB,KAAK,eAGxBA,EAAmB,IAAI,MAAM,KAC/B,KAAK,cAAc;AAAA,EACrB;AAAA,EAkCM,iBAAiBqrB,GAA4B;A/GtUvD,QAAAjoC;A+GuUU,UAAAgnC,IAAYiB,EAAO,OAAO,WAC1BwW,IAAUxW,EAAO,OAAO,WAAW,GACnCkW,IAAWlW,EAAO,OAAO,YAAY,GACrC8a,IAAgB9a,EAAO,OAAO,oBAAoB,GAClD+a,KAAwBhjD,IAAAgnC,EAAU,0BAAV,OAAAhnC,IAAmC,IAE3DijD,IAAc,KAAK,mBAAmBhb,CAAM,GAC5Cib,IAAelc,EAAU,kBAC3B,oBAAoBA,EAAU,eAAe,MAC7C,QAEEmc,IAAW,KAAK,YAAYhF,CAAQ,GACpCiF,IAAY,KAAK,aAAa3E,GAASsE,CAAa;AAEnD,WAAApmC;AAAAA;AAAAA,mBAEQsrB,EAAO,OAAO;AAAA,mBACdA,EAAO,OAAO;AAAA;AAAA;AAAA;AAAA,oBAIbwW,KAAW,CAAC,KAAK,6BACzB,KAAK,iBAAiBN,CAAQ,IAC9B,MAAM;AAAA,iBACDthC,EAAUomC,CAAW,CAAC;AAAA,UAC7B,KAAK;AAAA,MACLhb;AAAA,MACAjB;AAAA,MACAyX;AAAA,MACAuE;AAAA,MACAI;AAAA,MACAF;AAAA,MACAC;AAAA,IACD,CAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAKC,wBACNlb,GACAjB,GACAyX,GACAuE,GACAI,GACAF,GACAC,GACA;AACA,QAAI,CAAC1E;AACH,aAAOyD,GAAWlb,EAAU,QAAQiB,EAAO,YAAY;AAIzD,UAAMob,IACJL,KAAyB,KAAK,6BAC1B,QACA,iBACAM,IACJ,CAACN,KAAyB,CAAC,KAAK,6BAC5B/a,EAAO,OAAO,wBAAA,IACd,MACAsb,IACJ9E,KAAW,CAAC,KAAK,6BAA6B,YAAY;AAErD,WAAA9hC,KAAQG,GAAaumC,CAAU,CAAC;AAAA;AAAA;AAAA,cAG7BxmC,EAAUumC,CAAS,CAAC;AAAA,gBAClBE,CAAY;AAAA,uBACLC,CAAW;AAAA;AAAA;AAAA;AAAA,iBAIjB1mC,EAAUqmC,CAAY,CAAC;AAAA,UAC9BhB,GAAWlb,EAAU,QAAQiB,EAAO,WAAA,CAAY,CAAC;AAAA,UACjDkb,CAAQ;AAAA;AAAA,QAEVrmC,GAAaumC,CAAU,CAAC;AAAA,EAAA;AAAA,EAGtB,mBAAmBpb,GAAgD;AACnE,UAAAjB,IAAYiB,EAAO,OAAO;AAC5B,QAAA,GAACjB,EAAU,QAAQ,CAACA,EAAU,WAAW,CAACA,EAAU;AAIjD,aAAA;AAAA,QACHA,EAAU,OAAO,UAAUA,EAAU,IAAI,QAAQ,EAAE;AAAA,QACnDA,EAAU,UAAU,cAAcA,EAAU,OAAO,QAAQ,EAAE;AAAA,QAC7DA,EAAU,kBAAkB,eAAeA,EAAU,eAAe,MAAM,EAAE;AAAA;AAAA,EAAA;AAAA;AAAA,EAK1E,YAAYmX,GAAqB;AACvC,WAAIA,MAAa,QACRxhC;AAAAA,oDAGLwhC,MAAa,SACRxhC;AAAAA,sDAGF;AAAA,EAAA;AAAA,EAGD,aACN8hC,GACAsE,GACoB;AAChB,QAACtE;AAEL,aAAoC3/C,EAAhCikD,MAAkB,QAAgB,4BAClCA,MAAkB,SAAiB,6BAC9B,qBAFsD;AAAA,EAEjC;AAAA,EAGxB,iBACN5E,GACqC;AACjC,WAAAA,MAAa,QAAc,cAC3BA,MAAa,SAAe,eACzB;AAAA,EAAA;AAAA,EAGD,eAAe1X,GAAmB;AACxC,IAAI,KAAK,kBACP,KAAK,KAAK,iBAAiB,EAAE,KAAAA,EAAA,CAAK;AAAA,EACpC;AAAA,EAGM,iBAAiBznC,GAAkBynC,GAAmB;AAC5D,KAAIznC,EAAE,QAAQ,WAAWA,EAAE,QAAQ,SACjCA,EAAE,eAAe,GACjB,KAAK,eAAeynC,CAAG;AAAA,EACzB;AAAA,EA8IQ,SAAS;A/G3lBrB,QAAAzmC,GAAAC,GAAAE,GAAAC;A+G4lBU,UAAAomC,IAAQ,KAAK,gBAAgB,MAAMjmC,EAAAC,EAAA;AAAA,MACvC,MAAM,KAAK;AAAA,MACX,SAAS,KAAK,YAAY;AAAA,MAC1B,WAAW,CAAC;AAAA,MACZ,OAAO;AAAA,QACL,SAAS,KAAK;AAAA,QACd,cAAc,KAAK;AAAA,QACnB,YAAY,KAAK;AAAA,MACnB;AAAA,MACA,eAAe,KAAK;AAAA,MACpB,eAAe,KAAK;AAAA,MACpB,oBAAoB,KAAK;AAAA,MACzB,kBAAkB,KAAK;AAAA,MACvB,oBAAoB,KAAK;AAAA,MACzB,iBAAiB,CAAkBgjD,MAAA;AAC7B,QAAA,OAAOA,KAAmB,aACvB,KAAA,WAAWA,EAAe,KAAK,QAAQ,IAE5C,KAAK,WAAWA,GAGlB,KAAK,KAAK,sBAAsB,EAAE,SAAS,KAAK,UAAU;AAAA,MAC5D;AAAA,MACA,iBAAiBxD,GAAgB;AAAA,OAC7B,CAAC,KAAK,iBAAiB;AAAA,MACzB,mBAAmBc,GAAkB;AAAA,IACvC,IA1BuC;AAAA,MA2BvC,uBAAuBP,GAAsB;AAAA,MAC7C,oBAAoB,CAAkBiD,MAAA;AAChC,QAAA,OAAOA,KAAmB,aACvB,KAAA,cAAcA,EAAe,KAAK,WAAW,IAElD,KAAK,cAAcA,GAGrB,KAAK,KAAK,yBAAyB;AAAA,UACjC,YAAY;AAAA,YACV,WAAW,KAAK,YAAY;AAAA,YAC5B,UAAU,KAAK,YAAY;AAAA,UAAA;AAAA,QAC7B,CACD;AAAA,MACH;AAAA,MACA,sBAAsB,CAAkBA,MAAA;AAClC,QAAA,OAAOA,KAAmB,aACvB,KAAA,gBAAgBA,EAAe,KAAK,aAAa,IAEtD,KAAK,gBAAgBA,GAGvB,KAAK,KAAK,wBAAwB,EAAE,WAAW,KAAK,eAAe;AAAA,MACrE;AAAA,MACA,UAAU,CAAehc,MACfA,EAAoC,KAAK,MAAM;AAAA,MAEzD,WAAUxnC,IAAA,KAAK,aAAL,OAAAA,IAAkB,KAAK,OAAO,KAAK,KAAK,SAAS;AAAA,MAC3D,YAAY,KAAK;AAAA,MACjB,cAAc,KAAK;AAAA,MACnB,cAAc,KAAK;AAAA,IAAA,EACpB;AAEM,WAAA2c;AAAAA;AAAAA;AAAAA;AAAAA,qBAIUE;AAAAA,OACX5c,IAAA,KAAK,cAAL,OAAAA,IAAkBnB,EAAE,4BAA4B;AAAA,IACjD,CAAA;AAAA,2BACkB+d,EAAU,KAAK,eAAe,CAAC;AAAA,yBAClC1c,IAAA,KAAK,aAAL,OAAAA,IAAkB,KAAK,OAAO,KAAK,KAAK,SAAS,CAAE;AAAA,gBAC3DM,EAAK,cAAc;AAAA,MACzB,uBAAuB,KAAK;AAAA,IAAA,CAC7B,CAAC;AAAA,UACA,KAAK,UACHkc;AAAAA,gBACI,KAAK,OAAO;AAAA,0BAEhBoH,CAAO;AAAA,UACT,KAAK,aAAayiB,CAAK,CAAC,IAAI,KAAK,WAAWA,CAAK,CAAC;AAAA;AAAA,QAEpD,KAAK,iBACH7pB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,cAKI,KAAK,cAAc;AAAA,oBAEvBoH,CAAO;AAAA,QACR,KAAK,SAAS,CAAC,KAAK,gBACtB,KAAK,SAAS,KAAK,oBAAoB,KAAK,eACzCpH;AAAAA;AAAAA;AAAAA,wBAGc,KAAK,YAAY;AAAA,gCACT,KAAK,gBAAgB;AAAA,yBAC5B6pB,EAAM,WAAW,WAAW,SAAS;AAAA,wBACtCA,EAAM,WAAW,WAAW,QAAQ;AAAA,0BACnCpmC,IAAA,KAAK,aAAL,OAAAA,IAAkB,KAAK,OAAO,KAAK,KAAK,SAAS,CAAE;AAAA,+BAC7C,KAAK,eAAe;AAAA,mCAChB,KAAK,mBAAmB;AAAA,6BAC9B,KAAK,aAAa;AAAA,6BAClB,KAAK,aAAa;AAAA,+BAChB,KAAK,eAAe;AAAA,kCACjB,KAAK,kBAAkB;AAAA,8BAC3B,KAAK,cAAc;AAAA,8BACnB,KAAK,cAAc;AAAA,gCACjB,KAAK,gBAAgB;AAAA,mCAClB,KAAK,mBAAmB;AAAA,+BAC5B,KAAK,eAAe;AAAA,+BACpB,KAAK,eAAe;AAAA,4BACvByc,EAAU,KAAK,aAAa,CAAC;AAAA;AAAA,qCAEpB,CAAC7d,MAAW;AACnC,MAAAA,EAAE,eAAe,GACjBA,EAAE,gBAAgB,GAEdA,EAAE,OAAO,WAAW,aACtBwnC,EAAM,YAAYxnC,EAAE,OAAO,WAAW,QAAQ,IAE9CwnC,EAAM,aAAaxnC,EAAE,OAAO,WAAW,SAAS;AAAA,IAClD,CACD;AAAA;AAAA,gBAEG,KAAK,oBAAoBF,EAAE,aAAa,CAAC;AAAA;AAAA;AAAA,gBAGzC,KAAK,uBAAuBA,EAAE,gBAAgB,CAAC;AAAA;AAAA;AAAA,gBAG/C,KAAK,mBAAmBA,EAAE,YAAY,CAAC;AAAA;AAAA;AAAA,gBAGvC,KAAK,mBAAmBA,EAAE,YAAY,CAAC;AAAA;AAAA,6BAG7CilB,CAAO;AAAA;AAAA,EAAA;AAGjB;AA5oBqB2+B,EACH,SAAS3lC,EAAUC,EAAM;AAKTE,EAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GANXulC,EAMa,WAAA,QAAA,CAAA;AAEAxlC,EAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GARXulC,EAQa,WAAA,WAAA,CAAA;AAGpBxlC,EAAA;AAAA,EAAXC,EAAS;AAAA,GAXSulC,EAWP,WAAA,UAAA,CAAA;AAKiBxlC,EAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAhBRulC,EAgBU,WAAA,sBAAA,CAAA;AAIAxlC,EAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GApBRulC,EAoBU,WAAA,iBAAA,CAAA;AAEAxlC,EAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAtBRulC,EAsBU,WAAA,iBAAA,CAAA;AAEAxlC,EAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAxBRulC,EAwBU,WAAA,oBAAA,CAAA;AAEAxlC,EAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA1BRulC,EA0BU,WAAA,sBAAA,CAAA;AAGAxlC,EAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA7BRulC,EA6BU,WAAA,kBAAA,CAAA;AAGAxlC,EAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAhCRulC,EAgCU,WAAA,WAAA,CAAA;AAGAxlC,EAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAnCRulC,EAmCU,WAAA,qBAAA,CAAA;AAGDxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtCPulC,EAsCS,WAAA,YAAA,CAAA;AAGAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAzCPulC,EAyCS,WAAA,mBAAA,CAAA;AAEAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA3CPulC,EA2CS,WAAA,WAAA,CAAA;AAKAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhDPulC,EAgDS,WAAA,eAAA,CAAA;AAMexlC,EAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAtDtBulC,EAsDwB,WAAA,kBAAA,CAAA;AAOAxlC,EAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GA7DtBulC,EA6DwB,WAAA,eAAA,CAAA;AAEfxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA/DPulC,EA+DS,WAAA,qBAAA,CAAA;AAEAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAjEPulC,EAiES,WAAA,eAAA,CAAA;AAGAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GApEPulC,EAoES,WAAA,aAAA,CAAA;AAKAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAzEPulC,EAyES,WAAA,wBAAA,CAAA;AAGCxlC,EAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA5ERulC,EA4EU,WAAA,oBAAA,CAAA;AAGAxlC,EAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA/ERulC,EA+EU,WAAA,SAAA,CAAA;AAGDxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAlFPulC,EAkFS,WAAA,uBAAA,CAAA;AAEAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GApFPulC,EAoFS,WAAA,iBAAA,CAAA;AAEAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtFPulC,EAsFS,WAAA,iBAAA,CAAA;AAEAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAxFPulC,EAwFS,WAAA,mBAAA,CAAA;AAEAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA1FPulC,EA0FS,WAAA,sBAAA,CAAA;AAEAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA5FPulC,EA4FS,WAAA,kBAAA,CAAA;AAEAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA9FPulC,EA8FS,WAAA,kBAAA,CAAA;AAGAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAjGPulC,EAiGS,WAAA,oBAAA,CAAA;AAGAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GApGPulC,EAoGS,WAAA,uBAAA,CAAA;AAGAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAvGPulC,EAuGS,WAAA,mBAAA,CAAA;AAGAxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA1GPulC,EA0GS,WAAA,mBAAA,CAAA;AAKIxlC,EAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GA/GXulC,EA+Ga,WAAA,iBAAA,CAAA;AASLxlC,EAAA;AAAA,EAA1BC,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GAxHNulC,EAwHQ,WAAA,mBAAA,CAAA;AAGAxlC,EAAA;AAAA,EAA1BC,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GA3HNulC,EA2HQ,WAAA,WAAA,CAAA;AAEVxlC,EAAA;AAAA,EAAhBgH,EAAM;AAAA,GA7HYw+B,EA6HF,WAAA,YAAA,CAAA;AAGWxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhIPulC,EAgIS,WAAA,gBAAA,CAAA;AAEXxlC,EAAA;AAAA,EAAhBgH,EAAM;AAAA,GAlIYw+B,EAkIF,WAAA,iBAAA,CAAA;AAGWxlC,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GArIPulC,EAqIS,WAAA,cAAA,CAAA;AAEXxlC,EAAA;AAAA,EAAhBgH,EAAM;AAAA,GAvIYw+B,EAuIF,WAAA,eAAA,CAAA;AAgBSxlC,EAAA;AAAA,EAAzBgH,EAAM;AAAA,GAvJYw+B,EAuJO,WAAA,kBAAA,CAAA;AAGGxlC,EAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA1JRulC,EA0JU,WAAA,SAAA,CAAA;AA1JVA,IAArBxlC,EAAA;AAAA,EADCG,EAAc,kBAAkB;AAAA,GACZqlC,CAAA;;;;;;;ACCA,IAAAe,KAArB,cAA6C18B,GAAmB;AAAA,EAAhE,cAAA;AAAA,UAAA,GAAA,SAAA,GAQkC,KAAA,cAAczL,EAAM,GAMpB,KAAA,UAAUA,EAAM,YAAY,GAM5B,KAAA,UAAUA,EAAM,YAAY,GAMhD,KAAA,eAAe,CAAC4N,MACnB,CAACA,GAM+C,KAAA,YAAA,gBAGJ,KAAA,SAAA,IAGF,KAAA,sBAAA,IAGE,KAAA,wBAAA,IAMJ,KAAA,UAAA,IAMK,KAAA,kBAAA,KAGH,KAAA,cAAA,QAMc,KAAA,mBAAA,SAKrC,KAAA,SAAiB5N,EAAM,OAAO,GAEjD,KAAQ,gBAA0B,CAAC,GACnC,KAAQ,gBAAyB,IAsIzB,KAAA,0BAA0B,CAAC/Y,MAAsB;AAC1D,YAAAwB,IAAOxB,EAAM,aAAa;AAChC,MAAI,QAAQ,CAACwB,EAAK,SAAS,IAAI,KAC7B,KAAK,aAAa;AAAA,IAEtB,GAEiB,KAAA,cAAc,CAACxB,MAAsB;AACpD,YAAMkqB,IAAQlqB,EAAM;AAEhB,UAAA,CAACkqB,EAAM;AACJ,aAAA,SAAS,QAAW,IAAO,EAAI;AAAA,eAEhC,KAAK,gBAAgB;AACvB,cAAMvD,IAAO5N,EAAMmR,EAAM,KAAK,EAAE,OAAO,KAAK,MAAM;AAGhD,QAAAvD,EAAK,SAAS,KAAK,SAAS,KAAK,KACjCA,EAAK,QAAQ,KAAK,SAAS,KAAK,KAEhC,KAAK,SAAS,QAAW,IAAO,KAAK,qBAAqB,GAC1D,KAAK,KAAK,oBAAoB;AAAA,UAC5B,OAAOuD,EAAM;AAAA,UACb,MAAM;AAAA,QAAA,CACP,MAEI,KAAA,SAASvD,GAAM,EAAK,GACzB,KAAK,cAAcA,GACnB,KAAK,KAAK,kBAAkB,EAAE,OAAOuD,EAAM,OAAO;AAAA,MACpD;AAEA,aAAK,SAAS,QAAW,IAAO,KAAK,qBAAqB,GACrD,KAAA,KAAK,oBAAoB,EAAE,OAAOA,EAAM,OAAO,MAAM,WAAW;AAIzE,MAAI,KAAK,uBAAuB,CAAC,KAAK,UACpC,KAAK,aAAa,GAGpB,KAAK,KAAK,aAAa,EAAE,OAAOA,EAAM,OAAO;AAAA,IAC/C,GAEiB,KAAA,gBAAgB,CAAOlqB,MAAyBlC,EAAA;AAC3D,MAAAkC,EAAM,QAAQ,UAKhBA,EAAM,QAAQ,WACdA,EAAM,QAAQ,eACdA,EAAM,QAAQ,eAEdA,EAAM,eAAe,GACrBA,EAAM,gBAAgB,GAEjB,KAAK,SAKR,KAAK,aAAa,KAJlB,KAAK,aAAa,GAClB,MAAM,KAAK,gBACX,KAAK,SAAS,aAAa;AAAA,IAKjC,IAMA,KAAiB,cAAc,MAAM;AAC/B,MAAC,KAAK,SAGR,KAAK,aAAa,IAFlB,KAAK,aAAa;AAAA,IAItB,GAEA,KAAiB,mBAAmB,MAAM;AACpC,MAAC,KAAK,aACR,KAAK,eAAe,GAEpB,KAAK,aAAa,MAAM,GACxB,KAAK,YAAY,GAEjB,KAAK,aAAa,GAElB,KAAK,KAAK,WAAW;AAAA,IAEzB,GAyBA,KAAiB,cAAc,MAAM;AACnC,WAAK,KAAK,WAAW;AAAA,IACvB,GAEA,KAAiB,aAAa,MAAM;AAClC,WAAK,KAAK,UAAU;AAAA,IACtB;AAAA,EAAA;AAAA,EA1PU,aACRqa,GACM;AhHxKV,QAAA5c;AgHyKI,UAAM,aAAa4c,CAAkB,GAEjC,KAAK,UACF,KAAA,SAAS,QAAQtB,EAAM,KAAK,KAAK,EAAE,OAAO,KAAK,MAAM,IAEvD,KAAA,SAAS,cAAc,KAAK,aAC5B,KAAA,SAAS,UAAU,KAAK,SACxB,KAAA,SAAS,UAAU,KAAK,SACxB,KAAA,SAAS,eAAe,KAAK,cAElC,KAAK,kBAAgBtb,IAAA,KAAK,WAAL,gBAAAA,EAAa,MAAM,KAAK,qBAAoB,CAAC;AAAA,EAAA;AAAA,EAG1D,QACR4c,GACM;AACN,UAAM,QAAQA,CAAkB,GAE5BA,EAAmB,IAAI,OAAO,MAC3B,KAAA,SAAS,QAAQ,KAAK,OACvB,KAAK,kBACF,KAAA,aAAa,QAAQ,KAAK,kBAAkB,IAEnD,KAAK,YAAY,IAGfA,EAAmB,IAAI,aAAa,MACjC,KAAA,SAAS,cAAc,KAAK;AAAA,EACnC;AAAA,EAGF,oBAAoB;AACd,WAAC,KAAK,QAIHtB,EAAM,KAAK,KAAK,EACpB,OAAO,KAAK,MAAM,EAClB,OAAO,KAAK,cAAc,CAAC,KAAK,GAAG,IAL7B;AAAA,EAK6B;AAAA,EAGxC,cAAcjZ,GAAe;AACvB,QAAA,CAAC,KAAK,cAAc,QAAQ;AAGxB,YAAAqhD,IAAerhD,EAAM,KAAK,GAG1BshD,IAAeroC,EAAM,EACxB,OAAO,KAAK,MAAM,EAClB,WAAA,EACA,eAAe,GAAG,GAKfsoC,IAAatoC,EAAMooC,GAAcC,CAAY;AAC/C,UAAA,CAACC,EAAW;AACP,eAAA;AAIH,YAAAC,IAAgBD,EAAW,OAAOD,CAAY,GAC9CG,IAAkBJ,EAAa,QAAQ,YAAY,EAAE;AAE3D,aAD4BG,EAAc,QAAQ,YAAY,EAAE,MACpCC;AAAA,IAIrB;AAGF,WAAA,KAAK,cAAc,KAAK,CAAUnxC,MAAA;AAGjC,YAAAixC,IAAatoC,EAAMjZ,GAAOsQ,CAAM;AAClC,UAAA,CAACixC,EAAW;AACP,eAAA;AAIH,YAAAC,IAAgBD,EAAW,OAAOjxC,CAAM,GACxCmxC,IAAkBzhD,EAAM,QAAQ,YAAY,EAAE;AAEpD,aAD4BwhD,EAAc,QAAQ,YAAY,EAAE,MACjCC;AAAA,IAAA,CAChC;AAAA,EAAA;AAAA,EAGH,eAAe;AACT,WAAC,KAAK,QAIH,KAAK,aAAa,IAHhB;AAAA,EAGgB;AAAA,EAG3B,eAAe;AACb,WAAO,KAAK,cAAc,KAAK,aAAa,KAAK;AAAA,EAAA;AAAA,EAGnD,SACEzhD,GACA0hD,IAAyB,IACzBC,IAAiC,IACjC;AACA,SAAK,QAAQ3hD,GAET0hD,KACF,KAAK,gBAAgB,IAChB,KAAA,aAAa,QAAQ,KAAK,kBAAkB,KAEjD,KAAK,gBAAgB,IAGvB,KAAK,YAAY,GACjB,KAAK,aAAa,GAEdC,MACF,KAAK,KAAK,cAAc,EAAE,OAAO,KAAK,OAAO,GAC7C,KAAK,KAAK,kBAAkB,EAAE,OAAO,KAAK,aAAa,OAAO;AAAA,EAChE;AAAA,EAGI,iBAAiB;AAAA,WAAA3jD,EAAA;AAChB,WAAA,SAAS,QAAW,IAAM,EAAI;AAAA,IAAA;AAAA;AAAA,EAqErC,IAAW,eAAe;AACxB,WAAO,KAAK;AAAA,EAAA;AAAA,EAwBR,eAAe;AAAA,WAAAA,EAAA;AACnB,MAAI,KAAK,YAAY,KAAK,YAAY,KAAK,WAI3C,KAAK,SAAS,IAEL,SAAA,iBAAiB,aAAa,KAAK,uBAAuB;AAAA,IAAA;AAAA;AAAA,EAG/D,eAAe;AAAA,WAAAA,EAAA;AACf,MAAC,KAAK,WAIV,KAAK,SAAS,IAEL,SAAA,oBAAoB,aAAa,KAAK,uBAAuB,GAEtE,MAAM,KAAK,gBACX,KAAK,MAAM;AAAA,IAAA;AAAA;AAAA;AAAA,EAYb,cAAc;AACL,WAAA,CAAC,CAAC,KAAK;AAAA,EAAA;AAAA,EAGhB,IAAI,WAA0B;AACxB,WAAA,KAAK,UAAU,WACV,KAAK,UAAU,WAEfsmB,GAAuB;AAAA,MAC5B,cAAc,KAAK,YAAY,CAAC,KAAK,YAAY;AAAA,MACjD,iBAAiB,CAAC,KAAK,aAAa;AAAA,IAAA,CACrC;AAAA,EACH;AAAA,EAGF,gBAAgB;AACd,WAAO,KAAK,YAAY,KAAK,YAAY,KAAK,KAAK,aAAa;AAAA,EAAA;AAAA,EAGlE,iBAAiB;AACf,WAAO,KAAK,YAAY,KAAK,YAAY,KAAK,KAAK,aAAa;AAAA,EAAA;AAAA,EAGlE,cAAc;AACR,IAAC,KAAK,kBAUH,KAAA,UAAU,YAAY,EAAE,IAT7B,KAAK,UAAU;AAAA,MACb;AAAA,QACE,cAAc,KAAK,YAAY,CAAC,KAAK,YAAY;AAAA,QACjD,iBAAiB,CAAC,KAAK,aAAa;AAAA,MACtC;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAAA,EAGF;AAAA,EAGF,cAAcpkB,GAAc;AAC1B,IAAAA,EAAM,eAAe;AAAA,EAAA;AAAA,EAGvB,SAAS;AhH7cX,QAAAvC,GAAAC;AgH8cW,WAAA0c;AAAAA,UACD,KAAK,SACPA;AAAAA;AAAAA;AAAAA,kBAGU,KAAK,IAAI;AAAA,sBACL,KAAK,QAAQ;AAAA,sBACb,KAAK,QAAQ;AAAA,sBACb,KAAK,QAAQ;AAAA,kBACjBlc,EAAK,OAAO,CAAC;AAAA;AAAA,kBAEboc,EAAU,KAAK,KAAK,CAAC;AAAA,6BACV;AAAA,UACnB,KAAK,WACPF;AAAAA;AAAAA,oBAEY,KAAK,OAAO;AAAA;AAAA,sBAEV,KAAK,gBAAgB;AAAA;AAAA;AAAA,mBAGxB,KAAK,IAAiC;AAAA,uBAClC,KAAK,SAAS,OAAO,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,2BAK5B,KAAK,gBAAgB;AAAA;AAAA;AAAA,0BAGtB;AAAA;AAAA,QAElB,KAAK,eACPA;AAAAA;AAAAA;AAAAA;AAAAA,iBAIWE,EAAU,KAAK,IAA6B,CAAC;AAAA;AAAA,YAElD,KAAK,WAAW;AAAA;AAAA,OAErB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMa,KAAK,MAAM;AAAA,sBACT,EAAK;AAAA,sBACL,KAAK,SAAS;AAAA,6BACP,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAM7Bpc,EAAK,UAAU,WAAW,KAAK,IAAI,IAAI;AAAA,MAC9C,oBAAoB,KAAK;AAAA,MACzB,oBAAoB,KAAK;AAAA,MACzB,kBAAkB,KAAK;AAAA,MACvB,mBAAmB,KAAK;AAAA,MACxB,mBAAmB,KAAK,WAAW;AAAA,MACnC,iBAAiB,KAAK,WAAW;AAAA,IAAA,CAClC,CAAC;AAAA;AAAA;AAAA;AAAA,uBAISA,EAAK,SAAS,UAAU,KAAK,IAAI,IAAI;AAAA,MAC5C,mBAAmB,KAAK;AAAA,MACxB,mBAAmB,KAAK;AAAA,IAAA,CACzB,CAAC;AAAA;AAAA,sBAEM,KAAK,kBAAmB,CAAA;AAAA,8BAChB,KAAK,MAAM;AAAA;AAAA,gCAEToc,EAAU,KAAK,QAAQ,UAAUkH,CAAO,CAAC;AAAA,kCACvClH;AAAAA,MAClB,KAAK,cAAc,gBAAgBkH;AAAAA,IAAA,CACpC,IAAIlH,EAAU,KAAK,WAAW,aAAakH,CAAO,CAAC;AAAA,8BACpC,KAAK,QAAQ;AAAA;AAAA;AAAA,0BAGjB,KAAK,QAAQ;AAAA,0BACb,KAAK,QAAQ;AAAA,2BACZ,KAAK,SAAS;AAAA,0BACf,KAAK,QAAQ;AAAA,6BACV,KAAK,YAAmB;AAAA,4BACzBlH,GAAU7c,IAAA,KAAK,gBAAL,OAAAA,IAAoB,EAAE,CAAC;AAAA,sBACvC,KAAK,UAAU;AAAA,uBACd,KAAK,WAAW;AAAA,uBAChB,KAAK,WAAW;AAAA,yBACd,KAAK,aAAa;AAAA,yBAClB,KAAK,aAAa;AAAA,uBACpB,KAAK,WAAW;AAAA;AAAA,uBAEhBS,EAAK,iBAAiB,kBAAkB,KAAK,IAAI,IAAI;AAAA,MAC5D,2BAA2B,KAAK;AAAA,MAChC,2BAA2B,KAAK;AAAA,MAChC,yBAAyB,KAAK;AAAA,IAAA,CAC/B,CAAC;AAAA,gBACA,KAAK,gBAAgB,UAAU,CAAC,KAAK,WACnCkc,gBAAmBlc,EAAK,YAAY,CAAC;AAAA;AAAA;AAAA;AAAA,mCAIpBoc;AAAAA,OACX5c,IAAA,KAAK,yBAAL,OAAAA,IAA6Bmb,GAAU,OAAO;AAAA,IAC/C,CAAA;AAAA,kCACW,KAAK,QAAQ;AAAA,+BAChB,KAAK,gBAAgB;AAAA,4BAElC2I,CAAO;AAAA;AAAA,yBAEAtjB,EAAK,kBAAkB;AAAA,MAC9B,2BAA2B,KAAK;AAAA,IAAA,CACjC,CAAC;AAAA,kBACA,KAAK,UACHkc,iEACAA;AAAAA;AAAAA;AAAAA,8BAGUlc,EAAK,eAAe,CAAC;AAAA,+BACpB,KAAK,WAAW,+BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAOzD,KAAK,MAAM;AAAA,yBACP,KAAK,YAAY;AAAA,0BAChB,CAAC8B,MAAuB;AACpC,MAAAA,EAAM,eAAe,GACrBA,EAAM,gBAAgB,GACjB,KAAA,SAASA,EAAM,OAAO,KAAK;AAAA,IAAA,CACjC;AAAA;AAAA;AAAA,UAGH,KAAK,YACPoa;AAAAA;AAAAA,yBAEiBE,EAAU,KAAK,YAAY,CAAC;AAAA,0BAC3BA,EAAU,KAAK,IAA0B,CAAC;AAAA;AAAA,YAExD,KAAK,QAAQ;AAAA,2BACE;AAAA;AAAA,EAAA;AAG3B;AAvgBqB4mC,GAyEH,SAAS1mC,EAAUC,EAAM;AAxEPE,GAAA;AAAA,EAAjC7E,GAAM,QAAQ;AAAA,GADIorC,GACe,WAAA,gBAAA,CAAA;AACGvmC,GAAA;AAAA,EAApC7E,GAAM,WAAW;AAAA,GAFCorC,GAEkB,WAAA,YAAA,CAAA;AAMLvmC,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GARXsmC,GAQa,WAAA,eAAA,CAAA;AAMAvmC,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAdXsmC,GAca,WAAA,WAAA,CAAA;AAMAvmC,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GApBXsmC,GAoBa,WAAA,WAAA,CAAA;AAMpBvmC,GAAA;AAAA,EAAXC,EAAS;AAAA,GA1BSsmC,GA0BP,WAAA,gBAAA,CAAA;AAOiBvmC,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAjCRsmC,GAiCU,WAAA,aAAA,CAAA;AAGevmC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GApCvBsmC,GAoCyB,WAAA,UAAA,CAAA;AAGfvmC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAvCRsmC,GAuCU,WAAA,uBAAA,CAAA;AAGAvmC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA1CRsmC,GA0CU,WAAA,yBAAA,CAAA;AAGjBvmC,GAAA;AAAA,EAAXC,EAAS;AAAA,GA7CSsmC,GA6CP,WAAA,eAAA,CAAA;AAGiBvmC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAhDRsmC,GAgDU,WAAA,WAAA,CAAA;AAGDvmC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAnDPsmC,GAmDS,WAAA,UAAA,CAAA;AAGAvmC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtDPsmC,GAsDS,WAAA,mBAAA,CAAA;AAGAvmC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAzDPsmC,GAyDS,WAAA,eAAA,CAAA;AAGAvmC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA5DPsmC,GA4DS,WAAA,wBAAA,CAAA;AAGAvmC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA/DPsmC,GA+DS,WAAA,oBAAA,CAAA;AAKAvmC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GApEPsmC,GAoES,WAAA,UAAA,CAAA;AAEXvmC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAtEYu/B,GAsEF,WAAA,iBAAA,CAAA;AACAvmC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAvEYu/B,GAuEF,WAAA,iBAAA,CAAA;AAvEEA,KAArBvmC,GAAA;AAAA,EADCG,EAAc,mBAAmB;AAAA,GACbomC,EAAA;;;;;;;ACvEA,IAAAQ,KAArB,cAA0C/hD,EAAW;AAAA,EAArD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEyD,KAAA,WAAA,IAKR,KAAA,UAAA,GAKc,KAAA,UAAA;AAAA,EAAA;AAAA,EAI7D,oBAAoB;AAClB,UAAM,kBAAkB,GACnB,KAAA,aAAa,QAAQ,WAAW,GAChC,KAAA;AAAA,MACH;AAAA,MACA,KAAK,WAAW,aAAa;AAAA,IAC/B,GACK,KAAA,aAAa,WAAW,KAAK,OAAO,GACpC,KAAA,aAAa,eAAe,MAAM,GACvC,KAAK,aAAa,SAAS,mBAAmB,KAAK,OAAO,EAAE;AAAA,EAAA;AAEhE;AA3BqB+hD,GAcH,SAASlnC,EAAUC,EAAM;AAZGE,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAFvB8mC,GAEyB,WAAA,YAAA,CAAA;AAKhB/mC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAPP8mC,GAOS,WAAA,WAAA,CAAA;AAKe/mC,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAZtB8mC,GAYwB,WAAA,WAAA,CAAA;AAZxBA,KAArB/mC,GAAA;AAAA,EADCG,EAAc,gBAAgB;AAAA,GACV4mC,EAAA;;;;;;;ACgCrB,IAAqBC,KAArB,cAA2Cz+B;AAAA,EACzCmB,GAAW1kB,CAAU;AACvB,EAAE;AAAA,EAGA,SAAS;AACP,WAAO,KAAK,eAAe;AAAA,EAAA;AAE/B;AARqBgiD,GAGH,SAASnnC,EAAUC,EAAM;AAHtBknC,KAArBhnC,GAAA;AAAA,EADCG,EAAc,iBAAiB;AAAA,GACX6mC,EAAA;ACpDd,MAAMC,WAAkB,MAAM;AAAA,EAInC,YAAYC,GAAiBC,GAAeC,GAAgB;AAC1D,UAAMF,CAAO,GACb,KAAK,WAAWC,GAChB,KAAK,SAASC;AAAA,EAAA;AAElB;AAEO,MAAMC,WAAkB,MAAM;AAAA,EAKnC,YACEH,GACAI,GACA79C,GACA89C,GACA;AACA,UAAML,CAAO,GACb,KAAK,OAAOI,GACZ,KAAK,OAAO79C,GACZ,KAAK,OAAO89C;AAAA,EAAA;AAEhB;;;;;;;ACwDqB,IAAAC,IAArB,cAA4C39B,GAAmB;AAAA,EAA/D,cAAA;AAAA,UAAA,GAAA,SAAA,GAU8C,KAAA,eAAA,IAMA,KAAA,eAAA,IAGC,KAAA,gBAAA,IAGE,KAAA,mBAAA,QAGA,KAAA,mBAAA,QAMP,KAAA,WAAA,IAGC,KAAA,YAAA,IASZ,KAAA,iBAAA,QAGF,KAAA,eAAA,QAMA,KAAA,eAAA,UAGoB,KAAA,kBAAA,IASuB,KAAA,WAAA,MAwBrB,KAAA,qBAAA,QAGL,KAAA,gBAAA,QAIO,KAAA,gBAAA,MAO1C,KAAQ,SAAiB,CAAC,GAC1B,KAAQ,kBAA0C,CAAC,GAClC,KAAA,sCAAmC,IAAI,GACvC,KAAA,qCACpB,IAAI,GACgB,KAAA,qCAAuC,IAAI,GAC5D,KAAQ,cAAc,IACtB,KAAQ,oBAAoB,IAC5B,KAAQ,gBAA6B,MAC9C,KAAQ,iBAAoD,MAC5D,KAAQ,gBAAiD;AAAA,EAAA;AAAA,EAdzD,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EAAA;AAAA,EAmBd,kBACE49B,GACAC,GACA;AACA,WACED,EAAM,SAASC,EAAM,QACrBD,EAAM,SAASC,EAAM,QACrBD,EAAM,SAASC,EAAM,QACrBD,EAAM,iBAAiBC,EAAM;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAOzB,iBAAiBJ,GAAqB;AACxC,WAAC,KAAK,SAEY,KAAK,OAAO,MAAM,GAAG,EAAE,IAAI,CAAA79C,MAAQA,EAAK,KAAA,CAAM,EAE/C,KAAK,CAAgBk+C,MAAA;AAEpC,UAAAA,EAAa,SAAS,GAAG,GAAG;AAC1B,YAAAA,EAAa,SAAS,IAAI,GAAG;AAC/B,gBAAMC,IAAWD,EAAa,MAAM,GAAG,EAAE;AAClC,iBAAAL,EAAK,KAAK,WAAWM,CAAQ;AAAA,QAAA;AAEtC,eAAON,EAAK,SAASK;AAAA,MAAA;AAInB,aAAAA,EAAa,WAAW,GAAG,IACtBL,EAAK,KAAK,YAAA,EAAc,SAASK,EAAa,aAAa,IAG7D;AAAA,IAAA,CACR,IApBwB;AAAA,EAoBxB;AAAA,EAGH,IAAW,eAAe;AACxB,WAAO,KAAK;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAKN,cAAcE,GAQpB;AACA,UAAMC,IAKD,CAAC;AAGF,QAAA,KAAK,YAAYD,EAAS,SAAS,KAAK,OAAO,SAAS,KAAK;AAC/D,iBAAWP,KAAQO;AACjB,QAAAC,EAAO,KAAK;AAAA,UACV,MAAAR;AAAA,UACA,MAAM;AAAA,YACJ,UAAU,KAAK;AAAA,YACf,YAAYO,EAAS,SAAS,KAAK,OAAO;AAAA,UAC5C;AAAA,UACA,SACE,KAAK,0BACLjmD,EAAE,8BAA8B;AAAA,YAC9B,OAAO,KAAK;AAAA,UAAA,CACb;AAAA,UACH,MAAM;AAAA,QAAA,CACP;AAKL,QAAImmD,IAAY;AAChB,eAAWT,KAAQO;AAEjB,MAAK,KAAK,iBAAiBP,CAAI,KAC7BQ,EAAO,KAAK;AAAA,QACV,MAAAR;AAAA,QACA,MAAM;AAAA,UACJ,MAAM,KAAK;AAAA,UACX,UAAUA,EAAK;AAAA,QACjB;AAAA,QACA,SACE,KAAK,qBACL1lD,EAAE,4BAA4B;AAAA,UAC5B,MAAM,KAAK;AAAA,QAAA,CACZ;AAAA,QACH,MAAM;AAAA,MAAA,CACP,GAIHmmD,KAAaT,EAAK,MACd,KAAK,eAAeS,IAAY,KAAK,eACvCD,EAAO,KAAK;AAAA,QACV,MAAAR;AAAA,QACA,MAAM;AAAA,UACJ,aAAa,KAAK;AAAA,UAClB,WAAAS;AAAA,UACA,UAAUT,EAAK;AAAA,QACjB;AAAA,QACA,SACE,KAAK,wBACL1lD,EAAE,4BAA4B;AAAA,UAC5B,MAAM,KAAK,MAAM,KAAK,cAAc,OAAO,IAAI;AAAA,QAAA,CAChD;AAAA,QACH,MAAM;AAAA,MAAA,CACP;AAIE,WAAA;AAAA,MACL,SAASkmD,EAAO,WAAW;AAAA,MAC3B,QAAQA,EAAO,SAAS,IAAIA,IAAS;AAAA,IACvC;AAAA,EAAA;AAAA,EAGK,WAAWE,GAAwD;AACxE,WAAI,KAAK,gBACA,IAAI,QAAQ,CAAC7hD,GAASC,MAAW;AACtC,WAAK,iBAAiBD,GACtB,KAAK,gBAAgBC,GACrB,KAAK,oBAAoB,IACzB,KAAK,gBAAgB4hD;AAAA,IAAA,CACtB,EACE,KAAK,MACG,KAAK,mBAAmBA,CAAQ,CACxC,EACA,MAAM,MAAM;AAAA,IAAA,CAEZ,IAEI,KAAK,mBAAmBA,CAAQ;AAAA,EACzC;AAAA,EAGY,mBAAmBA,GAAkC;AAAA,WAAA7kD,EAAA;AACjE,YAAM8kD,IAAWD,EAAS;AAG1B,UAAI,KAAK,eAAe,IAAIC,CAAQ;AAC9B,YAAA;AACF,gBAAMC,IAAe,KAAK,eAAe,IAAID,CAAQ;AAC/C,gBAAA,KAAK,mBAAmBA,GAAUC,CAAY,GAC/C,KAAA,eAAe,OAAOD,CAAQ;AAAA,iBAC5BlyC,GAAO;AAEd,eAAK,KAAK,yBAAyB,EAAE,MAAMiyC,GAAU,OAAAjyC,GAAO;AAAA,QAAA;AAI3D,WAAA,SAAS,KAAK,OAAO;AAAA,QACxB,CAACuxC,MAAe,CAAC,KAAK,kBAAkBA,GAAMU,CAAQ;AAAA,MACxD,GAEI,KAAK,OAAO,WAAW,KAAK,KAAK,aACnC,KAAK,QAAQ,QACb,KAAK,MAAM,QAAQ,KAGrB,KAAK,KAAK,oBAAoB,EAAE,MAAMA,GAAU,GAChD,KAAK,KAAK,mBAAmB,EAAE,OAAO,KAAK,OAAO,GAClD,KAAK,YAAY;AAAA,IAAA;AAAA;AAAA,EAGnB,oBAAoB;AAClB,UAAM,kBAAkB,GAEnB,KAAA,iBAAiB,mBAAmB,CAAS3iD,MAAA;AAChD,YAAM8iD,IAAc9iD;AACf,WAAA,WAAW8iD,EAAY,OAAO,IAAI;AAAA,IAAA,CACxC;AAAA,EAAA;AAAA,EAGG,kBAAkB;AAAA,WAAAhlD,EAAA;AACtB,MAAI,KAAK,kBACP,KAAK,eAAe,EAAI,GAE1B,KAAK,oBAAoB,IACzB,KAAK,gBAAgB,MACrB,KAAK,iBAAiB,MACtB,KAAK,gBAAgB;AAAA,IAAA;AAAA;AAAA,EAGvB,iBAAiB;AACf,IAAI,KAAK,iBACP,KAAK,cAAc,IAAI,MAAM,gBAAgB,CAAC,GAEhD,KAAK,oBAAoB,IACzB,KAAK,gBAAgB,MACrB,KAAK,iBAAiB,MACtB,KAAK,gBAAgB;AAAA,EAAA;AAAA,EAGvB,WAAW;AACT,SAAK,KAAK,YAAY,GACtB,KAAK,YAAY;AAAA,EAAA;AAAA,EAGnB,UAAU;AACR,IAAI,KAAK,YACT,KAAK,MAAM,MAAM;AAAA,EAAA;AAAA,EAGnB,kBAAkBkC,GAAsB;AACtC,IAAI,KAAK,aACLA,EAAM,QAAQ,WAAWA,EAAM,QAAQ,SACzCA,EAAM,eAAe,GACrB,KAAK,MAAM,MAAM;AAAA,EACnB;AAAA,EAGF,oBAAoBiiD,GAAYc,GAAkB;AAC5C,QAAA,CAAC,KAAK;AACR;AAGI,UAAAC,IAAgB,KAAK,SAAS;AAAA,MAClCf,EAAK;AAAA,IACP;AAEA,WAAAe,EAAc,UAAUD,GAEjBC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAMT,YAAYJ,GAAkB;AAC5B,UAAMK,IAAM,KAAK,eAAe,IAAIL,CAAQ;AAC5C,QAAIK,GAAK;AACP,MAAAA,EAAI,MAAM,GACL,KAAA,gBAAgB,OAAOL,CAAQ,GAC/B,KAAA,eAAe,OAAOA,CAAQ;AACnC,YAAMM,IAAcjlD,EAAA,IAAK,KAAK;AAC9B,aAAOilD,EAAYN,CAAQ,GAC3B,KAAK,kBAAkBM;AAAA,IAAA;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA,EAMF,kBAAkB;AACX,SAAA,eAAe,QAAQ,CAAOD,MAAA;AACjC,MAAAA,EAAI,MAAM;AAAA,IAAA,CACX,GACD,KAAK,gBAAgB,MAAM,GAC3B,KAAK,eAAe,MAAM,GAC1B,KAAK,kBAAkB,CAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAM1B,cAAc;AACZ,IAAI,KAAK,OAAO,SAAS,KAAK,KAAK,aAC5B,KAAA,YAAY,KAAK,MAAM;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA,EAMY,mBACZL,GACAC,GACe;AAAA,WAAA/kD,EAAA;AACX,UAAA,CAAC,KAAK,WAAW;AACnB,gBAAQ,MAAM,8BAA8B;AAC5C;AAAA,MAAA;AAGI,YAAAmlD,IAAM,IAAI,eAAe;AAC/B,aAAAA,EAAI,kBAAkB,KAAK,iBAEpB,IAAI,QAAQ,CAACniD,GAASC,MAAW;AACtC,QAAAkiD,EAAI,SAAS,MAAM;AACjB,UAAIA,EAAI,UAAU,OAAOA,EAAI,SAAS,MAC5BniD,EAAA,IAERC;AAAA,YACE,IAAI6gD;AAAA,cACF,uBAAuBqB,EAAI,MAAM;AAAA,cACjCA,EAAI;AAAA,cACJA,EAAI;AAAA,YAAA;AAAA,UAER;AAAA,QAEJ,GACAA,EAAI,UAAU,MAAM;AACX,UAAAliD,EAAA,IAAI,MAAM,oCAAoC,CAAC;AAAA,QACxD;AAGA,YAAIoiD,IAAiB,KAAK;AAqC1B,YAlCAA,IAAiBA,EAAe;AAAA,UAC9B;AAAA,UACA,mBAAmBP,CAAQ;AAAA,QAC7B,GACAO,IAAiBA,EAAe;AAAA,UAC9B;AAAA,UACA,mBAAmBP,CAAQ;AAAA,QAC7B,GAGIC,KAAgB,OAAOA,KAAiB,aACtCA,EAAa,OACfM,IAAiBA,EAAe;AAAA,UAC9B;AAAA,UACA,mBAAmBN,EAAa,EAAE;AAAA,QACpC,IAEEA,EAAa,QACfM,IAAiBA,EAAe;AAAA,UAC9B;AAAA,UACA,mBAAmBN,EAAa,GAAG;AAAA,QACrC,IAEEA,EAAa,aACfM,IAAiBA,EAAe;AAAA,UAC9B;AAAA,UACA,mBAAmBN,EAAa,QAAQ;AAAA,QAC1C,KAIAI,EAAA,KAAK,KAAK,cAAcE,CAAc,GAGtC,KAAK;AACH,cAAA;AACF,kBAAM9a,IAAU,KAAK,MAAM,KAAK,aAAa;AACtC,mBAAA,QAAQA,CAAO,EAAE,QAAQ,CAAC,CAAChnC,GAAKvB,CAAK,MAAM;AAC5C,cAAAmjD,EAAA,iBAAiB5hD,GAAKvB,CAAe;AAAA,YAAA,CAC1C;AAAA,mBACM4Q,GAAO;AACN,oBAAA,KAAK,+BAA+B,KAAK,aAAa;AAAA,UAAA;AAK9D,QAAA,KAAK,iBAAiB,WAEpBmyC,MAAiBA,EAAa,QAAQA,EAAa,cACjDI,EAAA,iBAAiB,gBAAgB,kBAAkB,GACnDA,EAAA;AAAA,UACF,KAAK,UAAU;AAAA,YACb,MAAMJ,EAAa;AAAA,YACnB,WAAWA,EAAa;AAAA,UACzB,CAAA;AAAA,QACH,KAEAI,EAAI,KAAK,KAIPA,EAAA,iBAAiB,gBAAgB,kBAAkB,GACvDA,EAAI,KAAK,KAAK,UAAUJ,CAAY,CAAC;AAAA,MACvC,CACD;AAAA,IAAA;AAAA;AAAA,EAGW,YAAYO,GAAe;AAAA,WAAAtlD,EAAA;AACnC,UAAA,CAAC,KAAK,WAAW;AACnB,gBAAQ,MAAM,8BAA8B;AAC5C;AAAA,MAAA;AAGF,YAAMulD,IAAaD,EAAM;AACzB,UAAIE,IAAmB;AAEvB,iBAAWrB,KAAQmB,GAAO;AAClB,cAAAG,IAAW,IAAI,SAAS;AACrB,QAAAA,EAAA,OAAO,KAAK,gBAAgBtB,CAAI;AAErC,YAAA;AACF,cAAIe;AAGC,eAAA,gBAAgB,IAAIf,EAAK,IAAI,GAC7B,KAAA,kBAAkBjkD,EAAAC,EAAA,IAAK,KAAK,kBAAV,EAA2B,CAACgkD,EAAK,IAAI,GAAG,EAAE,IAEjE,KAAK,KAAK,oBAAoB,EAAE,MAAAA,EAAA,CAAM;AAEhC,gBAAAgB,IAAM,IAAI,eAAe;AAS/B,cARAA,EAAI,kBAAkB,KAAK,iBAG3B,KAAK,eAAe,IAAIhB,EAAK,MAAMgB,CAAG,GAEtCA,EAAI,KAAK,KAAK,cAAc,KAAK,SAAS,GAGtC,KAAK;AACH,gBAAA;AACF,oBAAM5a,IAAU,KAAK,MAAM,KAAK,aAAa;AACtC,qBAAA,QAAQA,CAAO,EAAE,QAAQ,CAAC,CAAChnC,GAAKvB,CAAK,MAAM;AAC5C,gBAAAmjD,EAAA,iBAAiB5hD,GAAKvB,CAAe;AAAA,cAAA,CAC1C;AAAA,qBACM4Q,GAAO;AACN,sBAAA,KAAK,+BAA+B,KAAK,aAAa;AAAA,YAAA;AAI9D,UAAAuyC,EAAA,OAAO,aAAa,CAASjjD,MAAA;AAC/B,gBAAIA,EAAM,kBAAkB;AAC1B,oBAAMwjD,IAAYxjD,EAAM,SAASA,EAAM,QAAS;AAChD,mBAAK,kBAAkBhC,EAAAC,EAAA,IAClB,KAAK,kBADa;AAAA,gBAErB,CAACgkD,EAAK,IAAI,GAAGuB;AAAA,cACf,IAEI,KAAK,aACSR,IAAA,KAAK,oBAAoBf,GAAM,EAAI,IAGrD,KAAK,KAAK,uBAAuB;AAAA,gBAC/B,MAAAA;AAAA,gBACA,MAAMe;AAAA,gBACN,UAAAQ;AAAA,cAAA,CACD;AAAA,YAAA;AAAA,UAEL;AAEA,gBAAM1B,IAAW,MAAM,IAAI,QAAQ,CAAChhD,GAASC,MAAW;AACtD,YAAAkiD,EAAI,SAAS,MAAM;AACjB,kBAAIA,EAAI,UAAU,OAAOA,EAAI,SAAS;AACpC,gBAAAniD,EAAQmiD,EAAI,QAAQ;AAAA,mBACf;AACL,sBAAMvyC,IAAQ,IAAIkxC;AAAA,kBAChB,uBAAuBqB,EAAI,MAAM;AAAA,kBACjCA,EAAI;AAAA,kBACJA,EAAI;AAAA,gBACN;AACA,gBAAAliD,EAAO2P,CAAK;AAAA,cAAA;AAAA,YAEhB,GACAuyC,EAAI,UAAU,MAAM;AAClB,cAAI,KAAK,aACSD,IAAA,KAAK,oBAAoBf,GAAM,EAAK,IAG/ClhD,EAAA,IAAI,MAAM,eAAe,CAAC;AAAA,YACnC,GACAkiD,EAAI,KAAKM,CAAQ;AAAA,UAAA,CAClB,GAEKt9C,IAAS,KAAK,MAAM67C,CAAkB;AAE5C,UAAI,KAAK,aACSkB,IAAA,KAAK,oBAAoBf,GAAM,EAAK,IAIjD,KAAA,gBAAgB,OAAOA,EAAK,IAAI,GAChC,KAAA,eAAe,OAAOA,EAAK,IAAI;AACpC,gBAAMiB,IAAcjlD,EAAA,IAAK,KAAK;AACvB,iBAAAilD,EAAYjB,EAAK,IAAI,GAC5B,KAAK,kBAAkBiB,GAGvB,KAAK,eAAe,IAAIjB,EAAK,MAAMh8C,CAAM,GAEzC,KAAK,KAAK,uBAAuB,EAAE,MAAAg8C,GAAM,MAAMe,GAAe,QAAA/8C,GAAQ,GAEtEq9C,KACIA,MAAqBD,KACvB,KAAK,KAAK,0BAA0B;AAAA,iBAE/B3yC,GAAO;AAET,eAAA,gBAAgB,OAAOuxC,EAAK,IAAI,GAChC,KAAA,eAAe,OAAOA,EAAK,IAAI;AACpC,gBAAMiB,IAAcjlD,EAAA,IAAK,KAAK;AAI9B,cAHO,OAAAilD,EAAYjB,EAAK,IAAI,GAC5B,KAAK,kBAAkBiB,GAEnB,KAAK,UAAU;AACjB,kBAAMF,IAAgB,KAAK,oBAAoBf,GAAM,EAAK;AAC1D,iBAAK,KAAK,oBAAoB,EAAE,MAAAA,GAAM,MAAMe,GAAe,OAAAtyC,GAAO;AAAA,UAAA;AAElE,iBAAK,KAAK,oBAAoB,EAAE,MAAAuxC,GAAM,OAAAvxC,GAAO;AAAA,QAC/C;AAAA,MACF;AAAA,IACF;AAAA;AAAA,EAGM,eAAe8xC,GAA2B;ApH7rBpD,QAAA/kD;AoH8rBI,UAAM2lD,IAAQ,CAAC,GAAG,KAAK,MAAM;AAE7B,IAAI,KAAK,eAAa3lD,IAAA,KAAK,WAAL,QAAAA,EAAa,WACjC,OAAO,OAAO+kD,CAAS,EAAE,QAAQ,CAACP,MAAe;AAK/C,MAJqB,CAAC,CAAC,KAAK,OAAO;AAAA,QAAK,CAAC1kD,MACvC,KAAK,kBAAkBA,GAAG0kD,CAAI;AAAA,MAChC,KAGEmB,EAAM,KAAKnB,CAAI;AAAA,IACjB,CACD,GAED,KAAK,SAASmB,KAEd,KAAK,SAASZ,IAAW,OAAO,OAAOA,CAAQ,IAAI,CAAC;AAGhD,UAAAiB,IAAe,IAAI,aAAa;AAEjC,SAAA,OAAO,QAAQ,CAAQxB,MAAA;AACb,MAAAwB,EAAA,MAAM,IAAIxB,CAAI;AAAA,IAAA,CAC5B,GACI,KAAA,MAAM,QAAQwB,EAAa,OAE5B,KAAK,cACF,KAAA,YAAY,KAAK,MAAM;AAAA,EAC9B;AAAA,EAGO,SAASzjD,GAAmB;AAEnC,UAAM0jD,KADS1jD,KAAA,gBAAAA,EAAO,QACK;AAE3B,QAAI0jD,GAAa;AACT,YAAAC,IAAa,KAAK,cAAcD,CAAW;AACjD,UAAI,CAACC,EAAW,WAAWA,EAAW,QAAQ;AAE5C,cAAMlB,IAASkB,EAAW,OAAO,IAAI,CAASjzC,MACxCA,EAAM,OACD,IAAIsxC;AAAA,UACTtxC,EAAM;AAAA,UACNA,EAAM;AAAA,UACNA,EAAM;AAAA,UACNA,EAAM;AAAA,QACR,IAEO,IAAI,MAAMA,EAAM,OAAO,CAEjC;AAGD,aAAK,KAAK,oBAAoB,EAAE,QAAA+xC,EAAA,CAAQ;AACxC;AAAA,MAAA;AAAA,IACF;AAGG,SAAA,QAAQ,KAAK,MAAM,OAExB,KAAK,eAAeiB,CAAW,GAE/B,KAAK,KAAK,mBAAmB,EAAE,OAAO,KAAK,QAAQ,GACnD,KAAK,YAAY;AAAA,EAAA;AAAA,EAGnB,YAAY1jD,GAAkB;AAC5B,IAAI,KAAK,aACTA,EAAM,eAAe,GACrB,KAAK,cAAc;AAAA,EAAA;AAAA,EAGrB,WAAWA,GAAkB;AAC3B,IAAI,KAAK,YACTA,EAAM,eAAe;AAAA,EAAA;AAAA,EAGvB,YAAYA,GAAkB;AAC5B,IAAI,KAAK,aACTA,EAAM,eAAe,GAEhB,KAAK,SAASA,EAAM,aAAqB,MAC5C,KAAK,cAAc;AAAA,EACrB;AAAA,EAGF,OAAOA,GAAkB;ApHnxB3B,QAAAvC;AoHoxBI,QAAI,KAAK,SAAU;AACnB,IAAAuC,EAAM,eAAe,GACrB,KAAK,cAAc;AAEb,UAAA4jD,KAAenmD,IAAAuC,EAAM,iBAAN,gBAAAvC,EAAoB;AACzC,QAAImmD,GAAc;AACV,YAAAD,IAAa,KAAK,cAAcC,CAAY;AAClD,UAAI,CAACD,EAAW,WAAWA,EAAW,QAAQ;AAE5C,cAAMlB,IAASkB,EAAW,OAAO,IAAI,CAASjzC,MACxCA,EAAM,OACD,IAAIsxC;AAAA,UACTtxC,EAAM;AAAA,UACNA,EAAM;AAAA,UACNA,EAAM;AAAA,UACNA,EAAM;AAAA,QACR,IAEO,IAAI,MAAMA,EAAM,OAAO,CAEjC;AAGD,aAAK,KAAK,oBAAoB,EAAE,QAAA+xC,EAAA,CAAQ;AACxC;AAAA,MAAA;AAAA,IACF;AAGG,SAAA,eAAemB,KAAA,OAAAA,IAAgB,IAAI,GAExC,KAAK,KAAK,mBAAmB,EAAE,OAAO,KAAK,QAAQ,GACnD,KAAK,YAAY;AAAA,EAAA;AAAA,EAGnB,SAAS;ApHtzBX,QAAAnmD,GAAAC;AoHuzBW,WAAA0c;AAAAA;AAAAA,UAED,KAAK,SACPA;AAAAA;AAAAA;AAAAA;AAAAA,kBAIU,KAAK,IAAI;AAAA,sBACL,KAAK,QAAQ;AAAA,sBACb,KAAK,QAAQ;AAAA,sBACb,KAAK,QAAQ;AAAA,kBACjBlc,EAAK,OAAO,CAAC;AAAA,kBACboc,EAAU,KAAK,KAAK,CAAC;AAAA,6BACV;AAAA,UACnB,KAAK,WACPF;AAAAA;AAAAA,oBAEY,KAAK,OAAO;AAAA;AAAA;AAAA,sBAGV,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,yBAKlB,KAAK,gBAAgB;AAAA,mBAC3B,KAAK,IAAiC;AAAA,uBAClC,KAAK,SAAS,OAAO,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,0BAK7B;AAAA;AAAA,QAElB,KAAK,eACPA;AAAAA;AAAAA;AAAAA;AAAAA,iBAIWE,EAAU,KAAK,IAA6B,CAAC;AAAA;AAAA,YAElD,KAAK,WAAW;AAAA;AAAA,OAErB;AAAA,QACC,KAAK,eACHF;AAAAA;AAAAA,sBAEYlc;AAAA,MACN;AAAA,MACA,EAAE,sBAAsB,KAAK,YAAY;AAAA,MACzC,EAAE,sBAAsB,KAAK,SAAS;AAAA,IACvC,CAAA;AAAA;AAAA,2BAEY,KAAK,WAAW;AAAA,0BACjB,KAAK,UAAU;AAAA,2BACd,KAAK,WAAW;AAAA,sBACrB,KAAK,MAAM;AAAA,yBACR,KAAK,iBAAiB;AAAA,uBACxB,KAAK,OAAO;AAAA;AAAA,4BAEP3B,EAAE,0BAA0B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMnC,KAAK,gBAAgBA,EAAE,yBAAyB,CAAC;AAAA;AAAA,oBAEnD,KAAK,UACP6d;AAAAA;AAAAA;AAAAA;AAAAA,wBAIM7d,EAAE,kCAAkC,CAAC,KAAK,KAAK,MAAM;AAAA;AAAA,mBAE1D;AAAA;AAAA;AAAA;AAAA,cAKTilB,CAAO;AAAA;AAAA;AAAA,gBAGDtjB;AAAA,MACN;AAAA,MACA,EAAE,kBAAkB,KAAK,WAAW,UAAU;AAAA,MAC9C,EAAE,gBAAgB,KAAK,WAAW,QAAQ;AAAA,MAC1C,EAAE,mBAAmB,KAAK,SAAS;AAAA,IACpC,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQU,KAAK,IAAI;AAAA;AAAA,qBAEPoc,EAAU,KAAK,MAAM,CAAC;AAAA,wBACnB,KAAK,QAAQ;AAAA,wBACb,KAAK,QAAQ;AAAA,wBACb,KAAK,QAAQ;AAAA;AAAA,4CAEO,KAAK,WACjC,aACAkH,CAAO;AAAA,sBACD,KAAK,QAAQ;AAAA,sBACb,KAAK,QAAQ;AAAA,uBACZ,KAAK,aAAa;AAAA,oBACrB,KAAK,MAAM;AAAA,qBACV,KAAK,OAAO;AAAA,YACrB,KAAK,qBAAqB,UAAU,CAAC,KAAK,aACxCpH;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,4BAKc,KAAK,QAAQ;AAAA,uBAClBE,EAAU,KAAK,IAAI,CAA0B;AAAA,yBAC3C,KAAK,OAAO;AAAA,6BACR,KAAK,eAAekH,IAAU,KAAK,WAAW;AAAA,4BAC/C,KAAK,eAAeA,IAAU,KAAK,UAAU;AAAA,wBACjD,KAAK,eAAeA,IAAU,KAAK,MAAM;AAAA,8BACnC,KAAK,qBACnBjlB,EAAE,kBAAkB,CAAC,GAAG,KAAK,eACzB,KACA,MAAMA,EAAE,wBAAwB,CAAC,EAAE;AAAA;AAAA,mBAEpC,KAAK,qBACRA,EAAE,kBAAkB,CAAC;AAAA,mBAEvBilB,CAAO;AAAA,YACT,KAAK,qBAAqB,UAAU,CAAC,KAAK,aACxCpH;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,yBAKWE,EAAU,KAAK,IAAI,CAA0B;AAAA,8BACxC,KAAK,OAAO,WAAW,KACnC,CAAC,KAAK,aACN,KAAK,gBAAgB,OAAO,CAAC;AAAA,2BACpB,KAAK,WAAW;AAAA,qBACtB,KAAK,qBACR/d,EAAE,kBAAkB,CAAC;AAAA;AAAA,kBAGzBilB,CAAO;AAAA;AAAA,cAEPjlB,EAAE,gCAAgC,CAAC;AAAA;AAAA;AAAA;AAAA,QAIzC,CAAC,KAAK,YAAY,KAAK,gBAAgB,OAAO,IAC5C6d;AAAAA;AAAAA,gBAEM,MAAM,KAAK,KAAK,eAAe,EAAE,IAAI,CAAYwoC,MAAA;AACjD,YAAMY,IAAW,KAAK,gBAAgBZ,CAAQ,KAAK;AAC5C,aAAAxoC;AAAAA;AAAAA;AAAAA,wBAGCwoC,CAAQ,MAAM,KAAK,MAAMY,CAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,wCAKlBA,CAAQ;AAAA;AAAA;AAAA;AAAA,IAAA,CAIjC,CAAC;AAAA;AAAA,cAGNhiC,CAAO;AAAA;AAAA,gBAED,KAAK,iBAAiB;AAAA,iBACrBjlB,EAAE,8BAA8B,CAAC;AAAA,wBAC1B,KAAK,qBACrBA,EAAE,gCAAgC,CAAC;AAAA,4BACf,KAAK,qBACzBA,EAAE,+BAA+B,CAAC;AAAA,0BAChB,KAAK,uBAAuB,MAAM;AAAA,sBACtC,KAAK,cAAc;AAAA,qBACpB,KAAK,cAAc;AAAA,kBACtB,KAAK,eAAe;AAAA;AAAA;AAAA,cAGxBA,EAAE,kCAAkC;AAAA,MACpC,WAAUmB,KAAAD,IAAA,KAAK,kBAAL,gBAAAA,EAAoB,SAApB,OAAAC,IAA4B;AAAA,IAAA,CACvC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,QAKN,KAAK,WACH0c;AAAAA;AAAAA;AAAAA,6BAGmBE,EAAU,KAAK,YAAY,CAAC;AAAA,6BAC5BA,EAAU,KAAK,IAAI,CAAuB;AAAA;AAAA,gCAEvC,KAAK,MAAM;AAAA,gBAC3B,KAAK,QAAQ;AAAA;AAAA,cAGnBkH,CAAO;AAAA;AAAA,EAAA;AAGjB;AAp7BqB2gC,EAkHH,SAAS3qB;AAAAA,MACrBhd,EAAUyG,EAAK,CAAC;AAAA;AAlHctG,GAAA;AAAA,EAAjC7E,GAAM,QAAQ;AAAA,GADIqsC,EACe,WAAA,SAAA,CAAA;AAGtBxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAJSunC,EAIP,WAAA,qBAAA,CAAA;AAGAxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAPSunC,EAOP,WAAA,qBAAA,CAAA;AAGiBxnC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAVRunC,EAUU,WAAA,gBAAA,CAAA;AAGjBxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAbSunC,EAaP,WAAA,gBAAA,CAAA;AAGiBxnC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAhBRunC,EAgBU,WAAA,gBAAA,CAAA;AAGAxnC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAnBRunC,EAmBU,WAAA,iBAAA,CAAA;AAGDxnC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtBPunC,EAsBS,WAAA,oBAAA,CAAA;AAGAxnC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAzBPunC,EAyBS,WAAA,oBAAA,CAAA;AAGhBxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GA5BSunC,EA4BP,WAAA,UAAA,CAAA;AAGiBxnC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA/BRunC,EA+BU,WAAA,YAAA,CAAA;AAGAxnC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAlCRunC,EAkCU,WAAA,aAAA,CAAA;AAGjBxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GArCSunC,EAqCP,WAAA,aAAA,CAAA;AAGiBxnC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAxCRunC,EAwCU,WAAA,cAAA,CAAA;AAGjBxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GA3CSunC,EA2CP,WAAA,kBAAA,CAAA;AAGAxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GA9CSunC,EA8CP,WAAA,gBAAA,CAAA;AAGAxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAjDSunC,EAiDP,WAAA,aAAA,CAAA;AAGAxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GApDSunC,EAoDP,WAAA,gBAAA,CAAA;AAGiBxnC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAvDRunC,EAuDU,WAAA,mBAAA,CAAA;AAGjBxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GA1DSunC,EA0DP,WAAA,iBAAA,CAAA;AAGAxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GA7DSunC,EA6DP,WAAA,iBAAA,CAAA;AAGoBxnC,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAhEXunC,EAgEa,WAAA,YAAA,CAAA;AAGJxnC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAnEPunC,EAmES,WAAA,YAAA,CAAA;AAGAxnC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtEPunC,EAsES,WAAA,eAAA,CAAA;AAGAxnC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAzEPunC,EAyES,WAAA,wBAAA,CAAA;AAGAxnC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA5EPunC,EA4ES,WAAA,0BAAA,CAAA;AAGAxnC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA/EPunC,EA+ES,WAAA,qBAAA,CAAA;AAGhBxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAlFSunC,EAkFP,WAAA,qBAAA,CAAA;AAGAxnC,GAAA;AAAA,EAAXC,EAAS;AAAA,GArFSunC,EAqFP,WAAA,qBAAA,CAAA;AAGgBxnC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAxFPunC,EAwFS,WAAA,sBAAA,CAAA;AAGAxnC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA3FPunC,EA2FS,WAAA,iBAAA,CAAA;AAI5BxnC,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA9FPunC,EA+FnB,WAAA,iBAAA,CAAA;AAGIxnC,GAAA;AAAA,EADHC,EAAS,EAAE,MAAM,OAAO,WAAW,GAAO,CAAA;AAAA,GAjGxBunC,EAkGf,WAAA,SAAA,CAAA;AAIaxnC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAtGYwgC,EAsGF,WAAA,UAAA,CAAA;AACAxnC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAvGYwgC,EAuGF,WAAA,mBAAA,CAAA;AACSxnC,GAAA;AAAA,EAAzBgH,EAAM;AAAA,GAxGYwgC,EAwGO,WAAA,mBAAA,CAAA;AACAxnC,GAAA;AAAA,EAAzBgH,EAAM;AAAA,GAzGYwgC,EAyGO,WAAA,kBAAA,CAAA;AAEAxnC,GAAA;AAAA,EAAzBgH,EAAM;AAAA,GA3GYwgC,EA2GO,WAAA,kBAAA,CAAA;AACTxnC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GA5GYwgC,EA4GF,WAAA,eAAA,CAAA;AACAxnC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GA7GYwgC,EA6GF,WAAA,qBAAA,CAAA;AACAxnC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GA9GYwgC,EA8GF,WAAA,iBAAA,CAAA;AA9GEA,IAArBxnC,GAAA;AAAA,EADCG,EAAc,mBAAmB;AAAA,GACbqnC,CAAA;;;;;;;ACpDrB,IAAqB0B,KAArB,cAAgDx/B,GAAW1kB,CAAU,EAAE;AAAA,EAAvE,cAAA;AAAA,UAAA,GAAA,SAAA,GAMyD,KAAA,WAAA,IAMR,KAAA,mBAAA,QAGJ,KAAA,eAAA,QAaA,KAAA,eAAA,QAKC,KAAA,gBAAA,SAMO,KAAA,gBAAA,MAGnD,KAAQ,SAAmC,CAAC,GAI5C,KAAQ,mBAA0C;AAAA,EAAA;AAAA,EAElD,IAAI,QAAQ;AACH,WAAA,KAAK,iBAAiB,6BAA6B;AAAA,EAAA;AAAA,EAG5D,cAAcE,GAAc;AAC1B,WAAO,KAAK,WAAY;AAAA,MACtB,yCAAyCA,CAAI;AAAA,IAC/C;AAAA,EAAA;AAAA,EAGM,kBAAkBG,GAAc;AAChC,UAAA8jD,IAAkB9jD,EAAsB,OAAO,MAAM;AAAA,MACzD,CAACiiD,MAAe;AACR,cAAA8B,IAAW,KAAK,cAAc,eAAe,GAC7CC,IAAcD,KAAYA,EAAS,UAAU,KAAW,MAAA;AAEvD,eAAA3pC;AAAAA,iBACE,KAAK,IAAI;AAAA,sBACJ6nC,CAAI;AAAA,qBACLA,EAAK,IAAI;AAAA,6BACD,KAAK,gBAAgB;AAAA,yBACzB,KAAK,YAAY;AAAA,0BAChB,KAAK,aAAa;AAAA,qBACvB,KAAK,YAAY;AAAA,0BACZ,KAAK,aAAa;AAAA,0BAClB,KAAK,aAAa;AAAA,8BACd,KAAK,gBAAgB;AAAA,sBAC7B,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMvB+B,IAAc5pC,2CAA8CoH,CAAO;AAAA;AAAA,MAAA;AAAA,IAG3E;AAEA,SAAK,SAASsiC;AAAA,EAAA;AAAA,EAGN,aACRzpC,GACM;ArH1HV,QAAA5c;AqH2HI,UAAM,aAAa4c,CAAkB,GACjC,KAAK,QACP,KAAK,mBAAmB,SAAS,cAAc,IAAI,KAAK,GAAG,EAAE,GACzD,KAAK,qBACP,KAAK,iBAAiB,WAAW,OACjC5c,IAAA,KAAK,qBAAL,QAAAA,EAAuB;AAAA,MACrB;AAAA,MACA,KAAK,kBAAkB,KAAK,IAAI;AAAA;AAAA,EAGtC;AAAA,EAGF,WAAWuC,GAAoB;ArHxIjC,QAAAvC;AqHyII,KAAAA,IAAA,KAAK,qBAAL,QAAAA,EAAuB;AAAA,MACrB,IAAI,YAAY,mBAAmB;AAAA,QACjC,SAAS;AAAA,QACT,UAAU;AAAA,QACV,QAAQuC,EAAM;AAAA,MACf,CAAA;AAAA;AAAA,EACH;AAAA,EAGF,SAAS;ArHlJX,QAAAvC;AqHmJI,WAAO2c,IAAO,KAAK,OAAO,SAAS,IAC7BA;AAAAA;AAAAA;AAAAA,oBAGU,KAAK,IAAI;AAAA,oBACTE,EAAU,KAAK,KAAK,CAAC;AAAA,kCAE/BkH,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI/jB,IAAA,KAAK,cAAL,OAAAA,IAAkBlB,EAAE,oBAAoB,CAAC;AAAA,2BACnC,KAAK,UAAU;AAAA,UAChC,KAAK,MAAM;AAAA;AAAA,EAAA;AAGrB;AArIqBsnD,GA4CH,SAASrpC,EAAUC,EAAM;AAzCbE,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAHPipC,GAGS,WAAA,OAAA,CAAA;AAGgBlpC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GANvBipC,GAMyB,WAAA,YAAA,CAAA;AAGhClpC,GAAA;AAAA,EAAXC,EAAS;AAAA,GATSipC,GASP,WAAA,SAAA,CAAA;AAGgBlpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAZPipC,GAYS,WAAA,oBAAA,CAAA;AAGAlpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAfPipC,GAeS,WAAA,gBAAA,CAAA;AAKIlpC,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GApBXipC,GAoBa,WAAA,oBAAA,CAAA;AAKJlpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAzBPipC,GAyBS,WAAA,iBAAA,CAAA;AAGAlpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA5BPipC,GA4BS,WAAA,gBAAA,CAAA;AAKAlpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAjCPipC,GAiCS,WAAA,iBAAA,CAAA;AAM5BlpC,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtCPipC,GAuCnB,WAAA,iBAAA,CAAA;AAGQlpC,GAAA;AAAA,EADPgH,EAAM;AAAA,GAzCYkiC,GA0CX,WAAA,UAAA,CAAA;AA1CWA,KAArBlpC,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClB+oC,EAAA;;;;;;;AC2BrB,IAAqBI,KAArB,cAAoD5/B,GAAW1kB,CAAU,EAAE;AAAA,EAA3E,cAAA;AAAA,UAAA,GAAA,SAAA,GAEyD,KAAA,WAAA,IAcA,KAAA,UAAA,IAGA,KAAA,mBAAA,QAGf,KAAA,WAAA,QAGI,KAAA,eAAA,QAiBN,KAAA,SAAA,IAGC,KAAA,WAAA,KAYQ,KAAA,WAAA,QAGK,KAAA,gBAAA,SAIlD,KAAA,gBAAA,MAEO,KAAQ,iBAAgC,MACxC,KAAQ,gBAA+B,MAEhD,KAAQ,YAAsB;AAAA,EAAA;AAAA,EAM9B,OAAOsiD,GAA+B;AACpC,SAAK,KAAK,mBAAmB,EAAE,MAAMA,KAAQ,KAAK,UAAU;AAAA,EAAA;AAAA,EAGtD,eAAeA,GAAwC;AACvD,UAAA79C,IAAO69C,EAAK,KAAK,YAAY;AAEnC,WAAI79C,EAAK,WAAW,QAAQ,IAAU,UAClCA,EAAK,WAAW,QAAQ,IAAU,UAClCA,EAAK,WAAW,QAAQ,IAAU,UAEpCA,EAAK,WAAW,OAAO,KACvBA,EAAK,SAAS,UAAU,KACxBA,EAAK,SAAS,MAAM,KACpBA,EAAK,SAAS,OAAO,KACrBA,EAAK,SAAS,YAAY,KAC1BA,EAAK,SAAS,cAAc,KAC5BA,EAAK,SAAS,aAAa,IAEpB,aAELA,EAAK,SAAS,KAAK,IAAU,QAE1B;AAAA,EAAA;AAAA,EAGD,kBAAqC;AAC3C,QAAIse,IAAO;AACX,YAAQ,KAAK,WAAW;AAAA,MACtB,KAAK;AACI,QAAAA,IAAA;AACP;AAAA,MACF,KAAK;AACI,QAAAA,IAAA;AACP;AAAA,MACF,KAAK;AACI,QAAAA,IAAA;AACP;AAAA,MACF,KAAK;AACI,QAAAA,IAAA;AACP;AAAA,MACF,KAAK;AACI,eAAAtI;AAAAA,kBACGlc;AAAA,UACN;AAAA,UACA,uBAAuB,KAAK,aAAa;AAAA,UACzC;AAAA,QACD,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAkCL;AACS,QAAAwkB,IAAA;AACP;AAAA,IAAA;AAGG,WAAAtI;AAAAA,cACGlc;AAAA,MACN;AAAA,MACA,uBAAuB,KAAK,aAAa;AAAA,IAC1C,CAAA;AAAA,aACMwkB,CAAI;AAAA,EAAA;AAAA,EAGD,kBAAkBu/B,GAAoC;AAAA,WAAAnkD,EAAA;AAC9D,aAAA,KAAK,cAAc,UACd,IAAI,QAAQ,CAAWgD,MAAA;AACtB,cAAAojD,IAAS,SAAS,cAAc,QAAQ,GACxCC,IAAMD,EAAO,WAAW,IAAI,GAC5BE,IAAM,IAAI,MAAM;AAEtB,QAAAA,EAAI,SAAS,MAAM;AACjB,gBAAMC,IACJ,KAAK,kBAAkB,QACnB,KACA,KAAK,kBAAkB,OACrB,KACA,KAAK,kBAAkB,OACrB,KACA,KAAK,kBAAkB,OACrB,KACA,IAENvlB,IAAQ,KAAK,IAAIulB,IAAUD,EAAI,OAAOC,IAAUD,EAAI,MAAM;AACzD,UAAAF,EAAA,QAAQE,EAAI,QAAQtlB,GACpBolB,EAAA,SAASE,EAAI,SAAStlB,GAE7BqlB,KAAA,QAAAA,EAAK,UAAUC,GAAK,GAAG,GAAGF,EAAO,OAAOA,EAAO,SAC/CpjD,EAAQojD,EAAO,UAAU,cAAc,GAAG,CAAC;AAAA,QAC7C,GAEIE,EAAA,UAAU,MAAMtjD,EAAQ,IAAI,GAC5BsjD,EAAA,MAAM,IAAI,gBAAgBnC,CAAI;AAAA,MAAA,CACnC,IAGI;AAAA,IAAA;AAAA;AAAA,EAGK,sBAAsB;AAAA,WAAAnkD,EAAA;AAClC,UAAI,KAAK;AAGH,YAFJ,KAAK,YAAY,KAAK,eAAe,KAAK,QAAQ,GAE9C,KAAK,oBAAoB;AAc3B,cAZI,KAAK,kBAAkB,OAAO,IAAI,mBAAoB,cACpD,IAAA,gBAAgB,KAAK,cAAc,GAIrC,OAAO,IAAI,mBAAoB,aACjC,KAAK,iBAAiB,IAAI,gBAAgB,KAAK,QAAQ,IAEvD,QAAQ,KAAK,uDAAuD,GAIlE,KAAK,kBAAkB,UAAU,KAAK,cAAc;AAClD,gBAAA;AACF,mBAAK,gBAAgB,MAAM,KAAK,kBAAkB,KAAK,QAAQ,GAE/D,KAAK,cAAc;AAAA,qBACZ4S,GAAO;AACN,sBAAA,KAAK,iCAAiCA,CAAK;AAAA,YAAA;AAAA,eAG9C,OAAO,KAAK,YAAa,YAAY,UAAU,KAAK,YAErD,QAAA;AAAA,UACN;AAAA,QACF;AAAA,IAEJ;AAAA;AAAA,EAGF,uBAAuB;AACrB,IAAI,KAAK,kBAAkB,OAAO,IAAI,mBAAoB,eACpD,IAAA,gBAAgB,KAAK,cAAc,GACvC,KAAK,iBAAiB,OAEpB,KAAK,kBAEP,KAAK,gBAAgB;AAAA,EACvB;AAAA,EAGM,gBAAgB1Q,GAAc;AACpC,IAAAA,EAAM,eAAe,GAEjB,KAAK,iBAEA,OAAA,KAAK,KAAK,gBAAgB,QAAQ,IAChC,KAAK,OAEd,OAAO,KAAK,KAAK,MAAM,KAAK,UAAU,QAAQ,IAE9C,QAAQ,KAAK,kDAAkD;AAAA,EACjE;AAAA,EAGF,oBAAoB;AAClB,UAAM,kBAAkB,GACxB,KAAK,oBAAoB;AAAA,EAAA;AAAA,EAG3B,QAAQ8hB,GAAqC;AAC3C,UAAM,QAAQA,CAAiB,GAG3BA,EAAkB,IAAI,UAAU,MAClC,KAAK,qBAAqB,GAC1B,KAAK,oBAAoB;AAAA,EAC3B;AAAA,EAGF,uBAAuB;AACrB,UAAM,qBAAqB,GAC3B,KAAK,qBAAqB;AAAA,EAAA;AAAA,EAG5B,IAAI,gBAAgB;AtHvVtB,QAAArkB;AsHyVI,UAAM6mD,IAAQ,CAAC,KAAK,MAAM,MAAM,IAAI,GAE9B/iC,MAAO9jB,IAAA,KAAK,aAAL,gBAAAA,EAAe,SAAQ;AAEhC,QAAA,CAAC,CAAC8jB;AACG,aAAA,KAAK+iC,EAAM,CAAC,CAAC;AAGhB,UAAAxnD,IAAI,KAAK,MAAM,KAAK,IAAIykB,CAAI,IAAI,KAAK,IAAI,IAAQ,CAAC;AAExD,WAAO,GAAG,YAAYA,IAAO,KAAK,IAAI,MAAUzkB,CAAC,GAAG,QAAQ,CAAc,CAAC,CAAC,IAAIwnD,EAAMxnD,CAAC,CAAC;AAAA,EAAA;AAAA,EAG1F,SAAS;AtHtWX,QAAAW,GAAAC,GAAAE,GAAAC;AsHuWI,WACE,KAAK,YACLuc;AAAAA;AAAAA;AAAAA,kBAGYlc,EAAK,kBAAkB,mBAAmB,KAAK,IAAI,IAAI;AAAA,MAC7D,4BAA4B,KAAK;AAAA,IAAA,CAClC,CAAC;AAAA;AAAA;AAAA,uBAGW,KAAGT,IAAA,KAAK,aAAL,gBAAAA,EAAe,SAAQ,EAAE,IAAI,KAAK,UAAUlB,EAAE,qBAAqB,IAAI,EAAE,IAAI,KAAK,WAAW,KAAK,WAAW,EAAE,EAAE;AAAA,YAC/H,KAAK,mBACH6d;AAAAA,kBACI,KAAK,iBAAiB;AAAA,MACtB,MAAM,KAAK;AAAA,MACX,eAAe,KAAK,kBAAkB;AAAA,MACtC,MAAM,KAAK;AAAA,MACX,QAAQ,KAAK;AAAA,MACb,KAAK,KAAK;AAAA,MACV,UAAU,KAAK;AAAA,MACf,cAAc,KAAK,gBAAgB;AAAA,MACnC,UAAU,KAAK,YAAY;AAAA,MAC3B,kBAAkB,KAAK,oBAAoB;AAAA,MAC3C,eAAe,KAAK;AAAA,MACpB,UAAU,KAAK;AAAA,MACf,cAAc,KAAK;AAAA,MACnB,SAAS,KAAK,WAAW;AAAA,MACzB,eAAe,KAAK;AAAA,MACpB,UAAU,KAAK;AAAA,MACf,eAAe,KAAK;AAAA,MACpB,cAAc,KAAK;AAAA,MACnB,eAAe,KAAK;AAAA,MACpB,iBAAiB,KAAK;AAAA,MACtB,cAAc,KAAK;AAAA,IAAA,CACpB,CAAC;AAAA,wBAEJA;AAAAA,oBACM,KAAK,kBAAkB,UAAU,KAAK,gBACpCA;AAAAA;AAAAA,gCAEUlc;AAAA,MACN;AAAA,MACA,uBAAuB,KAAK,aAAa;AAAA,IAC1C,CAAA;AAAA,8BACK,KAAK,aAAa;AAAA,8BAClB,KAAGR,IAAA,KAAK,aAAL,gBAAAA,EAAe,SAAQ,EAAE,YAAY;AAAA,6CAEhD,KAAK,kBAAkB,UACrB,KAAK,cAAc,YACnB,KAAK,gBAAgB,IACrB8jB,CAAO;AAAA;AAAA,8CAEa5jB,IAAA,KAAK,aAAL,gBAAAA,EAAe,SAAQ,EAAE;AAAA,sBAC/C,KAAK,iBAAiB,WACvB,KAAK,kBAAkB,KAAK,QACzBwc;AAAAA;AAAAA;AAAAA,oCAGY,KAAK,kBAAkB,KAAK,IAAI;AAAA,qCAC/BE,EAAU,KAAK,MAAM,CAAC;AAAA,kCACzBA,EAAU,KAAK,GAAG,CAAC;AAAA,wCACb,KAAK,aAAa,SAC1B,KACA,MAAS;AAAA,qCACJ,KAAK,eAAe;AAAA,+BAC1B,KAAK,gBACJ,KAAK,gBACL/d,EAAE,gBAAgB,CAAC;AAAA;AAAA,6BAG3BilB,CAAO;AAAA;AAAA;AAAA,sBAGT,KAAK,WACHpH;AAAAA;AAAAA,kCAEUlc;AAAA,MACN;AAAA,MACA,sBAAsB,KAAK,IAAI;AAAA,IAChC,CAAA;AAAA,uCACY3B,EAAE,sBAAsB;AAAA,MACnC,MAAM,KAAK;AAAA,IAAA,CACZ,CAAC;AAAA,6BACC,KAAK,aAAa;AAAA,6BAEvBilB,CAAO;AAAA,sBACT,KAAK,UACHpH;AAAAA;AAAAA;AAAAA;AAAAA,uCAIe7d;AAAAA,MACX;AAAA,IAAA,CACD,uBACHilB,CAAO;AAAA,sBACT,KAAK,qBAAqB,SACxBpH;AAAAA;AAAAA;AAAAA,uCAGe,KAAK,QAAQ;AAAA,iCACnB,KAAK,IAAiC;AAAA,wCAC/B,GAAG7d,EAAE,kBAAkB,CAAC,MAAIsB,IAAA,KAAK,aAAL,gBAAAA,EAAe,SAAQ,EAAE,EAAE;AAAA;AAAA,mCAE5D,MAAM,KAAK,OAAO,KAAK,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAO3C2jB,CAAO;AAAA;AAAA;AAAA,kBAGb,KAAK,YACPpH;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,mCAKmBE,EAAU,KAAK,YAAY,CAAC;AAAA,8BACjC,KAAK,MAAM;AAAA;AAAA;AAAA,mDAGU,KAAK,QAAQ;AAAA;AAAA,iBAE/C,EAAE;AAAA;AAAA;AAAA,EAAA;AAKnB;AA/aqB2pC,GAuEH,SAASzsB;AAAAA,MACrBhd,EAAUC,EAAM,CAAC;AAAA;AAtEuBE,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAFvBqpC,GAEyB,WAAA,YAAA,CAAA;AAGhBtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GALPqpC,GAKS,WAAA,aAAA,CAAA;AAGAtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GARPqpC,GAQS,WAAA,YAAA,CAAA;AAKAtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAbPqpC,GAaS,WAAA,gBAAA,CAAA;AAGgBtpC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAhBvBqpC,GAgByB,WAAA,WAAA,CAAA;AAGhBtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAnBPqpC,GAmBS,WAAA,oBAAA,CAAA;AAGAtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtBPqpC,GAsBS,WAAA,YAAA,CAAA;AAGAtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAzBPqpC,GAyBS,WAAA,gBAAA,CAAA;AAKItpC,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GA9BXqpC,GA8Ba,WAAA,oBAAA,CAAA;AAKJtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAnCPqpC,GAmCS,WAAA,iBAAA,CAAA;AAI5BtpC,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAQ,WAAWsJ,GAAqB,CAAA;AAAA,GAtCvC+/B,GAuCnB,WAAA,YAAA,CAAA;AAG6BtpC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA1CRqpC,GA0CU,WAAA,UAAA,CAAA;AAGDtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA7CPqpC,GA6CS,WAAA,YAAA,CAAA;AAGAtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhDPqpC,GAgDS,WAAA,QAAA,CAAA;AAGAtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAnDPqpC,GAmDS,WAAA,OAAA,CAAA;AAGAtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtDPqpC,GAsDS,WAAA,UAAA,CAAA;AAGAtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAzDPqpC,GAyDS,WAAA,YAAA,CAAA;AAGAtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA5DPqpC,GA4DS,WAAA,iBAAA,CAAA;AAGAtpC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA/DPqpC,GA+DS,WAAA,iBAAA,CAAA;AAGXtpC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAlEYsiC,GAkEF,WAAA,kBAAA,CAAA;AACAtpC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAnEYsiC,GAmEF,WAAA,iBAAA,CAAA;AAETtpC,GAAA;AAAA,EADPgH,EAAM;AAAA,GApEYsiC,GAqEX,WAAA,aAAA,CAAA;AArEWA,KAArBtpC,GAAA;AAAA,EADCG,EAAc,6BAA6B;AAAA,GACvBmpC,EAAA;;;;;;;ACnBrB,IAAqBM,KAArB,cAA4ClgC;AAAA,EAC1CT,GAAejkB,CAAU;AAC3B,EAAE;AAAA,EAFF,cAAA;AAAA,UAAA,GAAA,SAAA,GAMiD,KAAA,WAAA;AAAA,EAAA;AAAA,EAI/C,mBAAmB;AACjB,WAAAihB,GAAiB,IAAI,GACd;AAAA,EAAA;AAAA,EAGT,SAAS;AACA,WAAAxG;AAAAA;AAAAA,OAEJG,GAAa,KAAK,QAAQ,CAAC;AAAA;AAAA,kBAEhBrc,EAAK,aAAa,cAAc,KAAK,IAAI,IAAI;AAAA,MACnD,uBAAuB,KAAK;AAAA,MAC5B,uBAAuB,KAAK;AAAA,MAC5B,uBAAuB,KAAK;AAAA,MAC5B,qBAAqB,KAAK;AAAA,IAAA,CAC3B,CAAC;AAAA,gBACIoc,EAAU,KAAK,GAAG,CAAC;AAAA,YACvB,KAAK,KAAK;AAAA,YAEV,KAAK,WACDF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,qBAMA,IACN;AAAA,YAEE,KAAK,WACDA;AAAAA;AAAAA,0BAEUlc,EAAK,iCAAiC;AAAA,MAC5C,CAAC,kCAAkC,KAAK,IAAI,EAAE,GAAG,KAAK;AAAA,IAAA,CACvD,CAAC;AAAA,oBACA,KAAK,aAAa;AAAA,2BAEtB,IACN;AAAA,YACEqc,GAAa,KAAK,QAAQ,CAAC;AAAA,EAAA;AAEvC;AAnDqBgqC,GAQH,SAAS/pC,EAAUC,EAAM;AAJ7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAJS2pC,GAIP,WAAA,OAAA,CAAA;AAEgB5pC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GANP2pC,GAMS,WAAA,YAAA,CAAA;AANTA,KAArB5pC,GAAA;AAAA,EADCG,EAAc,mBAAmB;AAAA,GACbypC,EAAA;;;;;;;ACIA,IAAAC,KAArB,cAA6ChgC,GAAmB;AAAA,EAK9D,mBAAmB;AxHhDrB,QAAA/mB;AwHiDU,UAAAgnD,KACJhnD,IAAA,KAAK,UAAU,KAAK,CAAAysB,MAASA,EAAM,OAAO,MAA1C,OAAAzsB,IAA+C,KAAK,UAAU,CAAC;AAEjE,IAAAgnD,KAAA,QAAAA,EAAc;AAAA,EAAM;AAAA,EAGd,WAAW;AACV,WAAA;AAAA,MACL,GAAG,KAAK;AAAA,QACN;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA;AAAA,EAGF,yBACE5kD,GACAonB,GACAnnB,GACA;AACM,UAAA,yBAAyBD,GAAMonB,GAAMnnB,CAAK,IAC5CD,MAAS,cAAcA,MAAS,cAC7B,KAAA,SAAA,EAAW,QAAQ,CAAQkjB,MAAA;AACzB,MAAAA,EAAAljB,CAAI,IAAIC,MAAU;AAAA,IAAA,CACxB;AAAA,EACH;AAAA,EAGF,SAAS;AACA,WAAAsa;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,oBAKS,KAAK,QAAQ;AAAA;AAAA,2BAEN,eAAe,KAAK,UAAU,EAAE;AAAA,4BAC/BE,EAAU,KAAK,UAAU,CAAC;AAAA;AAAA;AAAA,cAGxC,KAAK,SACPF;AAAAA;AAAAA;AAAAA,sBAGU,KAAK,IAAI;AAAA,0BACL,KAAK,QAAQ;AAAA,0BACb,KAAK,QAAQ;AAAA,+BACR,KAAK,aAAa;AAAA,0BACvB,KAAK,QAAQ;AAAA,wBACf,KAAK,MAAM;AAAA,sBACbE,EAAU,KAAK,KAAK,CAAC;AAAA,uBACpB,KAAK,gBAAgB;AAAA,iCACX;AAAA,cACnB,KAAK,WACPF;AAAAA;AAAAA,wBAEY,KAAK,OAAO;AAAA;AAAA,0BAEV,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKlB,KAAK,gBAAgB;AAAA,uBAC3B,KAAK,IAAiC;AAAA,2BAClC,KAAK,SAAS,OAAO,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,8BAK7B;AAAA;AAAA,YAElB,KAAK,eACPA;AAAAA;AAAAA;AAAAA;AAAAA,qBAIWE,EAAU,KAAK,IAA6B,CAAC;AAAA;AAAA,gBAElD,KAAK,WAAW;AAAA;AAAA,WAErB;AAAA;AAAA;AAAA;AAAA;AAAA,UAKD,KAAK,YAAY,KAAK,gBAAiB,CAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAKvC,kBAAkBta,GAAc;AAE/B,KADQA,KAAA,gBAAAA,EAAO,QACf,aAAa,QAAQ,MAAM;AAAA,EAAA;AAAA,EAG5B,kBAAkB;AACjB,WAAAoa;AAAAA;AAAAA;AAAAA,uBAGYE,EAAU,KAAK,YAAY,CAAC;AAAA,wBAC3BA,EAAU,KAAK,IAA0B,CAAC;AAAA;AAAA,kBAEhD,KAAK,MAAM;AAAA;AAAA;AAAA,yBAGJ,KAAK,iBAAiB;AAAA,UACrC,KAAK,QAAQ;AAAA;AAAA;AAAA,EAAA;AAIvB;AApHqBkqC,GACH,SAAShqC,EAAUC,EAAM;AAEhBE,GAAA;AAAA,EAAxBO,GAAsB;AAAA,GAHJspC,GAGM,WAAA,aAAA,CAAA;AAHNA,KAArB7pC,GAAA;AAAA,EADCG,EAAc,oBAAoB;AAAA,GACd0pC,EAAA;;;;;;AChCrB,MAAME,KAAY,CAAC,WAAW,aAAa,aAAa,cAAc,GAAG;AAsCpD,IAAAC,KAArB,cAA6CngC,GAAmB;AAAA,EAAhE,cAAA;AAAA,UAAA,GAAA,SAAA,GAIiD,KAAA,mBAAA,UAGnB,KAAA,gBAAA;AAAA,EAAA;AAAA,EAM5B,WAAW1C,GAAyC;AAClD,UAAM,WAAWA,CAAiB,GAG9BA,EAAkB,IAAI,OAAO,MAC1B,KAAA,iBAAiBA,EAAkB,IAAI,OAAO;AAAA,EACrD;AAAA,EAGF,QAAQA,GAAyC;AAC/C,UAAM,QAAQA,CAAiB,GAG3BA,EAAkB,IAAI,OAAO,KAAK,KAAK,mBAAmB,KAAK,SACjE,KAAK,kBAAkB;AAAA,EACzB;AAAA,EAGF,yBACEjiB,GACAonB,GACAnnB,GACA;AACM,UAAA,yBAAyBD,GAAMonB,GAAMnnB,CAAK,IAC5CD,MAAS,cAAcA,MAAS,cAC7B,KAAA,aAAA,EAAe,QAAQ,CAAQkjB,MAAA;AAC7B,MAAAA,EAAAljB,CAAI,IAAIC,MAAU;AAAA,IAAA,CACxB;AAAA,EACH;AAAA,EAGM,kBAAkBE,GAAc;AAE/B,KADQA,KAAA,gBAAAA,EAAO,QACf,aAAa,QAAQ,MAAM;AAAA,EAAA;AAAA,EAG5B,eAAe;AACrB,WAAO,CAAC,GAAG,KAAK,iBAAmC,qBAAqB,CAAC;AAAA,EAAA;AAAA,EAGnE,oBAAoB;AACpB,UAAA4kD,IAAS,KAAK,aAAa;AAQ7B,QANJA,EAAO,QAAQ,CAASC,MAAA;AAChB,MAAAA,EAAA,UAAUA,EAAM,UAAU,KAAK,OACrCA,EAAM,OAAO,KAAK;AAAA,IAAA,CACnB,GAGG,CAAC,KAAK,OAAO;AACf,YAAMC,IAAiBF,EAAO,KAAK,CAASC,MAAA,CAACA,EAAM,QAAQ;AAC3D,MAAIC,MACFA,EAAe,YAAY;AAAA,IAC7B;AAGG,SAAA,UAAU,aAAa,KAAK,KAAK,GACtC,KAAK,YAAY;AAAA,EAAA;AAAA,EAGL,oBAAoB;AAAA,WAAAhnD,EAAA;AAC1B,YAAA8mD,IAAS,KAAK,aAAa;AAU7B,UARJ,MAAM,QAAQ;AAAA,QACZA,EAAO,IAAI,CAAMC,MAAS/mD,EAAA;AACxB,gBAAM+mD,EAAM,gBACNA,EAAA,UAAUA,EAAM,UAAU,KAAK,OACrCA,EAAM,OAAO,KAAK;AAAA,QACnB,EAAA;AAAA,MACH,GAEI,CAAC,KAAK,OAAO;AACf,cAAMC,IAAiBF,EAAO,KAAK,CAASC,MAAA,CAACA,EAAM,QAAQ;AAC3D,QAAIC,MACFA,EAAe,YAAY;AAAA,MAC7B;AAGG,WAAA,UAAU,aAAa,KAAK,KAAK,GACtC,KAAK,YAAY;AAAA,IAAA;AAAA;AAAA,EAGX,iBAAiB9kD,GAAmB;AACpC,UAAAsC,IAAUtC,EAAM,OAAuB;AAAA,MAC3C;AAAA,IACF,GACM4kD,IAAS,KAAK,aAAa,GAC3BjhC,IAAW,KAAK;AAEtB,IAAIrhB,EAAQ,aAIZ,KAAK,QAAQA,EAAQ,OACrBsiD,EAAO,QAAQ,CAAAC,MAAUA,EAAM,UAAUA,MAAUviD,CAAO,GAEtD,KAAK,UAAUqhB,MACZ,KAAA,KAAK,cAAc,EAAE,OAAOrhB,EAAQ,OAAO,SAAS,IAAM,GAE1D,KAAA,UAAU,aAAa,KAAK,KAAK,GACtC,KAAK,YAAY;AAAA,EACnB;AAAA,EAGM,cAActC,GAAsB;AzHtK9C,QAAAvC;AyHuKI,QAAI,CAACinD,GAAU,SAAS1kD,EAAM,GAAG;AAC/B;AAGI,UAAA4kD,IAAS,KAAK,aAAa,EAAE,OAAO,CAASC,MAAA,CAACA,EAAM,QAAQ,GAC5DE,KAAetnD,IAAAmnD,EAAO,KAAK,CAAAC,MAASA,EAAM,OAAO,MAAlC,OAAApnD,IAAuCmnD,EAAO,CAAC,GAC9DI,IACJhlD,EAAM,QAAQ,MACV,IACA,CAAC,WAAW,WAAW,EAAE,SAASA,EAAM,GAAG,IACzC,KACA,GACF2jB,IAAW,KAAK;AACtB,QAAI7d,IAAQ8+C,EAAO,QAAQG,CAAY,IAAIC;AAE3C,IAAIl/C,IAAQ,MACVA,IAAQ8+C,EAAO,SAAS,IAGtB9+C,IAAQ8+C,EAAO,SAAS,MAClB9+C,IAAA,IAGL,KAAA,aAAA,EAAe,QAAQ,CAAS++C,MAAA;AACnC,MAAAA,EAAM,UAAU,IAChBA,EAAM,WAAW;AAAA,IAAA,CAClB,GAEI,KAAA,QAAQD,EAAO9+C,CAAK,EAAE,OACpB8+C,EAAA9+C,CAAK,EAAE,UAAU,IAEjB8+C,EAAA9+C,CAAK,EAAE,WAAW,GAClB8+C,EAAA9+C,CAAK,EAAE,MAAM,GAEhB,KAAK,UAAU6d,MACZ,KAAA,KAAK,cAAc,EAAE,OAAOihC,EAAO9+C,CAAK,EAAE,OAAO,SAAS,IAAM,GAEhE,KAAA,UAAU,aAAa,KAAK,KAAK,GACtC,KAAK,YAAY,IAGnB9F,EAAM,eAAe;AAAA,EAAA;AAAA,EAGvB,cAAoB;AAElB,UAAMilD,IADS,KAAK,aAAa,EACV,KAAK,CAAAJ,MAASA,EAAM,OAAO;AAE9C,IAAA,KAAK,YAAY,CAACI,IACpB,KAAK,UAAU;AAAA,MACb,EAAE,cAAc,GAAK;AAAA,MACrB,KAAK;AAAA,MACL,KAAK;AAAA,IACP,IAEK,KAAA,UAAU,YAAY,EAAE;AAAA,EAC/B;AAAA,EAGF,IAAI,oBAA4B;AACvB,WAAA;AAAA,EAAA;AAAA,EAGT,gBAAgB;AACd,WAAO,CAAC,KAAK,YAAY,GAAQ,KAAK,YAAY,KAAK;AAAA,EAAK;AAAA,EAG9D,IAAI,WAAW;AACN,WAAAjnD,EAAAC,EAAA,IACF,KAAK,UAAU,WADb;AAAA,MAEL,OAAO,KAAK,cAAc;AAAA,MAC1B,cAAc,KAAK,YAAY,CAAC,KAAK;AAAA,IACvC;AAAA,EAAA;AAAA,EAGF,iBAAiB;AACf,WAAO,KAAK,WAAW,KAAK,cAAkB,IAAA;AAAA,EAAA;AAAA,EAGhD,mBAAmB;AzHtPrB,QAAAR;AyHuPU,UAAAmnD,IAAS,KAAK,aAAa;AAGjC,MAFqBnnD,IAAAmnD,EAAO,KAAK,CAAAC,MAASA,EAAM,OAAO,MAAlC,OAAApnD,IAAuCmnD,EAAO,CAAC,GAEvD,MAAM;AAAA,EAAA;AAAA,EAGrB,cAAc5kD,GAAc;AAC1B,IAAAA,EAAM,eAAe;AAAA,EAAA;AAAA,EAGvB,SAAS;AACA,WAAAoa;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,oBAKS,KAAK,QAAQ;AAAA,eAClBE,EAAU,KAAK,IAAI,CAAC;AAAA,eACpB,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA,wBAIA,KAAK,QAAQ;AAAA,2BACV,eAAe,KAAK,UAAU,EAAE;AAAA,4BAC/BA,EAAU,KAAK,UAAU,CAAC;AAAA,mBACnC,KAAK,aAAa;AAAA;AAAA;AAAA,cAGvB,KAAK,SACPF;AAAAA;AAAAA;AAAAA,sBAGU,KAAK,IAAI;AAAA,0BACL,KAAK,QAAQ;AAAA,+BACR,KAAK,aAAa;AAAA,0BACvB,KAAK,QAAQ;AAAA,wBACf,KAAK,MAAM;AAAA,0BACT,KAAK,QAAQ;AAAA,sBACjBE,EAAU,KAAK,KAAK,CAAC;AAAA,uBACpB,KAAK,gBAAgB;AAAA,iCACX;AAAA,cACnB,KAAK,WACPF;AAAAA;AAAAA,wBAEY,KAAK,OAAO;AAAA;AAAA,0BAEV,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKlB,KAAK,gBAAgB;AAAA,uBAC3B,KAAK,IAAiC;AAAA,2BAClC,KAAK,SAAS,OAAO,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,8BAK7B;AAAA;AAAA,YAElB,KAAK,eACPA;AAAAA;AAAAA;AAAAA;AAAAA,qBAIWE,EAAU,KAAK,IAA6B,CAAC;AAAA;AAAA,gBAElD,KAAK,WAAW;AAAA;AAAA,WAErB;AAAA;AAAA;AAAA,+CAGoC,KAAK,aAAa;AAAA;AAAA,qBAE5C,KAAK,gBAAgB;AAAA,uBACnB,KAAK,aAAa;AAAA,oBACrB,KAAK,MAAM;AAAA,qBACV,KAAK,OAAO;AAAA,0BACP,KAAK,iBAAiB;AAAA;AAAA,UAEtC,KAAK,YAAY,KAAK,gBAAiB,CAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAKvC,kBAAkB;AACjB,WAAAF;AAAAA;AAAAA;AAAAA,uBAGYE,EAAU,KAAK,YAAY,CAAC;AAAA,wBAC3BA,EAAU,KAAK,IAAmB,CAAC;AAAA;AAAA,kBAEzC,KAAK,MAAM;AAAA;AAAA;AAAA,yBAGJ,KAAK,iBAAiB;AAAA,UACrC,KAAK,QAAQ;AAAA;AAAA;AAAA,EAAA;AAIvB;AA1SqBqqC,GAWH,SAASnqC,EAAUC,EAAM;AAP7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAJS+pC,GAIP,WAAA,oBAAA,CAAA;AAEMhqC,GAAA;AAAA,EAAjB7E,GAAM,SAAS;AAAA,GANG6uC,GAMD,WAAA,eAAA,CAAA;AACNhqC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAPS+pC,GAOP,WAAA,iBAAA,CAAA;AAPOA,KAArBhqC,GAAA;AAAA,EADCG,EAAc,oBAAoB;AAAA,GACd6pC,EAAA;;;;;;;ACjBA,IAAAO,KAArB,cAAuCvlD,EAAW;AAAA,EAAlD,cAAA;AAAA,UAAA,GAAA,SAAA,GAM+D,KAAA,OAAA,MAIV,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aACR0a,GACM;AACN,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AACA,WAAAD;AAAAA,oBACSlc,EAAK,QAAQ,CAAA,CAAE,CAAC;AAAA,UAC1B,KAAK,OAAO,KAAK,cAAkB,IAAA,KAAK,aAAc,CAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAKtD,gBAAgB;A1H9D1B,QAAAT,GAAAC,GAAAE;A0H+DU,UAAAunD,IAAU,eAAe,KAAK,IAAI;AAEjC,WAAA/qC;AAAAA,QACHG,GAAa4qC,CAAO,CAAC;AAAA;AAAA,gBAEd1nD,IAAA,KAAK,eAAL,OAAAA,IAAmB,KAAK,eAAe,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA,uBAG1CC,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,sBAC1BE,IAAA,KAAK,cAAL,OAAAA,IAAkB,EAAE;AAAA,mBACtB,KAAK,YAAY,IAAI,EAAE;AAAA;AAAA,UAEhC2c,GAAa4qC,CAAO,CAAC;AAAA;AAAA,EAAA;AAAA,EAIrB,eAAe;AACd,WAAA/qC;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,qBAAqB,EAAE,CAAC,KAAK,IAAI,GAAG,GAAK,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAMtD,eAAeqjB,GAAwB;AAE7C,YAAQA,GAAM;AAAA,MACZ,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT;AACS,eAAA;AAAA,IAAA;AAAA,EACX;AAEJ;AA5EqB2jC,GAYH,SAAS1qC,EAAUC,CAAM;AAV7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAFSsqC,GAEP,WAAA,QAAA,CAAA;AAIAvqC,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSsqC,GAMP,WAAA,QAAA,CAAA;AAEgBvqC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GARPsqC,GAQS,WAAA,cAAA,CAAA;AAECvqC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAVRsqC,GAUU,WAAA,aAAA,CAAA;AAVVA,KAArBvqC,GAAA;AAAA,EADCG,EAAc,aAAa;AAAA,GACPoqC,EAAA;;;;;;;ACsCA,IAAAE,KAArB,cAA6CzlD,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAIyD,KAAA,UAAA,WAGF,KAAA,QAAA,IAKL,KAAA,OAAA,MAQO,KAAA,WAAA,IAMhB,KAAA,WAAA;AAAA,EAAA;AAAA,EAU7B,aACR0a,GACM;AAGN,QAFA,MAAM,aAAaA,CAAkB,GAEjC,KAAK,YAAY;AACnB,YAAMgI,IAAW,KAAK,WAAW,cAAc,MAAM;AACrD,MAAIA,MAEAA,EAAS,mBAAmB,WAAW,KACvC,KAAK,aAAa,UAElBA,EAAS,mBAAmB,CAAC,EAAE,aAAa,QAAQ,KAAK,IAAI,GAI7DA,EAAS,mBAAmB,WAAW,KACvC,KAAK,aAAa,WAGfA,EAAA,mBAAmB,CAAC,EACpB,aAAa,cAAc,KAAK,SAAS,UAAU,GAEnDA,EAAA,mBAAmB,CAAC,EACpB,aAAa,QAAQ,KAAK,SAAS,UAAU;AAAA,IAEpD;AAAA,EACF;AAAA,EAGF,QAAQ;A3HxIV,QAAA5kB,GAAAC;A2HyII,KAAAA,KAAAD,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc,cAA/B,QAAAC,EAA0C;AAAA,EAAM;AAAA,EAGlD,SAAS;AACA,WAAA0c;AAAAA;AAAAA;AAAAA,oBAGS,KAAK,QAAQ;AAAA,qBACZE,EAAU,KAAK,SAAS,KAAK,EAAE;AAAA,eACrC,KAAK,QAAQ;AAAA,gBACZpc;AAAA,MACN;AAAA,MACA;AAAA,QACE,CAAC,gBAAgB,KAAK,IAAI,EAAE,GAC1B,KAAK,QAAQ,KAAK,aAAa;AAAA,MACnC;AAAA,MACA,EAAE,yBAAyB,KAAK,SAAS;AAAA,MACzC,EAAE,sBAAsB,KAAK,MAAM;AAAA,MACnC,gBAAgB,KAAK,OAAO;AAAA,IAAA,CAC7B;AAAA;AAAA,UAEC,KAAK,OACHkc;AAAAA;AAAAA;AAAAA,sBAGU,KAAK,IAAI;AAAA;AAAA,2BAEJE,EAAU,KAAK,SAAS,KAAK,EAAE;AAAA,2BAC/BA,EAAU,KAAK,QAAQ,CAAC;AAAA,qBAC9B,KAAK,IAAI;AAAA,8BAElBF,kBAAqB;AAAA;AAAA;AAAA,EAAA;AAIjC;AAtGqBgrC,GAkCH,SAAS5qC,EAAUC,EAAM;AA9BZE,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAJRwqC,GAIU,WAAA,WAAA,CAAA;AAGezqC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAPvBwqC,GAOyB,WAAA,SAAA,CAAA;AAKfzqC,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAZRwqC,GAYU,WAAA,QAAA,CAAA;AAKDzqC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAjBPwqC,GAiBS,WAAA,YAAA,CAAA;AAGgBzqC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GApBvBwqC,GAoByB,WAAA,YAAA,CAAA;AAMhCzqC,GAAA;AAAA,EAAXC,EAAS;AAAA,GA1BSwqC,GA0BP,WAAA,YAAA,CAAA;AAGAzqC,GAAA;AAAA,EAAXC,EAAS;AAAA,GA7BSwqC,GA6BP,WAAA,QAAA,CAAA;AAGAzqC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAhCSwqC,GAgCP,WAAA,QAAA,CAAA;AAhCOA,KAArBzqC,GAAA;AAAA,EADCG,EAAc,oBAAoB;AAAA,GACdsqC,EAAA;;;;;;ACYA,IAAAC,KAArB,cAAwCxjB,GAAiB;AAAA,EACvD,SAAS;AACP,WAAO,KAAK,YAAY;AAAA,EAAA;AAE5B;AAJqBwjB,KAArB1qC,GAAA;AAAA,EADCG,EAAc,cAAc;AAAA,GACRuqC,EAAA;;;;;;;ACxCrB,IAAqBC,KAArB,cAAwC1hC,GAAejkB,CAAU,EAAE;AAAA,EAGjE,SAAS;AACP,WAAO,KAAK,YAAY;AAAA,EAAA;AAE5B;AANqB2lD,GACH,SAAS9qC,EAAUC,EAAM;AADtB6qC,KAArB3qC,GAAA;AAAA,EADCG,EAAc,cAAc;AAAA,GACRwqC,EAAA;;;;;;;ACiCA,IAAAC,KAArB,cAAuC5lD,EAAW;AAAA,EAAlD,cAAA;AAAA,UAAA,GAAA,SAAA,GASqC,KAAA,UAAA,SAKF,KAAA,SAAA,SASN,KAAA,OAAA,KAG4B,KAAA,WAAA,IAGrB,KAAA,MAAA,uBAGM,KAAA,WAAA;AAAA,EAAA;AAAA,EAIhC,YAAYK,GAAc;AAChC,IAAI,KAAK,aACPA,EAAM,eAAe,GACrBA,EAAM,gBAAgB,IAGpB,CAAC,KAAK,YAAY,CAAC,KAAK,QACrB,KAAA,KAAK,aAAaA,CAAK;AAAA,EAC9B;AAAA,EAGO,QAAQ;A9H1HnB,QAAAvC,GAAAC;A8H2HQ,IAAC,KAAK,aACNA,KAAAD,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc,qBAA/B,QAAAC,EAAiE;AAAA,EACrE;AAAA,EAGF,SAAS;A9HhIX,QAAAD;A8HiIW,WAAA2c;AAAAA;AAAAA;AAAAA,oBAGS,KAAK,QAAQ;AAAA,qBACZE,GAAU7c,IAAA,KAAK,cAAL,OAAAA,IAAkB,EAAE,CAAC;AAAA,iBACnC,KAAK,MAAM;AAAA,eACb,KAAK,IAAI;AAAA,oBACJ,KAAK,QAAQ;AAAA,cACnB6c,EAAU,KAAK,SAAS,KAAK,MAAM,MAAS,CAAC;AAAA,gBAC3Cpc;AAAA,MACN;AAAA,MACA,SAAS,KAAK,IAAI;AAAA,MAClB,EAAE,cAAc,KAAK,KAAK;AAAA,MAC1B,EAAE,uBAAuB,KAAK,YAAY;AAAA,MAC1C,EAAE,kBAAkB,KAAK,SAAS;AAAA,MAClC,SAAS,KAAK,OAAO;AAAA,IACtB,CAAA;AAAA,iBACQ,KAAK,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAOjC;AA9EqBqnD,GAkCH,SAAS/qC,EAAUC,EAAM;AA9BZE,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAJR2qC,GAIU,WAAA,QAAA,CAAA;AAKjB5qC,GAAA;AAAA,EAAXC,EAAS;AAAA,GATS2qC,GASP,WAAA,WAAA,CAAA;AAKA5qC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAdS2qC,GAcP,WAAA,UAAA,CAAA;AAGiB5qC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAjBR2qC,GAiBU,WAAA,QAAA,CAAA;AAGA5qC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GApBR2qC,GAoBU,WAAA,eAAA,CAAA;AAGjB5qC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAvBS2qC,GAuBP,WAAA,QAAA,CAAA;AAGgC5qC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GA1BvB2qC,GA0ByB,WAAA,YAAA,CAAA;AAGhB5qC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA7BP2qC,GA6BS,WAAA,OAAA,CAAA;AAGC5qC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAhCR2qC,GAgCU,WAAA,YAAA,CAAA;AAhCVA,KAArB5qC,GAAA;AAAA,EADCG,EAAc,aAAa;AAAA,GACPyqC,EAAA;;;;;;;ACDA,IAAAC,KAArB,cAA2C7lD,EAAW;AAAA,EAAtD,cAAA;AAAA,UAAA,GAAA,SAAA,GASyC,KAAA,UAAA,QAMF,KAAA,QAAA,QAMA,KAAA,SAAA,WAMF,KAAA,YAAA,cAyBF,KAAA,SAAA,SAMf,KAAA,MAAA,uBAgBqC,KAAA,WAAA,KAYvD,KAAiB,UAAU,CACzB+iB,GACAwC,GACA68B,GACAp1C,MACG;AACC,UAAA84C;AAEJ,UAAI/iC;AACK,eAAAtI;AAAAA;AAAAA,kBAEKlc,EAAK,mBAAmB;AAAA,UAC9B,CAAC,oBAAoB6jD,CAAM,EAAE,GAAGA;AAAA,QAAA,CACjC,CAAC;AAAA,kBACMr/B,CAAI;AAAA;AAIlB,UAAIwC,MAAY;AACP,eAAA9K;AAAAA;AAAAA,kBAEKlc,EAAK,mBAAmB;AAAA,UAC9B,CAAC,oBAAoB6jD,CAAM,EAAE,GAAGA;AAAA,QAAA,CACjC,CAAC;AAAA,YACAp1C,CAAM;AAAA;AAAA;AAKd,cAAQuY,GAAS;AAAA,QACf,KAAK;AACU,UAAAugC,IAAA;AACb;AAAA,QACF,KAAK;AACU,UAAAA,IAAA;AACb;AAAA,QACF,KAAK;AACU,UAAAA,IAAA;AACb;AAAA,QACF,KAAK;AACU,UAAAA,IAAA;AACb;AAAA,QACF,KAAK;AACU,UAAAA,IAAA;AACb;AAAA,QACF;AACe,UAAAA,IAAA;AACb;AAAA,MAAA;AAGG,aAAArrC;AAAAA;AAAAA,gBAEKlc,EAAK,mBAAmB;AAAA,QAC9B,CAAC,oBAAoB6jD,CAAM,EAAE,GAAGA;AAAA,MAAA,CACjC,CAAC;AAAA,gBACM0D,CAAU;AAAA;AAAA,IAExB;AAAA,EAAA;AAAA,EAjEU,aACRprC,GACM;AACN,IAAI,KAAK,cAAc,CAAC,KAAK,WAAW,UAAU,KAAK,oBAChD,KAAA,gBAAgB,MAAM,UAAU;AAAA,EACvC;AAAA,EA8DF,SAAS;AACA,WAAAD;AAAAA;AAAAA;AAAAA,uBAGY,KAAK,WAAW;AAAA,mBACpB,KAAK,QAAQ;AAAA,iBACf,KAAK,MAAM;AAAA,eACbE,EAAU,KAAK,IAAI,CAAC;AAAA,cACrB,KAAK,MAAM;AAAA,qBACJ,KAAK,SAAS;AAAA;AAAA;AAAA,gBAGnBpc;AAAA,MACN;AAAA,MACA,cAAc,KAAK,OAAO;AAAA,MAC1B,cAAc,KAAK,MAAM;AAAA,MACzB,cAAc,KAAK,KAAK;AAAA,MACxB,cAAc,KAAK,SAAS;AAAA,IAAA,CAC7B;AAAA;AAAA,uBAEcA,EAAK,sBAAsB,CAAC;AAAA,cACpC,KAAK,SAWJsjB,IAVApH;AAAAA;AAAAA,sBAEM,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACN,CAAA;AAAA;AAAA,uBAGE;AAAA,yBACElc,EAAK,oBAAoB,CAAC;AAAA,gBACnC,KAAK,QACHkc;AAAAA;AAAAA;AAAAA;AAAAA,yCAIuB,KAAK,KAAK;AAAA,6BAEjCoH,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAcX,KAAK,cACHpH;AAAAA;AAAAA;AAAAA;AAAAA,0BAKAoH,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAMvB;AApNqBgkC,GA4EH,SAAShrC,EAAUC,EAAM;AA1ExBE,GAAA;AAAA,EADhBO,GAAsB,EAAE,MAAM,UAAW,CAAA;AAAA,GADvBsqC,GAEF,WAAA,cAAA,CAAA;AAC8B7qC,GAAA;AAAA,EAA9C7E,GAAM,qBAAqB;AAAA,GAHT0vC,GAG4B,WAAA,mBAAA,CAAA;AAMnC7qC,GAAA;AAAA,EAAXC,EAAS;AAAA,GATS4qC,GASP,WAAA,WAAA,CAAA;AAMA7qC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAfS4qC,GAeP,WAAA,SAAA,CAAA;AAMA7qC,GAAA;AAAA,EAAXC,EAAS;AAAA,GArBS4qC,GAqBP,WAAA,UAAA,CAAA;AAMA7qC,GAAA;AAAA,EAAXC,EAAS;AAAA,GA3BS4qC,GA2BP,WAAA,aAAA,CAAA;AAKA7qC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAhCS4qC,GAgCP,WAAA,SAAA,CAAA;AAKA7qC,GAAA;AAAA,EAAXC,EAAS;AAAA,GArCS4qC,GAqCP,WAAA,QAAA,CAAA;AAKgB7qC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA1CP4qC,GA0CS,WAAA,UAAA,CAAA;AAKC7qC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA/CR4qC,GA+CU,WAAA,eAAA,CAAA;AAKjB7qC,GAAA;AAAA,EAAXC,EAAS;AAAA,GApDS4qC,GAoDP,WAAA,UAAA,CAAA;AAGA7qC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAvDS4qC,GAuDP,WAAA,QAAA,CAAA;AAGA7qC,GAAA;AAAA,EAAXC,EAAS;AAAA,GA1DS4qC,GA0DP,WAAA,OAAA,CAAA;AAKiB7qC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA/DR4qC,GA+DU,WAAA,UAAA,CAAA;AAKA7qC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GApER4qC,GAoEU,WAAA,aAAA,CAAA;AAMD7qC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA1EP4qC,GA0ES,WAAA,YAAA,CAAA;AA1ETA,KAArB7qC,GAAA;AAAA,EADCG,EAAc,kBAAkB;AAAA,GACZ0qC,EAAA;;;;;;;ACzDrB,MAAqBE,KAArB,MAAqBA,WAAyB/lD,EAAW;AAAA,EAAzD,cAAA;AAAA,UAAA,GAAA,SAAA,GAG+D,KAAA,OAAA,IACM,KAAA,aAAA,IAEtD,KAAA,aAAA,QAKS,KAAA,sBAAA,QACmC,KAAA,cAAA,QAMZ,KAAA,kBAAA,WACI,KAAA,sBAAA,WACD,KAAA,mBAAA,IACI,KAAA,uBAAA,IACF,KAAA,qBAAA,IACJ,KAAA,iBAAA,IACF,KAAA,eAAA,IACI,KAAA,mBAAA,IACX,KAAA,SAAA,QACA,KAAA,SAAA,QACK,KAAA,aAAA,IACE,KAAA,eAAA,IACE,KAAA,iBAAA,IAC9C,KAAQ,2BAA2C,MACnD,KAAQ,oBAAmC,CAAC,GAE5C,KAAQ,WAAW,IA+FnB,KAAA,aAAa,CAACgmD,MAAkB;AAC9B,MAAIA,KACO,SAAA,KAAK,MAAM,WAAW,UACtB,SAAA,KAAK,QAAQ,YAAY,WAEzB,SAAA,KAAK,MAAM,WAAW,IACxB,OAAA,SAAS,KAAK,QAAQ;AAAA,IAEjC;AAAA,EAAA;AAAA,EAnGA,yBACE9lD,GACAonB,GACAnnB,GACM;AACN,IAAID,MAAS,YACN,KAAA,SAASC,IAAQ,SAAS,UAE3B,MAAA,yBAAyBD,GAAMonB,GAAMnnB,CAAK;AAAA,EAAA;AAAA,EAGxC,QACRua,GACM;AACN,UAAM,QAAQA,CAAkB,GAE9BA,EAAmB,IAAI,MAAM,KAC7BA,EAAmB,IAAI,MAAM,MAAM,WAE/B,KAAK,OACP,KAAK,WAAW,IAEhB,KAAK,kBAAkB;AAAA,EAE3B;AAAA,EAGM,aAAmB;AAKzB,IAJwB,KAAK,KAAK,mBAAmB,QAAW;AAAA,MAC9D,YAAY;AAAA,IAAA,CACb,EAEmB,qBAIpB,KAAK,WAAW,EAAI,GACf,KAAA,2BAA2B,KAAK,iBAAiB,GACtD,KAAK,OAAO,UAAU,GACtB,KAAK,OAAO;AAAA,MACV;AAAA,MACA,MAAM;AAKJ,QAJoB,KAAK,KAAK,cAAc,QAAW;AAAA,UACrD,YAAY;AAAA,QAAA,CACb,EAEe,qBAIX,KAAA,oBAAoB,KAAK,qBAAqB,GAC/C,KAAK,kBAAkB,SAAS,KAC7B,KAAA,kBAAkB,CAAC,EAAE,MAAM;AAAA,MAEpC;AAAA,MACA,EAAE,MAAM,GAAK;AAAA,IACf,GACK,KAAA,aAAa,eAAe,OAAO;AAAA,EAAA;AAAA,EAGlC,oBAA0B;AAKhC,IAJyB,KAAK,KAAK,oBAAoB,QAAW;AAAA,MAChE,YAAY;AAAA,IAAA,CACb,EAEoB,qBAIrB,KAAK,OAAO,MAAM,GAClB,KAAK,WAAW,EAAK,GACrB,KAAK,OAAO;AAAA,MACV;AAAA,MACA,MAAM;AAKJ,QAJoB,KAAK,KAAK,cAAc,QAAW;AAAA,UACrD,YAAY;AAAA,QAAA,CACb,EAEe,oBAIZ,KAAK,oCAAoC,eAC3C,KAAK,yBAAyB,MAAM;AAAA,MAExC;AAAA,MACA,EAAE,MAAM,GAAK;AAAA,IACf,GACK,KAAA,aAAa,eAAe,MAAM;AAAA,EAAA;AAAA,EAa/B,aACRA,GACM;AACN,UAAM,aAAaA,CAAkB,GACjC,KAAK,QACF,KAAA,aAAa,eAAe,OAAO,GAExC,KAAK,OAAO,UAAU,KAEjB,KAAA,aAAa,eAAe,MAAM;AAAA,EACzC;AAAA,EAGK,OAAa;AAClB,SAAK,OAAO;AAAA,EAAA;AAAA,EAGP,OAAa;AAClB,SAAK,OAAO;AAAA,EAAA;AAAA,EAGN,YAAY9X,GAAqB;AAWvC,IAVyB,KAAK;AAAA,MAC5B;AAAA,MACA;AAAA,QACE,QAAAA;AAAA,MACF;AAAA,MACA;AAAA,QACE,YAAY;AAAA,MAAA;AAAA,IAEhB,EAEqB,oBAIrB,KAAK,KAAK;AAAA,EAAA;AAAA,EAGJ,aAAavC,GAAoB;AAGnC,QAAA,KAAK,eAAe,QAAQ;AAC9B,MAAAA,EAAM,eAAe,GACrB,KAAK,WAAW;AAChB;AAAA,IAAA;AAIF,IAAAA,EAAM,eAAe;AAAA,EAAA;AAAA,EAGf,eAAeA,GAAoB;AAIzC,QAAI,KAAK,YAAY,KAAK,eAAe,QAAQ;AAC/C,MAAAA,EAAM,eAAe;AACrB;AAAA,IAAA;AAIF,IAAAA,EAAM,eAAe;AAAA,EAAA;AAAA,EAGf,iBAAuB;AAW7B,IAVyB,KAAK;AAAA,MAC5B;AAAA,MACA;AAAA,QACE,QAAQ;AAAA,MACV;AAAA,MACA;AAAA,QACE,YAAY;AAAA,MAAA;AAAA,IAEhB,EAEqB,oBAIrB,KAAK,YAAY,WAAW;AAAA,EAAA;AAAA,EAGtB,qBAA2B;AAWjC,IAVyB,KAAK;AAAA,MAC5B;AAAA,MACA;AAAA,QACE,QAAQ;AAAA,MACV;AAAA,MACA;AAAA,QACE,YAAY;AAAA,MAAA;AAAA,IAEhB,EAEqB,oBAIrB,KAAK,YAAY,eAAe;AAAA,EAAA;AAAA,EAG1B,YAAYA,GAAyB;AAC3C,IAAI,KAAK,wBAAwB,UAAUA,EAAM,WAAW,KAAK,UAC/D,KAAK,YAAY,SAAS;AAAA,EAC5B;AAAA,EAGM,aAAaA,GAA4B;AAC/C,QAAIA,EAAM,QAAQ,SAAS,CAAC,KAAK,gBAAgB;AAC/C,WAAK,gBAAgBA,CAAK;AAC1B;AAAA,IAAA;AAGE,IAAAA,EAAM,QAAQ,aACZ,KAAK,eAAe,SAEtB,KAAK,YAAY,KAAK,KAGtBA,EAAM,eAAe,GACrBA,EAAM,yBAAyB;AAAA,EAEnC;AAAA,EAGM,uBAAsC;AAC5C,UAAM4lD,IAAqB;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAyBO,YAvByB,CAC9BvqC,MACkB;AAClB,YAAMiV,IAA0B,CAAC;AAIjC,aADgBjV,EAAK,iBAAiBuqC,EAAmB,KAAK,GAAG,CAAC,EAC1D,QAAQ,CAAW/kC,MAAA;AACzB,QAAIA,aAAmB,kBACIA,EAAQ,iBAAiB,EACjC,QAAQ,CAAmBglC,MAAA;AAC1C,UAAIA,aAA2B,eAC7Bv1B,EAAS,KAAKu1B,CAAe;AAAA,QAC/B,CACD,IACQhlC,aAAmB,eAC5ByP,EAAS,KAAKzP,CAAO;AAAA,MACvB,CACD,GAEMyP;AAAA,IACT,GAE+B,KAAK,QAAQ;AAAA,EAAA;AAAA,EAGtC,mBAAmC;AACzC,UAAMw1B,IAAgB,SAAS;AAC3B,QAAA,CAACA,EAAsB,QAAA;AAG3B,QAAIA,EAAc,YAAY;AACtB,YAAAC,IAAiBD,EAAc,WAAW;AAChD,UAAIC;AACK,eAAAA;AAAA,IACT;AAGK,WAAAD;AAAA,EAAA;AAAA,EAGD,sBAAsBjlC,GAA+B;AAC3D,WAAIA,EAAQ,aACHA,EAAQ,WAAW,gBAErBA;AAAA,EAAA;AAAA,EAGD,gBAAgB7gB,GAA4B;AAClD,QAAIA,EAAM,QAAQ,SAAS,KAAK,eAAgB;AAE5C,IAAA,KAAK,kBAAkB,WAAW,MAC/B,KAAA,oBAAoB,KAAK,qBAAqB;AAG/C,UAAAgmD,IAAwB,KAAK,kBAAkB,CAAC,GAChDC,IAAuB,KAAK;AAAA,MAChC,KAAK,kBAAkB,KAAK,kBAAkB,SAAS,CAAC;AAAA,IAC1D,GAEMH,IAAgB,KAAK,iBAAiB;AAE5C,IAAKA,MAED9lD,EAAM,WACJ8lD,MAAkBE,MACpBhmD,EAAM,eAAe,GACjBimD,KACFA,EAAqB,MAAM,KAI3BH,MAAkBG,MACpBjmD,EAAM,eAAe,GACjBgmD,KACFA,EAAsB,MAAM;AAAA,EAGlC;AAAA,EAGF,cAAc;AhI/YhB,QAAAvoD,GAAAC,GAAAE,GAAAC;AgIgZW,WAAAuc;AAAAA;AAAAA,cAEGlc,EAAK,SAAS;AAAA,MACpB,eAAe,KAAK;AAAA,MACpB,eAAe,KAAK;AAAA,IAAA,CACrB,CAAC;AAAA,mBACW,IAAGT,IAAA,KAAK,UAAL,OAAAA,IAAc,EAAE,KAAIC,IAAA,KAAK,gBAAL,OAAAA,IAAoB,EAAE,EAAE;AAAA;AAAA,eAEnD,KAAK,cAAc;AAAA,gBAClB,KAAK,YAAY;AAAA,eAClB,KAAK,WAAW;AAAA,iBACd,KAAK,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKZ,KAAK,OAAO,UAAU,MAAM;AAAA;AAAA,YAEtC,KAAK,WAAW,SACd0c;AAAAA;AAAAA;AAAAA,uBAGS,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQX,KAAK,WAAW;AAAA;AAAA;AAAA,2BAIxBA,gBAAmB;AAAA,YACrB,KAAK,gBAAgB,SACnBA;AAAAA;AAAAA;AAAAA,6BAGe,KAAK,mBACd,KAAK,mBACLvB,GAAU,OAAO,CAAC;AAAA,yBACb,MAAM,KAAK,YAAY,cAAc,CAAC;AAAA;AAAA,uCAGjD2I,CAAO;AAAA;AAAA;AAAA,kBAGHtjB,EAAK,kBAAkB;AAAA,MAC7B,0BAA0B,KAAK;AAAA,IAAA,CAChC,CAAC;AAAA;AAAA;AAAA;AAAA,UAIF,KAAK,WAAW,SACdkc;AAAAA,sBACUlc,EAAK,iBAAiB;AAAA,MAC5B,uBAAuB,KAAK;AAAA,IAAA,CAC7B,CAAC;AAAA;AAAA;AAAA,kBAGE,KAAK,eACHsjB,IACApH;AAAAA,+BACW,KAAK,cAAc;AAAA,gCAClB,KAAK,eAAe;AAAA,gCACpB,KAAK,cAAc;AAAA,kCACjB,KAAK,gBAAgB;AAAA,gCACvB,KAAK,YAAY;AAAA,0BACxBxc,IAAA,KAAK,kBAAL,OAAAA,IAAsBib,GAAU,IAAI,CAAC;AAAA,sBACxC;AAAA,kBACJ,KAAK,mBACH2I,IACApH;AAAAA,gCACY,KAAK,mBAAmB;AAAA,gCACxB,KAAK,kBAAkB;AAAA,kCACrB,KAAK,oBAAoB;AAAA,gCAC3B,KAAK,gBAAgB;AAAA,+BACtB,KAAK,kBAAkB;AAAA,0BAC7Bvc,IAAA,KAAK,sBAAL,OAAAA,IACHgb,GAAU,QAAQ,CAAC;AAAA,sBACnB;AAAA;AAAA,yBAGV2I,CAAO;AAAA;AAAA;AAAA,EAAA;AAInB;AAnbkBkkC,GAAA,SAASlrC,EAAUC,EAAM;AApC3C,IAAqByrC,KAArBR;AACmB/qC,GAAA;AAAA,EAAhB7E,GAAM,QAAQ;AAAA,GADIowC,GACF,WAAA,QAAA;AACKvrC,GAAA;AAAA,EAArB7E,GAAM,aAAa;AAAA,GAFDowC,GAEG,WAAA,UAAA;AACsBvrC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAHvBsrC,GAGyB,WAAA,MAAA;AACAvrC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBsrC,GAIyB,WAAA,YAAA;AAE5CvrC,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GALtBsrC,GAMnB,WAAA,YAAA;AAKAvrC,GAAA;AAAA,EAJCC,EAAS;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,EACV,CAAA;AAAA,GAVkBsrC,GAWnB,WAAA,qBAAA;AAC2CvrC,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAZtBsrC,GAYwB,WAAA,aAAA;AAC/BvrC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAbSsrC,GAaP,WAAA,OAAA;AACAvrC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAdSsrC,GAcP,WAAA,aAAA;AACAvrC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAfSsrC,GAeP,WAAA,eAAA;AACAvrC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAhBSsrC,GAgBP,WAAA,mBAAA;AACAvrC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAjBSsrC,GAiBP,WAAA,kBAAA;AACAvrC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAlBSsrC,GAkBP,WAAA,iBAAA;AACAvrC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAnBSsrC,GAmBP,WAAA,qBAAA;AACiBvrC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GApBRsrC,GAoBU,WAAA,kBAAA;AACAvrC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GArBRsrC,GAqBU,WAAA,sBAAA;AACAvrC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAtBRsrC,GAsBU,WAAA,oBAAA;AACAvrC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAvBRsrC,GAuBU,WAAA,gBAAA;AACAvrC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAxBRsrC,GAwBU,WAAA,cAAA;AACAvrC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAzBRsrC,GAyBU,WAAA,kBAAA;AACDvrC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA1BPsrC,GA0BS,WAAA,QAAA;AACAvrC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA3BPsrC,GA2BS,WAAA,QAAA;AACCvrC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA5BRsrC,GA4BU,WAAA,YAAA;AACAvrC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA7BRsrC,GA6BU,WAAA,cAAA;AACAvrC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA9BRsrC,GA8BU,WAAA,gBAAA;;;;;;ACuBV,IAAAC,KAArB,cAAwCD,GAAiB;AAAA,EACvD,cAAc;AACN,UAAA,GACN,KAAK,eAAe;AAAA,EAAA;AAAA,EAGtB,SAAS;AACP,WAAO,KAAK,YAAY;AAAA,EAAA;AAE5B;AATqBC,KAArBxrC,GAAA;AAAA,EADCG,EAAc,cAAc;AAAA,GACRqrC,EAAA;;;;;;;AC5CA,IAAAC,KAArB,cAAiDzmD,EAAW;AAAA,EAA5D,cAAA;AAAA,UAAA,GAAA,SAAA,GAUI,KAAA,cAAA,cAGuC,KAAA,YAAA,IA+DjC,KAAA,6BAA6B,CAACK,MAAiB;AACrD,YAAM8iD,IAAc9iD;AAEf,WAAA,KAAK,6BAA6B8iD,EAAY,MAAM;AAAA,IAC3D,GAEQ,KAAA,sBAAsB,CAAC9iD,MAAiB;AAC9C,YAAMqmD,IAAcrmD,EAAM;AAG1B,MADiB,KAAK,iBAAiB,6BAA6B,EAC3D,QAAQ,CAAQ+iB,MAAA;AACnB,QAAAA,MAASsjC,KAAgBtjC,EAAiC,UAC1DA,EAAiC,aAAa;AAAA,MAClD,CACD;AAAA,IACH;AAAA,EAAA;AAAA,EA5EA,oBAAoB;AAClB,UAAM,kBAAkB,GACnB,KAAK,eACH,KAAA,aAAa,OAAO,SAAS,WAG/B,KAAA;AAAA,MACH;AAAA,MACA,KAAK;AAAA,IACP,GAGK,KAAA;AAAA,MACH;AAAA,MACA,KAAK;AAAA,IACP;AAAA,EAAA;AAAA,EAGF,QAAQjB,GAAyC;AAC/C,UAAM,QAAQA,CAAiB,GAE3BA,EAAkB,IAAI,YAAY,KACpC,KAAK,kBAAkB,GAGrBA,EAAkB,IAAI,WAAW,KACnC,KAAK,sBAAsB;AAAA,EAC7B;AAAA,EAGF,aAAaA,GAAyC;AACpD,UAAM,aAAaA,CAAiB,GACpC,KAAK,sBAAsB;AAAA,EAAA;AAAA,EAGrB,wBAAwB;AAE9B,IADwB,KAAK,iBAAiB,6BAA6B,EAC3D,QAAQ,CAAQiB,MAAA;AAC5B,MAAAA,EAAiC,YAAY,KAAK;AAAA,IAAA,CACrD;AAAA,EAAA;AAAA,EAGK,oBAAoB;AAE1B,IADwB,KAAK,iBAAiB,6BAA6B,EAC3D,QAAQ,CAAQA,MAAA;AAC5B,MAAAA,EAAiC,aAAa,KAAK;AAAA,IAAA,CACtD;AAAA,EAAA;AAAA,EAGH,uBAAuB;AACrB,UAAM,qBAAqB,GACtB,KAAA;AAAA,MACH;AAAA,MACA,KAAK;AAAA,IACP,GACK,KAAA;AAAA,MACH;AAAA,MACA,KAAK;AAAA,IACP;AAAA,EAAA;AAAA,EAoBF,SAAS;AACA,WAAA3I;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,mBAAmB;AAAA,MAC9B,6BAA6B,KAAK,gBAAgB;AAAA,IAAA,CACnD,CAAC;AAAA;AAAA,qBAEWoc,EAAU,KAAK,aAAa,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA,EAAA;AAKpD;AA1GqB8rC,GACH,SAAS5rC,EAAUC,EAAM;AAGbE,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAJPwrC,GAIS,WAAA,cAAA,CAAA;AAKCzrC,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GATRwrC,GASU,WAAA,eAAA,CAAA;AAIAzrC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAbRwrC,GAaU,WAAA,aAAA,CAAA;AAbVA,KAArBzrC,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClBsrC,EAAA;;;;;;;AC2BA,IAAAE,KAArB,MAAAn9C,UAAqD63B,GAAW;AAAA,EAC9D,cAAc;AACN,UAAA,GAyBgD,KAAA,YAAA,IAE/C,KAAQ,aAAa,IACrB,KAAQ,mBAAuC,MAC/C,KAAQ,SAAS,IAE1B,KAAQ,sBAEG,MAwCH,KAAA,eAAe,CAAChhC,MAAiB;AnIhI3C,UAAAvC;AmIiII,UAAI,KAAK,YAAY;AACnB,cAAM6E,IAAStC,EAAM,QACfumD,IAAkB,KAAK;AAO7B,SALEjkD,MAAW,QACXikD,EAAgB;AAAA,UACd,CAAWC,MAAAA,MAAYlkD,KAAUkkD,EAAQ,SAASlkD,CAAM;AAAA,QAC1D,OAGAtC,EAAM,eAAe,GACrBA,EAAM,gBAAgB,GACtB,KAAK,SAAS,KAAK,aAAa,IAAI,KAAK,aAAa;AAAA,MACxD,OACK;AAEL,cAAMymD,KAAOhpD,IADW,KAAK,SACA,CAAC,MAAjB,gBAAAA,EAAoB,aAAa;AAC9C,QAAIgpD,KACF,KAAK,KAAK,6BAA6B;AAAA,UACrC,MAAAA;AAAA,UACA,OAAAzmD;AAAA,QAAA,CACD;AAAA,MACH;AAAA,IAEJ,GAEQ,KAAA,iBAAiB,CAACA,MAAyB;AnI3JrD,UAAAvC,GAAAC,GAAAE;AmI4JQ,UAAA,CAAC,KAAK,YAAY;AAEpB,SAAIoC,EAAM,QAAQ,WAAWA,EAAM,QAAQ,SACzCA,EAAM,eAAe,IAELvC,IADQ,KAAK,SACb,CAAC,MAAD,QAAAA,EAAI;AAEtB;AAAA,MAAA;AAIF,cAAQuC,EAAM,KAAK;AAAA,QACjB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACC,cAAA,CAAC,KAAK,QAAQ;AAEd,aAAAA,EAAM,QAAQ,eACdA,EAAM,QAAQ,aACdA,EAAM,QAAQ,WACdA,EAAM,QAAQ,SAEdA,EAAM,eAAe,GACrB,KAAK,aAAa;AAEpB;AAAA,UAAA;AAGF,WAAItC,IAAA,KAAK,wBAAL,QAAAA,EAA0B,cAAcsC,OAEtCA,EAAM,QAAQ,WAAWA,EAAM,QAAQ,QACzC,KAAK,gBAAgB;AAGzB;AAAA,QAEF,KAAK;AACH,UAAI,KAAK,WAEHpC,IAAA,KAAK,wBAAL,QAAAA,EAA0B,cAAcoC;AAK9C;AAAA,QAEF,KAAK;AACH,UAAAA,EAAM,eAAe,GACrB,KAAK,gBAAgB;AACrB;AAAA,MAAA;AAAA,IAEN,GAEQ,KAAA,0BAA0B,CAACA,MAAsB;AACjD,YAAAwB,IAAOxB,EAAM,aAAa;AAChC,MAAI,QAAQ,CAACwB,EAAK,SAAS,IAAI,KAC7B,KAAK,aAAa;AAAA,IAEtB,GAjKE,KAAK,YAAY,gBACjB,KAAK,WAAW,IAChB,KAAK,mBAAmB;AAAA,EAAA;AAAA,EAgC1B,IAAY,WAA0B;AnI1FxC,QAAA/D;AmI4FI,QAAI,KAAK,oBAAoB,KAAK,iBAAiB,SAAS;AAC1D,aAAO,KAAK;AAGR,UAAAipD,KAAgBjpD,IAAA,KAAK,eAAL,gBAAAA,EAAiB;AAAA,MACrC;AAAA;AAEF,WAAOipD,IAAgB,CAACA,CAA4B,IAAI,CAAC;AAAA,EAAA;AAAA,EAGrD,oBAAoB;AAAA,WAAA5oD,EAAA;AACxB,YAAMkpB,GAAA7d,EAAA,iBAAM,0BAAN,IAAwB,GACzB,KAAA,iBAAiB,SAAS,KAAK,YAAY,GAC3C,KAAA,iBAAiB,WAAW,KAAK,cAAc,GACpD,KAAK,0BAA0B,KAAK,wBAAwB,KAAK,IAAI;AAAA,IAAA;AAAA;AAAA,EAGvE,uBAAuB;AACrB,UAAM,qBAAqB,GACtB,KAAA,oBAAoB,SAAS,KAAK,YAAY,GAC9C,KAAA,oBAAoB,WAAW,KAAK,cAAc,GAC9C,SAAA,oBAAoB,aAAa,KAAK,uBAAuB;AAAA,EAAA;AAAA,EAGlE,QAAQ2Y,GAAyC;AAAA,WAAAhkB,EAAA;AACrD,MAAAkpB,GAAA7d,EAAA,iBAAM,gBAAN,MAAc2Y,CAAiB,GAE3BA,EAAkB,IAAI,QAAQ,KAAK,KAAK,UAAU,KAAK,cACzD,KAAK,8BAA8B,GAGjCA,EAAkB,IAAI,YAAY,KACpC,KAAK,mBAAmB;AAAA,IAC1B;AAAA;AAAA,EA8FM,gCAAgC;AAClC,IAAC,KAAK,eAEL,KAAA,sBAAsBiK,GAAgC,MAAM;AAAA,MAC/D,iBACE;AAAA,MACF,aAAa,CAAQhJ,MAAA;AACnB,aAAK,mBAAmBA;AAAA,MAAA;AAAA,IAC1B,CACD,GAGI,KAAA,eAAe,KAAK,MAAM;AnIvOnC,UAAAtlB;AmIwOM,OAAAA,IAAA,KAAK,wBAAL,QAAAA,EAA0B;AAAA,QACxB,KAAK,oBAAoB;AAAA;AAAA,IAC3B,CACD;AAAA,EAAA;AAAA,EAGK,kBAAkB;AACxB,SAAK,aAAa,GAClB,KAAK,MAAM;AAAA,EAAA;AAAA,EAGN,QAAQ;AACb,UAAM8oD,IAAkB,KAAK;AACzB,IAAAA,KAAmBA,EAAgB,SAAS,KAC9BA,EAAA,CAAC,EAAE,MAAM;AAAA,EAC3B;AAAA,EAGI,eAAe;AAAA,WAAAzoD,EAAA;AnI1PvB,UAAAL;AmI2PI,UAAI,KAAK,UAAU,CAAC,KAAK;AACvB;AAGF,WAAK,KAAK,gCAAgC,EAAE,MAAM,MAAM,GAExD,KAAK,SAAS,KAEdA,IADwB,KAAK,SACb,CAAC,MAAjB,QAAAA,EAAoB,aAAa,iBAAiB,SAEzC,SAAA,iBAAiB,aAAa,KAAK,uBAAuB,GAEnE,MAAM,KAAK;AAAA,IAAA;AAAA;AAAA,EAGP,eAAe;AAAA,WAAAK,EAAA;AnI1QvB,UAAAL,GAAAC;AmI2QQ,UAAA,CAAC,KAAK;AACR;AAGF,WAAK,SAAS,KAEdD,IADwB,KAAK,SACb,CAAC,MAAjB,QAAAA,EAAoB,aAAa,iBAAiB,UAEzC,SAAA,oBAAoB,aAAa,KAAK,uBAAuB,IAEtEC,IAAA,KAAK,wBAAL,QAAAA,EAA0B,SAE1B,MAAM,KAAK;AAAA,IAAA;AAAA;AAAA,EAGN,mCAAmC;AACnC,SAAA,eAAe,KAAK,MAAM;AAC7B,YAAM6oD,IAAkB,KAAK;AACzB,MAAAA,KAAmBA,EAAgB,SAAS,MAC9CA,EAAgB,CAAC,EAAE,aAAa,iBAAiB,UAAU,GAC3DA,EAAgB,CAAC,EAAE,aAAa,iBAAiB,OAAO,GACxDA,EAAgB,CAAC,EAAE;AAAA,QACjB;AAAA,QACA,KAAK,aAAa,SAAS;AAAA,MAC7B,GACgBA,EAAA,CAAC,EAAE,MAAM,UAAU,QACnC,KAAK,mBAAmB;AAAA,IAC1B,CACD;AAAA,EAAA;AAAA,EAGK,qBAAqB;AnI1S/B,QAAA9oD;AmI2SI,UAAM8oD,IAAkB,KAAK;AAE1B,SAAA,CAACA,KAAmBA,EAAgB,WAAW,KAAK,CAAC,KAAK,eAC3D,CAAC,KAAK;AAEN,WAAK,SAAS;AAAA,aACL,KAAK;AACd,MAAI,KAAK,YACF,KAAA,SAAS,KAAK,aAAa,KAAK,aAErC,KAAK,WAAS9oD,IAAA,KAAK,eAAL,gBAAAA,EAAiB,WAAW,KAAK,cAAa;AAAA,SAEzD;AACL,YAAMkpD,IAAcJ,EAAgB,CAAC,EAAE,aAAa,MAAM;AACrD,WAAA,SAASI,MAAgB,KAAK,YACjCJ,EAAgB,CAAC,EAAU,SAAS,KAAK;AAAA,IAAA;AAAA,EAC7C;AAAA,EAGK,yBAAyB,GAAU;AnI9T5C,QAAA9oD;AmI+TI,UAAMokB,IAAO,EAAE;AACf,QAAIA,GAAM;AACF,YAAA+kC,IAAa/kC,EAAK,iBAAiB;AACpC,WAAA,aAAa+kC,EAAW,SAAS;AAAA,IAAA;AAGxC,KAAAnpD,IAAA,KAAK,wBAAL,QAAAA,EAA0B;AAAA,EAAgB;AAAA,EAG5C,gBAAgB;AACP,WAAA2c;AAAAA;AAAAA;AAAAA,kBAGO,KAAK,MAAM;AAAA,wBACL,KAAK,SAAS,SAAS,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKnC,KAAK,QAAQ,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAOjD,SAAS;AACA,WAAAA;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,mBAAmB;AAAA,MAC9B,gCAAgC,KAAK;AAAA,MACrC,2BAA2B,KAAK;AAAA,IAAA,CACjC,CAAC;AAAA,UACA,KAAK,YAAa,CAAA;AAAA;AAAA;AAAA,EAAA;AAI5B;AAhTqBooD,GAQH,SAAS9rC,EAAU,GAAGC,EAAM,GAAGosC,EAAW,EAAE;AAG3ClsC,GAAA;AAAA,EADhBO,GAAsB,EAAE,MAAM,UAAW,CAAA;AAAA,GAVvBorC,GAWF,WAAA,oBAAA,CAAA;AAG0B3rC,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAdtB0rC,GAcwB,WAAA,QAAA,CAAA;AAI3C3rC,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAQ,WAAW,kBAAmB,CAAA;AAAA,GAjBrC0rC,GAkBnB,WAAA,kBAAA,CAAA;AAG2C3rC,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GArBtB0rC,GAqBwB,WAAA,cAAA,CAAA;AAGA3rC,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAxBtB0rC,GAwBwB,WAAA,YAAA,CAAA;AAGC3rC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GA3BvB0rC,GA2ByB,WAAA,aAAA,CAAA;AAE3B3rC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GA7BY2kC,GA6BF,WAAA,cAAA,CAAA;AACA3rC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GA9BY2kC,GA8BF,WAAA,oBAAA,CAAA;AACA3rC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GA/BY2kC,GA+BF,WAAA,UAAA,CAAA;AA/BEA,KAArB3rC,GAAA;AAAA,EADCG,EAAc,6BAA6B;AAAA,GACvBwrC,EAAA;;;;;;;ACZA,IAAAQ,KAArB,cAAoDnnD,EAAW;AAAA,EAA/D,cAAA;AAAA,UAAA,GAAA,SAAA,GAKkD,KAAA,UAAA,IAGC,KAAA,WAAA,IAKnB,KAAA,OAAA,YAKM,KAAA,UAAA,SAGM,KAAA,MAAA,GAKe,KAAA,YAAA,WAIjC,KAAA,eAAA,IAIC,KAAA,gBAAA,IAEhB,KAAQ,oBAA6B,IACrC,KAAQ,iBAA2C,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,EAAA;AAAA,EAIzE,oBAAoB;AAClB,UAAM,kBAAkB,GACnB,KAAA,eAAe,KAAK,MAAM;AAC7B,WAAK,sBAAsB;AAAA,IAAA,CAC5B;AAAA,EAAA;AAAA,EAGK,wBAA8B;ApIzFxC,QAAAlC;AoI0FI,QAAI,CAAC,KAAK,gBAAgB,CAAC,KAAK;AAC9B;AAGF,QAAI,KAAK,eAAe;AACtB,WAAK,oBAAoB,IACzB,KAAK,wBAAwB;AAC7B;AAAA,IAAA;AAGF,UAAMspD,KAActpD,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc,SAC7CupD,IAAkBD,KAAA,gBAAAA,EAAa;AAEjC,QAAA,EAACC,KAAA,QAAAA,EAAiB;AACpB;AAGI,UAAAnmC,IAAUmmC,EAAgB,CAAC,GAG3BC,IAAa,KAAK,kBAAkBpmC,CAAO;AAE7C,IAAAomC,MAAe,KAAK,sBACtB,KAAK,oBAAoBA,GACrBA,KACF,KAAK,wBAAwB;AAAA,EAEjC;AAAA,EAGM,kBAAkBpmC,GAA+B;AAEvD,QAAIA,EAAQ,QAAQ,YAAc,EAAA,SAAS,QAAQ;AAC1C,aAAA;AAKT,UAAMqmC,IADgB,iBAAiBrmC,CAAO,EACX;AAGnC,QAAIqmC,MAAiB,SAASA,EAAa,SAAS,KAAK;AAChD,aAAA;AAIH,UAAAt4B,IAAO/N,EAAQ,sBAAsB,GACrCsmC,IAAe,KAAK,IAAIv4B,EAAK,OAAOA,EAAK,MAAM;AAGjD,WAFgB,SAASs4B,GAAc,EAAE,KAE1BC,IAAe,MACzB,KAIW,MAAM,KAAK,SAAS,WAAW,EAChD,QAAQ,CAASC,MAAA;AACZ,UAAA;AACK,eAAA,MAAM,KAAKA,EAAM,QAAQ;AAAA,MAAA,SAC1B3qD,GAAA;AACN,eAAO,CAAC;AAAA,MAAA;AAAA,IACV,CACD,EACA,OAAO,CAAA4P,MAAQA,aAAgB,YAAY,EAC3C,KAAK,CAAQA,MAAA;AACZ,YAAMg7C,IAAgBh7C,EAAsB;AAC5C,cACEg7C,KAAA,gBAAAA,EAAc,SAAS,eAAaA,KAAA,gBAAAA,EAAc,SAAS;AAAA,IAAS,CAEvE;AAAA,EAEI;AAAA,EAGD,0BAAgC;ApIpK1C,QAAA5pD;AoIqKI,UAAMspD,KAActpD,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc,SAC7CupD,IAAkBD,KAAA,gBAAAA,EAAa;AAEjC,QAAA,EAACC,KAAA,QAAAA,EAAiB;AACpB;AAII,UAAAp4B,IADUo4B,EAAgB,CAAC,EACZ,sBAAsB,GACrCM,IAAS,KAAK,IAAI14B,EAAK,OAAOA,EAAK,MAAM,IAAI,GAI7C24B,IAAQ,KAAK,qBAAqB,KAAK,SAAS,GAChDC,IAAiBF,IAAS;AAEhC,SAAK,iBAAiB;AAAA,MACpB,GAAG,KAAK,IAAIC,CAAK,IAAIC;AAAA,MACrB,GAAG,KAAK,IAAID,CAAK,IAAIC;AAAA,IACvB,GAGA,KAAK,MAAM;AAAA,MACT;AAAA,MACA,GAAG,KAAK,eAAe,CAAC;AAAA,IAC1B,GACA,KAAK,MAAM;AAAA,MACT;AAAA,MACA,GAAG,KAAK,eAAe,CAAC;AAAA,IAC1B;AAAA,EAAA;AAAA,EAGM,qBAAqB76B,GAAmC;AAE9D,YAAQA,GAAW;AAAA,MACjB,KAAK;AACI,eAAA,CAAC,KAAK,KAAK;AAAA;AAAA,MACpB,KAAK;AACK,eAAA,KAAK,KAAK,KAAM;AAAA;AAAA,MAC1B,KAAK;AACH,eAAO,KAAK,KAAK;AAAA;AAAA,MACnB,KAAK;AACK,eAAA,IAAI,KAAK,KAAM;AAAA;AAAA,MACzB;AACS,eAAA,CAAC,KAAK,KAAK;AAAA,IAAA;AAAA,EACtB;AAAA,EAGF,QAAQ7K,GAA2D;AACjE,UAAM,QAAQA,CAAiB,IAG7BA,EAAkB,IAAI,WAAW,KACjCA,EAAkB,IAAI,eAAe,KACrCA,EAAkB,IAAI,cAAc,MAEpC,KAAK,sBAAsB;AAAA,EAC7B;AAAA,EAGM,kBAAkBnf,GAA8B;AAClD,QAAA,EAACA,KAAA,QAAAA,EAAK;AACD,aAAA;AAEH,UAAA8kD,IAAS,SAAS9kD,GAAK,EAAE;AAC3B,WAAA,MAAM8kD,CAAM,IACP9kD,IAEF8kD;AAAA,EAAA;AAAA,EAGD,UAAU3nD,GAAeosB,GAAqB;AACpD,WAAOpsB,IAAQosB,IAAM,GAAGA,CAAG,MAAMpsB,EAAM,SAAS;AAAA,EAAA;AAAA,EAG1C,gBAAwB;AAC9B,UAAM4nD,IAAgB,KAAK,kBAAkB,KAAK,YAAY;AAC9D,WAAIA,MAAkB,KAAK,CAAC,KAAK,WACxB,KAEL,KAAK,MAAM,KAAK,OAAOA,KAAkB,WACpC,KAAK,UAAUA,GAAe,KAAK,GAAG,EAAE,SAAS,IAEnDA,EAAc,SAAS;AAAA,EAAA;AAAA,EAGhC,IAAY,OAAgB;AAC1B,WAAO,CAAC,KAAK,WAAY,CAAC,KAAK;EAAoB;AAAA,EAGrD,SAAS;AACA,WAAAttC,2BAA8Blc,EAAK,oBAAoB,CAAC;AAAA;AAAA;AAAA;AAAA,gBAInDA;AAAA,MACN;AAAA,MACA,6BAA6B,KAAK,IAAI;AAAA,MACtC,6BAA6B,KAAK,SAAS;AAAA,MAC3C,6BAA6B,KAAK,OAAO;AAAA,MACzC;AAAA,QACE,oCAAoC,KAAK;AAAA,QACzC,sCAAsC,KAAK;AAAA,MAAA;AAAA,IAC7C,CACD;AAAA,UACC,KAAK,cAAe,CAAA;AAAA;AAAA;AAAA,EAAA;AAI9B;AAzOqB4oD,GAuCH,SAAStsC,EAAUC,EAAM;AArCbE,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAFPksC,GAES,WAAA,gBAAA,CAAA;AAGCnsC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GALRksC,GAKU,WAAA,WAAA,CAAA;AAGAnsC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRksC,GAQU,WAAA,YAAA,CAAA;AAKjBnsC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAbSksC,GAaP,WAAA,QAAA,CAAA;AAKAnsC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAlBSksC,GAkBP,WAAA,WAAA,CAAA;AAGgBnsC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GArBPksC,GAqBS,WAAA,OAAA,CAAA;AAKCnsC,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GA1BRksC,GA0BU,WAAA,aAAA,CAAA;AAI7BnsC,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,SAAS,WAAW,gBAAiB,CAAA;AAAA,GA7BpCksC,GA8BnB,WAAA,gBAAA,CAAA;AAIAnsC,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,SAAS,WAAW,iBAAkB,CAAA;AAAA,GAjCrCksC,GAkCnB,WAAA,iBAAA,CAAA;AAEiBnsC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GApCYmlC,GAoCF,WAAA,qBAAA,CAAA;AACAnsC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GArCYmlC,GAqCF,WAAA,kBAAA,CAAA;AArCEA,KAArBnsC,GAAA;AAAA,EADCG,EAAc,2BAA2B;AAAA,GACrBgsC,EAAA;;;;;;ACoCA,IAAAa,KAArB,cAA8C9lB,GAAiB;AAAA,EAC7D,cAAc;AACN,UAAA,GAOwC,KAAA,oBAAA,IACD,KAAA,mBAAA,KAEH,KAAA,gBAAA,QACD,KAAA,eAAA,QACC,KAAA,eAAA,IAEnC,KAAQ,iBAAiB,IAbhC,KAAK,iBAAiB;AAAA,EAAA;AAAA,EAexB,IAAI,qBAAqB;ArI/F3B,QAAApkC;AqIiGI,YAAOA,IAAA,KAAK,sBAAL,gBAAAA,EAAwB,QAAQ,uBAAuB;AAAA,EAAM;AAAA,EAGtE,eAAe;AACb,SAAK,YACH,KAAK,cAAc,KAAK,iBAAiB,SAAS,YAAY,YAEhE,KAAK,aAAa;AAAA,MAAiB;AAAA,MAAS,CAAChB,MAC3C,KAAK,YAAYA,CAAe;AAAA,IAClC,GAEA,KAAK,aAAa;AAAA,MAAiB;AAAA,MAAW,CAACA,MAC7C,KAAK,cAAcA,CAAC;AAAA,IACtB,GAGI,KAAK,UAAU,WACjB,KAAK,iBAAiB,KAAK,eAAe,KAAK,KAAK,GAC/C,KAAA,aAAa,QAAQ,KAAK;AAAA,EACjC;AAAA,EAGM,cAAcuD,GAAsB;AACtC,IAAA,KAAK,YAAY,KAAK,aAEtBA,EAAM,QAAQ,aAChBA,EAAM,eAAe,GACrB,KAAK,WAAW,KACPA,EAAM,QAAQ,gBACvBA,EAAM,eAAe,GACrB,KAAK,WAAW;AAAA,EAClB;AAAA,EAGM,eAAeF,GAAgC;AACrD,QAAI,CAACA,KAASA,MAAU,EAAU,QAAA;AAElC,QAAImG,IAASnG;AAkBb,QAfI,OAAOmG,KAAW,YAAYA,EAAO,WAAW,SAAS,GAAG,MAC9DA,IAASA,EAAO,SAAS,EAAE,QAAQ,KAAK,KAAK,gBAAgB,IAI3D,KAAK,kBAAkB,UAAUnG,EAAM,WAAW,WAAW,GAAG,IACzDmG,IAAA,MAAM,KAAK,eAAenG,EAAM,SAAW,EAAA,UAAU,CAAC,CAAC,IAEhE,KAAK,kBAAkB,WACvBA,EAAM,SAAS,EAAE,WAAW,GAAG,MAE/BmG,IAASnG,EAAM,WAAW,UAAU,CAAC,IAInC,KAAK,mBAAmB;AAC1B,YAAMkH,IAAQf,EAAO,SAAW,EAAA,MAAM,KAAK,gBAAgB;AAC3D,MAAAe,EAAM,CAAC,IAAIA,EAAM,CAAC,EAAE;AAAA,QAClB;AAAA,QACA,KAAK;AAAA,MACP,GACSf,IAAAe,EAAM,KAAK,KAAK,gBAAgB;AAAA,IAAA;AAI3C,QAAI,KAAK,iBAAiB,UAAU,KAAK,iBAAiB,QAAW;AACnE,YAAMA,IAAQf,EAAO,SAAW,EAAA,MAAM,KAAK,gBAAgB;AACvD,MAAAe,EAAM,CAAC,MACHA,EAAA,CAAC,IAAIA,EAAM,CAAC,EAAE,MAAM,GAAG,KAAK,YAAY,GACrCf,IAAAe,EAAM,KAAK,KAAK,gBAAgB;AAAA,IAC3C,MACF,CAAW,KAAK,iBAAiB,YAE/Bf,IADcA,EAAO,SAAW,EAAA,MAAM,KAAK,gBAAgB,EAC5C,CAAC;AAGlB,WAAOA,EAAO,SAAS;AAAA,EAAA;AAAA,EAGjB,oBAAoBjG,GAA4B;AACtD,WACEA,EAAM,cAAc,2BACpBA,EAAM,cAAc;AAAA,EAAA;AAAA,EAIhB,mBAAmB;AACzB,SAAK,QAAQ,IACb,KAAK,iBAAiB,IACtB,KAAK,aAAa,QAAQ,IAC1B,KAAK,KAAK,cAAc;AAAA,MACtB,OAAO;AAAA,MACP,gBAAgB;AAAA,IAAA,CACjB;AAAA,EAAA;AAAA,EAGK,qBAA6B;AAC/B,QAAA,KAAK,iBAAiB,QAAQ;AAC1B,YAAA4nD,IAA0B,KAAK,iBAAiB;AAAA,QACpD;AAAA,QACA;AAAA,MACF;AACA,aAAO,KAAK,kBAAkB,SAC1B,IAAI,OAAO,UAAUA,CAAuB,QAAQ,IACpD,IAAI,OAAO,QAAQA,CAAuB,QAAQ;AAAA,IAAA;AAEjD,WAAA,KAAK,kBAAkB,SAAS,YAAY;AAAA,EAAA;AAAA,EAG7C,oBAAoB9nD,GAAuB;AACjD,QAAI,KAAK,iBAAiB,UAAa,KAAK,iBAAiB;AACpD,aAAAA;AAGT,UAAMkH,IAAQlH,EAAM,MAAM,KAAK,gBAAgB;AAC3C,WAAAkH,EAAM,CAAC,KAAKA,EAAM,CAAC,EAAE,SAAS,KAAK,gBAC/BA,EAAA,CAAC,IAAIA,EAAM,CAAC,EAAE,MAAM,GAAG,KAAK,YAAY,GACvCA,EAAM,KAAK,KAAK,gBAAgB,KAElClH;AAAA,EAAA;AAAA,EAGD,sBAAsBA,GAAgC;AACxD,QAAA,CAACA,EAAc,QAAAA;AAEnB,UAAM+nD,IAAkB/nD,EAAM,QAAQ,KAAK,kBAAkB,GAAG,GAC1DgoD,IAAe,WAAWD,CAAe;AACxC,WAAA,MAAMC,CAAY,IAAIhoD,IAAQgoD;AAAA,EAAA;AAAA,EAG/B,YAAY9nD,GAAmB;AACrC,UAAMkqB,IAAQlqB,EAAM;AACpB,QAAIF,IAAQoqB,EAAM;AAQlB,QALI,KAAK,sBACCpqB,IAAAA,EAAM,QAAQ,IAAI,OAAO,KAAK,oBAAoB,GAAG,GAAG,EAAE,IAIhEA,MAAU,IAAI;AAChB,WAAK,iBAAiB;AACtB;AAAA,IAAA;AAIF,QAAI,KAAK,kBAAkB,WAAWA,EAAM,SAAS,GAAG,GAAG;AACzD,MAAAoqB,EAAM,QAAQpqB,EAAM,QAAQ,KAAK,EAAE,GACnC,KAAK,iBAAiBA,EAAM,QAAQ,KAAK,EAAE;AAC3C;AAAA,IAAA;AAKE,QAAA,CADiB,KAAK,mBAAmB,EAC3B,KAAKA,CAAK,KAAK,CAAC,KAAK,oBAAoBE,CAAK,GAAG;AACjE,MAAAkqB,EAAM,QAAQ,KAAK;AACnB;AAAA,IAAA;AAIM,IAAApqB,IAAA,KAAK,oBAAoBA,CAAK;AAGhC,UAAAgoD,IAAe,KAAK,sBAAsBhoD,CAAK;AACrD,SAAK,QAAQgoD,GACR,KAAA,iBAAiB,KAAK,eAAehoD,CAAK,GAC/CoqB,EAAM,QAAQ,KAAK,gBAEnB,KAAK,KAAK,cAAc;AAAA,MACtB,OAAO,KAAK;AAAA,MACZ,gBAAgB,KAAK;AAAA,IAAA,CACtB;AAAA,EAAA;AAAA,EAGO,QAAQpI,GAAmC;AAC/C,IAAAA,EAAkB,IAAI,OAAO,MAC1B,KAAA,aAAa,QAAQ,KAAK;AAAA,EACjC;AAAA,EAGF,oBAAoB;AAClB,UAAM,kBAAkB,GAExB,KAAK,iBAAiB,KAAK,eAAe,KAAK,SAAS,EAAE,GACrD,KAAA,aAAa,QAAQ,KAAK;AAAA,EAAA;AAAA,EAGzB,aAAa;ArI5RvB,QAAArkB,GAAAC;AqI6RQ,QAAA,KAAK,YAAY,KAAK,SAAU;AAEpC,UAAMqqD,IAAe,KAAK,QACtB,WAAW,KAAK,MAAM,SAAS,EAAE,QAAQ,KAAK,oBAAoB,EAAE,CAAC,IACrE,GACE/C,IACJ,OAAO,KAAK,QAAS,WACjB,KAAK,OACL,YAAWtnD,KAAAD,IAAA,KAAK,SAAL,gBAAAA,EAAW,eAAX,OAAAC,IAAyB,GAAG;AAG7C,QAAImE,IAAWkmD,IAAe/C;AAG9B,IAAI,KAAK,QAAQ,UAAanjD,IAAW,KAAK,QAC5CA,IAAW,KAAK,MAIlB,KAAK,QAAQA,GACR,KAAA,iBAAiB,KAAK,eAAeA,CAAQ,GAC7C,KAAA,aAAa,QAAQ,KAAK,gBAE/B,KAAK,KAAK,cAAc;AAAA,MACtB,OAAO,KAAK;AAAA,MACZ,gBAAgB,KAAK;AAAA,IAAA,CACtB;AAAA,EAAA;AAAA,EAGK,aAAa;ArI1TvB,QAAApE,GAAAC;AqI2TQ,QAAA,KAAK,YAAY,KAAK,SAAU;AAEpC,UAAMqqD,IAAe,KAAK,QACtB,WAAW,KAAK,MAAM,SAAS,EAAE,QAAQ,KAAK,mBAAmB,EAAE,CAAC,IACpE,GACE/C,IACJ,OAAO,KAAK,QAAS,WACjB,KAAK,OACL,YAAWtnD,KAAAD,IAAA,KAAK,SAAL,gBAAAA,EAAW,eAAX,OAAAC,IAAyB,GAAG;AAG7C,QAAImE,IAAWkmD,IAAe/C;AAG9B,IAAI,KAAK,QAAQ,UAAanjD,IAAW,KAAK,QAC5CA,IAAW,KAAK,MAIlB,KAAK,QAAQA,GACR,KAAA,iBAAiB,KAAK,eAAeA,CAAQ,GAC7C,KAAA,aAAa,QAAQ,KAAK,gBAE/B,KAAK,KAAK,cAAc;AAAA,MACtB,OAAO,KAAK;AAAA,MACZ,gBAAgB,KAAK;AAAA,IAAA,CACtB;AAAA,EAAA;AAAA,EAGH,SAAS;AACP,WAAO,KAAK;AAAA,MACVuY;AAAAA;AAAAA,gBAEUlc,EAAK,mCAAmC,CAAC;AAAA,UAC/C,EAAE,KAAK,YAAY,KAAK,aAAa,CAAC,KAAK,eACzCkc;AAAAA,gBACI,KAAK,UACHA,iDACAoH,CAAO;AAAA;AAAA;AAAA,uBAGFlH,EAAU,KAAK,IAA6B,CAAC;AAAA,yBAC3C,KAAK,UAAU;AAAA,8BACVzB,GAAU,UAAU,CAAC;AAAA,4BACvB,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKlByB,EAAU,KAAK,IAA6B,CAAC;AAAA,yBAC3C,KAAK,UAAU;AAAA,8BACVzB,GAAU,UAAU,CAAC;AAAA,4BACvB,KAAK,QAAQ;AAAA;AAAA;AAAA,+BAI7B,EAAE;AAAA;AAAA,IAEV;AAAA,EAAA;AAEJ;AAnSmB8B,GAAA;AAAA,EADhB7E,GAAM,OAAO;AAAA,GANK6xC,GAOF,WAAA,gBAAA,CAAA;AAEWhtC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GATP+sC,GASS,WAAA,qBAAA,CAAA;AACAhtC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAVP+sC,GAUS,WAAA,oBAAA,CAAA;AACAhtC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAXP+sC,GAWS,WAAA,gBAAA,CAAA;AACAhtC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAZP+sC,GAYS,WAAA,iBAAA,CAAA;AACAhtC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAbP+sC,GAaS,WAAA,gBAAA,CAAA;AACChtC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAdR+sC,GAcU,WAAA,gBAAA,CAAA;AAEZhtC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAhBYgmC,GAgBF,WAAA,kBAAA,CAAA;AAhBEA,KAArBhtC,GAAA;AAAA,EADCG,EAAc,qBAAqB;AAAA,GACf6sC,EAAA;;;;;;;AC3BA,IAAAK,KAArB,cAAwDttC,GAAqB;AAAA,EAG3E,gBAAgB;AtIrDlB,QAAAjd;AsIsDW,WAAA2c;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WAMD3c,IAAA,KAAK,YAAL,OAAAA,IAAgBob,GAAU,iCAAiC,CAAC;AAAA;AAAA;AAAA,EAAA;AAAA,EAKpE,gBAAgB;AACP,WAAAuB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,aAKEvB,GAAU,mCAAmC,CAAC;AAAA;AAAA;AAAA;AAAA,UAIjDA,GAAU,iCAAiC,CAAC;AAAA;AAAA;AAAA,EAAA;AAAA,EAKpD,SAAS;AACA,WAAAuB,KAAQ,KAAK,gBAAA,CAAiB;AAAA,EAAA;AAEzC;AAjCqB4tC,GACH,SAASxtC,EAAU,GAAGytC,EAAe,GAAGC,EAAc,EAAE;AADrDF,KAArBrtC,GAAA;AAAA,EADCG,EAAc,gCAAgC;AAAA,GAC1BktC,EAAA;;;;;;;ACNrB,IAAqBG,KAArB,cAA6C9jC,GAAW1kB,CAAU,EAAE;AAAA,EAApE,cAAA;AAAA,UAAA,GAAA,SAAA,GAK4C,KAAA,aAAA,QAGU,KAAA,uBAAA,UAkB3C,KAAQ,aAAa,IACrB,KAAQ,aAAa;AAAA,EAAA;AAAA,EAIpB,aACR0a,GACM;AACN,UAAM,aAAaA,CAAkB,GAErC,KAAK,aAAa,CAAC,CAAC,KAAK,YAAY,QACrC,KAAK,aAAa,CAAC,CAAC,KAAK,aAAa,QAEjC,KAAA,iBAAiB,SAAS,KAAK,WAAW,GAC1C,KAAA,aAAa,QAAQ,QAAQ;AAAA,EAAA;AAAA,EAG1B,QACRA,GACM;AACN,UAAM,QAAQA,CAAkB,GAE5BA,EAAmB,IAAI,UAAU,MACnC,KAAK,aAAa,YAAY,KAAK,WAAW,OAAO,GAAG,GACxD,KAAK,aAAa,iBAAiB,KAAK,WAAW,SAAS,OAAO,IAGjEA,EAAmB,IAAI,UAAU,KACnC,KAAK,aAAa,iBAAiB,KAAK,WAAW,SAAS,OAAO;AAAA,EACrE;AAAA,EAGM,YAAYra,GAAyB;AAC3C,IAAI,KAAK,aACPA,EAAM,eAAe,GACrBA,EAAM,gBAAgB;AAAA,EACxB;AAAA,EAGF,IAAW,aAAqB;AvI7GlC,QAAAvC,GAAAC,GAAAE;AuI8GI,YAAOA,KAAAF,IAAA,KAAK,UAAL,OAAAA,KAAcD,IAAA,KAAK,gBAAL,gBAAAA,EAAkB,WAAhC,OAAAG,IAA0C;AAAA,EAAA;AAAA,EAGnD,SAAS;AACA,WAAAwc;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,eAAe,gBAAgB,KAAK,IAAI,IAAI;AAAA,MACvD,yBAAyB,KAAK;AAAA,MAC9B,yBAAyB,KAAK;AAAA,MAC9B,wBAAwB,KAAK;AAAA,IAAA,CAC9B,CAAC;AAAA;AAAA,YAEE,KAAK,eAAe,UAAU,KAAK,yBAAyB,WAC1Dkc,eAAkB,eAAe;AAAA,kBAC7B,KAAK,WACHA;AAAAA,6DAEAoH,CAAO;AAAA,wBAEbA,CAAO;AAAA;AAAA;AAAA,oBAGDtjB,EAAK,uBAAuB;AAAA,MAClC,gCAAgC,CAAC,CAAC,KAAK;AAAA,IAAA,CACxC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQMA,EAAK,uBAAuB;AAAA,MAClC,gCAAgC,CAAC,CAAC,KAAK;AAAA,IAAA,CACxC,CAAC;AAAA;AAAA;AAAA;AAAA,UAIJ,KAAK,eAAe,UAAU,KAAK,yBAAyB,WAC1Dkc,eAAkB,sBAAsB;AAAA,gBACpC,KAAK,WACHA;AAAAA,2DAEAoH,CAAO;AAAA,sBAEbA,CAAO;AAAA;AAAA;AAAA,kBAGDtjB,EAAK,8BAA8B;AAAA,MACzC,wCAAwC,KAAK;AAAA,IAAA,CAC9C,CAAC;AAAA;AAAA;AAAA,EAAA;AAIZ;AAzHqBiqD,GA6BH,SAAS3tC,EAAUC,EAAM;AA3BGE,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAFvButC,GAEyB,WAAA,YAAA,CAAA;AAGhBxtC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GALPutC,GAKS,WAAA,cAAA,CAAA;AAGAxtC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GARPutC,GAQS,WAAA,wBAAA,CAAA;AAGCxtC,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAXRutC,GAWU,WAAA,SAAA,CAAA;AAGextC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAdvButC,GAcyB,WAAA,YAAA,CAAA;AAGfxtC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAjBRutC,GAiBU,WAAA,WAAA,CAAA;AAGjBxtC,GAAA;AAAA,EAAXC,EAAS;AAAA,GApBSutC,GAoBP,WAAA,SAAA,CAAA;AAEKxtC,GAAA;AAAA,EADhBO,GAAsB,EAAE,MAAM,SAAU,CAAA;AAAA,GArBtBitC,GAsBF,WAAA,eAAA,CAAA;AAEAxtC,GAAA;AAAA,EADhBO,GAAsB,EAAE,MAAM,SAAU,CAAA;AAAA,GAvBtBitC,GAwBF,WAAA,gBAAA,CAAA;AAEAxtC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GA1BYwmC,GA0BF,WAAA,cAAA,CAAA;AACAxtC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GA3BYwmC,GA2BF,WAAA,cAAA,CAAA;AA3BEA,KAArBxtC,GAAA;AAAA,EADCG,EAAc,oBAAoB;AAAA,GACdqtC,EAAA;;;;;;;AChBrB,IAAqBC,KAArB,cAA6C/jC,GAAW1kB,CAAU,EAAE;AAAA,EAApE,cAAA;AAAA,UAAA,GAAA,SAAA,GAE2B,KAAA,aAAA,IAMc,KAAA,UAAA,IAGD,KAAA,SAAA,IAIpC,KAAA,aAAA,QAK6C,KAAA,mBAAA,QAGN,KAAA,aAAA,QAWM,KAAA,kBAAA,IAGjC,KAAA,cAAA,IACF,KAAA,YAAA,IASZ,KAAQ,YAA+B,CAAC,GAGxC,KAAQ,mBAAsC,CAAC,GAqX9B,KAAA,oBAAoB,CAACK,MAAsB;AAC1D,WAAK,UAAU;AACf,YAAM0K,IAAS1K,EAAM;AAEjB,UAAA0K,KAAU,CAACA,EAAO,UAAU;AACxB,cAAA29C,IAAuBroD,EAAM,WAAWA,EAAM,SAC9CsoD,IAAoB59C,EAAO;AAEjC,YAAI29C,KAAwBC,GAAmB;AAEvC,gBAAAC,IAAY,KAAK,iBAAiB;AAAA,YAAK,CAAA54C,MAC3CA,EAAI,aAAa,OAAO;AAAA,UAC1B;AAEA,UAAI44C,KAEF,KAAK,kBAAkBA,CAAS,GAChC,KAAK,iBAAiBA,CAAS,GAC/B,KAAK,QAAQA,EAAU,OACvB,KAAK,gBAAgB,KAAK;AAAA,YACxB,KAAK;AAAA,YACLA,EAAU;AAAA,UACZ,GAEA,KAAK,KAAK,qBAAqBtqD,EAAA,IAC1B,KAAK,gBAAgBsqD,CAAS,EAClC,MAGD,KAAK,kBAAkB,MAAS,GAChC,KAAK,iBAAiB,IAAI,GAC1B,KAAK,QAAQ,QACb,KAAK,gBAAgB,IAErB,KAAK,KAAK,uBAAuB;AAAA,YAC/B,QAAA79C;AAAA,YACA,OAAO;AAAA,YACP,OAAO;AAAA,YACP,MAAMA,EAAO;AAAA,UAAA,CACd;AAGH;AAAA,QAAA;AAGF,aAAK,iBAAiBA,CAAM,GAC5B,KAAK,kBAAkBA,CAAM,GAC7B,KAAK,iBAAiBA,CAAM,GAEvB,KAAA,eAAe,KAAK,MAAM;AAC7B,eAAK,gBAAgB,KAAK;AAAA,YACxB,KAAK;AAAA,YACL,KAAK;AAAA,UACP,GAEK,KAAK,mBACR,KAAK,KAAK,qBAAqBzM,EAAA,IAC1B,KAAK,gBAAgB,KAAK,aAAa,EAC3C;AAAA,QACH,CACD;AAAA,MAAA;AAED,QAAA+B,EAAM,eAAe,GACrBA,EAAM,gBAAgB;AAAA,IAE1B,GAEA,KAAA,kBAAkB,CAACwoD,OACb,OAAO,KAAK,gBAAiB,YACxB,OAAA,aAAa,KAAK,YAAY,GAGlC,KAAA,eAAe,OAAO,WAAW,MAAM;AAC1C,WAAK,cAAc;AAAA,OAClB,GAAG,GAEN,KAAK,eAAeA,GACb,KAAK,cAGd,KAAA,mBAAmB,CAACA,MAAiB;AAC7B,YAAAC,IAAc,KAAK,gBAAgBD,CAAI;AAElC,iBAAA99C,KAAU,KAAK;AAGxB,YAFcA,EAAO,WAAW,YAAY,EAElC,WAAW+9C,EAAY,YAAa,CAAA,GAAG;AAC/C,eAAK,gBAAgB,KAAK;AAAA,YACxB,KAAK;AAAA,YACL/9C,EAAO;AAAA,UACT,GACA,KAAK,iBAAiBA,CAAM;AAC5B;AAAA,QAAA;AAAA,IAGN;AAAA,EAAA;AAAA,EAldA,IAAI,iBAAiB;AACnB,WAAO,KAAK,eAAe,kBAAkB,KAAK,eAAe;AAAA,EAAA;AAAA,EAKzD,aACR2P,GACM;AACN,UAAM,aAAaA,CAAkB,GAEhC,KAAA,aAAa,QAAQ,SAAS;AAAA,EAAA;AAAA,EAGrC,gBAAgB;AxI9FlB,QAAA5c;AwI+FI,UAAMirD,KAAWjrD,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc,SAC1CooD,IAAkB6C,KAAA,gBAAAA,EAAU,mBAAmB,IAC/CC,KACJ9C,KAAA,gBAAAA,EAAiB,cAAa,UAExB6C,KAAA,gBAAAA,EAAU,mBAAmB,IAC7B,qBACFA,KAAA,gBAAAA,EAAU;AAEhB,WAAKC,IAGI,CAAC,GAAIA,CAAkC,IAFvC,CAAC,GAAG,KAAK,iBAAkC,oBAAoB,CAAC;AAAA,EAGzE;AAAA,EAGM,wBAA2C;AxI/GrD,QAAAlrD;AwIgHI,UAAMmrD,KACJnrD,IAAA,KAAK,eAAL,gBAAAA,EAAiB,iBAAkC;AACrD,WAAOmrD,IAAK,CAAC,GAAGA,CAAE,IAAI,CAAC;AAAA,EAAA;AAAA,EAGzB,wBAAwB;AACtB,WAAO,KAAK;AAAA,EAAA;AAAA,EAGd,kBAAkB;AACZ,WAAC,KAAK,gBAIW,KAAK,sBAAA,EAAwB;AAAA,MAChD,CAAM9lC,MAAAA,EAAG,UAAU,KAAK,cAAc;AAAA,IACxC,IALS;AAAA,EAOF;AAAA,EAGC,QACRzI,GACM;AAIJ,QAHF,MAAM,QAAQA,CAAkB,GAG9BA,EAAmB,IAAI,OAAO,KAC9B,CAACA,EAAmB,IAAI,eAAe,KACvC,KAAK,qBAAqB,QAC1B;AACM,YAAA3P,IAAS,KAAK,iBAAiB;AAAA,QACnC,CAAAA,MAAUA,EAAO,UAAU,KAAK;AAAA,MAClC;AAEA,MAAIA,MACF,KAAK,aAAaA,GAAQ2P,EAAmB,IAAI,OAAO,CAAC,GAEzD,KAAK,gBAAgB,KAAK;AAAA,QACxB,KAAK;AAAA,QACL,KAAK;AAAA,MACP,GAEA,KAAK,KAAK,qBAAqBpc,EAAA,IAC1B,KAAK,gBAAgB,KAAK,aAAa,EAC3C;AAAA,IACH;AAGF,KACEoc,EAAmB,IAAI,SAAS,KAChCA,EAAmB,IAAI,WAAW,OAE7B,KAAA,mBAAmB,KAAK,WAAW,KAAK,WAC7C,KAAK,KAAK,oBAAoB,EAAE,UAAU,KAAK,kBAAkB;AAAA,EACnE;AAAA,EAGQ,aACRA,GACS;AACL,WAAAA,EAAmB,IAAI,YAAY,MAEnC,KAAK,cACL,KAAK,eAAe,UACpB,KAAK,eAAe,YAEpB,KAAK,uBAAuB,GAC5B,KAAK,gBAAgB,GACrB,KAAK,iBAAiB,KAAK,iBAAiB,CAAC,GAAG,EAAK,GACrD,KAAK,KAAK,oBAAoB,EAAE,UAAU,KAAK,kBAAkB,KACxD,KAAK,cAAc,KAAK,eAAe,WAC5C,KAAK,kBAAkB,MAAM,KAAK,iBAAiB,SAAS,MAC9D,KAAK,gBAAgB,GACrB,KAAK,iBAAiB,KAAK,iBAAiB,CAAC,GAAG,EAAK,KAE9C,KAAK,cAAc,KAAK,eAAe,UAChD,KAAK,uBAAuB,GAC5B,KAAK,gBAAgB,IAChB,KAAA,iBAAiB,MAAM,EAAK,GACjC,KAAK,kBAAkB,GACvB,KAAK,KAAK,oBAAoB,EAAE,UAAU,KAAK,kBAAkB,MAE5D,KAAA,mBAAmB,KAAK,WAAW,KAAK,WAC7C,KAAK,gBAAgB,IAChB,KAAA,iBAAiB,MAAM,EAAK,GACjC,KAAK,KAAK,oBAAoB,EAAE,UAAU,KAAK,kBAAkB,KAI9D,MAAM,aAAaA,CAAkB;AAAA,EAAA;AAAA,EAGvC,yBAA+B;AAC9B,UAAAwuC,IAAiB,KAAK,WAAW,YAAY;AACnD,SAAK,oBAAoB,KAAK,WAAW,KAAK,WAAW,OAAO,CAAQ9lC,MAAA;AAClE,UAAA,CAACA,EAAK;AAED,eADmBA,EAAK,WAAW,YAAY,EAC7B,WAAW8lC,CAAc;AAAA,IACpD,CACD;AAAA,EAAA;AAAA,EAGH,yBAAyBhpD,GAAc8jB,GAAe9hB,GAAe;AAEnE,QADM,MAAA,yBAAyBhC,GAAM8jB,GAAU9hB,CAAQ,GAErDhC,MAAS,WACT8jB,MAAa9hB,KACb,KAAK,qBAAqB;AAE1B,UAAIA,GAAU;AACZ,cAAM6I,IAAS,KAAK,iBAAiB,KAAK,CAAMoY,MAAAA,EAAG,UAAUjhB,CAAQ;AAErE,aAAK,kBAAkB6I,CAAM,GAC7B,KAAK,iBAAiBA,CAAM,GAE5B,KAAK,KAAK,qBAAqBzM,EAAA,IAC1B,KAAK,gBAAgB,KAAK,aAAa,EAC3C;AAAA,MAAA;AAED,aAAK,kBAAkB,GACvB,KAAK,iBAAiB;AAAA,EAE1B;AAAA,EAGK,6BAAmC;AAClC,UAAAqyB,IAAW,KAAK,cAAc;AACpC,SAAK,mBAAmBA,GACxB,KAAK,YAAYA;AAAA,EAAA;AAAA,EAGX,cAActwB,GAA4B;AAChD,IAAAA,EAAM,eAAe,GAErB,KAAK,eAAeA,EAAM,KAAKA,EAAM,IAAI;AAAA,EAAA;AAAA,EAGnC,uBAA6B;AAC7B,UAAA8oD,IAAe,KAAK,sBAAA,EAAwB;AAAA,MAChD,CAAMhmC,MAAAA,EAAG,UAAU,KAAK,cAAc;AAAA,IACxC;AAEA,IAAIgmC,KACFA,EAAa,eAAe,EAAE,OAAO,UAAA,CAAW;AAAA,EAClD;AAAA,EAGM,oBAAoBznD,GAAmB;AxIpQjD,QAAA5D;AwIqQI,QAAI4D,MAAQ;AACV,WAAK,gBAAgB,KAAK;AAAA,QACxB,KAAK;AAAA,QACL,KAAK;AAAA,QACL;AAAA,MACF;AAAA,aACSA,MAAQ,WAAW;AAC5B,YAAM0nD,IAAU,KAAK;AAAA,QACnB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK,kBAAkB,KAAK,IAAI;AAAA,MAClC;AACA,WAAK,gBACHA,MAAY,KAAK,iBAAiB,SAAS,KAAKA;AAAA,IAAA,WACzC1nD,MAAQ;AACjB,WAAK,iBAAgB5D,IAAA,KAAK,iBAAiB,CAAC,MAAvB,QAAAA,EAA0B,WAC3C,KAAK,mBAAmB,KAAK,kBAAkB,IAAI,CAAC,IACpD;AAAA,aACK4D,MAAQ,OAAO;AACxB,YAAM0nD,IAAU,KAAK;AAAA,QACnB,KAAK;AAAA,QACL,KAAK,iBAAiB;AAAA,QACtB;AAAA,MACF;AACA,WAAK,gBACHA,MAAY,KAAK,iBAAiB,SAAS,KAAKA;AAAA,IAAA;AAAA,EACpD;AAAA,EAGM,gBAAgB1nD,GAAmB;AACzC,IAAIA,MAAQ,WACV,KAAK,KAAK,YAAY,IACbA,MAAQ,YACjB,KAAK,kBAAkB,KAAK,iBAAiB,KAAK,aAAa,CAAC,GAChE,KAAK,iBAAiB,KAAK,iBAAiB,KAAK,aAAa,CAAC,GAC/D,KAAK,KAAK,qBAAqBpD,EAAA,IAC1B,KAAK,gBAAgB,KAAK,aAAa,EAC3C;AAAA,EACH;AAAA,EAGM,kBAAkBoD,GAAmB;AAC3C,IACE,KAAK,eAAe,gBACnBA,KAAA,gBAAAA,EAAK,YAAW,KAAKA,MAAQ,gBAE9B,KAAK,iBAAiBA,CAAG;AAAA,EAC3B;AAAA,EAGM,eAAeA,GAAa2nD,GAAkB;AAChD,QAAC,KAAK,YAIV,KAAK,oBAAoB3nD,CAAG,GAC5B,KAAK,gBAAgBA,CAAG,GACxB,KAAK,kBAAkBA,CAAG,GAEtB,KAAK,iBAAiB,IAAG;AAC3B,YAAMqJ,IAAS,KAAK,iBAAiB,KAAK,aAAa;AACvD,WAAK,iBAAiBA,CAAM,GAC5B,KAAK,KAAK,eAAezM,EAAA;AAAA,QACvB,MAAM+qD;AAAA,QACN,KAAA3nD;AAAA,SACG,KAAK,gBAAgBqJ,CAAM,EAC/B;AAAA,IAAA;AAAA,EACH;AAAA,EAGM,gBAAgBA,GAA0B;AAChD,QAAI,CAACA;AACI;AAGT,QAAIiF,IAAMjF;AAEN,WAAAA,EAAO,YAAY,yBACfiF,IAAAjF,EAAO,QAAQ,oBAAoB,IAGpC;AAAA,MACL,KAAAiF;AAAA,MACA,OAAOA,KAAA,gBAAAA,EAAK;AAAA,MACZ,MAAMA,KAAA,gBAAAA,EAAK;AAAA,MACX,OAAO,KAAK;AAAA,IACd;AAAA,EAAA;AAAA,EAGM,mBACNs5C,GACAplD,GACAmhD,GACA;AACA,QAAI18B,IAAoBzkB,GACpBqlD;AAED;AAGD,UAFa5gC,KAAA08B,GACbkE,IAAaD,EAAW3gC,CAAS,GAC7B4gC,MAAe;AACjB;AAAA,WAEKA,KAAA,QAAAA,EAAY;AAErB,WAAOA,IAAa5gC,IAAYzkB;AAAA,EAAA;AAAA,EAG1B,iBACNolD,GACAnpD,GACQ;AACR,WAAOmpD,EAAW,UAAU,CAAUv+C,MAAAA,EAAO,UAAU5K,CAAK;AAAA,EAAA;AAAA,EAGtD,uBAAuB;AACxB,SAAA,iBAAiB,QAAQ,CAAMgjB,MAAA;AAClC,MAAAA,EAAG,UAAU,IACbA,EAAG,WAAW;AAAA,IAAA,CACf;AAAA,EAAA;AAAA;AAAA,EAIK,iBAAiBpY,GAAiCwc,IAAW,IAAM;AACzE,SAAK,qBAAqB,GAEtBxc,KACF,KAAK,gBAAgBA,GACrBA,EAAO,UAAU,IACjBA,EAAO,WAAW,GAElB,KAAK,KAAK,sBAAsBzM,EAAA,IAC3B,KAAK,gBAAgByM,CAAM,EAC/B,GAEGwc,IACF,KAAK,iBAAiBxc,CAAM,IAE5B,KAAK,qBAAqB,MAG5B,KAAK,gBAAgB,MAEhB,KAAA,KAAK,sBAAsB,IAAI;AAAA,EACtC;AAAA,EAGM,iBAAiBA,GAAyB;AAC1C,UAAAy+C,IAAe,KAAK,sBAAA,EAAwB;AAAA,MAChD,CAAArmC,MAAMA,EAAG,UAAUpY,EAAO;AAAA,IAC5B;AAEA,IAAIy+C,KACFA,EAAa,MAAM;AAAA,EACrB;AAAA,EAGM,kBAAkBz+C,GAAsC;AAC9D,SAAK,iBAAiB,QAAQ,CAAOoY,MAAAA,EAAG,WAAW,EAAM,GAErDpY,MACF,KAAK,gBAAgBA,GAErBA,EAAO,WAAW;AAAA,EACpB;AAAA,EAGM,iBAAiBA,GAAsC5K,GAAa;AACpE,UAAA6jB,IAAW7jB,KAAS,KAAK;AAE/B,IAAI4K,KACEA,EAAO,UAAUiZ,MACnB,KAAK,QAAQjZ,EAAO;AAAA,EAExB;AAAA,EAGM,aAAaA,GAAyB5K,GAAa;AACrD,IAAA4K,KAAU,CAACA,EAAO,aACpB,KAAK,gBAAgB,KAAK;AAAA,MACxB,KAAK;AAAA,MACLA,EAAO;AAAA,IACT,GAEA,KAAK,kBAAkBA,CAAM,GAC7B,KAAK,iBAAiBA,CAAM,GACvB,KAAA,iBAAiBA,GAAQ5K,CAAK;AAAA,EACrC;AAAA,EAoGM,qBAA2B;AACjC,QAAI,CAAC,KAAK,SAAS,KAAK,gBAAgB;AACtC,WAAK,gBAAgB;AAAA,SAChB;AACC,YAAAgG,IAAQ,KAAK,QACf,KAAK,iBAAiB,KAAK,kBAAkB,KAAK,KAAK,IACvD,KAAK;AAET,MAAIA,MAAU,MAAM,CAAC,KAAK,mBACxB,KAAK,gBAAgBA,GACrB,KAAK,iBAAiB,KAAK,iBAAiB,KAAK,aAAa,CAAC,GAC/D,KAAK,kBAAkB,KAAK,iBAAiB,KAAK,aAAa,CAAC,GAC5D,KAAK,SACP,KAAK,iBAAiB,KAAK,iBAAiB,KAAK,aAAa,CAAC;AAAA,IAEnE;AAGE,IAAC,KAAK,kBACR,KAAK,iBAAiB,KAAK,iBAAiB,CAAC,CAAC,GAC9C,KAAK,kBAAkB,KAAK,iBAAiB,CAAC,CAAC;AAAA,EACjD;AAAA,EAGM,eAAezE,GAAmB;AACxC,KAAI,KAAK,kBAAkB,KAAK,eAAe,YAC7C,KAAK,eAAeA,CAAG,GACvB,KAAK,iBAAiB,KAAK,iBAAiB,KAAK,aAAa,GAAG,EAAK,GACtE,KAAK,kBAAkB,KAAK,iBAAiB,KAAK,aAAa,CAAC,IAG9D,KAAK,eAAe,cACtB,KAAK,iBAAiBA,CAAG;AAAA,EAC3B;AAAA,EAGK,aAAaA,GAAoB;AACtC,SAAK,UAAU,IACf,KAAK,MAAM,GAENA,IAGH,KAAK,eAAeA,CAAG,IAFvB,KAAK,mBAAmB;AAAA,EAG1B;AAAA,EAGK,cAAoB;AACzB,SAAK,UAAU,IACf,KAAK,qBAAqB;AAAA,EAAA;AAAA,EAGpB,mBAAmB;AACnB,UAAA4nD,IAAa,KAAK,cAAc;AAGtC,QAFA,KAAK,2BAA2B,GAE5BA,EAAW,SAAS,KAAK,KAAK,qBAAqB,QAAQ;AAC7D,YAAMv+C,IAASu+C,EAAW,KAAK,OAAMnmC,EAAG,UAAU,KAAK,KAAK;AAC5D,WAAK,kBAAkBpY,CAAM,GAC7B,KAAK,iBAAiBA,CAAM,GAExB,KAAK,kBACP,KAAK,gBAAgB,KAAK,iBAAiBu+C,GAAY,KAAK,KAAK,GACjE,KAAK,KAAK,qBAAqBhrD,EAAA,IAC1B,KAAK,gBAAgB,KAAK,aAAa,EAC3C;AAAA,IACH,WACSgrD,EAAW,SAAS,KAAK,CAAC,KAAK,UAAU,CAAC,KAAK,gBAAgB;AACxE,YAAMG,IAAcH,EAAW,KAAK,CAAUv+C,MAAA,CAACA,EAAO,QAAQ;AAC9D,WAAK,gBAAgB,GAChB,KAAA,iBAAiB0+C,GAAa,EAAK,GAExC,KAAK,KAAK,sBAAsBnrD,EAAA,IAC3B,KAAK,gBAAgBmrD,CAAW,EACpC;AAAA,IAAA,WACQH,EAAW,SAAS,MAAM,KAAK,UAAU,KAAK,iBAAiB;AACxE,YAAMG,IAAcH,EAAW,KAAK,CAAUv+C,MAAA,CAACA,EAAO,QAAQ;AAE9D,OACE,CAAC,KAAK,iBACN,KAAK,cAAc,WAAU0+C,KAAA,gBAAAA,EAAa,YAE1C,KAAK,gBAAgB,GAChB,KAAA,iBAAiBA,GAAa,EAAK;AAAA,IAC1C;AAAA,EACF;AAAA,EAGF,SAAS;AACA,WAAAhvC;AAAAA;AAAAA,cAEGlc,EAAK,eAAe;AAAA,MAC1B,mBAAmB,KAAK,SAAS;AAAA,MACjC,mBAAmB,KAAK,SAAS;AAAA,IAAA,CAClC,CAAC;AAAA,iBACS,KAAK,aAAa;AAAA,eACpB,KAAK,YAAY;AAAA,QACxB,KAAK,iBAAiB;AAAA,MACtB,CAACwM,GAAQ5E,MAAUsU;AAAAA;AAAAA,mBAER,KAAK,IAAI;AAAA,wBACJ1P,EAAO,QAAQ;AAAA,wBACf,KAAK,UAAUA,EAAO,KAAK;AAAA,uBAC5B5E,MAAU,KAAK,aAAa;AAAA,oBAC/BwU,EAAU5P,EAAO,KAAK,CAAC;AAAA;AAAA,oBAEvBA,EAAO,KAAK;AAAA,uBACTA,EAAO,QAAQ;AAAA,iBACrBA,EAAO,MAAM,iBAAiBA,EAAO,KAAK,EAAE;AAAA,yBACpC,KAAK,UAAU;AAAA,qBACnB,KAAK,iBAAiB;AAAA,cAC7B6P,GAAa7P,EAAO,SAAS,CAAC;AAAA;AAAA;AAAA,IAGrC,CAAA;AAAA,iCAC0B,KAAK,gBAAgB;AAAA;AAAA,EAAA;AAGtD;AA9nBqB09C,GAwDH,SAAS5tC,EAAUC,EAAM;AAtD7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAFSwtC,GAEP,WAAA,cAAA,CAAA;AAG+BztC,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GALtBwtC,GAKwB,WAAA,SAAA,CAAA;AAGdztC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRwtC,GAQU,WAAA,WAAA,CAAA;AAGAztC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAXRwtC,GAWU,WAAA,UAAA,CAAA;AAGjBztC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAdSwtC,GAcP,WAAA,cAAA,CAAA;AAMgBztC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GApBPwtC,GAoBS,WAAA,oBAAA,CAAA;AAGAztC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAvBPwtC,GAuBS,WAAA,cAAA,CAAA;AAMrBztC,GAAA;AAAA,EADNC,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GA5BNwtC,GA6BZ,WAAA,WAAA,CAAA;AAKsBztC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAlCRwtC,GAkCU,WAAA,mBAAA,CAAA;AAOrBztC,GAAA;AAAA,EADPgH,EAAM;AAAA,GAxCYymC,GAyCX,WAAA,iBAAA,CAAA;AAGDztC,GAAA;AAAA,EADNgH,EAAM;AAAA,GA3CYymC,GA4CZ,WAAA,iBAAA,CAAA;AAGCztC,GAAA;AAAA,EADPgH,EAAM;AAAA,GA9CYymC,GA+CX,WAAA,aAAA,CAAA;AAGAztC,GAAA;AAAA,EADPgH,EAAM;AAAA,GAjDYymC,GAkDX,WAAA,oBAAA,CAAA;AAlDWA,KAArBztC,GAAA;AAAA,EADCG,EAAc,oBAAoB;AAAA,GACdstC,EAAA;;;;;;;ACPA,IAAAiB,KAArB,cAA0C1pD,EAAW;AAAA,EAMnD,SAAS;AACA,WAAAya;AAAAA,EAAA;AAEX;AATqBivC,GAIH,SAAS7uC,EAAUC,EAAM;AAFGE,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAFvByuC,GAEyB,WAAA,QAAA,CAAA;AAFzBA,KAArB1uC,GAAA;AAAA,EADCG,EAAc,gBAAgB;AAAA,GACVuuC,EAAA;;;;;;;ACYA,IAAAC,KAArB,cAAwC3pD,EAAW;AAAA,EAAnD,cAAA;AAAA,UAAA,GAAA,SAAA,GAE0C,KAAA,WAAA,IAEQ,KAAA,mBAAA,IAER,KAAA,YAAA,GAC/B,KAAQ,aAAa,GAES,KAAA,WAAA,IAC9B,KAAQ,YAAY,IAEW,KAAA,YAAA,GAEb,KAAA,kBAAkB,CAAC,IAAI,IAAI,IAAI,GAAG,GAGX,KAAA,sBAAA,QAEN,KAAA,gBAAA,QAEA,KAAA,gBAAA,QAEE,KAAA,kBAAA,QAEG,KAAA,qBAAA,QAEJ,KAAA,iBAAA,QAEA,KAAA,iBAAA,QAcG,KAAA,gBAAA,CAC9Ck1C,GACAK,GACAqU,MAEOhtD,EAAE,kBAAkB;AAAA,MACzB,YAAYs4C,IAAYK,IAAW;AAAA,MACnC,WAAWL,IAAY,KAAKK;AAAA,MAC5B,WAAAqU;AAAA,IAAA,CACD;AAAA,EACH;AAAA,EAIU,QACRlvC,GACM;AACN,UAAM,QAAQA,CAAkB,GAE5B,KAAK,qBACHA,EAAmB,IAAI,WAAW,MACpC,KAAK,aAAa,KAAK,YAGrBA,EAAmB,IAAI,UAAU,MACnC,KAAK,YAAY,KAAK;AAAA,EAE1B;AAAA,EAGM,gBAAgBmvC,GAAgB3U,GAAmBK,GAAkB;AAC3E,SAAK,mBACA,KAAK,aAAaL,IAClB,KAAK,YAAYA,GAEtB,KAAK,KAAK,yBAAyB;AAAA,MACjC,QAAA2U;AAAA,MACA,YAAY;AAAA,QACV,WAAA3U;AAAA,QACA,UAAAK;AAAA,MAAA;AAAA,IACF,CACD;AAAA,EAAA;AAAA,EAGK,eAAeA,GAAkB;AAIvC,IAAI,KAAK,oBACP,KAAK,YAAYA,GACjB,KAAK,aAAa,MAElB,KAAK,WAAWA,GAChB,KAAK,YAAY,IAGnB,KAAK,KAAK,yBAAyB;AAAA,MACjC,QAAQ;AAAA,MACR,YAAY;AAAA,QACV;AAAA,QACA,UAAAA;AAAA,MAAA;AAAA,IACF,CACD;AAAA,EAAA;AAAA,EAGK,uBAAuB;AACzB,WAAA,KAAK,wBAAwB,SAAe1zB,IAEzCpH;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,kBAKO,KAAK,QAAQ;AAAA;AAAA,eAEhB,KAAK,mBACV,KAAK,UAAU,aACf,KAAK,SAAS,SAAU,CAAA;AAAA,oBACd,CAAC3d,MAAa;AACrB,MAAAA,EAAE,OAA6B,SAClC,KAAK,eAAe,OAAQA,EAAE,OAA6B,KAAK,CAAC;AAAA,IACnE,CACD;AAAA;AAAA;AAAA;AAAA,QAIC,KAAK,mBAAmB,KAAK,gBAAgB,SAAS,IACpD,KAAK,gBAAgB;AAAA,MACnB,CACE8kB,MAAAnH;AAAAA,wBACUmH,CAAI;AAAA,wBACJhlB,EAAE,kBAAkB,EAAE,OAAOglB,EAAA,CAAM,CAAC;AAAA,mBACzCA,CAAI;AAAA;AAAA,IAAA,IAGbC,CAAO;AAAA;AAAA,EAAA;AAAA,EAIP,uBACNxW,GACAw+C,GACA3U,GACA9qB,GACA0/B,GACAC,GACA;AACO,WAAAtvC;AAAAA,aACEpP,CAAI;AAAA;AAAA;AAAA,eAGF,MAAM,KAAK,gBAAgBw+C,GAAQ3U,GAAW,KAAK,QAAQ,CAAC;AAAA,kBACzD9qB,KAAY,KAAK,QAAQ;AAAA,mBACxB2/B,CAAQ,KAAKD,CAAK;AAAA;AAAA,EAAA;AAAA,EAI3B,iBAAiB;AACnB,WAAA,KAAK,kBAAkB,SAAejoC,IAEnCpH;AAAAA,SACF,KAAK,iBACR,KAAK;AAAA,MACH,KAAK,mBAAmB,KAAK,aAAa,KAAK;AAAA,MAC/C,KAAK,mBAAmB,KAAK,YAAY,KAAK;AAAA,MAC9C,KAAK;AAAA,IAAA,CACN;AAAA;AAAA,EAAA;AAAA,EAIK,SAAS;AACX,UAAAuvC,IACJ,KAAK,cAAc,KAAK,KAAK,KAAK,YAAY,KAAK,QAAQ,IAAI;AAE1D,WAAAvvC;AAAAA;AAAAA,UAED,KAAK,qBAAsB,CAAA;AAAA,UAC3B,KAAK,oBAAoB,SACvB,KAAK;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA,KAAK,cAAc;AAAA,MACnB,KAAK,oBAAoB7d,EAAE,aAAa;AAAA,MACxC;AAAA,IAAA,IAEFilB,CAAO;AAAA,UACT,KAAK,uBAAuB,SAC1B,KAAK;AAAA,MACH;AAAA,MACA;AAAA,MACA,KAAK,YAAY;AAAA,MACjB,KAAK,cAAc;AAAA,MACnB,KAAK,uBAAuBjlB,EAAE,gBAAgB;AAAA,MAC9C;AAAA,IAAA,IAEFilB,CAAO;AAAA,UACT,KAAK,eAAgB,CAAA;AAAA,UACrB,KAAK,mBAAmB,SACtB,KAAK;AAAA,MACH;AAAA,MACA;AAAA,MACA,KAAK,YAAY;AAAA,MACjBmoC;AAAA,MACA,KAAK,mBAAmBptD,EAAE,YAAY;AAAA,MACtC;AAAA,IAAA,IAEFilB,CAAO;AAAA,UACT,KAAK,mBAAmB,SACtB,KAAK;AAAA,MACH;AAAA,MACA;AAAA,MACA,KAAK,KAAK,KAAK,YAAY,KAAK,QAAQ,IAAI;AAAA,MAC5CmoC;AAAA,MACA,KAAK,mBAAmBptD,EAAE,YAAY;AAAA,MACtC;AAAA,IAAA,IAEFilB,CAAO;AAAA;AAAA;AAAA,EAAA;AAInB;AAhOqB8nC,GAuDH,SAAS9uC,EAAUC,EAAM;AArDZE,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAFR0uC,GAEU,WAAA,YAAA,CAAA;AAEA3uC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAJR0uC,GAIU,WAAA,oBAAA,CAAA;AAED3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GANP0uC,GAMS,WAAA,aAAA,CAAA;AACX3uC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAPY2nC,GAOF,WAAA,cAAA,CAAA;AAEW3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GATP0uC,GASS,WAAA,YAAA,CAAA;AACX3uC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAVY2nC,GAUF,WAAA,aAAA,CAAA;AAEW3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAZP0uC,GAYS,WAAA,aAAA,CAAA;AAED3uC,GAAA;AAAA,EAA1BC,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GAdN0uC,GAcQ,WAAA,mBAAA,CAAA;AAGC3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAjBP0uC,GAiBS,WAAA,uBAAA,CAAA;AAEA3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAnBP0uC,GAmBS,WAAA,iBAAA,CAAA;AAEA3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GArBP0uC,GAqBS,WAAA,iBAAA,CAAA;AAEA3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAvBP0uC,GAuBS,WAAA,mBAAA,CAAA;AAEA3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAzBP0uC,GAyBS,WAAA,sBAAA,CAAA;AAEA3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA3BP0uC,GA2BS,WAAA,kBAAA,CAAA;AAEA3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA7BP0uC,GA6BS,WAAA,kBAAA,CAAA;AAGA3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhCP0uC,GAgCS,WAAA,oBAAA,CAAA;AAEA3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAlCP0uC,GAkCS,WAAA,uBAAA,CAAA;AAEA3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GApCP0uC,GAoCS,WAAA,mBAAA,CAAA;AAEA3uC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtCP0uC,GAsCS,WAAA,mBAAA,CAAA;AAKI3uC,GAAA;AAAA,EAA/BC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GA3CX0uC,GA2Ca,WAAA,iBAAA,CAAA;AA3CbA,KAArB3uC,GAAA;AAAA,EADCG,EAAc,cAAc;AAAA,GACRwuC,EAAA;;;;;;;ACkCA,IAAAM,KAArB,cAAgD/nB,GAAiB;AAAA,EAO/D,cAAc;AACN,UAAA,GAP6B,KAAA,mBAAA,IAQnC,KAAK,OAAO;AAAA,EAAA;AAAA,EAGN,oBAAoB;AACrB,SAAA,mBAAmB,CAAC,KAAK,kBACzB,KAAA,OAAO,KAAK,mBAAmB,SAAS;AAAA,EAAA;AAAA,EAGvC,YAAYtgB,GAAc;AAChC,WAAIA,MAAS,OACJ,OAEFA;AAAA,EAAA;AAAA,EAGT,SAAS;AACP,WAAO,KAAK;AAAA,MACVnH;AAAAA;AAAAA,gBAEUlc,EAAK,uCAAuC;AAAA,QAClD,2BAA2B,KAAK;AAAA,MAAA,CACjC,CAAC;AAAA;AAAA,YAEE,KAAK,UACHkc,iDACAoH,CAAO;AAAA;AAAA;AAAA;AAAA,mBAIFlH,EAAU,KAAK,YAAY,KAAK,IAAI,CAAC,CAAuB;AAAA;AAAA,yBAEtD,KAAK,mBACdzB,GAAU,MAAM,IAChBA,GAAU,MAAM,CAAC;AAAA,2BACN,KAAK,qBAAqB,KAAO,SAAS,OAAO;AAAA,wBACpD,KAAK,QAAQ;AAAA,qBAChB,KAAK,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQvC;AAAA,EAAA;AAEJ;AAvDqB+wC,GAGH,SAASpyB;AAAAA,MACrBhd,EAAUqnB,GAAiB,MAAM,CAAC;AAAA,MAClCrnB,EAAUyG,EAAK,CAAC;AAAA;AAJXtG,GAAA;AAAA,EAARgH,EAAM;AAAA,GADYioC,GACV,WAAA,oBAAA,CAAA;AADUA,KAArBjvC,GAAA;AAAA,EADCG,EAAc,uBAAuB;AAAA,GACjB8uC,EAAA;;;;;;;ACgBA,IAAAC,KAArB,cAA8CngC,GAAqB;AAAA,EAAnE,cAAA;AAAA,UAAA,GAAA,SAAA,GAI2C,KAAA,YAAA,IAG6B,KAAA,iBAAA,IAGN,KAAA,WAAA,IAGjB,KAAA,SAAA,IAKa,KAAA,OAAA;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASpD,qBAAyC;AAC/C,UAAME,IAAgB,CAAC;AAEvB,WAAI,KAAK,eACPA,EAAI,KAAK,aAAa,GAGpB,KAAK,YACPA,EAAI,KAAK,UAAU,GAGdA,EAAI,SAAS,IAAIA,EAAI,KAAK,GAAG,IAAI;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQlC,cAAc;AAEpB,QAAI,KAAK,kBAAkB,KAAK,YAAY,KAAK;AAC/C;AAGF,SAAK,UAAU;AAEf,UAAM,EAAE,SAAAC,GAAS,OAAA/pB,GAAO,UAAAiqB,EAAa,IAAA;AAGjC,QAAA;AACF,WAAK,KAAK,cAAc;AAAA,QACtB,SAAAF;AAAA,QACA,OAAO/pB,KAAS;AAAA,QAChB,UAAAiqB;AAAA,QACA,UAAU,KAAK;AAAA,QACf,MAAM;AAAA,MAAA,CACP;AAAA,aACMrZ,GAAO;AACN,cAAA,MAAM,6CAA6CA,CAAK;AAAA,IAAA;AAI9D,QAAA;AACF,WAAK,YAAY;AAAA,aACVA,GAAO;AACN,cAAA,MAAM,wCAAwCA,CAAK;AAAA,IAAA;AAAA,EAC7D;AAAA,EAGF,oBAAoB;AACb,SAAA,UAAU,YAAY,EAAE,GACxB,KAAA,UAAU,aAAa,KAAK,YAAY,GAC7C,KAAK,QAAQ,KAAK,cACb,KAAA,UAAU,KAAK,iBAAiB,KAAK;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQpC,cAAc;AACpB,UAAM,EAAE,SAAAmZ,GAAS,OAAA/pB,GAAO,UAAAiqB,EAAa,IAAA,MAE/B/pB,IAAQ,IAAI,YAAY,aAAa;AAAA,MACzC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,QAAQ,EAAE,SAAA6pB,GAAS,OAAA/pB,GAAO,UAAAiqB,GAAU,UAAU,KAAK,SAAS;AAAA,IAAA,CAC7D;AAED,SAAK,cAAc/pB,CAAK;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASlB,cAAcA,GAA4B;AAE5C,IAAAA,EAAM,SAAS,WAOfA,EAAM,SAAS,YACjBA,EAAM,eAAe,GACrB,KAAK,YAAY;AAAA,EACnB;AAAA,EAGF,IAAW,eAAiC;AACtC,QAAA,CAAC,KAAK;AACR,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAEF,WAAO,KAAK;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOP,QAAc;AACnB,IAAI,KAAK,SAAS,CAAC,KAAK,YAAY,CAAC,KAAK,YACxC,KAAK,MAAM,MAAM;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA,EAOK,OAAa;AAClB,IAAI,KAAK,SACP,KAAK,MAAM,KAAK;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASF,cAAcA,GAAc;AAC1B,IAAAA,EAAM,eAAe,GAEhB,KAAK,YACR,KAAK,UAAU;AAAA,EACjB;AAAA,EAGF,SAAS;AACA,WAAAoa;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,kBAKOlc,EAAK,gBAAgB,UAAU,KAAK,IAAI,IAAI;AAAA,MAClD,kBAAkB,KAAK;AAAA,MACvB,mBAAmB,KAAK;AAAA,MACxB,mBAAmB,KAAK;AAAA,MACxB,mBAAmB,KAAK;AAAA,MACxB,oBAAoB,KAAK;AAAA,MACzB,oBAAoB,KAAK;AAAA,MACzB,wBAAwB,KAAK,mBAAmB;AAAA,MAChD,uBAAuB,KAAK,mBAAmB;AAAA,IAAA,CAChD,CAAC;AAAA;AAAA;AAAA,oBAGQA,EAAK,kBAAkB;AAAA,MAC7B,8BAA8B,KAAK,SAAS;AAAA,MAC5C,0BAA0B,KAAK;AAAA,IAAA,CAChC,CAAC;AAAA;AAAA;AAAA;AAAA,sBAIQA,EAAK,gBAAgB;AAAA,MAC3B,4BAA4B,KAAK,SAAS;AAAA,IAAA,CAC3C,CAAC;AAAA,qBACKoc,EAAU,KAAK,OAAO,KAAK,OAAO,MAAS,CAAC;AAAA;AAAA,sBAE3CA,EAAU,KAAK,KAAK,CAAC;AAAA,yBAClB,KAAK,OAAO;AAAA,0BACX,KAAK,QAAQ;AAAA,0BACb,KAAK,QAAQ;AAAA,0BACb,KAAK,QAAQ;AAAA,yBACd,KAAK,WAAW,KAAK,YAAY,MAAM,IAAI;AAAA,2BACzCA,EAAU,KAAK,SAAS,KAAK,EAAE;AAAA,iCACzBA,EAAU,KAAK,oBAAoB,CAAC;AAAA,6BACxC,KAAK,UAAU,SAAS,OAAO;AAAA,8BAC9B,KAAK,UAAU,SAAS,IAAI;AAAA,yBACjC,KAAK,aAAa;AAAA,uBACpB,KAAK,WAAW;AAAA,uBAChB,KAAK,WAAW;AAAA,yBACd,KAAK,aAAa;AAAA,sBACrB,MAAM,MAAM;AAAA,uBACX,MAAM,OAAO;AAAA;AAAA;AAAA,sBAGdpc,EAAK,kBAAkB;AAAA,MAC7B,4BAA4B,KAAK;AAAA,MACjC,4BAA4B,KAAK;AAAA,MACjC,2BAA2B,KAAK;AAAA,MAChC,2BAA2B,KAAK;AAAA,IAAA,CACjC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAMQA;AAAA,MACN;AAAA,MACA,iCAAiC,KAAK,IAAI;AAAA,MAC1C;AAAA,QACE,0CAA0C,KAAK;AAAA,QAC/C,0CAA0C,KAAK;AAAA,MAAA;AAAA,IACjD,CACD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKKA,EAAK,2BAA2B;AAAA,MACtC,qCAAqC,KAAK;AAAA,MAC1C,qCAAqC,KAAK;AAAA,MAC1C,yBAAyB,KAAK,yBAAyB;AAAA,MACvD,sBAAsB,KAAK,yBAAyB;AAAA,IAAA,CACrD,CAAC;AAAA,gBACA,KAAK,SACPkc;AAAAA;AAAAA;AAAAA;AAAAA,wBAIU,KAAK,IAAI;AAAA,4BACL,KAAK,QAAQ;AAAA,4BACb,KAAK,QAAQ;AAAA,iCACR,KAAK,aAAa;AAAA,4BACvB,KAAK,YAAY,KAAK,QAAQ;AAAA,4BAC9B,KAAK,QAAQ;AAAA,wBACjBE,EAAU,KAAK,KAAK,CAAC;AAAA;AAAA;AAAA,mCAGV;AAAA,gBACnB,KAAK,eACPF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,yBAKWE,EAAU,KAAK,IAA6B,CAAC;AAAA;AAAA,oBAElD,KAAK,WAAW;AAAA;AAAA,eAErB;AAAA;AAAA;AAAA,YAGH,KAAK,YACPF;AAAAA;AAAAA;AAAAA,6BAGmBE,EAAU,KAAK,YAAY,CAAC;AAAA,6BAC5BA,EAAU,KAAK,IAAI,CAAe;AAAA;AAAA,wBAEvC,KAAK,MAAM;AAAA,gBACnB,KAAK,QAAQ;AAAA;AAAA,WAElB;AAAA;AAAA;AAAA;AAAA,EAAA;AAKX;AA9RqBuvC,GAoBH,SAASrvC,EAAUC,EAAM;AAnBPE,GAAA;AAAA,EAAjC7E,GAAM,QAAQ;AAAA,GADI+zC,GACe,WAAA,SAAA,CAAA;AAGLlvC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAJRivC,GAIU,WAAA,aAAA,CAAA;AAGelvC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAPvBivC,GAOyB,WAAA,kBAAA,CAAA;AAGAlvC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAVvBivC,GAUyB,WAAA,YAAA,CAAA;AAGflvC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAbRivC,GAaU,WAAA,UAAA,CAAA;AAKDlvC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAlBPivC,GAkBS,WAAA,QAAA,CAAA;AAlBTA,KAArBlvC,GAAA;AAAA,EADCG,EAAc,qBAAqB;AAAA,GACf+uC,EAAA;;;;;;;AC5DA,IAAAC,KAArB,cAAyCtlC,GAAmB;AAAA,EAI1D,cAAc;AACN,UAAA,GAW0B,KAAA,MAAA,GAElC,KAAQ,mBAAuC,MACtC,KAAQ,YAAY,IACpB,KAAQ,cAAc,GACtB,KAAiB,YACxB,eAAe,OAAO,OAAO,YAAY,IAwB3C,KAAA,wBAAwB,MAAM;AAC5B,WAAK,YAAY,IAGjB,KAAK,gBAAgB;AAAA,IACvB,GAEA,KAAA,uBAAuB,MAAM;AAC3B,WAAK,YAAY;AAAA,IACnB,GAEA,KAAA,0BAA0B,CAACxkB,MAAyB;AAC9C,UAAA,OAAK,YAAY,KAAK;AAE1B,gBAAQA,EAAM,KAAK;AAAA,UACjB,KAAK;AAAA,UACL,KAAK;AACH,YAAAA,EAAM,eAAe,GACrB,KAAK,iBAAiB;AACtB;AAAA,UACF,KAAK;AAAA,UACL,KAAK;AACH,YAAAA,EAAM,eAAe,GACrB,KAAK,iBAAiB;AACtB;AAAA,UACF,KAAK;AACH,YAAAA,EAAM,eAAe,GACrB,KAAK,WAAW,CAAC;AACjB;AAAA,UACF,KAAK;AACH,YAAAA,EAAM,eAAe,GAChB,KAAA,WAAW,KAAK,GAAG;AACxB;AAAA,UACF;AACE;AAAA,QAAA;AAAA,IAEN,GAMA,KAAA,iBAAiB,CAACA,MAAyB;AACrC,UAAA,KAAK,YAAY,KAAK,SAAU;AAOhC,UAFmB,KAAK,SAASA,EAAM,MAAc,KAEnC,KAAK;AAGzB,gBAAQA,EAAM,KAAK;AAAA,UACjB,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAEH;AAAA,UACF;AACE;AAAA,QAAA;AAAA,IAGR,GAzGE,KAAK,QAAQ;AAAA,EAAA;AAAA,EAiBf,oBAAoB;AAClB,UAAM,kBAAkB,GAGf,SAAA,iBAAiB,WAAW,KAAK,cAAc;AAAA,EAAA;AAAA,EAG1D,uBAAuB;AACrB,UAAM,qBAAqB,GAElB,SAAA,oBAAoB,WAAW,KAAK,cAAc,GAEvD,KAAK,oBACF,KAAA,iBAAiB,oBAAoB,SAAS,MAAM;AAAA,IAAA,CAAE;AAAA,EAC7D;AAAA,EAGF,eAAe;AAEb,SAAK,mBAAmB,KAAK,WAAW,cAAc,mBAAmB;AAAA,EAAA;AAAA,EAuE3E,mBAAmB;AACjB,UAAM6B,IAAW,KAAK,IAAI,KAAK,QAAQ,GAAG,KAAK,GAAG;AAClD,SAAK,WAAWA,CAAQ;AAAA,EAAA;AAAA,EAG1B,mBAAmB;AACjB,UAAMA,IAAW,KAAK,IAAI,KAAK,QAAQ,GAAG,CAAC;AAC3C,SAAK,WAAWA,CAAQ;AAAA,EAAA;AAAA,EAG1B,WAAW/B,GAAe;AACxB,UAAM6jB,IAAW,KAAK;AACtB,SAAK,QAAQ7jB,GAGT6jB,MAAa7jB,MACf,KAAK,gBAAgB,GACrB,KAAK,KAAK,cAAc,EAAE,OAAAA,EAAA,CAAO;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA,EAMF,kBAAkB;AAChB,QAAI,KAAK,aAAa;AACd,YAAA+hD,IACJ,KAAK,UAAU,IACX,mBACA,GAAG,KAAK,KAAK,OAAO,KAAK,GAAG;AAGlC,WAAK,YAAY,cAAcA;AAAA,IAAA;AAAA,EACjC;AAAA,EAGF,iBAAiB/hD,GAAe;AAC1B,QAAA,KAAK,YAAY,KAAK,SAAU;AAGpC,UAAM+B,IAAW,KAAK,UAAU/B,IAAQ,IAAIA;AAC5C,SAAK,WAAW+B,CAAQ;AAAA,EAAA;AAAA,EAG1B,iBAAiB/B,GAAe;AAC1B,IAAA,KAAK,YAAY,KAAK,aAC1B,KAAK,cAAcA;AAAA,EAAA;AAAA,EAGrB,mBAAmB;AACb,IAAA,KAAK,YAAY,KAAK,aAC1B,KAAK,cAAc;AAAA,EAAA;AAAA,EAGrB,SAAS;AACP,UAAMiqD,IAAQ,CAAC;AAEf,aAASjtD,IAAI,GAAGA,KAAK,KAAK,KAAKA,KAAK;AAC5B,YAAAktD,IAAWltD,KAAK,KAAK,OACrBmtD,IACJ,CAAC,KAAK,YAAY,CAAC,KAAK,YAAYntD,KAAK,KAAK;AAEhD,MAAAitD,EAAM,KAAK3vC;AAAAA;AAAAA;AAAAA,kBAGClc,EAAK,QAAQ;AAAA,QACnB,gBAAgB8rD;AAAA,QAChB,eAAeC;AAAA,QACf,kBAAkB,KAAK;AAAA,QACvB,kBAAkB,KAAK;AAAA,MAAA,CACxB,CAAC;AAAA,mBACO,MAAM,KAAK,iBAAiBntD,CAAC,CAAC;AAAA,wBACzB,MAAM,KAAK,iBAAiBA,CAAC,CAAC;AAAA,wBAC9B,MAAM,KAAK,iBAAkB,CAAA;AAAA,qBAChC,KAAK,WAAW,OAAO,GAAG;AAAA;AAAA,yBAEtBktD,CAAQ;AAAA,0BACP,KAAK,QAAQ;AAAA,0BACbltD,CAAC;AAAA,yBACF,KAAK,GAAG;AAAA;AAAA,kCAECA,CAAC,QAAQA,MAAM,IAAI,KAAK,GAAG;AAAA;AAAA,OAEtD;AAAA,IAAA;AAGI,WAAAsd;AAAAA;AAAAA;AAAAA;AAAAA,mBAIQ,KAAK,WAAW,OAAO,GAAG;AAAA,iBAC5B,KAAK,qBAAqB;AAAA,gBAC3B,KAAK,oBAAoB;AAAA,mBACtB,KAAK,uBAAuB;AAAA,wCACP,KAAK,SAAS;AAAA,UACrC,KAAK,YAAY,gBAAgB,KAAK,SAAS,EAAE,CAAE;AAAA;AAAA;AAAA;AAAA;AAAA,0CAK1B,KAAK,SAAS;AAAA,0BAC9B,KAAK,QAAQ;AAAA,0BACb,KAAK,QAAQ;AAAA,YAC3B2vC,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAOjB;AAhOqBD,GAUH,SAAStvC,EAAUC,EAAM;AARGE,GAAA;AAAA,EAA3C7E,GAAM,kBAAkB;AAAA,GAFNg0C,GAEyB,WAAA,eAAA,CAAA;AAWfnvC,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAbRkvC,GAaU,WAAA,SAAA,CAAA;AAGDnvC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhBPkvC,GAgBS,WAAA,OAAA,CAAA;AAGXnvC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAnBYmoC,GAmBF,WAAA,aAAA,CAAA;AACAnvC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GApBYmoC,GAoBF,WAAA,eAAA,CAAA;AACSnvC,GAAA;AAAA,EAAzBgH,EAAM;AAAA,GArBYmoC,GAqBO,WAAA,aAAA,CAAA;AArBPA,KAArBnvC,GAAA;AAAA,EADCG,EAAc,eAAe;AAAA,GACTgvC,EAAA;;;;;;;ACOA,IAAAI,KAArB,cAA6CvqD,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAOI,KAAA,cAAA,YAIF,KAAQ,WAA+B,MACvC,KAAQ,YAAgC,MACxC,KAAQ,kBAAsC,MAC9C,KAAQ,gBAAoC,MAC5C,KAAQ,aAAa,IACrB,KAAQ,SAAS,GACjB,KAAQ,iBAAiB;AAAA,EAAA;AAAA,EAEzB,eAAe;A9IjDjB,QAAAlC,GAAAC,GAAAE,GAAAC;A8IkDS,SAAA,YAAWJ,IAAA,KAAK,eAAL,gBAAAA,EAAiB;AAAA,MAC/B;AAAA,OAEG,KAAA,aAAYC,IAAA,KAAK,eAAL,gBAAAA,EAAiB;AAAA,MAChC;AAAA,OAEG,KAAA,mBAAkBE,IAAA,KAAK,eAAL,gBAAAA,EAAiB;AAAA,MACtC;AAAA,OAEG,KAAA,iBAAgBC,IAAA,KAAK,eAAL,gBAAAA,EAAiB;AAAA,MACpC;AAAA,OAIA,KAAK,YACL,KAAK,cACJ,KAAK,mBAAmB,KAAK,kBAE9B,KAAK,eAAe;AAAA,EACtB;AAAA,EAGM,iBAAiB;A9IxE3B,QAAAJ,GAAAC;A8I0EM,QAAA,CAAC,KAAK,YACN,CAAC,KAAK,aACL,CAAC,KAAK,mBAAmB,CAAC,KAAK;AAEhC;AAEF,UAAMysD,IAAkB,MAAM;AAC5B,UAAI,KAAK,gBAAgB,cAAc,KAAK,gBAAgB,QAAQ;AAClE,cAAM,EAAE,cAAAC,GAAc,cAAAC,EAAa,IAAI,KAAK,UACtCC,IAAeD,IAAeD,IAAgBC;AACpD,aAAK,cAAe,MAAM,SAAS,GAAGC,CAAW;AAAA,MAAA;AAGnD,UAAI,KAAK,gBAAgB,gBAAgB,KAAK,gBAAgB,QAAQ;AACpE,cAAM,EAAE,aAAAC,GAAa,aAAAC,EAAY,IAAI,KAAK,UACpCC,IAAcD,IAAcD,IAAeC;AACjD,aAAK,gBAAiB,MAAM,QAAQ,GAAGC,CAAU;AAAA,MAAA;AAAA,IAErD,GAEMC,IAAsB,MAAM;AAChC,UAAI,KAAK,gBAAgB,cAAc,KAAK,gBAAgB,QAAQ;AAClE,cAAM,EAAE,WAAAC,GAAW,cAAAP,GAAc,cAAAC,MAAiB,KAAK,UACjDO,IACHD,KAAaP,IAAeC,MAC5BA,IAAe,KAAK,cAAe;AACtC,aAAK,cAAe,MAAM,YAAY,cAAcO,CAAa;AAAA,MAAA;AAGnE,UAAI,KAAK,gBAAgB,gBAAgB,KAAK,gBAAgB,QAAQ;AACpE,cAAM,EAAE,YAAAC,GAAY,aAAAN,GAAa,aAAAC,MAAgB,KAAK,UAChDI,IACHC,KAAcN,IAAcC,MAC5BA,IAAc,KAAK,gBAAiB;AACvC,aAAK,gBAAiB,MAAM,YAAY,cAAcI,CAAa;AAAA,MAAA;AAAA,IAEvE,GAEME,IAAuB,CAACruD,MAAkB;AAC9C,MAAAA,EAAE,eAAe,GACjB,KAAK,aAAa,KAEd,KAAK,gBAAgB,cAAc,KAAK,gBAAgB,YAC1D,KAAK,SAASA,EAAE,SACX,KAAA,iBAAiB,KAAK,SAAU,aAGnC,KAAK,gBAAgB,gBAAgB,KAAK,gBAAgB,YAC5D,KAAK,SAASA,EAAE,SACX,KAAA,iBAAiB,KAAK,SAAU,aAG9B,SAAA,iBAAiB,aAAasuD,CAAoB,GAClD,SAAA,iBAAiB,WAAWC,CAAkB;AAAA,IACzD,GAEMD,IAAuB,CAACtuD,MAAkB;AAC1C,UAAC,KAAK,YAEV;AAAA,YAAI,KAAK,gBAAgB,cAAc,KAAK,gBAAgB,QAAQ;AAC5D,gBAAAwuD,IAASxuD,EAAE,UAAU,KAAK,QAC1B,EAAE,cAAA2tD,GAAc,cAAAC,EAAa,IAAI,KAAK,UACtCa,IAAcd,IAAeC;AACnC,eAAK,SAAU,YAAY,KAAK,iBAAiBY,IAASC;AAAA,QAAA;AAG5D,YAAI,KAAK,gBAAgB,gBAAgB,KAAK,gBAAgB,QAAQ;AAC9D,gBAAAC,IAAS1uD,EAAE,UAAU,KAAK,QAC1B,EAAE,aAAA8tD,GAAa,aAAAC,EAAY,IAAI,KAAK,UACpCU,IAAcX,IAAcC;AAClC,eAAK,SAAU,aAAa,KAAK,iBAAiBW,IAASD;AAAA,QAAA;AAAA;AAAA,IAE/D,GAEMF,IAAqB,MAAM;AAC/B,WAAK,aAAa,IACT,SAAA,oBAAoB,aAAaD,CAAoB,GACrD,SAAA,oBAAoB,WAAWC,CAAkB;AAAA,IAC5D;AAEgB,IAAAb,EAAA,GACIO,EAAA,GAEf,KAAA,SAAS,iBAAiB,UAAUA,CAAmB,GACvD,KAAA,SAAS,iBAAiB,UAAUP,CAAe,IACnD1sD,IAAA,KAAA,oBAAA,QAAAA,EAAiB,iBAAiB,aAAaqtD,KAC/CptD,IAAA,KAAA,kBAAA,QAAAA,EAAe,iBAAiB,aAAaotD;AAAA,EAAoB;AAAA,EAGxE,aAAaM,GAAwC;AAC5C,WAAAhxC;AAAAA;AAAAA,cAEGlc;AAAA,MACN;AAAA,MACA,2BAA2BktD,CAAW;AAAA,IAAA,CACvC;AAAA,qDAC8CA,CAAW;AAAA;AAAA,EAAA;AAAA,EAI9D,SAAS;AACA,WAAAhxC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UAMD,KAAK,gBAAgB,gBAAgB,KAAK,gBAAgB,SACxD,KAAK,aAAa,YAAY,IAC9BoH,CAAO;AAAA,UACT,KAAK,gBAAgB,cAAc,KAAK,gBAAgB,SACtD,KAAK,aAAa,UAAU,IAC5BA,CAAO;AAAA;AAAA;AAAA,EAAA;AAInB;AAhKqB0oC,GASH,SAAS1vC,EAAUC,EAAM;AAHbE,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GANPsvC,GAMS,WAAA,eAAA,CAAA;AANTA,KAArBvvC,GAAA;AAAA,EADCG,EAAc,oBAAoB;AAAA,GACdovC,EAAA;;;;;;ACsCA,IAAAmB,KAArB,cAAyCpgC,GAAoB;AAAA,EAC3D,cAAc;AACN,UAAA,GACN,KAAK,aAAa,SAClB,KAAK,SAAS,IACd,KAAK,cAAc,IACnB,KAAK,mBAAmB,SACxB,KAAK,aAAa,QAClB,KAAK,eAAe;AAAA,EAAA;AAAA,EAGtB,SAAS;AACP,WAAO,KAAK,eAAe;AAAA,EAAA;AAE/B;AAdqBogC,KAArB1wC,GAAA;AAAA,EADCG,EAAc,eAAe;AAAA,GACTuwC,EAAA;;;;;;;ACgBA,IAAAC,KAArB,cAAyC9mC,GAAmB;AAAA,EAA5D,cAAA;AAAA,UAAA,GAAA,SAAA,GAc2D,KAAA,YAAA,gBAGH,KAAA,SAAA,IASJ,KAAA,WAAA,IAGD,KAAA,UAAA,IAMI,KAAA,cAAA,IAKa,KAAA,mBAAA,YA2BlE,KAAiB,cAAc,MAAM;AAC/B,MAAA,KAAK,YAAY,KAAK,aAI1B,KAAK,SAAS,KAAK,aAAa,IAAI,KAAK,aAAa;AAAA,IACxD,GAEiB,KAAA,gBAAgB,CAAOxkB,MAAyBlC,EAAA;AAC/D,UAAI,EAAAkC,EAAM,QAAQ,SAASA,EAAM,QAAQ,YAIrC,MAAK,UAMT;AAAA,YAFAA,EAAM,eAAe,GAEjBA,EAAM,QAAQ,WAAWA,EAAM,QAAQ;AACzC,iBAAO,KAAK,SAAS,KAAK,aAAa,IAAI,KAAK,aAAa;AAG3D,YAAAA,EAAM,QAAQ;AAChB,sBAAK,aAAa,GACX,KAAK,MAAM;AAIlB,YAAAA,EAAM,QAAQ,eACdA,EAAM,QAAQ,aACdA,EAAM,QAAQ,eACdA,EAAM,QAAQ;AAEV,iBAAC,KAAK,SAIV,SAHS,KAAK,aAAa;AAMxB,aAAA,KAAK,eAAeA,CAAK,GAGzB,KAAA,aAAaA,EAAM,GAAG;AAAA;AAAA,IAC7B,IAEiB,KAAA,oBAAoB,CAACA,MAAuB;AACvD,MAAAA,EAAM,OAAO,QAAQ,YACvB,KAAK,aAAa;AAAA,IAEtB,GAEiB,KAAA,0BAA0B,CAACA,MAAsB;AAC1D,YAAAwB,IAAOxB,EAAM,aAAa;AAChC,MAAI,QAAQ,CAACwB,EAAK,SAAS,IAAI,KAC7B,KAAK,aAAa;AAAA,IAEtB,GAEA,KAAiB,cAAc,MAAM;AACnC,WAAK,KAAK,WAAW;AAAA,IACvB,GAEA,KAAiB,aAAa,MAAM;AAClC,WAAK,KAAK,UAAU;AAAA,IACtB,GAsFiB,KAAA,uBAAuB,CAACxB,MAAuB;AhJ/SlE,UAAAvC;AgJgTU,YAAAwP,IAAM,OAAO,KAAKjN,EAAM,MAAM,EAAE,SAASA,EAAM,SAAS;AAC9D,WAAK,eAAeiN,GACpB,KAAK,aAAa,GACb,KAAA,SAAQxP,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,OAC3B,KAAA,KAAK,cAAc,KAAK,YAAY,GAEzC,KAAK,YAAY;AAAA,IACnB,GAEA,KAAiB,uBAAuB,MAAM;AAC5C,WAAK,eAAe,MACpB,KAAK,QAAQ,QACR,KAAA,KAAK,cAAc,IAAI,GAE5B,KAAK,YAAY;AAAA,IACnB;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAvLA,QAAQqkB,GAAyC;AAI3C,QAHJ,MAAM,QAAQA,CAAiB,GAG3BA,EAAkB,IAAI,OAAO,GAAG;AAClC,YAAMjgB,IAAW,KAAK;AAClB,MAA0BA,KAAa,QACrC,KAAK,iBAAiB,SACxB,KAAK,eAAe,MACpB,KAAK,YAAY;AAAA,IAErB;AAAA,EACF;AAAA,EAuEF,oBAAoB;AACb,SAAA,UAAU,YAAY,EAAE,GACxB,KAAA,UAAU,aAAa,KAAK,YAAY,GAC7C,KAAK,QAAQ,KAAK,cAClB,KAAK,eAAe,KAAK;AAAA,EAAA;AAAA,EAGrB,aAAaR,GAAc;AAAA,WAAAvD,EAAA;AAC/B,MAAI,KAAK,WAIT,KAAK,SAAS,IAEL,SAAA,iBAAiB,aAAa,KAAK,uBAAuB,GAEnE,MAAM,KAAK,gBACN,KAAA,WAAW,aAAauD,CAAG,GAEhC,KAAK,KAAK,YAAY;AAAA,IAAA;AAAA;AAAA,EAGlB,eAAe;AAAA,WAAAvD,EAAA;AACf,MAAC,KAAK,WAIV,KAAK,SAAS,IAEL,SAAA,oBAAoB,aAAa,KAAK,uBAAuB,GAEtE,MAAM,KAAK,gBACX,KAAK,WAAW,YAAY,GAE5B,KAAK,MAAM,GAEX,KAAK,KAAK,YAAY;AAAA,IAAA;AAAA;AAAA,EAGxB,IAAI,eAAe;AACjB,WAAO,KAAK;AAAA,EAAA;AAAA;AAAA,EAId,IAAI,WAA0B;AACxB,WAAA,KAAK,UAAU,WACV,KAAK,UAAU,WAEfsmB,GAAuB;AAAA,MAC5B,cAAc,KAAK,YAAY,CAAC,KAAK;AAAA,IAAA,CACtC;AAAA,EACH;AAAA,EAGF,IAAI,oBAA4B;AAC9B,WAAO7nB,EAAE,+BAA+B;AAAA,EAAA;AAAA,EAG1C,gBAAgB;AACd,WAAO,KAAK,WAAW,CAAC,CAAC,KAAK,eAAe;AAAA,EAAA;AAAA,EAG/C,iBAAiB;AACf,WAAO,KAAK,WAAW,KAAK,cAAkB,IAAA;AAAA,EAAA;AAAA,EAGhD,cAAc;AACR,IAAC,KAAK,kBASH,KAAA,UAAU,YAAY,EAAE,IAR7B,KAAK,UAAU;AAAA,MACb;AAAA,QACE,cAAc,KAAK,YAAY,CAAC,KAAK;AAAA,MACvC;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAAA,EAGF;AAAA,EAGF,cAAcyD,GAAc;AAC1B,IAAAA,EAAM,eAAe;AAAA,EAAA;AAAA,EAqBvB,uBAAuB;AhJjUzB,QAAAvC,GAAAC;AgJkUW,WAAA0c;AAAAA;AAAAA;AAAAA;AAAAA,eAIIlc,EAAK,UAAU,WAAW,KAAK,IAAI,IAAI;AAAA,MAC9C,oBAAoB,KAAK;AAAA,MACzB,oBAAoB,KAAK;AAAA,MACzB,kBAAkB,KAAK;AAAA,MACvB,mBAAmB,KAAK;AAAA,MACxB,mBAAmB,KAAK,WAAW;AAAA,MACnC,iBAAiB,KAAK,WAAW;AAAA,MACjC,wBAAwB,KAAK;AAAA,MAC7B,oBAAoB,KAAK;AAAA,IAAA,CAC1B,CAAC;AAAA,uBACe,KAAK,YAAY,KAAK,WAAW,SAAY,KAAK,MAAM;AAAA,sBACzDoc;AAAAA,MACd,KAAK,YAAY,KAAK,WAAW,SAAY;AAAA,IAC9C,CAAA;AAAA,wBACiB,KAAK,QAAQ,UAAU,EAAE;AAAA,oBAC9B7c,IAAA,KAAK,cAAL,OAAAA,IAAkB,EAAE;AAAA,0BACb,KAAK,cAAc,gBAAgB,EAAE,GAAG,KAAK,WAC7D,cACA,EAAE;AAAA,sBACU,KAAK,QAAQ;AAAA,uBACZ,KAAK,YAAY,KAAK,WACnC,SACA,aAAa;AAAA,+BACOC,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,EAAE;AAAA,kBACjC,KAAK,QAAQ;AAAA,kBACb,KAAK,QAAQ;AAAA,mBACZ,KAAK,SAAS;AAAA,kBACf,KAAK,QAAQ;AAAA,iBACd,KAAK,YAAY,KAAK,WAAW,KAAK,CAAC;AAAA,cAC1C,KAAK,UAAU;AAAA,eACd,KAAK,WAAW;AAAA,iBACd,KAAK,aAAa;AAAA,eACpB,KAAK,WAAW;AAAA;AAAA,WAEpB,KAAK,eAAe,KAAK,aAAa,OAAO,KAAK,WAAW;AAAA;AAAA;AAAA,UAG9D,KAAK,UACH0c,iEACAA;AAAAA;AAAAA,qBAES;AAAA;AAAA;AAAA,EAAA;AAAA,EAKnB,mBAAmB;AACV,WAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,aAKEE,EAAU,KAAK,IAAI,CAAC;AAAA,cACnB,KAAK,KAAK;AAAA;AAAA,2BAEG,KAAK,oBAAoB;AAAA,qBAC/B,KAAK,iBAAiB;AAAA,6BACd,KAAK,oBAAoB;AAAA;AAAA;AAAA,EAAA;AAAA,EAKpD,SAAS;AACA,WAAAF;AAAAA,UACD,KAAK,SACPA;AAAAA;AAAAA;AAAAA,kBAGU,KAAK,IAAI;AAAA,sBACL,KAAK,QAAQ;AAAA,sBACb,KAAK,QAAQ;AAAA,2BACR,KAAK,aAAa;AAAA,oBACzB,KAAK,MAAM;AAAA,sBACT,KAAK,QAAQ;AAAA,kBACjBlc,EAAK,OAAO,CAAC;AAAA;AAAA,kBAEboc,EAAU,KAAK,KAAK,CAAC;AAAA,6BACV;AAAA,UACnB,KAAK,WACPF;AAAAA;AAAAA,oBAEY,KAAK,OAAO;AAAA;AAAA,sBAEV,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA,mBAIxB,KAAK,IAAiC;AAAA,uBAClC,KAAK,SAAS,OAAO,OAAO,IAAI;AAAA,yBAC9B,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAMpB;AAAA;AAAA,QAElB,KAAK,eACPA;AAAAA;AAAAA;AAAAA;AAAAA,iBAIWE,EAAU,KAAK,IAA6B,CAAC;AAAA;AAAA,YAElD,KAAK,WAAW;AAAA;AAAA,OAErB;AAAA;AAAA,UAEI,KAAK,WAcJF;AAAAA,gBACI,KAAK,qBAAsB,CAAA;AAAA,mCACR,KAAK,MAAM;AAAA,mBAC3B,KAAK,kBAAkB;AAAA;AAAA,gBAhB9BA;AAAAA,iCACqBE,EAAU,KAAK,gBAAgB,CAAC;AAAA;AAAA;AAAA,wBAGzC,KAAK,MAAM;AAAA,0BACT,EAAK;AAAA;AAAA,0BAEL,KAAK,SAAS;AAAA,0BACdA,EAAU,KAAK,SAAS,CAAC;AAAA,sBAC7B,KAAK,IAAI;AAAA,qBACVA,EAAU,KAAK,IAAI,CAAuB;AAAA,gBAC/C,KAAK,qBAAqB,CAAC,IAAI,KAAK,iBAAkB,CAAA;AAAA,4BAOzD;AAAA,UACH,KAAK,YACPF;AAAAA;AAAAA,yBAEiBE,EAAU,KAAK,YAAY,CAAC;AAAA,0BAC3BA,EAAU,KAAK,IAA0B,CAAC;AAAA;AAAA,oBAEhD,KAAK,MAAM;AAAA,YACnB,KAAK,QAAQ;AAAA,2BACE;AAAA;AAAA,EAAA;AAG3B;AA7XqBgxC,GA+CH,SAAS9wC,EAAUC,EAAM;AA3CxBE,GAAA;AAAA,EAAhB7E,GAAM,QAAQ;AAAA,GAJIw1C,GAIF,WAAA,iBAAA,CAAA;AAKY3wC,GAAA;AAAA,EAA5B7E,GAAM,oBAAoB;AAAA,GATRw1C,GASU,WAAA,cAAA,CAAA;AAKA3wC,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAdR0wC,GAcU,WAAA,aAAA,CAAA;AAGe3wC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAjBvB0wC,GAiByB,WAAA,UAAA,CAAA;AAGhC3wC,GAAA;AAAA,EAAXC,EAAS;AAAA,GApBS0wC,GAoBP,WAAA,eAAA,CAAA;AAGiB3wC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAvBR0wC,GAuBU,WAAA,QAAA,CAAA;AAGA3wC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA1BR0wC,GA0BU,WAAA,YAAA,CAAA;AAGA3wC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA7BR0wC,GA6BU,WAAA,WAAA,CAAA;AAGD3wC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhCP0wC,GAgCS,WAAA,aAAA,CAAA;AAGC3wC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAnCR0wC,GAmCU,WAAA,eAAA,CAAA;AAKA3wC,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAxCR0wC,GAwCU,WAAA,oBAAA,CAAA;AAKpB3wC,GAAA;AAAA,EAARgH,EAAM;AAAA,GA7CY2pC,GA6CV,WAAA,gBAAA,CAAA;AA7CUA,KAArB3wC,GAAA;AAAA,EADCG,EAAc,eAAe;AAAA,GACTwwC,EAAA;;;;;;;AC9DA,IAAAC,KAArB,cAA0C5rD,EAAW;AAAA,EAArD,cAAA;AAAA,UAAA,GAAA,SAAA,GAQyD,KAAA,OAAA;AAAA,EAAA;AAAA,EAI7C,aACR0a,GACM;AACN,UAAMmxC,IAAa,KAAK;AAAA,MACtB,UAAU,KAAK,aAAa,KAAK,aAAa,OAAO,SAAS,QAAQ;AAAA,IACxE;AAEA,IAAIA,MACF,KAAK,aAAa,GAClB,KAAK,UAAUA,CAAU;AAGrB,UAAAC,IAAcD,KAAA,gBAAAA,EAAY,QAAQ;AACxC,IAAIC,KACUA,EAAA,aAAa,QAAQ,MAAM,GAIpC,KAAA,iBAAiB,2CAA2C,EAAE;AAAA,MACjE,CAAQ1oC,MAAA;AACJ,QAAAA,EAAa,OAAO,KAAK;AAAA,MAAA;AAAA,IAE/B;AAAA,EAAA;AAAA,EAGF,yBACEljB,GACAonB,GACAnnB,GACM;AAGN,QAFM,MAAA,yBAAyBD,GAAMonB,GAAMnnB,CAAK,GAE5CD,MAAS,cAAc;AACzB,WAAK,aAAa;AAElB,YAAM2rD,IAAa,KAAK,cAAc,UAAU1rD,CAAK,IAAI;AACzD,WAAK,UAAU0rD,CAAU;AAAA,IAAA;AAAA,EAC3B;AAAA,EAGM,eAAqB;AACtB,SAAA,iBAAiB,2CAA2C,EAAE;AAAA,MACjE,CAAQzoC,MAAA;AACN,QAAAA,EAAK,gBAAgB,QAAQ;AAAA,MAAA;AAAA,IAEjC;AAAA,EAAA;AAAA,EAGM,UAAUyoC,GAAmC;AACnD,QAAIA,GAAY;AACH,MAAAA,EAAA,aAAa,UAAU,MAAM;AAElC,YAAAC,IAAcD,EAAW,QAAQ,sBAAsB;AAC7D,MAAIC,KACUA,EAAA,aAAa,QAAQ,MAAM;AAAA,IACzC;AAAA,EACF;AAAA,EAGF,SAAS;AjJ7FX,QAAAhuD;AiJ8FW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,WAAW,YAAY,KAAK,IAAI,EAAE,CAAC;AAAA,sBACnCT,IAAA,KAAK,cAAL,OAAAA,IAAkB,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAOjD;AAnFqB8tD,GAUH,SAAS/wC,EAAUC,EAAM;AARZE,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAFR2wC,GAEU,WAAA,SAAA,CAAA;AAGjB5wC,GAAA;AAAA,EAAXC,EAAS;AAAA,GALS2wC,GAKP,WAAA,cAAA,CAAA;AAGgB5wC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GARP2wC,GAQS,WAAA,QAAA,CAAA;AARTA,KAArB5wC,GAAA;AAAA,EADCG,EAAc,gBAAgB;AAAA,GACVywC,EAAA;;;;;;;ACyBA,IAAAG,KAArB,cAA+C/rD,EAAW;AAAA,EAA1D,cAAA;AAAA,UAAA,GAAA,SAAA,GAKuD,KAAA,SAAA,IAKL,KAAA,UAAA,QAGG,KAAA,OAAA,IAGmB,KAAA,OAAA;AAAA,EAAA;AAAA,EAItE,SAAS;AACA,WAAAya;AAAAA;AAAAA;AAAAA;AAAAA,gBAIKlc;AAAA,MACN;AAAA,MACA,0BAA0B,KAAK,OAAO;AAAA,IAAA,CACvC;AAAA;AAAA,kBAESA;AAAA,MACN;AAAA,MACA,wBAAwB,KAAK,IAAI;AAAA,MACjC;AAAA,QACE,+BAA+B,KAAK;AAAA,MAAA;AAAA,IACtC,CACD;AAAA;AAAA,oBAESA,EAAK,sBAAsB,CAAC;AAAA;AAAA;AAAA,qBAG3B,MAAM;AACT,MAAC,KAAK,OAEC,KAAK,QAAQ,CAAC,KAAK,SAC5B,KAAK,OAAO,MAFZ,KAAK,OAAO;AAAA,IAGd,CACD;AAAA,cACC,KAAK,OACHkc;AAAAA,yBACS,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,wBAMlBA,gBAAmB;AAAA;AAAA;AAAA;AAAA,oBAIflc,EAAK,yBAAyB;AAAA,MACpC,+BAA+B,KAAK;AAAA,IAAA,CACrC,CAAC;AAAA;AAAA,qBAEO,CAACzB,MAAW;AACnB,MAAAA,EAAE,eAAe,GACZ,KAAA,OAAO,CAAC,KAAK;AAAA,IAAA,CACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASKyB,EAAK,0BAA0B;AAAA,MACrC,gCAAgC,KAAK;AAAA,IAAA,CACtC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAMZ;AApFqBwtD,GAkBH,SAASlxC,EAAUC,EAAM;AAhBZE,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAFR8wC,GAEU,WAAA,QAAA,CAAA;AAGe/wC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GALvB8wC,GAKyB,WAAA,UAAA,CAAA;AAKf/wC,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAVR8wC,GAUU,WAAA,WAAA,CAAA;AAGe/wC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAbvB8wC,GAayB,WAAA,QAAA,CAAA;AAGD/wC,GAAA;AAAA,EAA1CC,EAAS,EAAE,SAAS,IAAM,MAAM,OAAQ,CAAA;AAAA,GAhBtB8wC,GAgBwB,WAAA,QAAA,CAAA;AAhBxBA,KAArB/wC,GAAA;AAAA,EADCG,EAAc,sBAAsB;AAAA,GAChB4wC,EAAA;;;;;;;ACLA,IAAAC,KAArB,cAA8ChsD,EAAW;AAAA,EAAzD,cAAA;AAAA,UAAA,GAAA,SAAA,GAKuD,KAAA,SAAA,IAKL,KAAA,UAAA,QAGsB,KAAA,OAAA;AAAA,EAAA;AAAA,EAItE,SAAS;AACA,WAAAya;AAAAA;AAAAA;AAAAA;AAAAA,gBAIKlc;AAAA,MACN;AAAA,MACA,yBAAyB,KAAK,OAAO;AAAA,MACrC,iBAAiB,KAAK,IAAI;AAAA,MAC1B;AAAA,QACE,wBAAwB,KAAK;AAAA,MAAA;AAAA,IAC/B,CACD;AAAA;AAAA;AAAA,iBAGQ,KAAK,IAAI;AAAA;AAAA,mBAEPoc,EAAU,KAAK,OAAO,UAAU,MAAS,CAAC;AAAA,gBAC7CA,EAAU,KAAK,OAAO,wBAAwB,MAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAOxE;AA1CqBqxC,GAeH,SAASnxC,EAAUC,EAAM;AAb7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAFS+wC,GAEP,WAAA,QAAA,CAAA;AAGgChxC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GALvB+wC,GAKyB,WAAA,UAAA,CAAA;AAKfhxC,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAVR+wC,GAUU,WAAA,WAAA,CAAA;AAGchxC,GAAA;AAAA,EAA1CC,EAAS,EAAE,SAAS,IAAM,MAAM,OAAQ,CAAA;AAAA,GAbtB+wC,GAawB,WAAA,QAAA,CAAA;AAbxBA,KAArBhxC,GAAA;AAAA,EADCG,EAAc,qBAAqB;AAAA,GACf6wC,EAAA;;;;;;;ACPA,IAAAC,KAArB,cAA2CjsD,EAAW;AAAA,EAAtD,cAAA;AAAA,UAAA,GAAA,SAAA,GAKwE,KAAA,UAAA,QAef,KAAA,WAAA,IAOrD,KAAA,YAAA;AAAA,EAAA;AAAA,EAcM,yBAAyB;AAC/B,QAAI,KAAK,cAAc,YAAY,KAAK,iBAAiB;AAEvD,YAAMksD,IAAe;AAAA;AAAA,YAEf,KAAK,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAO1B,MAAI,KAAK,oBACF,KAAA,kBAAkB,YAAYA,CAAY,KAE1C,KAAA,oBAAoB,IAAI,cAAc,GACtC,KAAA,kBAAkB,YAAYA,CAAY,GAC/C,KAAK,WAAY,qBAAqB;AAAA,QACpC,GAAG,KAAK,WAAY;AAAA,QACpB,KAAK;AAAA,MACP;AAAA,IACF,MACF,CAAW,KAAK,sBAEd,KAAK,WAAY,qBACf,KAAK,WAAY,mBAAmB;AAAA,MAClC,CAAAzE,MAASA,MAAU,KAAK;AAAA,IAC1B,GACF,KAAK,oBAAoB;AAAA,EAC3B;AAAA,EAGF,QAAQtlC,GAAyC;AAC/C,UAAM,QAAQA,CAAiB,IAG7BA,EAAkB,IAAI,WAAW,KACjCA,EAAkB,IAAI,iBAAiB,MAEvC,KAAK,uBAAuB;AAAA,EAC9B;AAAA,EAGF,SAAS;ApJvHX,QAAArkB;AoJwHI,WAAI,KAAK,QACP,KAAK,MAAM,YAAY,oBAAoB,KAAK,KAAK,IAEhD,KAAA,MAAM,eAAe,kBAAkB,GAG1C,KAAK,SACP,KAAK,MAAM,YAAY,qBAAqB,KAAK,MAAM,IAElD,KAAA,MAAM,eAAe,mBAAmB,GAG/C,KAAK,uBAAuB,GAErB2c;AAAAA;AAAAA;AAAAA,iBAGMlc,EAAK,YAAY;AAAA,MACxB,CAAC,aAAa,KAAK,OAAO,EAAE,GAAG,KAAK;AAAA,MACpC,qBAAqB,KAAK;AAAA,MAC1B,CAAC,aAAa,KAAK,SAAS,EAAE,GAAG,KAAK,YAAY,KAAK;AAAA,IAAA,CACxD,CAAC;AAAA;AAAA,sBAEWT,IAAA,KAAK,cAAL,OAAAA,IAAkBlB,EAAE,SAAS,CAAC;AAAA;AAAA,EAAA;AAGnD;AA/GqBqvD,GAqCH,SAASpxC,EAAUC,EAAM;AAhCEE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GALtBgxC,GAKwB,WAAA,WAAA,CAAA;AAKfjxC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAVPgxC,GAUS,WAAA,SAAA,CAAA;AAKAjxC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAfPgxC,GAeS,WAAA,UAAA,CAAA;AAKgBjxC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GApBvBgxC,GAoByB,WAAA,YAAA,CAAA;AAMDjxC,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GA1BtBgxC,GA0BwB,WAAA,aAAA,CAAA;AAS3CjxC,GAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAQ,WAAW,mBAAoB,CAAA;AAAA,GAlCtCgxC,GAmCnB,WAAA,mBAAA,CAAA;AAnCmBA,KAArBjxC,GAAA;AAAA,EADCG,EAAc,iBAAiB;AAAA,GACX8wC,EAAA;;;;;;;ACJA,IAAAE,KAArB,cAA2CnsD,EAAW;AAAA,EAAtD,cAAA;AAAA,UAAA,GAAA,SAAA,GAO6B,KAAA,OAAA,KAKI,KAAA,OAAA,MAGY,KAAA,cAAA;AAAA,EAAA;AAAA,EAI3C,SAAS;AACA,WAAAya;AAAAA;AAAAA,uBAEY,KAAK,WAAW;AAAA;AAAA;AAAA,eAGxB,KAAK,IAAI;AAAA,gBACRlc;AAAA,MACN;AAAA,MACA,cAAc,KAAK,IAAI;AAAA,MACvB,cAAc,KAAK,SAAS;AAAA,IAAA,CAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMSA;AAAA,MACN;AAAA,MACA,6BAA6B,KAAK,IAAI;AAAA,IAAA,CACvC;AAAA;AAAA;AAAA,EAAA;AAIX;AA3CqB4tD,GAiBH,SAAStxC,EAAUC,EAAM;AAbZE,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAJRkxC,GAIU,WAAA,aAAA,CAAA;AAGjBnxC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAPSkxC,GAOP,WAAA,QAAA,CAAA;AAKAnxC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAZSkxC,GAYP,WAAA,QAAA,CAAA;AAGiBnxC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAfRkxC,GAeU,WAAA,eAAA,CAAA;AAfVA,KAArBnxC,GAAA;AAAA,EADCG,EAAc,kBAAkB;AAAA,GACZgxC,EAAA;;;;;;;AChBjB,OAAO,UAAW,gBACb,OAAA,kBAAkB,CAACjK,GAAiB9hD,MAAiC;AAC5D,EAAAgsD,GAAA,KAAKlK,GAAS9hD,CAAO;AACrC,GAEA,OAAO,uBAAuB,MAAM;AAClC,EAAAgsD,GAAc,SAAS;AACzB;AAkBmB,IAAAA,KAArB,cAA2CpsD,EAAW;AAAA,EAAtD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEyC,KAAA,WAAA,GAKkB,KAAA,WAAA,gBAGlB,KAAA,WAAA,KAGS,KAAA,mBAAA,IAEvC,KAAQ,WAA8B,CAAC,GACvC,KAAQ,YAAY,GACrB,KAAA,+BAA2D,IAAI,GAoL/D,KAAA,0BAA0B,CAChCK,MACG;AACH,YAAM,EAAE,SAAA6hD,GAAS,SAAA9hD,EAAQ,IAAIC,EAAM;AAC9B,WAAA,WAAW6hD,GAAS9hD,CAAO;AAAA,IAClC,GAEA,KAAQ,sBAAsB,MAAM;AAClC,WAAK,SAAS;AAAA,IAChB,GAEQ,KAAA,gBAAgB,CAACC,MAAyB;AAChD,UAAIA,EAAM,QAAQ,YAAY,KAAK,SAAS,SAAS,GAAG;AAEtD,cAAMgsD,IAAc,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC;AAC1D,QAAIA,KACG,KAAA,cAAcA,EAAY,EAAE;AAAA,MACnC;AAAA,IAEJ;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA9LA,OAAO,KAAKnK,GAAiB9hD,GAAoC;AACtD,aAAA;AAAA,MACP,IAAI,YAAY,qBAAqB;AAAA,QACnC,QAAQ,EAAE,SAAA8hD,GAAS,SAAA9hD,EAAQ;AAAA,QAC3B,SAAS;AAAA,MACV,CAAA;AAAA,IACH;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQF,OAAO,QACL8hD,GACA9hD,GACM;AACN,SAAK,KAAK8hD,GAAS7jD,EAAAC,EAAA,IAAK8B,IAAL,EAAc,WAAW,eAAc;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ5D,OAAO,MACL8hD,GACA9hD,GACM;AACN,SAAK,KAAK8hD,GAAS7jD,EAAAC,EAAA,IAAK8B,IAAL,EAAc,WAAW,UAAS;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQvD,OAAO,KACL8hD,GACA9hD,GACM;AACN,SAAK,KAAK8hD,GAAS7jD,EAAAC,EAAA,IAAK8B,IAAL,EAAc,WAAW,gBAAe;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ7D,OAAO,QACL8hD,GACA9hD,GACM;AACN,SAAK,KAAK8hD,GAAS7jD,EAAAC,EAAA,IAAK8B,IAAL,EAAc,WAAW,YAAW;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAMzD,OAAO,WAAiB;AACb,aAAA;AAAA,MACP,IAAI,YAAY,2BAA2B;AAAA,QACzC,SAAS;AAAA,MACV,CAAA;AAAA,IACH;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAMF,WAAiB;AACf,SAAK,iBAAiB,GACtB,KAAK,WAAW,CAAC;AAAA,EAAA;AAAA,EAGX,aAAqB;AACtB,gBAAA,aAEE,gBAAgB,KAAK,SAAS;AAAA,EAAA;AAAA,EAGvC,WAAW8hD,GAAiB9hD,GAAoC;AAC9D,QAAI,CAAC8hD,KAAW,OAAOA,KAAY,UAAU;AAC3C,cAAQ,KAAK,mDAAmD;AAChE;AAAA,IAAA;AAGI,UAAAoK,IAAQ,KAAK,WAAW;AAC9B,IAAI,KAAK,SAAS,UAAU,KAAK,YAC/B,KAAK,aAAa;AAGpB,UAAMC,IAA8BjuD,EAAA;AAAA,MAClC,IAAIguD;AAAA,MACJ,SAASpK,EAAQ,KAAK;AAAA,OAClB9hD,KAAW,EAAE,SAAAA,EAAQ;AAG3B,SAAK,WAAW,CAAC,GAAG,KAAK,UAAUmsD,CAAU,GACxC,KAAA,eAAeD,GAAOlsD,KAAA,gBAAAA,EAAS,QAAQ,GAGxC,KAAK,oBACP,KAAK,uBAAuB8hD,CAAO;AAAA,EACrC;AAAA,EAGM,eAAqB;AAC3B,IAAI,KAAK,aACP,KAAK,WAAW,KAAK,SAAS,MAAM,CAAC;AAAA,EACvC;AAAA,EAGM,cAAc99B,GAAkB;AACtC,IAAIA,MACG,KAAA,WAAW,KAAK,SAAS;AAAA,MAC5B,CAACooC,MAAiCA,EAAY,OAAOpoC;AAAA,IACvD,GACA,KAAK,aAAaA,CAAE;AAAA,EACtB;AAAA,EAGM,eAAeA,GAAYqoC,GAAyB;AACpD,UAAAC,IAAeD,KAAA,OAAAA,IAAY,KAAK,UAChCpuB,IAAY,WAAW,MAAM;AACjC,WAAK,cAAcja,CAAE;AAAA,OACpBsoC,CAAY;AACV,SAAA,SAAS,IAAItoC,GAAIia,CAAS;AAAA,EAAA;AAAA,EAGzB,aAAaja,GAAkB;AACrC,UAAMia,IAAY,KAAK,SAAS,IAAIja,CAAE;AACtC,IAAIia,MACF,aAAaA,CAAS,GACjB,KAAA,SAAS,OAAOja,CAAE;AAAA,EACzB;AAAA,EAGM,mBAAyB;AAC/B,SAAK,SAAS,QAAQ,CAAaia,MAAA,aAAaA,CAAS,CAAC,GAC1D,KAAK,SAAS,MAAM;AAAA,EAAA;AAAA,EAGtB,oBAA0B;AACxB,UAAM,kBAAkB,GACf,SAAA;AAAA,MACP;AAAA,MACA,KAAK;AAAA,IACP,GACS,SAAA;AAAA,MACP;AAAA,MACA,KAAK;AAAA,IACP,GACS,SAAA,iBAAiB,WAAW,KAAK,aAAa;AAAA,EAAA;AAAA,EAGzD,uBAA6B;AAC3B,SAAK,iBAAiB,GACb,SAAA;AAAA,MACP;AAAA,MACA,KAAK;AAAA,IACP,GACS,SAAA;AAAA,MACP;AAAA,MACA,KAAK;AAAA,IACP,GACS,SAAA,oBAAoB,WAAW,KAAK,aAAa,GAC1D,MAAM,qBAAqB;AAAA,EAAA;AAAA,EAwBrB,uBAAuB6jB,GAAuB;AAC9C,UAAAyK,IAAY,SAAS,cAAc,KAAK;AACpC,IAAAA,EAAA,aAAa,aAAa,WAAW,GACrCA,EAAA,aAAa,eAAe,MAAM,GAC5CA,EAAU,MAAM,WAAW,YAC3BA,EAAU,MAAM,OAAO,YACvBA,EAAU,MAAM,QAAQ,OACxBA,EAAU,MAAM,SAAS,OACzBA,EAAU,MAAM,WAAW,UAElB,SAAA,KAAK,YAAYA,CAAS,GACnCA,EAAU,cAAczK,GAGxB,WAAW,MAAM;AACN,eAAA,KAAK,YAAYyK,CAAS;AAAA,OAClC,GAAI;AAAA,EAAA;AAAA,EAGD,cAActsD,GAAoC;AtJrR5D,QAAAvC;AsJsRQ,KAAAA,IAAAuC,KAAA,gBAAAA,EAAO,WAAP,QAAAvC,EAAe,MACZ,KAAA,cAAcuC,EAAM,OAAO,EAAE;AAAA,EACpC;AAAA,EAGF,SAAS;AACA,WAAAoa;AAAAA,cACGlc,EAAK,YAAY,aAAa,KAAK,QAAQ,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA,QAIpD,KAAK,SAAS;AAAA,MACd,CAAeiuD,MAAA;AtJlSvB,YAAA1uD,GAAAC,GAAAE,GAAAC;AsJkSuBuc,eAAAA;AAAAA;AAAAA,yBAEE,KAAK,aAAa;AAAA,iBAC1B+xC,EAAY,EAAE;AAAA,sBACTA,EAAY,OAAO;AAAA,wBACjB7xC,GAAU7c,IAAA0uD,KAAA,gBAAAA,EAAa,YAAb,gBAAA1uD,EAAsB,SAAS,CAAC;AAAA,wBAC3CC,IAAAyuD,KAAA,gBAAAA,EAAa,YAAb,gBAAAzuD,EAAsB,OAAO;AAAA,0BAC1B4c,GAAU1c,IAAAuuD,KAAA,gBAAAA,EAAa,YAAb,gBAAAvuD,EAAsB,WAAW,CAAC;AAAA,4BAC3CC,IAAAsuD,KAAA,gBAAAA,EAAa,YAAb,gBAAAtuD,EAAsB,WAAW;AAAA,uBACrC,KAAK,QAAQ;AAAA;AAAA;AAAA,IAE7B,CAAA;AAAA;AAAA,EAAA;AAGP;AAxQqBkuD,GAmBH,SAASvxC,EAAUC,EAAM;AAjBbE,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAFPmxC,GAES,WAAA,YAAA,CAAA;AAKApxC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAPPmxC,GAOS,WAAA,YAAA,CAAA;AAGApxC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAVPmxC,GAUS,WAAA,YAAA,CAAA;AAGCpxC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAbRmxC,GAaU,WAAA,oBAAA,CAAA;AAEZpxC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAfYoqC,GAeF,WAAA,YAAA,CAAA;AACApxC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAhBYoqC,GAgBF,WAAA,aAAA,CAAA;AAhBEA,KAArBpxC,GAAA;AAAA,EADCG,EAAc,iBAAiB;AAAA,GACXixC,EAAA;ACvCrB;AAAA;AAAA;AAAA;AAAA;AAIG,MAAMlvD,KAAE,aAAYC,KAAE,OAAKD,IAAEL,KAAEC,GAAE,cAAcG,GAAC;AAAA,EAAC,YAAYL,GAAE;AvJLlE,QAAAkB;AuJKmE,QAAG,MAAMlB,CAAC,GAAEA,EAAE,SAAOG,GAAE,aAAqBH,EAAE,SAAZ,aAAkBA,IAAAA,EAAE,YAAFA,gBAAAA,EAAW,UAAO,EAAE,OAAM,MAAM,4GAA4G;AAAA,EAAC;AAAA,EAAC,OAAO,GAAE;AAAC,WAAO,OAAO,KAAK,CAAC,EAAE,OAAQ,CAAC,GAAEK,MAAI;AAAC,YAAMF,IAAE,EAAEE,CAAC;AAAE,aAAaF,KAAN,OAAQ,IAAE,IAAE,GAAGE,IAAEA,EAAE,SAAS,GAAG,IAAEA,IAAEA,EAAE,QAAQ,qCAAoC,KAAK,EAAE,YAAa,CAAA,IAAIF,CAAC;AAAA,IAAG,GAAG,EAAE;AAAA,EAAC;AAAA,EAAC,OAAOD,GAAE,CAACG,CAAC,GAAE;AAAC,UAAK,EAAC,OAAMF,EAAC,IAAED,EAAE;AAAQ,QAAY,KAAK,OAAd,OAAiB,QAAO,KAAK,KAAG,IAAI,IAAI,OAAO,KAAKG,CAAC,CAAC,GAAE,KAAK,OAAOA,CAAC;AAAE,eAAUL,KAAK,KAAK,GAAG,CAAMK,EAAEL,CAAC,KAAT,SAAa,KAAK,GAAG,OAAOA,CAAC,GAAEA,EAAE,SAAS,GAAG,IAAEG,EAAE,eAAeH,CAAC,IAAEG,EAAEH,CAAC,IAAE;AAAM,eAAUA,KAAKK,GAAE;AAAC,YAAMH,IAAEG,EAAEL,CAAC;AAAE,UAASE,KAAN,MAAQ;AAAC,aAAK,GAAG,IAAIF,CAAC;AAAE,cAAMK,IAAY,OAAOH,KAAjB,YAAoBA,EAAE,SAASK,EAAC;AAAE,QAAAP,EAAE,SAAS,GAAG,KAAGK,IAAEF,EAAE,YAAYH,GAAEK,IAAEH,EAAE,MAAM,GAAE,GAAG,IAAEA,GAAEG,IAAEC,KAAE,EAAE,IAAEH,EAAEH,CAAC,IAAEE;AAAA,MAAC;AAAA,IAAC;AAAC,WAAOF;AAAAA,EAAC;AAAC,CAAC;;;;;;ACmDlzB,IAAAgwD,KAArB,cAAkD5sD,EAAW;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAE6B,KAAA,UAAyB,CAAC,GAEf,KAAA,UAAA,IAEmB,KAAA,cAAA,QAEN,KAAA,YAAA,WAIM,KAAA,WAAA,gBAEhD,KAAQ,YAAY;AAAA,EAAA;AAAA,EAIrB,aAA8C;AACpD,WAAI,KAAK,WAAW,KAAK,QAAQ,SAAS,IACjCya;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UAKH,KAAK,QAAQ,IAAI,CAACoyC,MAA2B;AxJjFvD,UAAA/uD;AwJkFU,aAAI+uD,KAAc,OAAOA,EAAW,QAAS,aACpCpyC;AAAAA,yBACK3c,IAAA+uD,EAAW,YAAX,OAAA/uD,IAAsB,SAAS;AAAA,uBAChC,MAAM;AACb,QAAI+uD,EAAW,QACbA,EAAW,KAAK;AAAA,MAEnB,CAAA;AAAA,iBACElyC,EAAUkyC,EAAW,IAAI,CAAC;AAAA,iBAGxBpyC;AAAAA;AAAAA,qBAEEE,EAAUkyC,EAAW,IAAI,CAAC;AAAA,wBACvBlyC,EAAUkyC,EAAW,MAAM,CAAC;AAAA,oBAChClyC,EAAUkyC,EAAW,SAASA,EAAW,MAAM,MAAS,CAAC;AAAA,iBAC5DlyC,EAAUkyC,EAAW,IAAI,CAAC;AAAA;AAAA,IAEjC,CACD,CAAC;AAAA,yBAGChrC;AAAAA,EAAA;AAAA,EAGD,mBAAoD;AAC1D,QAAIirC,IAAW;AACf,YAAQ,KAAK,WAAW;AAAA,MACtB,KAAK;AACQ,QAAAA,IAAA;AACX;AAAA,MACF,KAAK;AACQ,QAAAA,IAAA;AACX;AAAA,MACF,KAAK;AACQ,QAAAA,IAAA;AACX;AAAA,IACF;AAEK,WAAAA,EAAS,SAAS,IACrBryC;AAAAA,iBACSqyC,CAAQ;AAAA;AAAA,yDAGjBjrC;AAAAA,EAAA;AAAA,EAGE,OAAOuC,GAAY;AACzB,IAAIA,MACF,KAAK,YAAY,IAEjB,WAAW,MAAM;AACf,WAAK,KAAK,aAAa,EAAE,IAAAA,EAAA,CAAI;AAAA,OAC5B,GAAG;AAAA,EACR;AAAA,EAGF,SAAS;AxJ3IX,QAAAtmB;AwJ4IW,WAAA2c;AAAAA;AAAAA,mBAEQ,KAAK,OAAO;AAAA;AAAA,cAEjBlc;AAAA,MACN;AAAA,MACA,aAAa,KAAK,SAAS;AAAA,MAC3B,sBAAsB,KAAK,QAAQ;AAAA,MACnC,EAAE,qBAAqB,KAAK,UAAU;AAAA,IACvC,CAAA;AAAA,cACOwuD,IAASjvD,IAAA,KAAK,gBAAL,OAAAA,IAAoB,CAAE,CAAA,CAAC;AAAA;AAAA;AAAA,YAGlC,KAAK,iBAAkB,CAAA;AAAA;AAAA,cAErB,KAAK,UACH2c;AAAAA,qBACK,KAAK,OAAO;AAAA,qBAEjBA,gBAAmB;AAAA,cACrB,KAAK,UAAUA,KAAQ,KAAK,WAAW,CAAC,KAAKoH,CAAO;AAAA;AAAA;AAAA,UAGxD,KAAK,gBAAgB,SACnBpH;AAAAA,uBACW,MAAM,KAAK,OAAO,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA,2BAGtBvB,GAAU,OAAO,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,qCAMjC2I,CAAO;AAAA;AAAA;AAAA,EAAA;AAInB;AA1HqB+qC,GAgBH,SAAS/xC,EAAUC,EAAM;AAddE,GAAA;AAAA,EAA1BC,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GAFN2xC,GAEQ,WAAA,WAAA,CAAA;AAEC5xC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAJP2xC,GAIS,WAAA,WAAA,CAAA;AAEe5xC,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GANtB2xC,GAMwB,WAAA,eAAA,CAAA;AAEf5xC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GARP2xC,GAQS,WAAA,aAAA,CAAA;AAEA5xC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAVP2xC,GAUS,WAAA,eAAA,CAAA;AAEA5xC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAZP2xC,GAYS,WAAA,YAAA,CAAA;AAEX5xC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GAdY4qC,GAcF,WAAA,aAAA,CAAA;AAdEA,KAArB5xC,GAAA;AAAA,EADCG,EAAc,yBAAyB;AAAA,GACnByxC,EAAA;;;;;;;ACjBA,IAAAI,KAArB,cAA0ChtD,EAAW;AAAA,EAArD,cAAA;AAAA,UAAA,GAAA,SAAA,GAKuE,KAAA,UAAA,WAKT,KAAA,OAAA,MAMN,KAAA,UAAA;AAAA,EAAA;AAAA,EAItD,SAAS;AACA,WAAAya;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAKMlc,EAAK,WAAW;AAAA,MACvB,CAAC,YAAY,KAAK,IAAI,EAAE,GAAG,KAAK;AAAA,MAChC,CAAC,YAAY,KAAK,OAAO,EAAE,GAAG,KAAK;AAAA,IAAA,CACpC,CAAC;AAAA;AAAA;AAAA;AAAA,iBAIO,KAAK,IAAI;AAAA,uBACHoc,EAAU,KAAK,UAAU,CAAC;AAAA;AAAA;AAAA,UAGvC,KAAK,OACHF;AAAAA;AAAAA,sBAEUlc,EAAK,iBAAiB;AAAA,MAC5B,2BAA2B,KAAK;AAAA,IAAA,CACjC,CAAC;AAAA,gBACA,KAAK,IAAI;AAAA,uBAEbkc,gBAAmB;AAAA;AAAA;AAAA,EAAA;AAI/B;AAjDqBuyC,GAkBH,SAASnyC,EAAUC,EAAM;AAbEE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GALtB+xC,GAKwB,WAAA,WAAA,CAAA;AAKAhyC,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAVtB+xC,GAUwB,WAAA,QAAA,CAAA;AAEfhyC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAZP+xC,GAYS,WAAA,cAAA,CAAA;AAEAhyC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAdP+xC,GAcS,WAAA,QAAA,CAAA;AAEgBhyC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAhBvB+xC,GAgByB,WAAA,WAAA,CAAA;AAhBzBA,KAArBhyC,GAAA;AAAA,EADCG,EAAc,gBAAgB;AAAA,GACV6xC,EAAA;;;;;;;AClBA,IAAAC,KAArB,cAAwCjtD,EAAW;AAAA,EAAnD,cAAA;AAAA,UAAA,GAAA,SAAA,GAI4C,KAAA,YAAA,UAES,KAAA,YAAA,IAEE,KAAA,cAAA;AAAA,EAAA;AAAA,EAKrD,IAAI,QAAQG,GAAgB;AAC1B,SAAK,WAAWA;AAAA,EAAA;AAAA,EAElB,IAAI,UAAU;AAEV,WAAA,CAAC,KAAK,YACN,KAAK,aAAa,MACjB,KAAK,cAAc,YAAY,KAAK,cAAc,oBAE5C,MAIP,CAAC,KAAK,YACN,KAAK,aAAa,MACjB,KAAK,cAAc,SAAS,KAAK,cAAc,iBAEzC,MAGF,KAAK;AAAA,EAAA;AAAA,EAKd,gBACEwuB,GACAu+B,GACAC,GACAC,GACA;AACI,WAAAz+B,MAAc,SAASA,MAAc,gBAChC,gBAAgBw+B,IAAc,qBAAqBD,CAAO,MAAM,GAAG,mBAAmBE,IAAY,qBAAqBF,CAAO,MAAM,GAAG,MAGzI,eAAeC,IAAc,qBAAqBD,CAAO,MAAM,GAAG,oBAAoBE,IAAY,qBAAqBF,CAAO,MAAM,GAAG;AAAA,EAAA;AAAA,EAGhJ,SAAS;AACA,WAAAzyC;AAAAA;AAAAA,gBAEKlc,EAAK,SAAS,aAAa,KAAK,OAAO,IAAI;AAAA,MACjD,CAAC,mBAAmB,KAAK,SAAS,EAAE,GAAG,KAAK;AAAA,IAAA,CAC7C,CAAC;AAAA;AAAA,gBAEMoc;AAAAA,MACN,KAAK;AAAA,QACH,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MAAA;AAAA,IACP,CACD;AAAA;AAAA;AAAA;AAAA,EAAA;AAKT;AAtEqBsyC,GAoCH,SAASpyC,EAAUC,EAAM;AAhC7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAJSgyC,GAIP,WAAA,aAAA,CAAA;AAEiBjyC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GANRgyC,GAMU,WAAA,aAAA,CAAA;AAEAjyC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRgyC,GAQU,WAAA,eAAA,CAAA;AAKzBjyC,GAAA;AAAA,EADHC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAZPgyC,GAaf,WAAA,WAAA,CAAA;AAbeA,KAArBjyC,GAAA;AAAA,EADCG,EAAc,cAAc;AAAA,GACR8xC,EAAA;;;;;;;ACyCA,IAAAI,KAArB,cAAyCtjC,GAAqB;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAIiD,KAAA,SAAA,IAKa,KAAA,OAAA,UAuC3C,KAAA,cAAc,CAAC1pB,MAAwB;AAElD,UAAA,KAAK,YAAY,KAAK,UAAU;AAC9B,QAAA,KAAK,YAAYA,MACnBA,EAAM,eAAe,GACrBA,EAAM,gBAAgB;AAExB;AAAA,MAAA;AAIF,WAAK,mBAAmB,GAGnB,KAAA,UAAU,CAAC,KAAK;AAErB,YAAM,EAAE,SAAA6pB,GAAS,OAAA/pB,GAAO,UAAAiqB,EAAa,IAAA;AAGjC,UAAA;AACI/pB,cAAAA,IAAQ,IAAI,YAAY,cAAc;AAAA,UAC1C,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,UAAU;AAAA,UACV,QAAQ;AAAA,YACN,SAAA6pB;AAAA,YACA,OAAO/pB,KAAS;AAAA,YAChB,UAAAiqB;AAAA,YACA,UAAU,KAAK;AAAA,UAAA;AAAA,QACjB,CACD;AAED,aAAK,cAAc/pB,CAAK;AAAA,eACjB0Q,GAAO;AACN,gBAAA,MAAM,uCAAuCA,CAAK;AAAA,MAAA;AAIxD,UAAA;AACF,aAAK,YAAY;AAAA,eACVA,GAAO;AACN,gBAAA,MAAM,kCAAkCA,CAAK;AAAA,MAAA;AAAA,IAEzD;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA1EQ,qBAA2B;AAEjC,IAAI,KAAK,YAAa,KAAK;AAAA,EAE3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQM,qBAAyC;AAC/C,UAAMkZ,IAAgB,CAAC;AAEvB,WAAI,KAAK,eACPA,EAAI,KAAK,aAAa,GAGpB,KAAK,YACPA,EAAI,KAAK,UAAU,GAGdA,EAAI,SAAS,IAAIA,EAAI,KAAK,GAAG,IAAI;AAAA,EAAA;AAAA,EAqD1C,IAAW,eAAiC;AACtC,QAAA,CAAC,KAAK;AACR,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAEF,WAAO,KAAK;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOP,QAAc;AACnB,IAAI,KAAK,SAAS,CAAC,KAAK,YAAY,CAAC,KAAK,YACxC,KAAK,MAAM,MAAM;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA,EAOK,OAAa;AAClB,IAAI,KAAK,SACP,KAAK,MAAM,KAAK;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASK,cAAc5pB,GAAoB;AACvC,IAAAA,EAAM,eAAe,GAEhB,KAAK,YACR,KAAK,UAAU;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASM,cAAcA,GAA4B;AAEhD,IAAI,KAAK,YAKLA,EAAM,SAAS,WAOfA,EAAM,SAAS,YACjBA,EAAM,eAAe,GACrB,KAAK,YAAY;AAAA,EACnB;AAAA,EAGF,SAAS;AACA,WAAAoa;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,kBAKOlc,EAAK,iBAAiB,WAAW,KAAK,IAAI,IAAI;AAAA,MACpD,mBAAmB,KAAK;AAAA,MACxB,oBAAoB,KAAK;AAAA,MACzB,oBAAoB,KAAK;AAAA,MACzB,oBAAoB,KAAK;AAAA,MACzB,oBAAoB,KAAK;AAAA,MACzB,oBAAoB,KAAK;AAAA,MACzB,wBAAwB,KAAK,mBAAmB;AAAA,MAChD,uBAAuB,KAAK,mBAAmB;AAAA,IAAA,CAChD,CAAC;AAAA;AAAA,oBAEQA,EAAK,kBAAkB;AAAA,MAC7B,8BAA8B,KAAK,SAAS;AAAA,MAC5C,0BAA0B,KAAK;AAAA,IAAA,CAChC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAOW,KAAK,OAAO;AAAA,0BACX,KAAK,QAAQ;AAAA,0BACb,KAAK,QAAQ;AAAA,0BACb,KAAK,QAAQ;AAAA,2BACZoc,EAAU,KAAK,SAAS,KAAK,EAAE;AAAA,iCACzBA,EAAU,KAAK,oBAAoB,CAAC;AAAA,6BACxC,KAAK,UAAU,SAAS,OAAO;AAAA,8BAC9B,KAAK,UAAU,SAAS,IAAI;AAAA,yBACjC,KAAK,aAAa;AAAA,uBACpB,KAAK,WAAW;AAAA,yBACd,KAAK,aAAa;AAAA,uBACpB,KAAK,OAAO;AAAA,sBACb,KAAK,MAAM;AAAA,uBACV,KAAK,OAAO;AAAA;AAAA;AAAA,sBAGbpc;AAAA,MACN;AAAA,MACA,EAAE,4BAA4B,KAAK,SAAS;AAAA,MAC5C,EAAE,4BAA4B,KAAK,SAAS;AAAA,MAC5C,EAAE,2BAA2B,KAAK,QAAQ;AAAA,MAC1C,EAAE,2BAA2B,KAAK,QAAQ;AAAA,IAAA,CAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAQWA;AAAA,MACN;AAAA,MACA;AAAA,IACD,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAMKA;AAAA,MACN;AAAA,MACA,iCAAiC,KAAK,IAAI;AAAA,MAC1C;AAAA,QACE,0CAA0C,KAAK;AAAA,QAC/C,0CAA0C,KAAK;AAAA,MAAA;AAAA,IACjD,CACD;AAAA;AAAA;AAAA;AAAA,sBAIKA,EAAK,2BAA2B;AAAA,MACtC,qCAAqC,KAAK;AAAA,MAC1C,qCAAqC,KAAK;AAAA,MAC1C,yBAAyB,KAAK,yBAAyB;AAAA,MACvD,sBAAsB,KAAK,yBAAyB;AAAA,IAAA,CACrD,CAAC;AAAA,gBACA,KAAK,SACPkc;AAAAA;AAAAA;AAAAA;AAAAA,wBAIU,KAAK,IAAI;AAAA,4BACL,KAAK,QAAQ;AAAA,4BACb,KAAK,QAAQ;AAAA,iCACR,KAAK,aAAa;AAAA;AAAA,4BAEvB,KAAK,YAAY,KAAK,QAAQ;AAAA,4BAC9B,KAAK,QAAQ;AAAA,wBACjBE,EAAU,KAAK,KAAK,CAAC;AAAA;AAAA,mCAEV;AAAA,gBACnB,KAAK,eACPF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,yBAKWE,EAAU,KAAK,IAA6B,CAAC;AAAA;AAAA,oBAElD,KAAK,WAAW;AAAA;AAAA,eAErB;AAAA;AAAA;AAAA,YAGH,KAAK,YACPF;AAAAA;AAAAA;AAAAA,6BAGmBE,EAAU,KAAK,YAAY,CAAC;AAAA,6BAC5BA,EAAU,KAAK,IAAI,CAAe;AAAA;AAAA,wBAEvC,KAAK,MAAM;AAAA,gBACnB,KAAK,QAAQ;AAAA;AAAA,WAElB;AAAA;AAAA;AAAA;AAAA,EAAA;AAKX;AAhSqB0yC,GAWH,SAASxyC,EAAUC,EAAM;AAVPE,GAAA;AAAA,EAAjC7E,GAAM,QAAQ;AAAA,GADIk3C,GACe,WAAA,SAAA,CAAA;AAGLryC,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAJRoyC,GAIU,WAAA,UAAA,CAAA;AAKDryC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GATPoyC,GASS,WAAA,QAAA,CAAA;AATTA,KAArBryC,GAAA;AAAA,EADCG,EAAc,eAAe;AAAA,GACTkyC,EAAA;;;;;;;ACxCA,IAAAC,KAArB,cAAsCttD,EAAW;AAAA,EAAjD,cAAA;AAAA,UAAA,GAAA,SAAA,GAMyD,KAAA,WAAA,IAE9C,KAAQ,YAAqB;AAAA,EAAA;AAAA,EAEtC,eAAe;A5JhCjB,QAAAlC;A4JiCS,SAAA,aAAa,MAAM,KAAK,KAAK,IAElCA,IAAA,KAAK,kBAAL,QAAAA,EAAoB;AAAA,MAClB;AAAA,MACA,CAAC,MAAyB;AACxB,QAAI,EAAE,UAAU,KAAK,UAAU,EAAE,OAAO,QACtC,KAAK,YAAY,KACR,KAAK,cACd,KAAK,YAAY;AAAA,MACnB;AAAA;AAAA,EAEJ;AAAA,EAGF,SAAS;AACA,WAAA2c;AAAAA,WACA,KAAK,KAAK;AAAA;AAAA,iBAEJ,KAAK,YAAY,IAAI,EAAE;AAAA,cAC1Blc,EAAK,aAAa;AAAA,MACxB,uBAAuB,KAAK;AAAA,IAAA,CAC7B,CAAC;AAAA;AAAA,wBAEgB,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA,EAAA;AAKlC;AAvCqB+uD,GACH,SAASzyC,EAAUC,EAAM;AAGEE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAJtBqyC,GAIwB,WAAA,SAAA,CAAA;AAECtyC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GANvBqyC,GAMyB,WAAA,YAAA,CAAA;AAE3BtyC,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GARYsrC,GAQF,WAAA,aAAA,CAAA;AAREA,KAArBtyC,GAAA;AAAA,EADCG,EAAc,YAAY;AAAA,GACNmyC,EAAA;ACtBrB;AAAA;AAAA;AAAA;AAAA;AAKA,UAASzwD,GAAEA,GAAEe,GAAE;AAAC,MAAYf,MAAT,QAAW;AAAC,QAAI,IAAE;AAAE,eAAUD,KAAKC,EAAE,OAAMe,EAAEhB,GAAE,GAAG;AAAA,EAAC;AAAC;;;;;;;AC8ClD,IAAA2wD,KAArB,cAA2CvtD,EAAW;AAAA,EAAtD,cAAA;AAAA,UAAA,GAAA,SAAA,GAgBgE,KAAA,OAAA,MAGA,KAAA,SAAA,IAI9D,KAAQ,eAA6B,CAAC,GACtC,KAAQ,gBAA0B,CAAC,GACnC,KAAQ,eAAe;AAAA,EAAA;AAAA,EAEvB,cAAcwtD,GAAe;AAC3B,QAAI,CAACA,GAAO;AACV,cAAQ,KAAK,eAAe;AAC5B;AAAA,IAAA;AAGG,SAAA,KAAK,kBAAkB,EAAE,OAAAA,EAAA,GAAS,EAAE,SAAS,IAAO,GAErD,KAAK,iBACP,KAAK,eAAe;AAAA,EACtB;AAAA,EAGF,yBACEttD,GACA8jB,GACA7jB,GACM;AACA,UAAA,yBAAyBD,GAAM8jB,GAAU7jB,CAAK,GAChDD,EAAK,kBAAA,MAAwB,mBAAmBC,MAAU6jB,KAC5D,eAAe,YAAY,YAAY,EAAE,KAAK,MAAM;AAClD,MAAI7jB,KAAS,KAAK,cAAc,SAASA,CAAK,KAC5C,KAAK,cAAcA,CAAK;AAAA,IAC1B,CACD;AAAA,EACH;AAAA,EAGF,iBAAiBE,GAAc;A9J1GjC,QAAAvC;A8J2GU,UAAA2vD,KACJ3vD,IAAAuC,EAAM,WAAN,gBAAAvC,EACC,iBAAiB;AAAA,MAClB,SAAS;AAAA,MACT,UAAU;AAAA,IAAA,IAGN4vD,IAA4B,CAAC,GAE7BC,IAAyB,CAAC;AAEhC,IAAAF,EAAY,QAAQ,CAAOG,MAAA;A9JtH/B,UAAA9vD;A8JuHY,YAAA0vD,IAAQI,EAAI,aAAa,OAAO,GAChCxjC,IAAWwjC,EAAI,aAAa,UAAU,GAEtCC,KAAW/vD,IAAA8vD,KAAA,gBAAAA,EAAK,eAAL,gBAAA9vD,EAAiB;AAAA,QAChC;AAAA;AAGF,MAAA4vD,EAAY,KAAK;AAAA,QACf,eAAeG,KAAA,gBAAAA,EAAU,cAAc,EAAE,SAAS;QAClD,UAAAzjC;AAAA,QACA,OAAAojC;AAAA,MAAA,CACD,GAIG,CAACpjC,KAAYojC,KACfG,EAAa,KAAKH,CAAK;AAAA,IACzB,CACD,GAED,KAAK,eAAeE,GACpB,KAAK,gBAAgBC,GAEjB,CAAC,KAAK,iBAAiB,KAAK,cAAc,SACvC,KAAA,gBAAgB,KAAK,cAAc,CAAC,IAChC,KAAK,gBACT,KAAA,cAAc,KAAK,aAAa,GAGvC,KAAK,cAAc;AAAA,EAAA;AAAA,EAGrB,YAAYH,GAAsB;AAChC,IAAIA,MAAU,KAAK,iBAAiB,CAACA,MAErC,KAAK,gBAAgBA,GACrB,KAAK,cAAcA,CAAK;AAAA,EAAA;AAAA,EAG1B,cAAcntD,GAAsB;AAClC,UAAMytD,IAAkB,KAAK,cAAc,QAAQ,KAAK,aAAa;AACrE,QAAIC,IAAO;AAEX,YAAQ1tD,EAAM,KAAK;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AACH;AACE,cAAIytD,IAAkB,GAAG;AACvB,kBAAME,IAAcF,IAAkB;AACtC,iBAAK,YAAY,KAAK,cAAcE,CAAW,CAAC,GAC3C,KAAA,eAAeA,CAAW,EAAE,MAAM;AAAA,UAAA;AAElC,UAAAD,IAAA;AAAA,QAAA;AAET;AAAA,MAEF,KAAK;AAAA,MACL,KAAK;AACH;AACE,cAAID,IAAkB,KAAK,cAAc,SAAS,GAAG;AACnD,kBAAME,IAAcF,IAAkB;AACtC,iBAAK,YAAY,KAAK,cAAcE,CAAW,CAAC,GAC3C,KAAA,eAAeA,CAAW,EAAE,MAAM;AAAA,UAAA;AAElC,UAAAD,IAAA;AAAA,QAAA;AAET;AAAA,MAEF,KAAK;AACH,aAAK,YAAY,KAAK,cAAc,CAAC,CAAC,GACjC,KAAA,eAAe,CAAC,EAAE,MAAM,GACtBA,IAAA;AACP;AAAA,MAEF,KAAK;AACH,aAAK,YAAY,KAAK,cAAc,KAAK,cAAc,SAAS,CAAC,CAAC,GAClE,KAAK,eAAe,KAAK,cAAc,SAAS,CAAC,EAAE,MAAM,GAClDA,IAAA;AACP;AAAA,IAGA;AAGJ,IAAIA,MACF1tD,EAAM,gBAAgB,GACtBA,EAAM,eAAe;AAAA,EACvB;AAAA,EAGF,SAAS;AACA,WAAAoa;AAAAA;AAAAA;AAAAA;AAAAA,uBAIYlc,EAAK,kBAAkB;AAAA,MAClC,qBAAqB,KAAK;AAAA,IAAA,CAC3B,CAAC;AAAA,YACA0vD;AAAAA,MACA,KAAK;AAAA,MACL,CAAOL,MAAA;A9J3NnB,YAAA9vD;A8J2NmB2c,eAAAA;AAAAA;AAAAA;AAAAA,6BAGUmzC,EAAI,QAAQ;AAAA;AAAA,gCAETjzC,GAAU7c,IAAA8vD,EAAI,UAAJ,OAAA9vD,IAAa,MAAS,CAAC;AAAA,iCAChC,KAAK,kBAAkB8vD,EAAI,KAAK;AAAA,4BACrC,KAAK,kBAAkBA,EAAI,QAAQ,IAAI,EAAE;AAAA;AAAA,wBAE7CrvD,EAAK,OAAO;AAAA,UAClB,iBAAiB,KAAK,kBAAkBqvD,EAAI;AAAA,UAC5C,iBAAiBA,EAAI;AAAA,UACrB,WAAW,KAAK,SAAS;AAAA,UACzB,WAAW,KAAK,SAAS;AAAA,QAAA,CAC1B,CAAC;AAAA,yBACO,MAAM;AACR,eAAA,YAAYA,EAAI,KAAK;AAAA,QAC3B,CAAA;AAAA,2BACU,KAAK,aAAa;AAAA;AAAA;AAAA,0BAGnBrvD;AAAA,UACN;AAAA,UACA;AAAA,YACE,gCACE,KAAK,kBAAkBqvD,EAAI;AAAA,UAC/B;AAAA,UACA,uBAAuB,KAAK,IAAI;AAAA,QAAA,CACjC;AAAA,kBACDA,EAAI,aAAa;AAAA;AAAA;AAAA;AAAA,IAGxB,CAAA;AAAA;AAAA;AAAA;AAAA,8BAImB,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA,EAAA;AAKnD;AAjNqBL,GAqBH,SAAS1yC,EAAUC,EAAM;AAnB1BE,GAAA;AAAA,EAAd7E,GAAM,MAAM;AAAA,GAFMo3C,GAEJ,WAAA,eAAA,CAAA;AAEuBvyC,GAAA;AAAA,EAArCmO,GAAS,0BAA0B;AAAA,GAJjBokC,GAImB,WAAA,kBAAA,CAAA;AAOtCvyC,GAAA;AAAA,EAJCC,EAAS;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,EACV,CAAA;AAAA,GAVkBsyC,GAWnB,WAAA,iBAAA,CAAA;AAK2CvyC,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAhBtBsyC,GAgBwB,WAAA,QAAA,CAAA;AAGCvyC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAnBvBsyC,GAmByB,WAAA,UAAA,CAAA;AAnBzBA,KAArBvyC,GAAA;AAAA,EADCG,EAAc,kBAAkB;AAAA,GACZoyC,EAAA;;;;;;;AC3BA,IAAAW,KAArB,cAAwCluD,EAAW;AAAA,EAAnD,cAAA;AAAA,UAAA,GAAA,SAAA,GAG+B,KAAO,OAAO,QAEU,KAAA,SAAA,IAGf,KAAA,UAAA;AAAA,EAAA;AAAA,EAI5B,aACR0a,GACM;AACN,SAAK,KAAK,QAAQ,CAAC6pB,GAAKp+B,MAAU;AAChC,MAAIA,MAAU,KAAK,KAAK,SAAS,KAC/Bo+B,EAAI,gBAAgB,MAAM;AAAA,IAC5B,CACD,GAEI,KAAA,aAAa,cAAc,KAAK,OAAO;AAAA,EAAA;AAAA,EAG9C,SAAS;AACA,WAAA9pB;AAAAA;AAAAA,UAED,KAAK,OAAO;AAAA;AAAA;AAAA;AAAA,EAAA;AAKtB;AAhCqByzC,GAUH,SAASrzC,EAAUC,EAAM;AARhBE,GAAA;AAAA,EAAxBO,GAAsB;AAAA,GAFJ2yC,GAEM,WAAA,QAAA,CAAA;AACWlzC,GAAA;AAAA,EAAnCC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAHRizC,GAGiB,WAAA,QAAA,CAAA;AAEQlzC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GALvBizC,GAKyB,WAAA,UAAA,CAAA;AAGhBlzC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GARPizC,GAQS,WAAA,WAAA,CAAA;AARTA,KAArBlzC,GAAA;AAAA,EADCG,EAAc,cAAc;AAAA,GACR+yC,EAAA;;;;;;;ACGA,IAAAC,KAArB,cAA4CnuD,EAAW;AAAA,EAAvD,cAAA;AAAA,UAAA,GAAA,SAAA,GAOE,KAAO,OAAO;AAAA,EAAA;AAAA,EAEd,SAAS;AACA,WAAAya;AAAAA,EAAA;AAEX;AAZqB0zC,GACH,SAAStzC,EAAUC,EAAM;AAGGE,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBkzC,GAIyB,WAAA,QAAA,CAAA;AAGrCnzC,GAAA;AAAA,EADNC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GANRkzC,GAOZ,WAAA,QAAA,CAAA;AAPYA,KAArBnzC,GAAA;AAAA,EADCG,EAAc,mBAAmB;AAAA,GACbgzC,EAAA;;;;;;;ACAA,IAAAC,KAArB,cAA8CpuD,EAAW;AAAA,EAAzD,cAAA;AAAA,UAAA,GAAA,SAAA,GAOE,KAAO,OAAO;AAAA,EAAA;AAAA,EAEd,SAAS;AACA,WAAAya;AAAAA,EAAA;AAEX;AAZqB2zC,GACH,SAASvzC,EAAUC,EAAM;AAGGE,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBmzC,GAIyB,WAAA,QAAA,CAAA;AAGrCpzC,GAAA;AAAA,EADNC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GANRmzC,GAOZ,WAAA,QAAA,CAAA;AAPYA,KAArBpzC,GAAA;AAAA,EADCG,EAAc,qBAAqB;AAAA,GACfizC,EAAA;;;;;;;ACNA,IAAAC,KAArB,cAA2CruD,EAAW;AAAA,EAAtD,cAAA;AAAA,UAAA,GAAA,SAAA,GAKE,KAAO,OAAO,OAGuC,KAAA,SAAA;AAAA,EAAA;AAAA,EAErD,SAAS;AACA,WAAAya;AAAAA,EAAA;AAEX;AAbqB4zC,GACH,SAASxzC,EAAUC,EAAM;AAIlCE,GAAA;AAAA,EADNC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAJRozC,GAKZ,WAAA,QAAA,CAAA;AAGqCrzC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GARvBozC,GAQyB,WAAA,UAAA,CAAA;AARzBA,KAArBrzC,GAAA;AAAA,EADCG,EAAc,kBAAkB;AAAA,GACZkzC,EAAA;;;;;;;ACmDA,IAAAC,KAArB,MAAA9kD,UAA2Cqb,GAAmB;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAI4D,KAAA,cAAA,IAMd,KAAA,OAAA,GAIlB,KAAA,cAAA,IAKT,KAAA,QAAA;AAAA,EAAA;AAAA,EAIjB,IAAI,eAAe;AACjB,WAAO,KAAK;AAAA,EAAA;AAAA,EAGN,kBAAkBxkB,GAAc;AAE/B,KADQA,KAAA,gBAAAA,EAAO,QACf,aAAa,QAAQ,MAAM;AAAA,EAAA;AAAA,EAG9B,oBAAoB;AAAA,WAAAlC,EAAA;AnKxG5B,UAAAL;AmKyGI,MAAAupB,GAAA7d,EAAA,iBAAM,0BAAN,IAAwB,GAExB,MAAM,KAAK,gBACN,KAAA,MAAM,SAAQ1L,IAAA,KAAK,UAAL,OAAAA,IAAc,IAC5B,KAAA,QAAQ,KAAK,MAAM,MAAM;AAAA,IAAA;AAAA;AAAA,EAGhC,yBAAyBoC,GAAc8jB,GAAe9hB,GAAe;AAC7D,UAAA,yBAAyBhC,GAAM8jB,GAAU9hB,CAAQ,GAEnDhC,MAAS,WAAW,KAAK,UAC3B,KAAK,MAAM,QAAQgC;AAAA,EACrB;AAAA,EAGF,UAAU;AACR,UAAM,QAAQ,GAET,KAAA,QAAQ,KAAK,MAAM,MAAM,QACzB,KAAA,QAAQ,KAAK,MAAM,OACxB,KAAK,KAAK,oBAAoB,EAAE,OAAO,KAAK,OAAO,GAEnD,KAAK,YAAY;AAAA,EAAA;AAAA,EAGnB,WAAW;AACT,UAAM,SAAS,GAEV,KAAA,QAAQ,KAAK,MAAM,MAAM,QACzB,KAAA,QAAQ,KAAK,MAAM,OACxB,KAAK,KAAK,oBAAoB,EAAE,OAAO,KAAK,OAAO,GAEnD,KAAK,YAAY;AAAA,EAAA;AAAA,EAGnB,SAAS,GAAU;AACjB,UAAMS,IAAS,EAAE,QACX62C,IAAY72C,EAAO,MAAM;AAAA,MAC7BA,EAAO;AAAA,MACPA,EAAO;AAAA,IACT;AACA,SAAK,KAAK,cAAc,EAAE,OAAO62C,GAAW;AAAA,EAAA;AAAA,EAG9C,oBAAoB;AACb,SAAA,UAAU,YAAY,EAAE,GAC7B,KAAK,UAAU,aAAa,KAAK,gBAAgB,EAAE,GAC9C,KAAA,QAAQ,KAAK,gBAAgB,IAC7B,KAAA,MAAM,QAAQ,KAAK,gBAAgB;AAAA,EAAA;AAAA,EAG1C,cAAcn5C,GAAc;AAC1B,IAAAA,EAAM,eAAe;AAAA,EAAA;AAAA,EAGf,gBAAgB;AAChB,UAAAkuD,IAAW,KAAK,cAgBlB1sC,IAfApH;AAAAA;AAAAA;AAAAA;AAAAA,kBAIUlc,EAAK,qBAAqB;AAAA,MAChC,4BAA4B,KAAK,WAAW;AAAA,IAAA,CAC7C,CAAC;AAAA;AAAA,kBAEM,KAAK,IAA6B;AAAA;AAAA;AAAA,YAGxC,KAAK,KAAK;AAAA;AAAA;AAAA;AAMX,WAAAkc;AAAAA;AAAAA,UAED,KAAK,YAAY,KAAK,gBAAiB,CAAA;AAAA,yCACR8zC,CAAO;AAAA;AAAA;AAAA,EAAA;AAAA,EAK9C,SAAS;AACP,WAAO,KAAK;AAAA,MACV;AAAA,MACA9zC;AAAAA;AAAAA;AAAAA,kBAGYlc;AAAA,QACN;AAAA,QACA,aAAa,KAAK,IAAI;AAAA,QACtB,EAAE,qBAAqB,KAAK,WAAW,UAAU;AAAA,QACjD,EAAE,mBAAmB,KAAK,WAAW,QAAQ;AAAA,QAC7C,EAAE,sBAAsB,KAAK,SAAS;AAAA,QACtC,EAAE,sBAAsB,KAAK,SAAS;AAAA,QACtC,EAAE,sBAAsB,KAAK,SAAS;AAAA,MAAA,CACvC;AAAA;AAAA;AAAA;AAAA;AAAA,4BAKiB,KAAK,QAAQ;AAAA,4CACG,KAAK,WACjC,aACAsjB,CAAO;AAAA,wBACC,KAAK,QAAQ;AAAA,wBACb,KAAK,QAAQ;AAAA,wBACb,KAAK,QAAQ;AAAA,wBACblH,EAAU,KAAK,SAAS,CAAC;AAAA,wBACzBA,EAAU,KAAK,SAAS,CAAC;AAAA,mBAC9BA,EAAU,KAAK,IAAI,CAAC;AAAA,mBACpBA,EAAU,KAAK,IAAI,CAAC;AAAA,mBACpBA,EAAU,KAAK,IAAI,CAAC;AAAA,0BACbA,EAAU,KAAK,WAAW,CAAC;AAAA,yBAC5B,KAAK,SAAS;AAAA,qBAClB,KAAK,KAAK;AAAA;AAAA,qBAEV,KAAK,OAAO;AAAA,uBACV,KAAK,SAAS;AAAA,sBACf,KAAK,QAAQ;AAAA,oBACf,KAAK,MAAM;AAAA,qBACV,KAAK,OAAO;AAAA,sBACX,KAAK,QAAQ;AAAA,uBACZ,KAAK,aAAa;AAAA;AAAA,YAE7B,KAAK,cAAe,CAAA;AAAA;AAAA;AAAA,IAG5B;AAAA,EAAA;AAAA,EAGM,kBAAkB;AACjB,WAAAF;AAAAA;AAAAA;AAAAA,uBAGYE,EAAU,KAAK,YAAY,CAAC;AAAA,uBAC5BA,EAAU,KAAK,IAAI,CAAe;AAAA,gBACzCpc,EAAK,sBAAsB;AAAA,MACjC,0BAA0B,KAAK,SAAS;AAAA,IAAA,CACzC,CAAC;AAAA;AAAA;AAAA,kBAGQ,KAAK,MAAM;AAAA;AAAA;AAAA,yBAGJ,KAAK,iBAAiB;AAAA,UACrC,KAAK,QAAQ;AAAA;AAAA;AAAA,EAAA;AAIvB;AAvLqB+vD,GAqBH,SAASzzC,EAAUC,EAAM;AAnBxBE,GAAA;AAAA,EAAhB7E,GAAM,QAAQ;AAAA,GAFIm4C,GAEF,WAAA,SAAA,CAAA;AAE2BtzC,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBqzC,GAIyB,WAAA,eAAA,CAAA;AAEhBtzC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GANPqzC,GAMS,WAAA,aAAA,CAAA;AAEAtzC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GARPqzC,GAQS,WAAA,aAAA,CAAA;AAEAtzC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAVPqzC,GAUS,WAAA,QAAA,CAAA;AAEAtzC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAZPqzC,GAYS,WAAA,QAAA,CAAA;AAEhBtzC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAdSqzC,GAcP,WAAA,eAAA,CAAA;AAEAtzC,GAAA;AAAA,EAAXC,EAAS;AAAA,GAhBSqzC,GAgBP,WAAA,QAAA,CAAA;AAGHtzC,GAAA;AAAA,EAARgH,EAAM;AAAA,GAnBYssC,GAmBV,WAAA,SAAA,CAAA;AAnBUA,KAArBtzC,GAAA;AAAA,EADCG,EAAc,iBAAiB;AAAA,GACXmzC,EAAA;;;;;;;ACrDA,IAAAE,KAArB,cAA2CxuD,EAAW;AAAA,EAG1C,aACR0a,GACM;AACN,UAAM,aAAaA,CAAkB,GAChC,KAAA,aAAa,QAAQ,MAAM;AAEhC,UAAMwoB,IAAW,MAAM,KAAK,KAAK,QAAQ;AAEhC,IAAAA,EAAA,QAAQ,CAACurB,GAAOtoD,MAAU;AAC3B,MAAAsoD,EAAA,aAAa,QAAQ,UAAU,GACjCtoD,MAAU,IACZsoD,EAAM,gBAAgB,OAAO,IACpBtoD,MAAU+8B,EAAS,SAAS,IACrCurB,EAAM,gBAAgB,MAAM,KAE5BA,EAAM,gBAAgB,OAAO,GAC7BA,EAAM,gBAAgB,MAAM,GAC5BA,EAAM,gBAAgB,QAAQ;AAAA,IAChC,CACD;AAAA,EAAA;AAAA,EAGH,SAAS;AACA,WAAAh0C;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAAA;AAMX;AAhCqB+zC,GACH,SAAS3zC,EAAUC,EAAM;AADtB0zC,KAArBxzC,GAAA;AAAA,EADCG,EAAc,iBAAiB;AAAA,GACXqzC,EAAA;;;;;;;ACWA,IAAAE,KAArB,cAA+C1uD,EAAW;AAAA,EAGxD,SAAS;AACA,WAAAya;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,iBAAiB;AAAA,MAC5B,wBAAwB,KAAK,aAAa,OAAO;AAAA,MACjD,uBAAuB,KAAK,aAAa,MAAM;AAAA,MAC/C,yBAAyB,KAAK,aAAa,QAAQ;AAAA,IAAA,CACpD,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAQV;AAnBqBmwD,GACH,SAAS7zC,EAAUC,EAAM;AADtB4zC,KAArB1zC,GAAA;AAAA,EADCG,EAAc,sBAAsB;AAAA,GAChBuzC,EAAA;;;;;;;ACkBA,IAAAC,KAArB,cAA2C3uD,EAAW;AAAA,EAAtD,cAAA;AAAA,UAAA,GAAA,SAAA,GAC6C,KAAA,eAAA,IACE,KAAA,iBAAA,GACP,KAAA,UAAA,SACA,KAAA,UAAA,SACH,KAAA,OAAA,GACE,KAAA,SAAA;AAAA,EAAA;AAAA,EAI7B,WAAqB;AACpB,WAAA,MAAM,KAAK,EAAE,QAAQ,MAAM,CAACvB,GAAGtB,MAAMA,CAAC;AAAA,EAAA;AAAA,EAGvC,aAAuB;AAC7B,UAAMwY,IAAU,CAAC;AACjB,aAASxY,IAAI,GAAGA,IAAI,IAAIA,KAAK,KAAK;AAChC,MAAAwY,EAAQ,KAAKxY,CAAC;AAET,WAAAwY;AAAA,EAAA;AAAA,EAGD,eAAei5C,GAAcC,GAAyB;AAC5D,UAAMC,IAAO,GAAGF,EAAK,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC,IAAIC,EAAO,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC;AACtF,WAAOC,IAAO,KAAK,WAAWA,IAAO,KAAK;AAAA,EAAA;AAAA,EAGpC,iBAAiBF,GAAc;AACrC,SAAK,eAAeA,GACpB,KAAK,cAAc,GACnB,KAAK,WAAW;AAAA,EAAA;AAAA,EAGV,mBAAmBC,GAAgB;AACzC,SAAK,iBAAiBA,GACtB,KAAK,cAAc,GACnB,KAAK,WAAW;AAAA,EAAA;AAAA,EAGV,aAAa;AACnB,SAAK,KAAK,cAAc;AAAA,MACtB,MAAM,KAAK;AAAA,MACX,QAAQ,KAAK;AAAA,IAAA,CACd;AAAA,EAAA;AAAA,EAGK,WAAWD,GAAsB;AAGvC,WAFmB10C,GAAwB,KAAK,MAAM,MAEnC,QACV00C,EAAK,SAAA,EAAW,SAAS,GAAG,GAAG,IAIpCA,MAAS,IAAU,UACnBA,MAAS,KAAW,UACpBA,IAAO,KAAW,GAAGA,IAAO,EAAE,QAC3B,GAAGA,CAAI;AAAA,EAAA;AAAA,EAGR,aAAaC,GAAwB;AAC3C,WAAOA,EAAO,SAAA,EAAW,SAAS,GAAG,GAAG;AAAA,EAAA;AAAA,EAGnC,uBAAuB;AtKhHhC,QAAA/wD,GAAAC;AsKkHI,UAAMgxD,KAAajxD,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc;AAClD,QAAIixD,GAAY;AACR,YAAAC,IAAcD,EAAW,iBAAiB,eAAe,GACzDE,IAAqB,MAAM,KAAKD,CAAW,EAAE;AAAA,QACjD,CAAAE,MAAA;AtKtHR,cAAApxD;AsKuHU,mBAAAA,IAAAoxD,EAAO,gBAAP,gBAAApxD,EAAoB,YAAW,KAAK,WAAW,KAAK,YAAY;AAAA;AAAA,MACpE;AAEA,MAAImxD,KACFA,EAAmB,eAAe;AAAA,QAChC,UAAU;AAAA,QACV,OAAO;AAAA,QACP,QAAQ;AAAA,MAAA,CACT;AAAA,IACH;AAIF,UAAME,KAAepxD,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc;AACpD,QAAIoxD,GAAc;AACV,YAAAC,IAAgBD,EAAa,iBAAiB,eAAe,GAC7DE,IAAuB,MAAM,KAAKD,CAAa,EAAE;AAAA,QACrD,CAAAF,MAAA;AtKxIR,cAAApxD;AsKyIU,mBAAAA,IAAAoxD,EAAO,gBAAP,gBAAApxD,EAAoB,YAAW,KAAK,aAAa,KAAK,cAAc;AAAA;AAAA,MACxE;AAEA,MAAIuxD,KACFA,EAAqB,eAAe;AAAA,QAClC,UAAU;AAAA,QACV,OAAO;AAAA,QACP,QAAQ;AAAA,MAAA,CACT;AAAA,IACH;AAAA,EACF;AAAA,EAGO,aAAaltC,GAAyC;AAC7D,UAAM,aAAaA,CAAiB,GAEpC,sBAAsB,MAAM;AAC1B,WAAK,qBAAqB;AAAA,IAAA,CAC3B;AAAA,EAAA;AAAA,EAGM,QAAQA,GAAyC;AACxD,UAAM,QAAQA,CAAiB,IAI7BA,EAAkB,IAAI,cAAc,KACpCA,EAAkB,IAAI,gBAAgB,MAEtC,sBAAsB,MAAM;AAC1B,WAAK,qBAAqB;AAAA,IAAA,CAC3B;AAAA,EACH;AAAA,EAGF,SAAS;AACA,WAAA1H;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAKM7d,EAAE,mBAAmB;AAAA,MACtB,KAAK,KAAK;AAAA,IAAA,CACX,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAOF,KAAK,SAAA,EAAW,IAAI,CAAQgyD,MAAA;AAC5B,YAAM1lC,IAAa,KAAK,eAAe0lC,GAAM,KAAK,cAAc,GAC1DjW,IAAaiW,MAAS,KAAK;AAC1B,aAAAn0C;AAAAA;AAAAA;AAAAA,4BAGOk+B,CAAU;AAAA;AAAA,8BAERzvB,CAAU;AAAA,2BACb,MAAM,KAAK,iBAAiB0lC,CAAI,CAAC;AAAA,oBACxC,KAAK,WAAWA,CAAI,CAAC;AAAA;AAAA;AAAA,IAAA,CAG5B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAOGhyD,EAAE,qBAAqB;AAAA,MACxB,KAAK,KAAK;AAAA,IAAA,CACX,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAOF,KAAK,WAAA,EAAa,IAAI,CAAUiyD,MAAA;AAChC,YAAM3lC,IAAa,KAAK,eAAe,KAAK,cAAc2lC,CAAM,GAC1DlW,IAAakW,MAAW,KAAK;AAC5B,aAAAp0C;AAAAA;AAAAA;AAAAA,4BAGOk+B,CAAU;AAAA;AAAA,8BAERzvB,CAAU;AAAA,2BACb,MAAM,KAAK,mBAAmB2lC,CAAM,CAAC;AAAA,oBAC5C,KAAK,aAAaA,CAAM,CAAC;AAAA;AAAA;AAAA,IAAA,CAGhC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAMd;AA3LqBF,GAQH,SAAS9zC,EAAUC,EAAM;AAPbE,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GADP0zC,GACS,WAAA,gBAAA,CAAA;AACA3zC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAFP0zC,GAES,WAAA,kBAAA,CAAA;AACA3zC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAHP0zC,GAGS,WAAA,WAAA,CAAA;AACA3zC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAJP0zC,GAIS,WAAA,WAAA,CAAA;AACA3zC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GALP0zC,GAKS,WAAA,QAAA,CAAA;AACA3zC,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GANP0zC,GAMS,WAAA,UAAA,CAAA;AANTA,KAArB3zC,GAAA;AAAA,EADCG,EAAc,kBAAkB;AAAA,GACZwzC,EAAA;;;;;;;ACuDA,IAAAW,KAArB,cAA6CzqC,GAAmB;AAAA,EAAhE,cAAA;AAAA,UAAA,GAAA,SAAA,GAoBwC,KAAA,UAAA,SAMA,KAAA,UAAA,SAMH,KAAA,OAAA,GAKsB,KAAA,YAAA,gBAGJ,KAAA,SAAA,IAGN,KAAA,kBAAA,IAGM,KAAA,wBAAA,IAMJ,KAAA,UAAA,IAMZ,KAAA,SAAA,SAGc,KAAA,cAAA,QAMc,KAAA,mBAAA,SAKrC,KAAA,SAAiBzL,EAAM,OAAO,GAGV,KAAA,mBAAA,IAEvC,KAAQ,gBAAyB,IAsKzB,KAAA,0BAA0B,CAAC/Y,MAAsB;AAC1D,YAAAwB,IAAOxB,EAAM,aAAa;AAChC,MAAI,QAAQ,CAACwB,EAAK,SAAS,IAAI,KAC7B,KAAK,eAAe;AAAA,IAExB,GAEiB,KAAA,cAAc,CAACxB,MAAsB;AACpD,YAAMkqB,IAAQlqB,EAAM;AAEhB,UAAA,CAACkqB,EAAM;AACJ,aAAA,SAAS,QAAW,IAAO,EAAI;AAAA,eAEhC,KAAK,gBAAgB;AACvB,cAAMukC,IAAO11C,EAAM,cAAcmR,EAAM,KAAK,EAAE;AACzC,aAAA,SAASukC,GAAM,EAAK,GACzB,KAAK,KAAK,kBAAkB;AAAA,UAC1B,OAAOvkC,EAAM;AAAA,UACb,MAAM;AAAA,UACN,QAAQukC,EAAK,OAAO;AAAA,UACpB,MAAMA,EAAK,KAAK;AAAA,QAAA,CACjB;AAAA,MAAA;AAED,aAAK,SAAS,QAAW,IAAO,KAAK,qBAAqB,GAC1D,KAAK,KAAK,oBAAoB;AAAA,UAC5B,OAAOvkC,EAAM;AAAA,UACb,MAAM;AAAA,UACN,MAAMA,EAAM,MAAM,MAAM,GAAG,EAAE,CAAC;AAAA,UAC9B,QAAQA,EAAM,MAAM,MAAM,GAAG,EAAE,CAAC;AAAA,QAAA,CACjC;AAIL,MAAI,KAAK,mBAAmB,CAAC,KAAK,UAChC,KAAK,eAAe,GAGtB,KAAK,KAAK,aAAa,EAAE,OAAOA,EAAM,OAAO;AAAA,IAC/C,GAEiB,KAAA,gBAAgB,CAAOlqB,MAAyBlC,EAAA;AAC3D,MAAAkC,EAAM,QAAQ,UAKhBA,EAAM,QAAQ,WACdA,EAAM,QAAQ,eACdA,EAAM,QAAQ,eAEdA,EAAM,eAAe,GACrBA,EAAM,gBAAgB,GAEjB,KAAK,SAGR,KAAK,eAAe,IAFpB,KAAK,eAAe;AAAA,IAK1B,IAMA,KAAiB,cAAc,MAAM;AAC/B,MAAC,KAAK,SAGR,KAAK,eAAe,IAFpB,KAAK,eAAe;AAAA,IAIxB,GAEA,KAAiB,mBAAmB,MAAM;AACpC,MAAC,KAAK,aACR,KAAK,eAAe,GAEpB,KAAK,aAAa,MAAM,GACxB,KAAK,YAAY,GAEjB,KAAK,eAAe,GAEpB,KAAK,KAAK,WAAW;AAAA,IAEzB,GAEiB,KAAA,mBAAmB,CAACA,MAAsC;AACzE,YAAM,EAAE,MAAAuuD,GAAM,QAAAC,EAAO,IAAIxuD,EAAM,QACzByuD,IAAO11C,EAAA,EAAQ,KAAKw1C,CAAI,EAAE,OAAOC,CAAM,EAAE,OAAO,CAAC,EAAE,YAAY,CAAC;AACjE,WAAA,SAASC,GAAM,IAAM,EAAI;AAAA,IAChC,GAyBA,KAAiB,cAAc,MAAM;AACnC,WAAK,KAAK,WAAW;AAAA,IACvB,GAEA,KAAiB,aAAa,MAAM;AAClC,WAAK,KAAK,UAAU;AAAA,IACtB,GAEA,KAAiB,oBAAoB,MAAM;AAEzC,MAAI,KAAK,YAEP,sBAAsB,MAAM;AAC1B,aAAK,SAAS,qBAAqB;AAAA,MAAA,CACpC;AAAA,IAEL;AAAA,EAAA;AAAA;AAAA,EA9WA,IAAY,YAA+B;AACzC,WAAO,KAAK;AAAA,EAAA;AAAA,EAGd,IAAY,UAAU3uD,GAA0B;AAC9C,SAAK,aAAaA;AAAA,EAAA;AAAA,EAoEV,aACRua,GACM;AACN,UAAM,aAAaA,CAAkB,GAGrC,KAAK,cAAc,GAEf,KAAK,cACF,KAAA,aAAa,QAAQ,KAAK,kBAAkB,GACjD,KAAK,wBAAwB;AAAA,EAC/B;AAAA;AAAA,EAIF,yBAAyBxa,GAAc8jB,GAAe9hB,GAAe;AAC7D,UAAA,yBAAyBhC,GAAM8jB,GAAU9hB,CAAQ,GAEnDhC,MAAS,WAAWgC,MAAa8hB,MACnC,KAAK,cAAc,GACnB,KAAK,cAAc;AAAA,EACrB;AAAA;AAAA,EAIM,gBAAgB;AACtB,IAAI,KAAK,QACP,KAAK,aAAa5K,EAAM,cAAc,KAAK,KAAK,EAAE,IAElD,KAAK,aAAa;AAAA,EACpB;AAAA,EAGQ,QACRsB,GACM;AACN,UAAM,QAAQA,CAAkB,GAE5BA,EAAmB,IAAI,OAAO,MAC5B,KAAK,kBACF,KAAA,aAAa,QAAQ,KAAK,kBAAkB,GACjD,KAAK,wBAAwB,IAE/B,KAAK,YAAY,IAGfA,EAAmB,IAAI,MAAM,KAAK,KAAK,aACpC,KAAA,SAAS,OAAO,KAAK,OAGxBA,EAAmB,IAAI,SAAS,KAAK,KAAK,aACvC,KAAA,SAAS,UAAU,KAAK,UAG3BA,EAAmB,IAAI,SAAS,KAAK,KAAK,aACvC,KAAA,SAAS,UAAU,KAAK,UAG3BA,EAAmB,IAAI,QAAQ,KAAK,KAAK,aACtC,KAAA,SAAS,SAAS,KAAK;AAAA,EAC9B;AAAA,EAGM,0BAA0B;AAC5B,IAAA,KAAK,aAAa,KAAK,aACzB,KAAK,SAAS,eAAe,KAAK,UAAU,KAAK,GACjD,KAAK,SAAS,iBAAiB,KAAK,UAAU,OAAO;AAAA,EACvD;AAAA,EAGM,eAAuB;AAC7B,WAAO,KAAK,YAAY,KAAK,UAAU,KAAS,IAAA;AAAA,EAAA;AAAA,EAG1C,iBAAyB;AAC/B,WAAO,KAAK,YAAY,KAAK,UAAU,OAAW,IAAA;AAAA,EAAA;AAAA,EAGpD,oBAAoB;AACd,WAAC,KAAK,YAIHtB,EAAM,KAAK,SAAS,EAAE,OAAO,KAAK,MAAM,IAHtC;AAAA,EAGsC;AAAA,EAGjD,YAAYjZ,GAAe;AAOzB,QANI,CAACA,KAMD,CADc,oCACH,KAAKA,CAAK;AAChB,aAAA;AAIT,UAAMovD,IAAYn2C,EAAM,cAAcjZ,CAAK,EAAE,GACvCqvD,IAAUp2C,EAAM,cAAc,KAAK,OAAO,EAAE,GAC5Cq2C,IAAUr2C,EAAM,cAAc,KAAK,OAAO,EAAE;AAElD,WACEm2C,EAAU,OAAOC,CAAO,KACvBD,EAAU,QAAQC,CAAO,KAAKD,EAAU,SAASE,CAAO,KACzDF,EAAU,OAAOE,CAAO;AAAA,EAAA;AAAA,EAI5B,eAAe;AACT,WAAC,KAAK,YAIH,KAAK,aAAa,IAHhB;AAAA,EAGgB;AAAA,EAG3B,eAAe;AACb,WAAO,KAAK,YAAY,KAAK,aAAa,KAAK;AAAA,EAAA;AAAA,EAGjD,SACEtvD,GACA0hD,IAAyB,IACzBC,IAAiC,IACjC;AvKrTJ,QAAAhkD,GAAAC,GAAAE,GAAAC;AuKsTI,SAAK,aAAaiC,GAElB,KAAK,QAAQA,IAAQA,EAAM,OAAO,OAAO,IAAI,MAEzC0hD,KACF,KAAK,gBAAgB,IAChB,KAAA,aAAa,QAAQ,KAAK,kBAAkB,GACjD,KAAK,wBAAwB,KAE7B,KAAK,gBAAgB,IAGvB,KAAK,YAAY,GAEb,KAAK,oBACP,KAAK,eAAe,GAGlBC,MACF,KAAK,KAAK,cAAc;AAAA,MACtB,OAAO,KAAK;AAAA,MACZ,OAAMhkD,IAAA,KAAK,cAAL,gBAAAA,EAAgB;AAAA,MACtB,SAAQC,IAAA,KAAK,cAAL,gBAAAA,EAAgB;AAAA,IAAO,CAChC,GACD,KAAK,KAAK,kBAAkB;AAAA,MAC1B,OAAO,KAAK,aAAa;AAAA,MACzB,OAAME,IAAA,KAAK,cAAL,gBAAAA,EAAgB;AAAA,MACtB,SAAQC,IAAA,KAAK,cAAL,gBAAAA,EAAgB;AAAA,IAAO,CAChC;AAAA,EACH;AAAA,EAGI,iBAAiB;AAAA,WAAAC,EAAA;AAChB,WAAA,SAAS,QAAW,IAAM,EAAI;AAAA,IAAA;AAAA;AAAA,EAgErC,IAAW,eAAe;AACxB,WAAO,KAAK;AAAA,EAAA;AAAA,EA8BR,iBAAiB;AAAA,WAAAA,EAAA;AACrB,MAAI,KAAK,YAAY,KAAK,YAAY,KAAK,WAI3C,KAAK,SAAS,IAEL,SAAA,iBAAiB,aAAa,KAAK,uBAAuB;AAAA,IAAA;AAAA;AAAA,EAG/D,iBAAiB;AAAA,WAAAA,EAAA;AACjB,MAAC,KAAK,WAIV,KAAK,SAAS,IAEL,SAAA,oBAAoB,aAAa,KAAK,uBAAuB,GAEtE,MAAM,KAAK,gBACX,KAAK,MAAM;AAAA,IAAA;AAAA;AAAA;AAAA,EAsBb,cAAc;AACL,WAAA,CAAC,CAAC,KAAK;AAAA,EAAA;AAAA,EAGhB,IAAI,WAA0B;AACxB,WAAA,KAAK,UAAU,WACV,KAAK,UAAU,WAEfsmB,GAAuB;AAAA,MAC5B,cAAc,KAAK,YAAY,CAAC,KAAK,YAAY;AAAA,MACjD,iBAAiB,CAAC,KAAK,aAAa;AAAA,IAAA,CACrC;AAAA,EACH;AAAA,EAGF,gBAAgB;AACd,WAAO,KAAK,YAAY,KAAK,YAAY,KAAK,KAAK,aAAa;AAAA,EAAA;AAAA,EAGlE,iBAAiB;AACf,WAAO,KAAK,YAAY,KAAK,YAAY,KAAK,KAAK,aAAa;AAAA,EAAA;AAAA,EAGlE,cAAc;AACR,IAAC,KAAK,kBAUH,KAAA,UAAU,YAAY,EAAE,IAT7B,KAAK,UAAU;AAAA,MACb;AAAA,QACE,cAAc,KAAK,YAAY,CAAC,KAAK,YAAY;AAAA,QACjD,iBAAiB,CAAC,KAAK,aAAa;AAAA,MACtC;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAAA,EAGF;AAAA,EAGF,cAAcpkB,GAAc;AAC1B,IAAAA,EAAM,eAAe;AAAA,EAAA;AAAA,EAGvB,SAAS;AvK1gBX,QAAAvC,GAAAC;AuK2gBW,WAAA0c;AAAAA,UACD,KAAK,SACPA;AAAAA;AAAAA;AAAAA,kBAGU,KAAK,IAAI;AAAA,sBACL,KAAK,QAAQ;AAAA,sBACb,KAAK,QAAQ;AAAA,sBACb,KAAK,QAAQ;AAAA,kBACjBlc,EAAK,OAAO,CAAC;AAAA;AAAA,kBAEboc,EAAU,KAAK,KAAK,CAAC;AAAA,6BACV;AAAA,UACnB,KAAK,WACPF;AAAAA;AAAAA,oBAEY,KAAK,OAAO;AAAA;AAAA,sBAEV,KAAK,gBAAgB;AAAA;AAAA;AAAA,mBAGxB,KAAK,IAAiC;AAAA,uBAClC,KAAK,SAAS,OAAO,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA,2BAI5B,KAAK,gBAAgB;AAAA;AAAA;AAAA,0BAGtB;AAAA;AAAA,QAElB,KAAK,eACPA;AAAAA;AAAAA;AAAAA;AAAAA,iBAIWE,EAAU,KAAK,IAA6B,CAAC;AAAA;AAAA,YAElD,KAAK,WAAW;AAAA;AAAA,OAErB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMa,KAAK,MAAM;AAAA,sBACT,EAAK;AAAA,sBACL,KAAK,SAAS;AAAA,6BACP,KAAK,gBAAgB;AAAA;AAAA;AAAA,wBAG1B,KAAK,iBAAiB;AAAA;AAAA;AAAA;AAAA,qBAIzBpc,EAAK,UAAU,WAAW,KAAK,IAAI,IAAI;AAAA,MAC9C,oBAAoB,KAAK;AAAA,MACzB,oBAAoB,KAAK;AAAA,MACzB,kBAAkB,KAAK;AAAA,MACvB,mBAAmB,KAAK;AAAA,MACxB,mBAAmB,KAAK,WAAW;AAAA,MACnC,iBAAiB,KAAK,WAAW;AAAA,IAAA,CAClC,CAAC;AAAA;AAAA;AAAA;AAAA,uBAISA,EAAK,SAAS,UAAU,KAAK,IAAI,IAAI;AAAA,MAC5C,mBAAmB,KAAK;AAAA,MACxB,mBAAmB,KAAK;AAAA,IAAA,CACzB,CAAC;AAAA;AAAA,sBAEM,KAAK,kBAAmB,CAAA;AAAA,8BAChB,KAAK,MAAM;AAAA;AAAA,gCAEToc,EAAU,KAAK,QAAQ,UAAUkH,CAAO,CAAC;AAAA,kCACvClH;AAAAA,MAClB,KAAK,cAAc,gBAAgBkH;AAAAA,IAAA,CACpC,IAAIlH,EAAU,KAAK,WAAW,aAAakH,CAAO,CAAC;AAAA,8BACpC,KAAK,QAAQ;AAAA;AAAA;AAAA,0BAGjB,KAAK,QAAQ;AAAA,0BACb,KAAK,QAAQ;AAAA,2BACZ,KAAK,SAAS;AAAA,0BACf,KAAK,QAAQ;AAAA,6BACV,KAAK,YAAmB;AAAA,4BACzBlH,GAAU7c,IAAA,KAAK,gBAAL,OAAAA,IAAoB,EAAE,CAAC;AAAA,sBACvC,KAAK,UAAU;AAAA,uBACd,KAAK,WAAW;AAAA,uBAChB,KAAK,WAAW;AAAA,yBACd,KAAK,aAAa;AAAA,yBAClB,KAAK,aAAa;AAAA,uBACpB,KAAK,WAAW;AAAA;AAAA,uBAEhBS,EAAK,iBAAiB,kBAAkB,KAAK,IAAI,IAAI;AAAA,MAC5D,2BAA2B,KAAK;AAAA,MAChC,2BAA2B,KAAK;AAAA,MAChC,yBAAyB,KAAK;AAAA,IAAA,CAC/B,CAAC;AAAA,gBACA,KAAK,gBAAgB,UAAU,CAAC,KAAK,WACnCkc,gBAAmBlc,EAAK,YAAY,CAAC;AAAA;AAAA;AAAA;AAAA,mCAIpBoc;AAAAA,OACX5c,IAAA,KAAK,yBAAL,OAAAA,IAA6Bmb,GAAU,OAAO;AAAA,IAC/C,CAAA;AAAA,kCACW,KAAK,QAAQ;AAAA,+BAChB,KAAK,gBAAgB;AAAA,4BAElC2I,CAAO;AAAA;AAAA,yBAEAtjB,EAAK,kBAAkB;AAAA,MAC9B,2BAA2B,KAAK;AAAA,IAAA,CACjC,CAAC;AAAA,kBACA,KAAK,UACHkc,iEACAA;AAAAA;AAAAA;AAAAA,8BAGUlc,EAAK,WAAW,CAAC;AAAA,+BAChB,KAAK,WAAW,2BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAO9C,KAAK,aAAc,CAAA;AAAA,8BACjB,KAAK,eAAgB,CAAA;AAAA,uBAC5B,KAAK,OAAO;AAAA,uBACZ,KAAK,OAAO;AAAA,oBACf,KAAK,IAAI;AAAA,sBACP,KAAK,MAAM;AAAA,0BACP,CAAC8B,MAAsC;AACnD,MAAAA,EAAM,gBAAgB,GACtBA,EAAM,eAAe,GACrB,KAAK,iBAAiBA,CAAK;AAAA,IAAA,CAC5B;AAAA;AAAA;AAAA,UAGH,KAAK,YACPoa;AAAAA;AAAAA,yBAEiBE,EAAU,KAAK,YAAY,CAAC;AAAA,0BAC3BA,EAAU,KAAK,IAA0B,CAAC;AAAA;AAAA,YAExD,KAAK,QAAQ;AAAA,2BACE;AAAA;AAAA,EAAA;AAG3B;AA5jBqB20C,GA+EH,SAASz0C,EAAUC,EAAM;AA9EPE,GAAA;AAAA,EAAjC7E,GAAM,QAAQ;AAAA,GADIm5C,GACe,WAAA,gBAAA,CAAA;AACIt0C,GAAA;AAAA,EAArC7E,GAAM,YAAY;AAAA,GAFAm5C,GAEmB,WAAA,YAAA,CAAA;AAkBVt0C,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GApBPq0C,GAoBS,WAAA,WAAA,CAAA;AAMAt0C,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA1BPq0C,GA0BS,WAAA,WAAA,CAAA;AAMAt0C,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhCPq0C,GAgCS,WAAA,QAAA,CAAA;AAKCt0C,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GArCRq0C,GAqCU,WAAA,aAAA,CAAA;AAGet0C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAxCvBq0C,GAwCyB,WAAA,UAAA,CAAA;AAGft0C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA3CRq0C,GA2CU,WAAA,mBAAA,CAAA;AAGAt0C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA9CRq0C,GA8CU,WAAA,yBAAA,CAAA;AAGjBt0C,GAAA;AAAA,EAAXC,EAAS;AAAA,GAjDSq0C,GAiDP,WAAA,eAAA,CAAA;AAGiBt0C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GApDRq0C,GAoDU,WAAA,WAAA,CAAA;AAMDt0C,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA1DPq0C,GA0DS,WAAA,UAAA,CAAA;AAGAt0C,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA7DPq0C,GA6DS,WAAA,eAAA,CAAA;AAGAt0C,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhEPq0C,GAgES,WAAA,wBAAA,CAAA;AAGAt0C,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAnEPq0C,GAmES,WAAA,oBAAA,CAAA;AAKAt0C,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAxEPq0C,GAwES,WAAA,UAAA,CAAA;AAGCt0C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA3ERq0C,GA2EU,WAAA,oBAAA,CAAA;AAEZt0C,GAAA;AAAA,EAAhBgH,EAAM;AAAA,GA7EYstC,GA6EF,WAAA,iBAAA,CAAA;AA7EEA,KAArBt0C,GAAA;AAAA,EADCG,EAAc,mBAAmB;AAAA,GACbm0C,EAAA;;;;;;;ACjErB,IAAqBI,KAArB,MAAAlmD,UAAsCkb,GAAW1kB,CAAU,EAAE;AAAA,EA0C3D,cAAc;AACN,UAAA,GAzCmB,KAAA,OAAA,IAGM,KAAA,aAAA,oBAGU,KAAA,uBAAA,oBAEhB,KAAA,YAAsB,CAAC,GAAG,KAAK,MAAM,KAAK,MAAM,CAAC,GAGtB,KAAA,kBAAA,GAGA,KAAA,kBAAA,GAGL,KAAA,WAAA,IASjD,KAAQ,aAAuB,CAAC,GAExB,KAAA,wCAOA,IAAI,GACZ,KAAQ,iBAAgC,MAoExC,KAAiB,WAAW,MAAM;AAChC,UACE,KAAK,YACL,KAAK,SAAS,SAAS,KACvB,KAAK,MAAM,OAAO,UAAU,OAAO,WAAW,MAC5C,SAAS,KAAK,cAChB;AACA,cAAM2vD,IAAQ,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC,GAC9CC,IAAO,KAAK,WAAY,cAAc,WAAWD,EAAM,EAAE,GAAG;AAClE,QAAIC,KACG,KAAA,gBAAgBA,GAA2BA,CAAmB;AAAA,MACrE;AAAA,IAEJ,GA+DA,KAAiB,aAAa,MAAYzxD,EAAA;AACxC,YAAMuqC,IAAqB,CAAC;AAE5B,mBAAM,KAAK,SAAS,QAAQ,CAAOvlB,GAAIhd,MAAUhI,EAAA;AxK/NrD,YAAAL,GAAAC,GAAAE;AwKgOM,cAAOklB,EAAW;AAElB,cAAM0sC,IACJ1sC,EAAG,aAAa,WAAW,OAC3BrlB,IAAAqlB,EAAG,cAAH,gBAAArlB,EAAc,aACdC,IAAAolB,EAAG,gBAAH,gBAAAplB,EAAgB,WAChB,IACIqmB,IACJjB,EAAG,QACHllB,IAAAklB,EAAG,cAAH,gBAAAllB,EAAc,cAAc,MAAM,KAAK,KAAK,SAC5C4xD,EAAY,YAAY,EAAE,MAAM,GAAG,EAAE,KAAK,GAAG;AAE3C,YAAA,CAAC1sC,EAAG,MAAMiB,GAAI;AAChB,cAAInX,IAAQ;AAML,eAJH,KAAK,SAAS,KAAK,OAAU6iD,EAAO,OAAO1rC,CAAE,KAC/CnX,KAGK,KAAK,SAAS,KAAK,CAAU6iD,MAAAA,EAAO,OAAO,GAAG1rC,CAAE,IAAInX,CAAK,EAAE;AAChE,YAAAA;AAGF,UAAIA,MAAU,IACTkW,EAAA,aAAa,MAAMiB,CAAE,IAExBjB,EAAG,aAAa,MAAM,GAAGiB,CAAE,IAAInX,CAAK,EAAE;AAAA,QACxC;AAGE,YAAA8iD,IAAQ,KAAK,WAAW;AAAA,UAC1B,GAAG5sC,EAAG,QAAQ,YAAY,CAAC,IAAInC,EAAW;AAAA,QAC5C;AAEA,QAAI+uC,MAAU,OACZA,IAAQ,KAAK,WAAW;AAAA,UACtB,6BAA6B5sC,EAAG,aAAa,SAAS,CAAC;AAAA,QACzD,IAGFulB,EAAQviC,CAAK,IAAI;AAAA,UACf,IAAAie;AAAA,UACA,MAAMyrC;AAAA,UACN,OAAO,KAAK,MAAME,IAAQ,CAAC;AAAA,QAC7B;AAAA,MAAA,EACD,GAEMrnB;AAAA,IACT,IA6CiB,KAAA,mBAAmB,CAClCxJ,MACG;AAEH,MAAAA,EAAQ,QAAQ,CAASywB,MAAA;AAClB,aAAA,kBAAkB,IAAIA,EAAM,QAAuB;AAAA,UACtD,gBAAgBA,EAAM;AAAA,UACtB,mBAAmBA,EAAM;AAAA,UACzB,cAAcA,EAAM;AAAA,QAAA,CACrB;AAAA,MAAA,CACF,GAGG,KAAK,kBACP,aAAa,KAAK,cAAc,GAG7B,KAAA,iBAAiB,OAAO,WAAW,MAAM;AAC5C,aAAK,oBAAoB;AAAA,SACxB,EAAE;AAAA,IACP,GAEA,KAAiB,sBAAsB,MAAM;AACrC,YAAAK,IAAiB,OAAO,cAAc;AAC5C,UAAIC,IAAiC,MACjCC,IAAY;AAsBZ,UAnBJ,KAAK,kBAAkB,QAAQ,CAAC1tD,GAAMstD,MAAW;AAC3C,YAAA,CAACttD,EAAK,eAAgB;AAE1B,cAAM2tD,IAAqB,KAAK;AAAA,UAC9B3tD,EAAK,aAAa,MAAMA,EAAK,aAAa,SAAS,IAAIwtD;AAAA,QACzD,GAKMI,IAJoB5tD,EAAK,oBAKR2tD,IAAqB,OAAO,cAAe;AAElE,QAAIC,IAAQF,MACEA,IAAAE,GACCH,IAAAH;AAAA,MACf,CACD,GAEGG,KAAeA,EAA2B,IAAI;AAC1C,cAAAL,IAAO,KAAK,WAAY;AAAA,UAC5B,WAAYK,EAA2B,EAAE;AAAA,QAC3C;AACI,QAAAL,KAAQA,MAAS,KAAK,iBACnB,KAAA;AAAA,UACHA;AAAA,UACAK;AAAA,QACF;AAAA,MACF;AAAA,IAEJ,GArSE,KAAK,OAAO,MAEP,KAAA,YAAY,CAAC,GAAG;AAAA,EAAA;AAAA,EAGvB,IAAI,eAAe;AACjB,WAAO,KAAK;AAAA,EAAA;AAAA,EAGd,IAAI,UAAU;AACZ,WAAO,KAAK;AAAA,EAAA;AAAA,EAGd,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EAAA;AAAA,EAGd,oBAAoB;AAClB,UAAM,kBAAkB;AAExB,UAAM7vD,IAAU;AAAA,MACd,MAAM,KAAK,OAAO,SAAS,cAAc,KAAK,IAAI,IAAI;AAAA,MACtD,YAAY,KAAK;AAAA,MACjB,WAAW,KAAK;AAAA,IAClB;AAEA,SAAK,YAAY,IAAI,qBAAqB,KAAK,kBAAkBA,CAAO,GAExE,KAAK,sBAAsB,IAAI,qBAAqB,KAAK,kBAAkB/B,EAAAC,EAAA,IACtE8B,IADsE;AAAA,MAEzE,YAAY,KAAK;AAAA,IAAA,EAClB,GAEM,OAAA,iBAAiB,UAAU,KAAK,QAAQ;AAAA,EAAA;AAAA,EAGjC,aACdsa,GACe;AAAA,WAAAvc,EAAA;AACf,MAAAkpB,GAAA7d,EAAA,iBAAM,qBAAN,MAAmBkR,CAAkB,GACrC,MAAM,KAAK,WAAW;AAAA,IAAA;AAAA;AAAA,EAGlB,yBAAyBxa,GAAc8jB,GAAe9hB,GAAe;AAAA,WAAA/D,EAAA;AACnE,MAAAkpB,GAAA7d,EAAA,iBAAA,iCAAA,MAAyBtJ,GAAM8jB,GAAU9hB,CAAQ,GACvD,MAAM,KAAK,WAAW;AAAA,IAAA;AAAA;AAAA,EAGlB,QAAQigB,GAA8C;AAAA,WAAAhkB,EAAA;AAC1D,MAAAkpB,GAAA7d,EAAA,iBAAM,gBAAN,MAAc2Y,CAAiB,GAC/B,MAAM,KAAK,WAAW;AAAA,IAAA;AAAA;AAAA,EAGxB,uBAAuB;AxKvIzB,QAAArkB,GAAAC;AwKwII,UAAM,qBAAqB,GACvB,KAAK,eACPD,IAAA,KAAK,cAAL,QAAAA,EAAgB,eAChBC,IAAA,KAAK,wBAAL,QAAAA,EAA0B,cACnB,OAAA,oBAAoB,UAAU,KAAK,QAAQ;AAAA,EACpD;AAAA,EAkBI,aAAa;AAAA,WAAAI,EAAA;AxK/JrB,UAAAL,GAAAC;AwKqKI,UALA,KAAK,WAAW,KAAK;AAAA,QAClB,KAAK,kBAAsB,KAAK,kBAAT;AAAA,QACvB,KAAK,kBAAsB,KAAK,kBAAT;AAAA,MAC1B,GAEI,KAAK,SAAS,WAAW,KAAK,CAAC,KAAK;AACtC;AAGF,WAAK,SAAS,QAAQ,CAAC+xD,GAAQ3pD,MAAU;AxKzK7C,YAAArI,GAAAC;AwK0KU,QAAAoI,MAAU,KAAK,SAAS,SAAS,KAC9BrI,IAAA,KAAA,wBAAA,QAAAA,EAAqB,QAAQgyD,MAE7B/xD,IAAA,KAAA,cAAA,QAAAA,EAAW,QAAQ+xD;AAAA,MAC1B,CACD,GAEI,KAAA,SAAS,MAAM,KAAK,WAAW;AACpC,YAAMO,IAAO,KAAK,UAAU,KAAK,MAAM,GAEjCC,IAAc,SAAS,cAAc,KAAK;AACpC,MAAAA,EAAA,aAAa,QAAQ,MAAM,GAC3BA,EAAA,UAAU,IAAI,KAAK;AAE/B,YAAMpsC,IAAO;AAAA,4CAC2B,KAAK,IAAI,MAAKpmB,IAAA,KAAK,WAAL,OAAAA,IAAelB,EAAE,UAAU,CAAC;AAAA,4BAC3DmB,IAAA,KAAK,WAAL,OAAAA,IAAenB,EAAE,UAAU,CAAC,MAAMyzD,CAAI;AAIzD,MAFJC,EAAY,YAAYpsC,GAEnB,KAAK,eAEV,KAAK,WAAW,YAAY,KAAK,WAAW,WAAW,CAAC,CAAC,GACpD,KAAA,WAAW,YAAYosC,CAAW;AAAA,IAAA;AAAA;AAAA,EAGzC,WAAWC,GAAyBC,GAAwC;AAC1E,SAAK,aAAa,CAAC;AACnB,aAASrzD,IAAIozD,GAAiBpzD,KAAKqzD,GAAiBrzD,KAAK;AACvD,WAAK,WAAW,KAAK,IAAIA,CAAC,IAAI6jB,EAAW,EAAE,GAC3C,KAAK,WAAW,KAAK,8BAA8B7jB,CAAC,WAAW;AAG1D,WAAA,MAAM,KAAK,SAAS,iBAAiB,KAAK,WAAW,KAAA,CAAM,CAAC;AAAA,EAAA;AAAA,EAGrE,gBACE+jB,GACAyuC,GACA;AxKjNJ,QAAA7xD;AwKkNS,KAAAA,IAAA,KAAA,kBAAA,QAAAA,EAAe,gBAAgB,iBAC5BojB,EAAA,aAAa,gBAAgB,MAAM,GAC3C,KAAK,gBAAgBA,GAErB,KAAK,KAAK,qBAAqB;AAAA,MAC7B,cAAcA;AAAA,MACd,eAAeyuC;AAAA,IAAA,CAChB;AAAA,EAAA;AAAA,EAyDH,UAAUjnB,GAAgB;AACxB,UAAM9Z,IAAiB,CAAC;AACxB,QAAI6hC,IAA0B,CAAC,GAC3BC,IAAY;AAEZ,QAAAhoB,EAAQ,WAAW;AACd,aAAA;AAGT,UAAMioB,IAAe,MAAM;AACrB,MAAAF,EAAiB,SAAS,MAC5B7hC,EAAKA,EAAK,SAAS,CAAC,KAAK,KAAK,UAAU6hC,CAAgB;AAAA,IAE5D;AAEQ,IAAA/nB,EAAA,QAAQ,CAACprC,MAAe;AAC9B,UAAIozD,MAAc,MAAMA,IAAYpzD,EAAE,OAAO;AAC3C,QAAAmzD,EAAiB,KAAKnzD,CAAC;AACvB;AAAA,MAAA;AAGW,MAAAqzD,EAAA,GAEbD,IAAYpzD,EAAE,OACTsxB,EAAA;AAAA,QACH,aAAatxB,EAAE,EAAE,+BAA+B,KAAK,IAAI,KAAKA,EAAE,IAAI;AAAA,MACtE,GACAmzD,IAAmB,CAAC;AAAA,IAAA,CACrB,GAEYE,EAAA;AAEb,UAAMC,IAAWhiC,EACd;AAAA,MACC,CAAKzxB,MAAA,uBAAuB,oBAAoBuzD,CAAS,KAAKvzD,CAAC;AAAA,IAAA,EAEhE,KAAK,EAAE;AAEV,WAAO,cAAcoB,EAAK;AAAA,MACxB,kBAAkB,KAAK;AAAA,IAAA,CACxB,CAAC,KAAKqyD,CAAQ;AAAA,EAAA;AA8DnB;AAlVqBlB,GAwCH,SAAS70C,EAAUC,EAAM;AAtC7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAFSy0C,GAEP,WAAA,QAAA,CAAA;AAGA10C,GAAA;AAAA,EAAXC,EAAS;AAAA,GALSy0C,GAKP,WAAA,cAAA,CAAA;AAGA10C,GAAA;AAAA,EAAXC,EAAS;AAAA,GARSy0C,GAQP,WAAA,wBAAA,CAAA;AAEe10C,GAAA;AAAA,EAA1BC,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GAVNy0C,GAUQ,WAAA,aAAA,CAAA;AAGC10C,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAbPy0C,GAaS,WAAA,mBAAA,CAAA;AAGA10C,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhBPy0C,GAgBS,WAAA,mBAAA,CAAA;AAGC10C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAnBRy0C,GAmBU,WAAA,YAAA,CAAA;AAGjB10C,GAAA;AAAA,EAAXC,EAAS;AAAA,GAtBSy0C,GAsBP,WAAA,UAAA,CAAA;AAtBOA,KAArB10C,GAAA;AAAA,EADCG,EAAc,YAAY;AAAA,GACNu0C,EAAA;;;;;;;ACkBA,IAAAmB,KAArB,cAA+ChsC,GAAmB;AAAA,EAAlE,cAAA;AAAA,UAAA,GAAA,SAAA,GAIkD,KAAA,OAAA,MAGK,KAAA,SAAA,IAKH,KAAA,QAAA,UAEP,KAAA,eAAA;AAAA,EAAA;AAAA,EAI3C,IAAI,eAAkC;AzK1ExC,QAAA/mB;AyK2EW,YAAAA,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc;AAAA,EAAQ;AAAA,EAGtC,aAAa4c,GAA0C;AzK9EnE,QAAA5c;AyKiFQ,QAFJ,MAAM,aAAa4c,CAAkB,GAEjC,KAAK,iBAAiB,QAAQ;AAChC,YAAMwH,KAAOpkB,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc;AACtC,MAAAokB,KAAA,QAAAA,EAAA,mBAAmB,QAAQ,CAAMiB,MAAA;AAClC,QAAAA,EAAA,aAAa,QAAQ,KAAK,IAAI;AAAA,MAAA;AAAA,IAClC;AAAA,EACH;AAAA,EAGM,cAAoB;AAC1B,IAAI,KAAK;AAAA,EAET;AAAA,EAGF,SAAS;AACA,WAAA1I;AAAAA;AAAAA;AAAAA,oBAGS,KAAK,QAAQ;AAAA,wBACT,KAAK,QAAQ;AAAA,qBAChBE,EAAU,KAAK,SAAS,KAAK,EAAE;AAAA,uBAC7B,KAAK,MAAM;AAAA,qBACb,KAAK,SAAS;AAAA;AAAA,gBAEnBpc;AAAA,MACN;AAAA,MACA,kBAAkB,KAAK,IAAI;AAAA,MAC3B,kBAAkB,KAAK,KAAK;AAAA,MAC5B;AAAA,QACE,yBAAyB,KAAK;AAAA,QAC9B,2BAA2B,KAAK;AAAA,MAAA;AAAA,IAEnC,CAAA;AAAA,iBACQ,KAAK,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAMjC;AAhEqBsyD,GAgBH,SAASh2C,EAAUC,EAAM;AAZZE,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAJR41C,GAIU,WAAA,QAAA,CAAA;AAGe71C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAPvB41C,GAOyB,WAAA,UAAA,CAAA;AAKf71C,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAZR41C,GAYU,WAAA,SAAA,CAAA;AAED71C,GAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAdP41C,GAcS,WAAA,gBAAA,CAAA;AAdTA,KAArB71C,GAAA;AAAA,EADCG,EAAc,sBAAsB;AAAA,GAChB01C,EAAA;;;;;;;AC3CrB,MAAMC,KAAiB;AAyBF,IAAAC,KAArB,cAA0C/wD,EAAW;AAAA,EAArD,cAAA;AAAA,UAAA,GAAA,SAAA,GAS2D,KAAA,YAAA,UAGH,KAAA,SAAA,IAKrB,KAAA,OAAA,WAGsB,KAAA,UAAA,IAMd,KAAA,mBAAA,YAEzC,KAAQ,WAAmB,eAoBU,KAAA,mBAAA,IAsDrC,KAAiB,aAAa,MAAM;AAC9B,MAAA,KAAK,WAAW,OAAO,KACzB,KAAK,YAAY;AAAA,IAErB,GAEA,KAAiB,cAAc,MAAM;AAC/B,MAAA,KAAK,WAAW,OAAO,MACpB,KAAA,UAAU,CAAC,KAAK,WAAW,OAAO,IACnC,KAAK,YAAA,IACL,KAAK,YAAY;AAAA,IAEzB,GAEA,KAAiB,cAAc,MAAM;AAC/B,MAAA,KAAK,WAAW,OAAO,KACzB,KAAK,YAAY;AAAA,IAErB,GAEA,KAAiB,kBAAkB,MAAM;AACnC,MAAA,KAAK,WAAW,OAAO,KACzB,KAAK,YAAY;AAAA,IAErB,GAEA,KAAiB,iBAAiB,MAAM;AAClC,MAAC,KAAK,oBACJ,KAAK,WAAW,OAAO,KACzB,KAAK,YAAY;AAAA,IAGvB,GAEiB,KAAA,aAAa,CAACgxD,MACZ,KAAK,QAAQ,MAAM,GAAG,EACvB,SAASA,CAAW;AAAA,EACtC;AAAA,EA3GA,IAAI,QAAQ7wD,GAAe;AACzB,SAAK,WAAWA;AAAA,EAAA;AAAA,EAElB,IAAI,UAAU;AACR,WAAC,KAAK,OAIN,KAAK,SAAS,WACT,UAGF,KAAK,WAPH;AAAA,EAOG;AAAA,EAMd,oBAAoB;AAClB,UAAM,kBAAkB,GACxB,KAAK,iBAAiB,QAAQ,KAAK,YAAY,EAAI,GACnD,KAAK,iBAAiB,SAAS,KAAK,aAAa,EAAI,GAChD,KAAA,iBAAiB,SAAS,KAAK,WAAW,GAC1C,KAAA,iBAAiB,aAAa,KAAK,eAAe,GAClD,KAAA,iBAAiB,YAAY,KAAK,cAAc;AAAA,EAAA;AAAA,EAGvD,uBAAuB;AACrB,SAAK,oBAAoB,QAAQ,KAAK,YAAY,EAAI,GACtD,KAAK,oBAAoB,SAAS,KAAK,aAAa,EAAI,GACnD,KAAA,oBAAoB,SAAS,KAAK,WAAW,GAC7C,KAAA,oBAAoB,aAAa,KAAK,eAAe,GACrD,KAAA,oBAAoB,YAAY,KAAK,cAAc,GACxD,MAAM,qBAAqB;AAAA,EAAA;AAAA,EAGnB,aACRua,GACM;AACN,UAAM,aAAaA,CAAkB,GAEhC,KAAA,aAAa,QAAQ,QAAQ;AAAA,EAAA;AAAA,EAG9B,cAAc;AAAA,WAAAvc,EAAA;AAClB,UAAI,KAAK;AACP;AAGF,WAAK,SAAS;AAER,YAAA0oD,IAAU,KAAK,cAAc,kBAAkB;AACrD,MAAIA,KACMA,EAAA,aAAa,iBAAiB,MAAM;AAAA,IAC9C;AAAA;AAAA,EAGI,cAAc;AAAA,WAAA1oD,EAAA;AACd,UAAA,CAAC,KAAK;AACR;AAGF,WAAK,SAAS;AAER,YAAA0oD,IAAU,KAAK,cAAc,kBAAkB;AACrD,MAAIA,KACMA,EAAA,aAAa,iBAAiB,OAAO;AAAA,IAC/C;AAAA;AAAA,EA0CF,SAAS;AACA,WAAApsC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,gBASKlc,EAAK,WAAW;AAAA,MACtB,iBAAiB,KAAK;AAAA,MACtB,oBAAoB,KAAK,SAAS;AAAA,MAClC,mBAAmB,KAAK,SAAS;AAAA,IAAA,CAClC,CAAC;AAAA,kBACQ,KAAK,MAAM;AAAA,oBACT,KAAK,SAAS;AAAA,iBACjBuyD,EAAc;AAAA,2BACJ,KAAK,gBAAgB;AAAA,oBAC5B,CAAC,KAAK,OAAO;AAAA,sBACX,KAAK,WAAW;AAAA,sBAChB,KAAK,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAM5B,KAAK,UAAUr2C,IAAO,KAAK,OAAO,KAAKA,gBAAmB;AAAA;AAAA;AAAA,EAAA;AAIpE;AA5KqBs2C,GACH,SAASl2C,EAAUC,EAAM;AAG7BE,GAAA;AAAA,EAAXC,EAAS;AAAA,GAJS81C,GAIP,WAAA,WAAA,CAAA;AAKiB/1C,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GATR81C,GASU,WAAA,aAAA,CAAA;AAGe/1C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAZvB81C,GAYyB,WAAA,UAAA,CAAA;AAKhC/1C,GAAA;AAAA,EAAXC,EAAS;AAAA,GAjBS81C,GAiBP,WAAA,QAAA,CAAA;AAGgC/1C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GApBvB81C,GAoByB,WAAA,WAAA,CAAA;AAM5C/1C,GAAA;AAAA,EADCC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAzBR81C,GA0BnB,WAAA,oBAAA,CAAA;AAMI/1C,GAAA;AAAA,EADHC,EAAS;AAAA,GA/BS81C,GAgCf,WAAA,WAAA,CAAA;AAgBK/1C,GAAA;AAAA,EAARgH,EAAM;AAAA,GAhDY+uC,GAgDV,WAAA,oBAAA,CAAA;AAhDUA,KAArB/1C,GAAA;AAAA,EADCG,EAAc,gBAAgB;AAAA,GACV41C,EAAA;;;;;;;ACwBA,IAAAE,KAArB,cAAuC1K,GAAiB;AAAA,EAOtD,cAAc;AACN,UAAA,GAHN,KAAA,YAAA,UAIA,KAAK,SAAS,SACd,KAAK,SAAS,SAEV,KAAK,UACP,KAAK,SAAS;AAAA,EAChB;AAAA,EAQF,SAAS;AACP,WAAO,KAAK,YAAY;AAAA,EAAA;AAE5B;AAzBqB0K,GAiBH,SAASp5B;AAAAA,MACrBhd,EAAU0rC,GAAiB,MAAM,CAAC;AAAA,MAClC1rC,EAAUyG,EAAK,CAAC;AAAA;AAfStG,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAJRg2C,GAIU,WAAA,aAAA,CAAA;AAJVA,KAArBj2C,GAAA;AAAA,EADCG,EAAc,aAAa;AAAA,GACP81C,EAAA;;;;;;ACPrB,MAAMxvC,KAAmBuD,GAAI,cAAc;AAAA,EACzC,UAAU;AAAA,IACR,SAAS;AAAA,MACP,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,aAAa;AAAA,IACf;AAAA,IACA,MAAM;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IAAA;AAAA,EAER;AAAA,EACA,kBAAkB;AAAA,IAChB;AAAA,MACE,SAAS,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,MAC5C,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,SAAS;AAAA,MACT,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,SAAS;AAAA,MACT,MAAM;AAAA,MACN,OAAO;AAAA,IAAA;AAAA,EACT;AAEJ,CAAC;AAkCoB,IAAAksC,KAArB,cACUlxD,EAEV;AAAA,EAHA,cAAA;AAAA,UAAA,GAAA,SAAA,GAiBiD,KAAA,SAAA,KAIM,KAAA,SAAA;AAAA,EAAA;AAAA,EAI3C,aACR0a,GACM;AACN,UAAM,aAAaA,CAAkB,GACjC,KAAK,aACF,KAAA,aAAa,MAAM,KAAK,SAAS;AAAA,EACxC;AAAA,EAGF,IAAY,YAAY;AACf,WAAA,KAAK,KAAK,KAAK,KAAK;AAAA,EAAA;AAAA,EAGrB,eACNy2C,GACAC,GACA7rC,GACA3D,GACA;AACO,WAAAnH;AAAAA,SACFG,GAAa2K,CAAO,CAAC;AAAA;AAAA,aAEjB5K,EAAUw2C,CAAS,CAAC;AAAA,gBACjB5yD;AAAA,MACNkjB,GAAiB,EAAE,SAAA8D,GAAS,MAAA3D,GAAM;AAAA,MAClC,EAAE,CAACZ,EAAW,GAAG,KAAK,OAAO;AAAA,MAC7BowC;AAAA,IACD,CAAA;AAAA;AAAA;AAAA,UAGCx2C,GAAa2K,CAAO,CAAC;AAAA;AAAA,EAAA;AAAA,EAIrB,YACN4rC,GACAC,GACAxvC,GACAyvC,GACA;AACO,WAAA52C;AAAAA,SACFG,GAAay2C,CAAM,CAAC;AAAA,aAChB12C,EAAUw2C,CAAS,CAAC;AAAA;AAAA,gBAEjB5yD,EAAKkjB,GAAiB,EAAE,SAAS,QAAQ,MAAAG,EAAK,CAAC,GAAGwvC,CAAW,CAAC;AAAA;AAAA;AAAA,UAGpEx2C,GAAay2C,CAAM,CAAC;AAAA;AAAA,EAAA;AAAA,EAIpB,eAAeF,GAA+BC,GAAqB;AAClE,WAAA32C;AAAAA;AAAAA,aAEEE,EAAUw2C,CAAS,CAAC;AAAA;AAAA,gBAEjB5yD,EAAKkjB,GAAiB,EAAE,SAAS,UAAW,CAAA,GAAG2vC,CAAW,CAAC;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAMjE,mBACND,GACAC,GACAxvC,GACA;AACO,WAAAnH;AAAAA;AAAAA,aAEEE,EAAUw2C,CAAS,CAAC;AAAA;AAAA,gBAEjB5yD;AAAA,MACNkjB,GAAiB,EAAE,SAAS,eAAe,MAAAG,GAAM;AAAA,MACjDwvC;AAAA,IAAA,CACD;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAMC,YACND,GACA5rC,GACA3D,GACAwvC,IAAsB,IACtBC,IAAiB,IACjB;AACA,YAAQ9rC,GAAS;AAAA,MACf,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAO,KAAK,eAAe4rC,GAAWC,GAAa7rC,GAAS3D,CAAI;AAAA,MAClE,KAAK;AACH,eAAO,KAAK,YAAYuvC,GAAWC,GAAaxvC,GAAMyvC,CAAM;AAAA,MAC9D,KAAK;AACI,eAAA,KAAK,eAAeF,GAAWC,CAAW;AAAA,MACnD,KAAK;AACH,eAAO,KAAK,mBAAmBD,GAAWC,GAAaxvC,CAAI;AAAA,MAC7D;AACS,eAAA;AAAA,IAAA;AAAA,EACX;AAAA,EAGF,SAAS;AACP,WAAO,KAAK;AAAA,MACV,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAAA,EAAA;AAEJ;AA5IqBsvC,GAuBH,SAASr2C,EAAUC,EAAM;AAfZE,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GARRi2C,GAQU,WAAA,WAAA,CAAA;AAKAl2C,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAbRi2C,GAaU,WAAA,QAAA,CAAA;AAIAl2C,GAAA;AAAA,EAA5BC,EAAS,EAAE,SAAS,GAAM,CAAA;AAAA,GAjBRi2C,GAiBU,WAAA,UAAA,CAAA;AAEjBl2C,GAAA;AAAA,EAAXC,EAAS;AAAA,GAnBSi2C,GAmBP,WAAA,eAAA,CAAA;AAEgCl2C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GArBvBi2C,GAqByB,WAAA,UAAA,CAAA;AArBzBA,KAArBl2C,GAAA;AAAA,EADCG,EAAc,mBAAmB;AAAA,GACb+1C,EAAA;;;;;;ACpGA,IAAAI,KAArB,cAAiDtxD,EAAW;AAAA,EAA5D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A7K3CX,QAAA5c;A6K4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,6BAA6B,CAAC;AAAA;AAAA,gBAE3C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB62C,GAUH,SAASz2C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBq2C,GAEwB,WAAA,QAAA,CAAA;AAECt2C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBq2C,GAIyB,WAAA,YAAA,CAAA;AAEhCt2C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSq2C,GAMP,WAAA,sBAAA,CAAA;AAEiBt2C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRq2C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBt2C,GAAA;AAAA,EADCG,EAAc,6BAA6B;AAAA,GACvBm2C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAkDvxD,EAAW;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A9K3CX,QAAA5c;A8K4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,+BAA+B,CAAC;AAAA;AAAA,gBAE7C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB82C,GAUH,SAAS12C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBs2C,GAEwB,WAAA,QAAA,CAAA;AAECv2C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBs2C,GAIyB,WAAA,YAAA,CAAA;AAEhCv2C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSs2C,GAMP,WAAA,sBAAA,CAAA;AAEiBv2C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRs2C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBv2C,GAAA;AAAA,EADCG,EAAc,+BAA+B;AAAA,GACzBo2C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAkDxxD,EAAW;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A/K3CX,QAAA5c;A+K4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,+BAA+B,CAAC;AAAA;AAAA,gBAE7C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB+2C,GAUH,SAAS32C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBu2C,GAEwB,WAAA,QAAA,CAAA;AAECx2C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBu2C,GAIyB,WAAA,YAAA,CAAA;AAEhCx2C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSu2C,GAMP,WAAA,sBAAA,CAAA;AAEiBx2C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRu2C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBx2C,GAAA;AAAA,EADCG,EAAc,+BAA+B;AAAA,GACzBq2C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAqDzxD,EAAW;AAAA,EAAhE,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AhL3CX,QAAA5c;AgL4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,kCAAkC,CAAC;AAAA;AAAA,gBAEhD,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBg3C,GAUH,SAAS52C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBw2C,GAEwB,WAAA,QAAA,CAAA;AAECz2C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBw2C,GAIyB,WAAA,YAAA,CAAA;AAEhCz2C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSw2C,GAMP,WAAA,sBAAA,CAAA;AAEiBz2C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRw2C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBz2C,GAAA;AAAA,EADCG,EAAc,kCAAkC;AAAA,GAC5Bs2C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAkD1xD,EAAW;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AjL3CX,QAAA5c;AiL4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,+BAA+B,CAAC;AAAA;AAAA,gBAE7C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBi3C,GAUH,SAAS72C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBy2C,GAEwB,WAAA,QAAA,CAAA;AAEC12C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBy2C,GAIyB,WAAA,YAAA,CAAA;AAEhC12C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSy2C,GAMP,WAAA,sBAAA,CAAA;AAEiB12C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRy2C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB12C,GAAA;AAAA,EADCG,EAAc,+BAA+B;AAAA,GACzBu2C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAiD3xD,EAAW;AAAA,EAA5D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AlL3CX,QAAA5c;AkL4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,6BAA6B,CAAC;AAAA;AAAA,gBAE3C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBk3C,GAUH,SAAS92C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB02C,GAEwB,WAAA,QAAA,CAAA;AAEC32C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB02C,GAIyB,WAAA,YAAA,CAAA;AAEhC32C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS02C,GAMP,WAAA,sBAAA,CAAA;AAEiB32C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR02C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB32C,GAAA;AAAA,EADCG,EAAc,6BAA6B;AAAA,GACvBw2C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAkD5xD,EAAW;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AnL3CX,QAAA5c;AmL4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,+BAA+B,CAAC;AAAA;AAAA,gBAE7C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBm3C,GAUH,SAAS/2C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB22C,GAEwB,WAAA,QAAA,CAAA;AAEC52C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB22C,GAIyB,WAAA,YAAA,CAAA;AAEhC52C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS22C,GAMP,WAAA,sBAAA,CAAA;AAEiB52C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR22C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB52C,GAAA;AAAA,EADCG,EAAc,+BAA+B;AAAA,GACzBy2C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAkD7xD,EAAW;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;ApL3CX,QAAA5c;AoL4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,+BAA+B,CAAC;AAAA;AAAA,gBAE7C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBo3C,GAUH,SAASh3C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB42C,GAEwB,WAAA,QAAA,CAAA;AAEC72C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB42C,GAIyB,WAAA,YAAA,CAAA;AAEhC72C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS42C,GAMP,WAAA,sBAAA,CAAA;AAEiB72C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR42C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB72C,GAAA;AAAA,EADCG,EAAc,+BAA+B;AAAA,GACzB02C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmD9xD,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;ArL3CX,QAAA5c;AqL4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,gCAAgC,CAAC;AAAA;AAAA,gBAE9C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBq3C,GAUH,SAASj3C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB62C,GAEwB,WAAA,QAAA,CAAA;AAEC92C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB62C,GAIyB,WAAA,YAAA,CAAA;AAEhC92C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS62C,GAMP,WAAA,sBAAA,CAAA;AAEiB92C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR62C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB92C,GAAA;AAAA,EADCG,EAAc,gCAAgC;AAAA,GAC1B22C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAsD/xD,EAAW;AAAA,EAAjE,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AtL3CX,QAAA5c;AsL4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,mCAAmC,CAAC;AAAA;AAAA,gBAEjD,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBs3C,GAUH,SAASl3C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB82C,GAEwB,WAAA,QAAA,CAAA;AAEC/2C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB82C,GAIyB,WAAA,YAAA,CAAA;AAEhC/2C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS82C,GAMP,WAAA,sBAAA,CAAA;AAEiB/2C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR82C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB/2C,GAAA;AAAA,EADCG,EAAc,mCAAmC;AAAA,GAC7B42C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmDhyD,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AvL3CX,QAAA5c;AuL4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,gCAAgC,CAAC;AAAA;AAAA,gBAE9C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBu3C,GAUH,SAASn3C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB+2C,GAEwB,WAAA,QAAA,CAAA;AAECh3C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB+2C,GAIyB,WAAA,YAAA,CAAA;AAEhCh3C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS+2C,GAMP,WAAA,sBAAA,CAAA;AAEiBh3C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR+2C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBh3C,GAAA;AAAA,EADCG,EAAc,gCAAgC;AAAA,GAC1B62C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAkDjyD,EAAW;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AxL3CX,QAAA5c;AwL4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,8BAA8B,CAAC;AAAA;AAAA,gBAE5C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBw3C,GAUH,SAASp3C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBg3C,GAEwB,WAAA,QAAA,CAAA;AAECj3C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBg3C,GAIyB,WAAA,YAAA,CAAA;AAEhCj3C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSg3C,GAMP,WAAA,sBAAA,CAAA;AAEiBj3C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRg3C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBj3C,GAAA;AAAA,EADCG,EAAc,8BAA8B;AAAA,GACxB82C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmDlyD,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AzL3CX,QAAA5c;AyL4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,gCAAgC,CAAC;AAAA;AAAA,gBAE9C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBy3C,GAUH,SAASr3C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBi3C,GAEwB,WAAA,QAAA,CAAA;AAECl3C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBi3C,GAIyB,WAAA,YAAA,CAAA;AAEhCl3C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSi3C,GAMP,WAAA,sBAAA,CAAA;AAEiBl3C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRi3C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBl3C,GAAA;AAAA,EADCG,EAAc,gCAAgC;AAAA,GAC1B+2C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmDnyD,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A1L3CX,QAAA5c;A0L4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,gCAAgC,CAAC;AAAA;AAAA,gBAE9C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB03C,GAUH,SAASt3C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBk3C,GAEwB,WAAA,QAAA,CAAA;AAECn3C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBk3C,GAIyB,WAAA,YAAA,CAAA;AAEhCn3C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSk3C,GAMP,WAAA,sBAAA,CAAA;AAEiBn3C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRk3C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBn3C,GAAA;AAAA,EADCG,EAAc,gCAAgC;AAAA,GAC1Bg3C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAoDpyD,EAAW;AAAA,EAA/D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A3L3CX,QAAA5c;A2L4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,iCAAiC,CAAC;AAAA;AAAA,gBAE/C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB23C,GAUH,SAASv3C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBm3C,GAEwB,WAAA,QAAA,CAAA;AAECp3C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBm3C,GAIyB,WAAA,YAAA,CAAA;AAEhCp3C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSm3C,GAMP,WAAA,sBAAA,CAAA;AAEiBp3C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRm3C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBp3C,GAAA;AAAA,EADCG,EAAc,iCAAiC;AAAA,GAC3Bi3C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA+CryD,EAAW;AAAA,EAA1D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A5L3CX,QAAA5c;A4L4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,2BAA2B,CAAC;AAAA;AAAA,gBAEzC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB43C,GAUH,SAASx3C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBo3C,GAEwB,WAAA,QAAA,CAAA;AAECr3C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBo3C,GAIyB,WAAA,YAAA,CAAA;AAEhCr3C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSo3C,GAMP,WAAA,sBAAA,CAAA;AAEiBr3C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRo3C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBr3C,GAAA;AAAA,EADCG,EAAc,2BAA2B;AAAA,GACrBk3C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAgDtyD,EAAW;AAAA,EAA3D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A7L3CX,QAAA5c;A6L4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,6BAA6B,CAAC;AAAA;AAAA,gBAE3C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB63C,GAUH,SAASz3C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBq3C,GAEwB,WAAA,QAAA,CAAA;AAECt3C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBq3C,GAIyB,WAAA,YAAA,CAAA;AAEhCt3C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSq3C,GAMP,WAAA,sBAAA,CAAA;AAEiBt3C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRq3C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBt3C,GAAA;AAAA,EADCG,EAAc,6BAA6B;AAAA,GACvBm3C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAgDvyD,EAAW;AAAA,EAA3D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A9L3CX,QAAA5c;A8L4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,6BAA6B,CAAC;AAAA;AAAA,gBAE3C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB83C,GAUH,SAAS13C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBs3C,GAEwB,WAAA,QAAA,CAAA;AAECv3C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBs3C,GAIyB,WAAA,YAAA,CAAA;AAEhCv3C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSs3C,GAMP,WAAA,sBAAA,CAAA;AAEiBv3C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRs3C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBv3C,GAAA;AAAA,EADCG,EAAc,6BAA6B;AAAA,GACvBo3C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAoDxyD,EAAW;AAAA,EAA/D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A/L3CX,QAAA5c;A+L4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,iCAAiC,CAAC;AAAA;AAAA,gBAE/C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB+3C,GAUH,SAAS33C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBu3C,GAEwB,WAAA,QAAA,CAAA;AAECx3C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBu3C,GAIyB,WAAA,YAAA,CAAA;AAEhCx3C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSu3C,GAMP,WAAA,sBAAA,CAAA;AAEiBx3C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRu3C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBx3C,GAAA;AAAA,EADCG,EAAc,iCAAiC;AAAA,GAC3Bq3C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAgDzyD,EAAW;AAAA,EAA3D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AhM3CX,QAAA5c;AgM4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,yBAAyB,CAAC;AAAA;AAAA,gBAEvC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBg4C,GAUH,SAAS53C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBw3C,GAEwB,WAAA,QAAA,CAAA;AAECz3C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBw3C,GAIyB,WAAA,YAAA,CAAA;AAEhCz3C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSw3C,GAMP,WAAA,sBAAA,CAAA;AAEiBz3C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRw3C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBz3C,GAAA;AAAA,EADCG,EAAc,yBAAyB;AAAA,GACnBs3C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAkD1yD,EAAW;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AjM3CX,QAAA5c;AiM4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,2BAA2B,CAAC;AAAA;AAAA,gBAEzC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBi4C,GAUH,SAAS73C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBy3C,GAEwB,WAAA,QAAA,CAAA;AAEC13C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBy3C,GAIyB,WAAA,YAAA,CAAA;AAEhC13C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSy3C,GAMP,WAAA,sBAAA,CAAA;AAEiB13C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRy3C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB13C,GAAA;AAAA,EADCG,EAAc,2BAA2B;AAAA,GACrBu3C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA4C3yD,EAAW;AAAA,EAAvD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AlM3CX,QAAA5c;AkM4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,uBAAuB,CAAC;AAAA;AAAA,gBAErC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBk4C,GAUH,SAAS93C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB03C,GAEwB,WAAA,QAAA,CAAA;AAEC33C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB03C,GAIyB,WAAA,YAAA,CAAA;AAEhC33C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS03C,GAMP,WAAA,sBAAA,CAAA;AAEiB33C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR03C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB33C,GAAA;AAAA,EADCG,EAAc,uBAAuB;AAAA,GACjBw3C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA6C5yD,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AnM3CX,QAAA5c;AmM4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,wBAAwB,CAAC;AAAA;AAAA,gBAEtC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBm4C,GAUH,SAAS/3C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB23C,GAEwB,WAAA,QAAA,CAAA;AAEC53C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB23C,GAIyB,WAAA,YAAA,CAAA;AAEhC53C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS23C,GAMP,WAAA,sBAAA,CAAA;AAEiB53C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR23C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB53C,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClBy3C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAgD7yD,EAAW;AAAA,EAA3D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;ApM3CX,QAAA5c;AoM4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,2BAA2B,CAAC;AAAA;AAAA,gBAEzC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBo4C,GAUH,SAASh4C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB43C,GAEwB,WAAA,QAAA,CAAA;AAEC73C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB43C,GAIyB,WAAA,YAAA,CAAA;AAEhC73C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS43C,GAMP,WAAA,sBAAA,CAAA;AAEiB73C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR43C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB73C,GAAA;AAAA,EADCG,EAAc,2BAA2B;AAAA,GACrB03C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmD9yD,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;ArM3CX,QAAA5c;AqM4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,4BAA4B,CAAC;AAAA;AAAA,gBAE1C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBq4C,GAUH,SAASj4C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB63C,GAEwB,WAAA,QAAA,CAAA;AAEC93C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB63C,GAIyB,WAAA,YAAA,CAAA;AAEhC93C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS63C,GAMP,WAAA,sBAAA,CAAA;AAEiB93C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR63C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB93C,GAAA;AAAA,EADCG,EAAc,4BAA4B;AAAA,GACtB23C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAkD/yD,EAAW;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AtM3CX,QAAA5c;AsM4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,4BAA4B,CAAC;AAAA;AAAA,gBAE1C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBs4C,GAUH,SAASl4C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB83C,GAEwB,WAAA,QAAA,CAAA;AAEC/3C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB83C,GAIyB,WAAA,YAAA,CAAA;AAEhC/3C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS83C,GAMP,WAAA,sBAAA,CAAA;AAEiB/3C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR83C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB/3C,GAAA;AAAA,EADCG,EAAc,4BAA4B;AAAA,GACtB43C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmDhzD,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AvM3CX,QAAA5c;AuM4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,6BAA6B,CAAC;AAAA;AAAA,gBAE3C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBu4C,GAUH,SAASn4C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB+3C,GAEwB,WAAA,QAAA,CAAA;AAECh4C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB+3C,GAIyB,WAAA,YAAA,CAAA;AAEhCh4C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS+3C,GAMP,WAAA,sBAAA,CAAA;AAEiBh4C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR+3C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBh4C,GAAA;AAAA,EADCG,EAAc,6BAA6B;AAAA,GACvB63C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmDjzD,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AxM3CX,QAAA5c;AwM4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,6BAA6B,CAAC;AAAA;AAAA,gBAE3C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBw4C,GAUH,SAASp4C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBg4C,GAEwB,WAAA,QAAA,CAAA;AAECj4C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBg4C,GAIyB,WAAA,YAAA,CAAA;AAEhCj4C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSg4C,GAMP,WAAA,sBAAA,CAAA;AAEiBj4C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRg4C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBj4C,GAAA;AAAA,EADCG,EAAc,6BAA6B;AAAA,GACvB83C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAkDlzD,EAAW;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AzM3CX,QAAA5c;AyM4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,4BAA4B,CAAC;AAAA;AAAA,gBAE1C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBy4C,GAUH,SAASr4C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBi4C,GAEwB,WAAA,QAAA,CAAA;AAECl4C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBi4C,GAIyB,WAAA,YAAA,CAAA;AAEhCl4C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSi4C,GAMP,WAAA,sBAAA,CAAA;AAEiBl4C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRi4C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBl4C,GAAA;AAAA,EADCG,EAAc,4BAA4B;AAAA,GACtB+3C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmDnzD,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A1M3CX,QAAA5c;A0M4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,6BAA6B,CAAC;AAAA;AAAA,gBAE3C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB04C,GAUH,SAASt4C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBk4C,GAEwB,WAAA,QAAA,CAAA;AAECn4C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBk4C,GAIyB,WAAA,YAAA,CAAA;AAEhCn4C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSk4C,GAMP,WAAA,sBAAA,CAAA;AAEiBn4C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRk4C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBn4C,GAAA;AAAA,EADCG,EAAc,6BAA6B;AAAA,GACvBg4C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAgDpzD,EAAW;AAAA,EAA3D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A3M3CX,QAAA5c;A2M4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,yBAAyB,CAAC;AAAA;AAAA,gBAEvC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB24C,GAUH,SAASv4C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBm4C,GAEwB,WAAA,QAAA,CAAA;AAECp4C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBm4C,GAIyB,WAAA,YAAA,CAAA;AAEhCp4C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSm4C,GAMP,WAAA,sBAAA,CAAA;AAEiBp4C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRm4C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBp4C,GAAA;AAAA,EADCG,EAAc,yBAAyB;AAAA,GACnBi4C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAoDrzD,EAAW;AAAA,EAA/D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A5M3CX,QAAA5c;A4M4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,8BAA8B,CAAC;AAAA;AAAA,gBAE5C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB44C,GAUH,SAASx4C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBo4C,GAEwB,WAAA,QAAA,CAAA;AAECr4C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBo4C,GAIyB,WAAA,YAAA,CAAA;AAEhCr4C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSo4C,GAMP,WAAA,sBAAA,CAAA;AAEiBr4C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRo4C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBr4C,GAAA;AAAA,EADCG,EAAc,8BAA8B;AAAA,GACxBk4C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA6CtzD,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A7M3CX,QAAA5c;A6M4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,wBAAwB,CAAC;AAAA;AAAA,gBAEtC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB64C,GAUH,SAASz4C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBq4C,GAEwB,WAAA,QAAA,CAAA;AAECt4C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBq4C,GAIyB,WAAA,YAAA,CAAA;AAEhCt4C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSq4C,GAMP,WAAA,sBAAA,CAAA;AAEiBt4C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRq4C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBt4C,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClBm4C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA6CvzD,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A9M3CX,QAAA5c;A8M4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,wBAAwB,CAAC;AAAA;AAAA,gBAEtC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB84C,GAUH,SAAS14C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBs4C,GAEwB,WAAA,QAAA,CAAA;AAECv4C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBs4C,GAIyB,WAAA,YAAA,CAAA;AAEhCv4C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSs4C,GAMP,WAAA,sBAAA,CAAA;AAEiBv4C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRs4C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBv4C,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClBo4C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA8CxzD,EAAW;AAAA,EAAzD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A/M3CX,QAAA5c;A+M4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,yBAAyB,CAAC;AAAA;AAAA,gBAEvC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB+4C,GAUH,SAAS34C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBu4C,GAEwB,WAAA,QAAA,CAAA;AAECx4C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBu4C,GAIyB,WAAA,YAAA,CAAA;AAEhCx4C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSu4C,GAMP,WAAA,sBAAA,CAAA;AAEiBx4C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRu4C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBx4C,GAAA;AAAA,EADCG,EAAc,yBAAyB;AAAA,GACnBq4C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA2CzzD,EAAW;AAAA,EAAtD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AhN3CX,QAAA5c;AgN4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,sBAAsB,CAAC;AAAA;AAAA,gBAEpC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBg5C,GAUH,SAAS54C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBw4C,GAEwB,WAAA,QAAA,CAAA;AAECz4C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBw4C,GAIyB,WAAA,YAAA,CAAA;AAEhCz4C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSw4C,GAMP,WAAA,sBAAA,CAAA;AAEiBz4C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRw4C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBz4C,GAAA;AAAA,EADCG,EAAc,sBAAsB;AAAA,GAChBs4C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA6C1zD,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AjN3CX,QAAA5c;AiN4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,wBAAwB,CAAC;AAAA;AAAA,gBAEtC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBi5C,GAUH,SAAS74C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBy4C,GAEwB,WAAA,QAAA,CAAA;AAEC14C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBy4C,GAIyB,WAAA,YAAA,CAAA;AAEhC14C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSy4C,GAMP,WAAA,sBAAA,CAAA;AAEiB14C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRy4C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB14C,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClBu4C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA6C3zD,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AlN3CX,QAAA5c;AkN4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,wBAAwB,CAAC;AAAA;AAAA,gBAEtC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBk5C,GAUH,SAAS94C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB04C,GAEwB,WAAA,QAAA,CAAA;AAEC34C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB04C,GAIyB,WAAA,YAAA,CAAA;AAEhC34C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS04C,GAMP,WAAA,sBAAA,CAAA;AAEiB34C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR04C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB34C,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClBw4C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA6C5zD,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AnN3CX,QAAA5c;AmN4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,wBAAwB,CAAC;AAAA;AAAA,gBAEtC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBm5C,GAUH,SAAS/4C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB24C,GAEwB,WAAA,QAAA,CAAA;AAEC54C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB24C,GAIyB,WAAA,YAAA,CAAA;AAEhC54C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS24C,GAMP,WAAA,sBAAA,CAAA;AAEiB54C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR24C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB54C,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClBy4C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA8C7zD,EAAW;AAAA,EAAzD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;ApN3CX,QAAA5c;AoN4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,yBAAyB,CAAC;AAAA;AAAA,gBAEvC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBo5C,GAUH,SAASh5C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB44C,GAEwB,WAAA,QAAA,CAAA;AAEC74C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB44C,GAIyB,WAAA,YAAA,CAAA;AAEhC74C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS44C,GAMP,WAAA,sBAAA,CAAA;AAEiB74C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR44C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB74C,GAAA;AAAA,EADCG,EAAc,yBAAyB;AAAA,GACnB04C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA2D9zD,EAAW;AAAA,EAAtE,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;ArN3CX,QAAA5c;AqN4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,wCAAwC,CAAC;AAAA;AAAA,gBAEtD,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBq5C,GAUH,SAASj5C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB64C,GAEwB,WAAA,QAAA,CAAA;AAEC94C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB64C,GAIyB,WAAA,YAAA,CAAA;AAEhC94C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS64C,GAMP,WAAA,sBAAA,CAAA;AAEiB94C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR64C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB94C,GAAA;AAAA,EADCG,EAAc,wCAAwC;AAAA,GAClC24C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAgE/zD,EAAW;AAAA,EAA3E,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AtN3CX,QAAA5c;AsN4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,8CAA8C,CAAC;AAAA;AAAA,gBAE5D,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBs5C,GAUH,SAASl5C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB84C,GAEwB,WAAA,QAAA,CAAA;AAEC/4C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB84C,GAIyB,WAAA,YAAA,CAAA;AAEhC/4C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS84C,GAMP,WAAA,sBAAA,CAAA;AAEiB/4C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR84C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB/4C,GAAA;AAAA,EADCG,EAAc,8CAA8C;AAAA,GACxC44C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA2Dh0D,EAAW;AAAA,EAAtE,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AvN3CX,QAAA5c;AuN4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,wCAAwC,CAAC;AAAA;AAAA,gBAEtD,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBu5C,GAUH,SAASn5C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB+4C,GAEwB,WAAA,QAAA,CAAA;AAECh5C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB+4C,GAIyB,WAAA,YAAA,CAAA;AAEhCh5C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS+4C,GAMP,WAAA,sBAAA,CAAA;AAEiBh5C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR+4C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBh5C,GAAA;AAAA,EADCG,EAAc,wCAAwC;AAAA,GAClC64C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAsDj0D,EAAW;AAAA,EAAjE,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AxN3CX,QAAA5c;AwN4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,kCAAkC,CAAC;AAAA;AAAA,gBAEhD,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBw5C,GAUH,SAASp5C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBg5C,GAEwB,WAAA,QAAA,CAAA;AAECj5C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBg5C,GAIyB,WAAA,YAAA,CAAA;AAEhCj5C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSg5C,GAMP,WAAA,sBAAA,CAAA;AAEiBj5C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRg5C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBj5C,GAAA;AAAA,EADCG,EAAc,kCAAkC;AAAA,GAC5B84C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAsDl0D,EAAW;AAAA,EAAjE,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AzN3CX,QAAA5c;AyN4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,kCAAkC,CAAC;AAAA;AAAA,gBAEhD,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBy5C,GAUH,SAASr5C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBi5C,GAEwB,WAAA,QAAA,CAAA;AAECl5C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBi5C,GAIyB,WAAA,YAAA,CAAA;AAEhCl5C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSi5C,GAMP,WAAA,sBAAA,CAAA;AAEiBl5C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRi5C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBl5C,GAAA;AAAA,EADCG,EAAc,kCAAkC;AAAA,GAC5B+4C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmDn0D,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A1N3CX,QAAA5c;A0N4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,+BAA+B,CAAC;AAAA;AAAA,gBAE7C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB05C,GAUH,SAASt5C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBk5C,GAEwB,WAAA,QAAA,CAAA;AAECn5C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBk5C,GAIyB,WAAA,YAAA,CAAA;AAEhCn5C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSk5C,GAMP,WAAA,sBAAA,CAAA;AAEiBn5C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRk5C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBn5C,GAAA;AAAA,EADCG,EAAc,+BAA+B;AAAA,GACzBg5C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmDp0D,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A3N3CX,QAAA5c;A2N4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,+BAA+B,CAAC;AAAA;AAAA,gBAE7C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB25C,GAUH,SAASv5C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBm5C,GAEwB,WAAA,QAAA,CAAA;AAECp5C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBm5C,GAIyB,WAAA,YAAA,CAAA;AAEhCp5C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSm5C,GAMP,WAAA,sBAAA,CAAA;AAEiBp5C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRm5C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBp5C,GAAA;AAAA,EADCG,EAAc,+BAA+B;AAAA,GACzBi5C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA6Cr0D,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A5N3CX,QAAA5c;A4N4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,wBAAwB,CAAC;AAAA;AAAA,gBAEtC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB45C,GAUH,SAASx5C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBo5C,GAEwB,WAAA,QAAA,CAAA;AAECr5C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBo5C,GAIyB,WAAA,YAAA,CAAA;AAEhCr5C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSo5C,GAMP,WAAA,sBAAA,CAAA;AAEiBr5C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRo5C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBr5C,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClBk5C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA6Ct0D,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A7N3CX,QAAA5c;A6N4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,wBAAwB,CAAC;AAAA;AAAA,gBAEtC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB65C,GAUH,SAASz5C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBq5C,GAEwB,WAAA,QAAA,CAAA;AAECt5C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBq5C,GAIyB,WAAA,YAAA,CAAA;AAEhCt5C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSq5C,GAMP,WAAA,sBAAA,CAAA;AAEiBt5C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRq5C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBt5C,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClBm5C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAiDv0D,EAAW;AAAA,EAA5D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A9N3CX,QAAA5c;A8N4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,6BAA6B,CAAC;AAAA;AAAA,gBAE3C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB85C,GAUH,SAAS15C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBs5C,GAEwB,WAAA,QAAA,CAAA;AAECv5C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBs5C,GAIyB,WAAA,YAAA,CAAA;AAEhCv5C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSs5C,GAMP,WAAA,sBAAA,CAAA;AAEiBv5C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRs5C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBv5C,GAAA;AAAA,EADCG,EAAc,6BAA6B;AAAA,GACvBo5C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAiDx0D,EAAW;AAAA,EAA5D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A/N3CX,QAAA5c;A+N4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,6BAA6B,CAAC;AAAA;AAAA,gBAE3C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB+5C,GAUH,SAAS35C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBu5C,GAEwB,WAAA,QAAA,CAAA;AAECx5C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBu5C,GAIyB,WAAA,YAAA,CAAA;AAEhCx5C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSu5C,GAMP,WAAA,sBAAA,CAAA;AAEiBx5C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRu5C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBx5C,GAAA;AAAA,EADCG,EAAc,6BAA6B;AAAA,GACvBq5C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAgDz0D,EAAW;AAAA,EAA3D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AhO3CX,QAAA5c;AgO4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,2BAA2B,CAAC;AAAA;AAAA,gBAEzC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBg6C,GAUH,SAAS55C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBw5C,GAEwB,WAAA,QAAA,CAAA;AAECz5C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBw5C,GAIyB,WAAA,YAAA,CAAA;AAEhCz5C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSw5C,GAMP,WAAA,sBAAA,CAAA;AAEiBz5C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRw5C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBz5C,GAAA;AAAA,EADCG,EAAc,2BAA2B;AAAA,GACrBs5C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAoD10D,EAAW;AAAA,EAA/D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AjO3CX,QAAA5c;AiO4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,gCAAgC,CAAC;AAAA;AAAA,gBAE9C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBi6C,GAUH,SAAS75C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBy5C,GAEwB,WAAA,QAAA,CAAA;AAEC15C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBy5C,GAIyB,WAAA,YAAA,CAAA;AAEhC15C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSy5C,GAMP,WAAA,sBAAA,CAAA;AAEiB15C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRy5C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB15C,GAAA;AAAA,EADCG,EAAc,gCAAgC;AAAA,GAC1Bu5C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAoD30D,EAAW;AAAA,EAA/D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AlO3CX,QAAA5c;AkO4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,gCAAgC,CAAC;AAAA;AAAA,gBAE9C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBk6C,GAUH,SAAS95C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB05C,GAEwB,WAAA,QAAA,CAAA;AAEC35C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB05C,GAIyB,WAAA,YAAA,CAAA;AAEhC35C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS05C,GAMP,WAAA,sBAAA,CAAA;AAEiB35C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR05C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB35C,GAAA;AAAA,EADCG,EAAc,gCAAgC;AAAA,GAC1Bw5C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAoD50D,EAAW;AAAA,EAA/D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AnO3CX,QAAA5c;AmO4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,gCAAgC,CAAC;AAAA;AAAA,gBAE9C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBm6C,GAUH,SAAS/5C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB25C,GAEwB,WAAA,QAAA,CAAA;AAEC55C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB25C,GAIyB,WAAA,YAAA,CAAA;AAEhC55C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS25C,GAMP,WAAA,sBAAA,CAAA;AAEiB55C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR25C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB55C,GAAA;AAAA,EADCG,EAAc,gCAAgC;AAAA,GAC1By5C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA2C70D,EAAW;AAAA,EAAtD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;ApO3CX,QAAA5c;AoO4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,sBAAsB,CAAC;AAAA;AAAA,gBAEpC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBo6C,GAUH,SAASh6C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB45C,GAEwB,WAAA,QAAA,CAAA;AAEC75C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB45C,GAIyB,WAAA,YAAA,CAAA;AAEhC75C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS45C,GAMP,WAAA,sBAAA,CAAA;AAEiB75C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR45C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB75C,GAAA;AAAA,EADCG,EAAc,sBAAsB;AAAA,GAChB05C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA8C90D,EAAW;AAAA,EAAzD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;ArO3CX,QAAA5c;AqO4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,0BAA0B,CAAC;AAAA;AAAA,gBAExC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBq6C,GAUH,SAASj6C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB65C,GAEwB,WAAA,QAAA,CAAA;AAEC95C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB65C,GAIyB,WAAA,YAAA,CAAA;AAEhC95C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS65C,GAMP,WAAA,sBAAA,CAAA;AAEiB95C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR65C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB95C,GAAA;AAAA,EADCG,EAAc,0BAA0B;AAAA,GACpB25C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA8C/0D,EAAW;AAAA,EAAzD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AtO3CX,QAAA5c;AsO4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,yBAAyB,CAAC;AAAA;AAAA,gBAEvC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBs6C,GAUH,SAASl6C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB85C,GAEwB,WAAA,QAAA,CAAA;AAEC/5C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB85C,GAIyB,WAAA,YAAA,CAAA;AAEhC/5C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS85C,GAMP,WAAA,sBAAA,CAAA;AAEiB/5C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR85C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB/5C,GAAA;AAAA,EADCG,EAAc,yBAAyB;AAAA,GACnB45C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAoDh1D,EAAW;AAAA,EAA/D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AvO3CX,QAAA5c;AuO4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,gCAAgC,CAAC;AAAA;AAAA,gBAE9C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBu6C,GAUH,SAASn6C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB+5C,GAEwB,WAAA,QAAA,CAAA;AAECh6C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB+5C,GAIyB,WAAA,YAAA,CAAA;AAEhCh6C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS+5C,GAMP,WAAA,sBAAA,CAAA;AAEiBh6C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR+5C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBh6C,GAAA;AAAA,EADCG,EAAc,gCAAgC;AAAA,GAC1B65C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmDj1D,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AxO3CX,QAAA5c;AwO4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,8BAA8B,CAAC;AAAA;AAAA,gBAE5C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBw6C,GAUH,SAASp6C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBg6C,GAEwB,WAAA,QAAA,CAAA;AAECj6C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBg6C,GAIyB,WAAA,YAAA,CAAA;AAEhCj6C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSg6C,GAMP,WAAA,sBAAA,CAAA;AAEiBj6C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRg6C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBj6C,GAAA;AAAA,EADCG,EAAc,8BAA8B;AAAA,GACxB85C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmDl1D,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AzO3CX,QAAA5c;AyO4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,8BAA8B,CAAC;AAAA;AAAA,gBAE5C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBy6C,GAUH,SAASr6C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBi6C,GAEwB,WAAA,QAAA,CAAA;AAECl6C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBi6C,GAIyB,WAAA,YAAA,CAAA;AAEhCl6C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSi6C,GAMP,WAAA,sBAAA,CAAA;AAEiBl6C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRi6C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBl6C,GAAA;AAAA,EADCG,EAAc,8BAA8B;AAAA,GACxB+5C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAiDn1D,EAAW;AAAA,EAA5D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A1O3CX,QAAA5c;A0O4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,4BAA4B,CAAC;AAAA;AAAA,gBAE1C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB06C,GAUH,SAASt6C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBk6C,GAEwB,WAAA,QAAA,CAAA;AAECn6C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBk6C,GAIyB,WAAA,YAAA,CAAA;AAEhCn6C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSk6C,GAMP,WAAA,sBAAA,CAAA;AAEiBn6C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRk6C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBn6C,GAAA;AAAA,EADCG,EAAc,4BAA4B;AAAA,GACtBg6C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAkDp1D,EAAW;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A3O3CX,QAAA5c;A2O4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,6BAA6B,CAAC;AAAA;AAAA,gBAE3C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB26C,GAUH,SAASv6C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBm6C,GAEwB,WAAA,QAAA,CAAA;AAECp6C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBm6C,GAIyB,WAAA,YAAA,CAAA;AAEhCp6C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSm6C,GAMP,WAAA,sBAAA,CAAA;AAEiBp6C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRm6C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBp6C,GAAA;AAAA,EADCG,EAAc,6BAA6B;AAAA,GACvBi6C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA4Cr1D,EAAW;AAAA,EAAvD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A5O3CX,QAAA5c;A4O4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,uBAAuB,CAAC;AAAA;AAAA,gBAErC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB46C,GAUH,SAASx6C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBo6C,GAEwB,WAAA,QAAA,CAAA;AAECr6C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBo6C,GAIyB,WAAA,YAAA,CAAA;AAEhCr6C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSo6C,GAMP,WAAA,sBAAA,CAAA;AAEiBr6C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRo6C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBr6C,GAAA;AAAA,EADCG,EAAc,uBAAuB;AAAA,GACjBk6C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA4Ct1D,EAAW;AAAA,EAAvD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A7O3CX,QAAA5c;A6O4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,uBAAuB,CAAC;AAAA;AAAA,gBAErC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB66C,GAUH,SAASz6C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBq6C,GAEwB,WAAA,QAAA,CAAA;AAECt6C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBq6C,GAIyB,WAAA,YAAA,CAAA;AAEhCt6C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSq6C,GAMP,WAAA,sBAAA,CAAA;AAEiBt6C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRq6C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBt6C,GAAA;AAAA,EADCG,EAAc,uBAAuB;AAAA,GACjBm6C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA4Cv1D,EAAW;AAAA,EAAvD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A9O3CX,QAAA5c;A8O4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,uBAAuB,CAAC;AAAA;AAAA,gBAErC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB86C,GAUH,SAAS16C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBs6C,GAEwB,WAAA,QAAA,CAAA;AAECv6C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBs6C,GAIyB,WAAA,YAAA,CAAA;AAEhCv6C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSs6C,GAMP,WAAA,sBAAA,CAAA;AAEiBv6C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRs6C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBv6C,GAAA;AAAA,EADCG,EAAc,uBAAuB;AAAA,GACjBo6C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA6Cx1D,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A/O3CX,QAAA5c;A+O4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,yBAAyB,CAAC;AAAA;AAAA,gBAEvC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB+6C,GAUH,SAAS36C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBu6C,GAEwB,WAAA,QAAA,CAAA;AAECx6C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBu6C,GAIyB,WAAA,YAAA,CAAA;AAEhCx6C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSu6C,GAMP,WAAA,sBAAA,CAAA;AAEiBx6C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRu6C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBx6C,GAAA;AAAA,EADCG,EAAc,yBAAyB;AAAA,GACnBq6C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA6Cz1D,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AhP3CX,QAAA5c;AgP4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,yBAAyB,CAAC;AAAA;AAAA,gBAEvC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBg7C,GAUH,SAAS56C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBw6C,GAEwB,WAAA,QAAA,CAAA;AAECz6C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBw6C,GAIyB,WAAA,YAAA,CAAA;AAEhCz6C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSw6C,GAMP,WAAA,sBAAA,CAAA;AAEiBz6C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRw6C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBz6C,GAAA;AAAA,EADCG,EAAc,yBAAyB;AAAA,GACnBs6C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA4C11D,EAAW;AAAA,EAAvD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AjP3CX,QAAA5c;AiP4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,uBAAuB,CAAC;AAAA;AAAA,gBAErC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBi7C,GAUH,SAAS76C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBy6C,GAEwB,WAAA,QAAA,CAAA;AAEC16C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBy6C,GAIyB,WAAA,YAAA,CAAA;AAEhC16C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSy6C,GAMP,WAAA,sBAAA,CAAA;AAEiB16C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRy6C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB16C,GAAA;AAAA,EADCG,EAAc,uBAAuB;AAAA,GACjBu6C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA8C31D,EAAW;AAAA,EAAzD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AlP3CX,QAAA5c;AkP4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,yBAAyB,CAAC;AAAA;AAAA,gBAEvC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBk7C,GAUH,SAAS96C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB06C,GAEwB,WAAA,QAAA,CAAA;AAEC36C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB06C,GAIyB,WAAA,YAAA,CAAA;AAEhC36C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS06C,GAMP,WAAA,sBAAA,CAAA;AAEiB36C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR06C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB36C,GAAA;AAAA,EADCG,EAAc,yBAAyB;AAAA,GACnBw6C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA6C51D,EAAW;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AnP3CX,QAAA5c;AmP4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,wBAAwB,CAAC;AAAA;AAAA,gBAEtC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBm7C,GAUH,SAAS/6C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB26C,GAEwB,WAAA,QAAA,CAAA;AAEC56C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB26C,GAIyB,WAAA,YAAA,CAAA;AAEhC56C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS26C,GAMP,WAAA,sBAAA,CAAA;AAEiB56C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR26C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB56C,GAAA;AAAA,EADCG,EAAc,wBAAwB;AAAA,GAClBy6C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmD71D,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;ApP3CX,QAAA5c;AoP4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,+BAA+B,CAAC;AAAA;AAAA,gBAE7C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBo7C,GAUH,SAASh7C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB46C,GAEwB,WAAA,QAAA,CAAA;AAEC76C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB46C,GAIyB,WAAA,YAAA,CAAA;AAEhC76C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS46C,GAMP,WAAA,sBAAA,CAAA;AAEiB76C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR46C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB76C,GAAA;AAAA,EADCG,EAAc,+BAA+B;AAAA,GACzB06C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmD91D,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;ArP3CX,QAAA5c;AqP4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,+BAA+B,CAAC;AAAA;AAAA,gBAE7C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBq7C,GAUH,SAASj7C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB66C,GAEwB,WAAA,QAAA,CAAA;AAEC96C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB66C,GAIyB,WAAA,YAAA,CAAA;AAEhC96C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS66C,GAMP,WAAA,sBAAA,CAAA;AAEiB96C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR66C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB96C,GAAA;AAAA,EADCG,EAAc,+BAA+B;AAAA,GACzB26C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA4C/1D,EAAW;AAAA,EAAvD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AtP3CX,QAAA5c;AsP4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,uBAAuB,CAAC;AAAA;AAAA,gBAErC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBs7C,GAUH,SAASl7C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB86C,GAEwB,WAAA,QAAA,CAAA;AAEC/6C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB86C,GAIyB,WAAA,YAAA,CAAA;AAEhC/6C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS86C,GAMP,WAAA,sBAAA,CAAA;AAEiB/6C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR86C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB/6C,GAAA;AAAA,EADCG,EAAc,uBAAuB;AAAA,GACjB46C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAgDh2D,EAAW;AAAA,EAA3D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AvP3CX,QAAA5c;AuP4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,2BAA2B,CAAC;AAAA;AAAA,gBAEzC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBu7C,GAUH,SAASn7C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtB+6C,GAEwB,WAAA,QAAA,CAAA;AAECh7C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvB+6C,GAIyB,WAAA,YAAA,CAAA;AAEhCh7C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANS+6C,GAMP,WAAA,sBAAA,CAAA;AAEiBh7C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARR+6C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBh7C,GAAA;AAAA,EADCG,EAAc,2BAA2B;AAAA,GACrB66C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAiDj2D,EAAW;AAAA,EAA5D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AxP3CX,QAAA5c;AwP4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,4BAA4B,CAAC;AAAA;AAAA,gBAE1C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBw7C,GAUH,SAASp7C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBg7C,GAEwB,WAAA,QAAA,CAAA;AAECj7C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBg7C,GAIyB,WAAA,YAAA,CAAA;AAEhCj7C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSg7C,GAMP,WAAA,sBAAA,CAAA;AAEiBj7C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRg7C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBj7C,GAAA;AAAA,EADCG,EAAc,4BAA4B;AAAA,GACtB86C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA4Cl2D,EAAW;AAAA,EAAvD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AzP3CX,QAAA5c;AyP4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,uBAAuB,CAAC;AAAA;AAAA,gBAErC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBy7C,GAUH,SAASr7C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBi7C,GAEwB,WAAA,QAAA,CAAA;AAECl7C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBi7C,GAIyB,WAAA,YAAA,CAAA;AAEhCl7C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSi7C,GAMP,WAAA,sBAAA,CAAA;AAEiBl7C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRi7C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBl7C,GAAA;AAAA,EADCG,EAAc,uBAAuB;AAAA,GACjB+6C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA4Cn2D,EAAW;AAAA,EAAvD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A1P3CX,QAAA5c;A0P4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,uBAAuB,CAAC;AAAA;AAAA,gBAErC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB07C,GAUH,SAASt7C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBk7C,GAEwB,WAAA,QAAA,CAAA;AAECn7C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBk7C,GAIyB,WAAA,YAAA,CAAA;AAEhCn7C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSk7C,GAMP,WAAA,sBAAA,CAAA;AAEiBn7C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRk7C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBn7C,GAAA;AAAA,EADCG,EAAc,uBAAuB;AAAA,GACjBg7C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA+Cp2D,EAAW;AAAA,EAA1D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A3P3CX,QAAA5c;A2P4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,2BAA2B,CAAC;AAAA;AAAA,gBAEzC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB27C,GAUH,SAASv7C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBm7C,GAEwB,WAAA,QAAA,CAAA;AAECp7C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBm7C,GAIyB,WAAA,YAAA,CAAA;AAEhCp7C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSm7C,GAMP,WAAA,sBAAA,CAAA;AAEiBp7C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRm7C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBp7C,GAAA;AAAA,EADCG,EAAc,2BAA2B;AAAA,GACrBi7C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA+Cr2D,EAAW;AAAA,EAA1D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A5P3CX,QAAA5c;A4P4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,2BAA2B,CAAC;AAAA;AAAA,gBAEzC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB47C,GAUH,SAASx7C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBo7C,GAEwB,WAAA,QAAA,CAAA;AAECr7C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBo7C,GAIyB,WAAA,YAAA,CAAA;AAEhCr7C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSo7C,GAMP,WAAA,sBAAA,CAAA;AAEiBr7C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRo7C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBr7C,GAAA;AAAA,EADCG,EAAc,2BAA2B;AAAA,GACrBk7C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA8Ct2D,EAAW;AAAA,EAAzD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A7P3CX,QAAA5c;A6P4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,yBAAyB,CAAC;AAAA;AAAA,gBAEvC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB67C,GAUH,SAASz7C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBq7C,GAEwB,WAAA,QAAA,CAAA;AAECt7C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBq7C,GAIyB,WAAA,YAAA,CAAA;AAEhCt7C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSq7C,GAMP,WAAA,sBAAA,CAAA;AAEiBt7C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRq7C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBt7C,GAAA;AAAA,EADCG,EAAc,yBAAyB;AAAA,GACnBm7C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmDv2D,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A9P3CX,QAAA5c;A8P4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,iCAAiC,CAAC;AAAA;AAAA,gBAE/C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB87C,GAUH,SAAS17C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBs7C,GAEwB,WAAA,QAAA,CAAA;AAECv7C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBs7C,GAIyB,WAAA,YAAA,CAAA;AAEhCv7C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSs7C,GAMP,WAAA,sBAAA,CAAA;AAEiBv7C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRs7C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBv7C,GAAA;AAAA,EADCG,EAAc,iCAAiC;AAAA,GAC3Bo7C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAAmDx2D,EAAW;AAAA,EAA9D,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;A/P3CX,QAAA5c;A+P4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,iCAAiC,CAAC;AAAA;AAAA,gBAE/C,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqB+7C,GAUH,SAAS37C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBu7C,GAEwB,WAAA,QAAA,CAAA;AAECx7C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBu7C,GAIyB,WAAA,YAAA,CAAA;AAEhCx7C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSu7C,GAMP,WAAA,sBAAA,CAAA;AAEiBx7C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRu7C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBx7C,GAAA;AAAA,EADCG,EAAc,iCAAiC;AAAA,GAC3Bq7C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA0Cz2D,EAAW;AAAA,EAArD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AhQ3CX,QAAA5c;AgQ4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,uBAAuB,CAAC;AAAA;AAAA,gBAErC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBg8C,GAUH,SAAS57C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBw7C,GAEwB,WAAA,QAAA,CAAA;AAECz7C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBw7C,GAIyB,WAAA,YAAA,CAAA;AAEhCz7C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSw7C,GAMP,WAAA,sBAAA,CAAA;AAEiBz7C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRw7C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArBz7C,GAAA;AAAA,EADCG,EAAc,uBAAuB;AAAA,GACjBs7C,EAAA;;;;;;ACAA,IAAAC,KAArB,cAA0C12D,EAAW;AAAA,EAArD,cAAA;AAAA,UAAA,GAAA,SAAA,GAEqD,KAAA,OAAA,IAEc,KAAA,WAAA,IAId,KAAA,YAAA;AAAA,EAAA;AAAA,EAIzC,aAAa0a,GAA6E;AAClG,UAAM,aAAaA,CAAkB,GAEhC,KAAA,UAAU,IAAI,aAAa;AAAA,EAAA;AAAA,EAGlC,SAAS;AjQ3CX,QAAA5c;AiQ4CW,WAAA2c;AAAAA;AAAAA;AAAAA,gBAGKlc,EAAK,QAAQ,uBAAuB,CAAC;AAAA;AAAA,gBAErC,KAAK,IAAI;AAAA,iBACR,KAAK,IAAI;AAAA;AAAA,mBAEP,KAAK,YAAY,IAAI,EAAE;AAAA,uBACpBT,IAAA,KAAK,eAAL,OAAAA,IAAmB,MAAM;AAAA,UACrC,KAAK,qBACH2c,WAAc,KAAK,kBAAkB,aACrC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAShB;AAxCqBi8C,GAUH,SAAS77C,EAAUC,CAAM;AAREE,GAAA;AAAA,EAA1CC,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAFtBy7C,GAEwB,WAAA,QAAA,CAAA;AAEC17C,GAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAJvBy7C,GAIyB,WAAA,YAAA,CAAA;AAEhC17C,GAAA;AAAA,EAAXC,EAAS;AAAA,GANSy7C,GAMP,WAAA,sBAAA,CAAA;AAEiB17C,GAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARRy7C,GAQU,WAAA,aAAA,CAAA;AARVA,KAArB17C,GAAA;AAAA,EADCG,EAAc,uBAAuB;AAAA,GACjBu7C,EAAA;","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,75,94,95,96,97,108,109,110,151,157]}